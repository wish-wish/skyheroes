{
"cc.Animation3D":{
"prefix":"cc.Animation3D",
"body":["cc.Animation3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Animation3D:initWithFile(const_std_string_filename,const_std_string_animationName)":{
"prefix":"cc.Animation3D:initWithFile(const_std_string_filename,const_std_string_animationName)",
"body":["cc.Animation3D:initWithFile(const_std_string_filename,const_std_string_animationName)"],
"description":"initWithFile(const_std_string_filename,const_std_string_animationName)",
"scope":"source.lua"},

"cc.Animation3D:init(const_Animation3DData_data)":{
"prefix":"cc.Animation3D:init(const_Animation3DData_data)",
"body":["cc.Animation3D:init(const_Animation3DData_data)"],
"description":"init(const_Animation3DData_data)",
"scope":"source.lua"},

"cc.Animation3D:getDuration()":{
"prefix":"cc.Animation3D:getDuration()",
"body":["cc.Animation3D:getDuration()"],
"description":"getDuration()",
"scope":"source.lua"},

"cc.Animation3D:create(const_std_string_filename,const_std_string_animationName)":{
"prefix":"cc.Animation3D:create(const_std_string_filename,const_std_string_animationName)",
"body":["cc.Animation3D:create(const_std_string_filename,const_std_string_animationName)"],
"description":"create(const_std_string_filename,const_std_string_animationName)",
"scope":"source.lua"},

"cc.Animate3D":{
"prefix":"cc.Animate3D",
"body":["cc.Animate3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Animate3D:setKeyFrameUserInfo(int_keyFrame,const_ValueMap_userInfo)":{
"prefix":"cc.Animate3D:setKeyFrameUserInfo(int_keyFrame,const_ValueMap_userInfo)",
"body":["cc.Animate3D:setKeyFrameUserInfo(int_keyFrame,const_ValueMap_userInfo)"],
"description":"setKeyFrameUserInfo(int_keyFrame,const_ValueMap_userInfo)",
"scope":"source.lua"},

"cc.Animate3D:getSpeed()":{
"prefix":"cc.Animate3D:getSpeed()",
"body":["cc.Animate3D:getSpeed()"],
"description":"getSpeed()",
"scope":"source.lua"},

"cc.Animate3D:setQuality(Animate3DQuality_quality)":{
"prefix":"cc.Animate3D:setQuality(Animate3DQuality_quality)",
"body":["cc.Animate3D:setQuality(Animate3DQuality_quality)"],
"description":"setQuality(Animate3DQuality_quality)",
"scope":"source.lua"},

"cc.Animate3D:setWeight(float_weight)":{
"prefix":"cc.Animate3D:setWeight(float_weight)",
"body":["cc.Animate3D:setWeight(float_weight)"],
"description":"setWeight(float_weight)",
"scope":"source.lua"},

"cc.Animate3D:removeFromMap()":{
"prefix":"cc.Animate3D:removeFromMap()",
"body":["cc.Animate3D:removeFromMap()"],
"description":"removeFromMap()",
"scope":"source.lua"},

"cc.Animate3D:initWithFrames(Animation3D_animation,int_startFrame,int_endFrame,float_frameRate)":{
"prefix":"cc.Animate3D:initWithFrames(Animation3D_animation,int_startFrame,int_endFrame,float_frameRate)",
"body":["cc.Animate3D:initWithFrames(Animation3D_animation,int_startFrame,int_endFrame,float_frameRate)"],
"description":"initWithFrames(Animation3D_animation,int_startFrame,int_endFrame,float_frameRate)",
"scope":"source.lua"},

"cc.Animate3D:getOriginInterval()":{
"prefix":"cc.Animate3D:getOriginInterval()",
"body":["cc.Animate3D:getOriginInterval()"],
"description":"getOriginInterval()",
"scope":"source.lua"},

"cc.Animate3D:setSpeed(float_speed)":{
"prefix":"cc.Animate3D:setSpeed(float_speed)",
"body":["cc.Animate3D:setSpeed(float_speed)"],
"description":"setSpeed(float_speed)",
"scope":"source.lua"},

"cc.Animate3D:init(Animation3D_animation)":{
"prefix":"cc.Animate3D:init(Animation3D_animation)",
"body":["cc.Animate3D:init(Animation3D_animation)"],
"description":"init(Animation3D_animation)",
"scope":"source.lua"},

"cc.Animate3D:setOriginInterval(float_interval)":{
"prefix":"cc.Animate3D:setOriginInterval(float_interval)",
"body":["cc.Animate3D:setOriginInterval(float_interval)"],
"description":"setOriginInterval(float_interval)",
"scope":"source.lua"},

"cc.Animate3D:getWeight()":{
"prefix":"cc.Animate3D:getWeight()",
"body":["cc.Animate3D:getWeight()"],
"description":"getWeight()",
"scope":"source.lua"},

"cc.Animate3D:getQuality()":{
"prefix":"cc.Animate3D:getQuality()",
"body":["cc.Animate3D:getQuality()"],
"description":"getQuality()",
"scope":"source.lua"},

"cc.Animate3D:create(Animation3D_animation)":{
"prefix":"cc.Animate3D:create(Animation3D_animation)",
"body":["cc.Animate3D:create(Animation3D_animation)"],
"description":"create(Animation3D_animation)",
"scope":"source.lua"},

"cc.Animate3D:create(Animation3D_animation,float_fromTime,float_duration)":{
"prefix":"cc.Animate3D:create(Animation3D_animation,float_fromTime,float_duration)",
"body":["cc.Animate3D:create(Animation3D_animation,float_fromTime,float_duration)"],
"description":"create(Animation3D_animation,float_fromTime,float_duration)",
"scope":"source.lua"},

"cc.Animate3D:getTransitionTime()":{
"prefix":"cc.Animate3D:getTransitionTime()",
"body":["cc.Animate3D:getTransitionTime()"],
"description":"getTransitionTime()",
"scope":"source.lua"},

"cc.Animate3D:createWithFrames(Animation3D_animation,int_startFrame,int_endFrame,float_frameRate)":{
"prefix":"cc.Animate3D:createWithFrames(Animation3D_animation,int_startFrame,int_endFrame,float_frameRate)",
"body":["cc.Animate3D:createWithFrames(Animation3D_animation,int_startFrame,int_endFrame,float_frameRate)"],
"description":"createWithFrames(Animation3D_animation,int_startFrame,int_endFrame,float_frameRate)",
"scope":"source.lua"},

"cc.Animate3D:setTransitionTime(float_transTime)":{
"prefix":"cc.Animate3D:setTransitionTime(float_transTime)",
"body":["cc.Animate3D:setTransitionTime(float_transTime)"],
"description":"setTransitionTime(float_transTime)",
"scope":"source.lua"},

"cc.TextureCube":{
"prefix":"cc.TextureCube",
"body":["cc.TextureCube"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TextureCube:reloadTexture()":{
"prefix":"cc.TextureCube:reloadTexture()",
"body":["cc.TextureCube:reloadTexture()"],
"description":"reloadTexture()",
"scope":"source.lua"},

"cc.TextureCube:setTexParameters(const_TexParams)":{
"prefix":"cc.TextureCube:setTexParameters(const_TexParams)",
"body":["cc.TextureCube:setTexParameters(const_TexParams)"],
"description":"setTexParameters(const_TexParams)",
"scope":"source.lua"},

"cc.AttachNode":{
"prefix":"cc.AttachNode",
"body":["cc.AttachNode"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AttachNode:create(Bone3D_attachBone)":{
"prefix":"cc.AttachNode:create(Bone3D_attachBone)",
"body":["cc.AttachNode:create(Bone3D_attachBone)"],
"description":"create(Bone3D_attachBone)",
"scope":"source.lua"},

"cc.BillBoard":{
"prefix":"cc.BillBoard",
"body":["cc.BillBoard"],
"description":"cocos class",
"scope":"source.lua"},

"cc.BillBoard:getMode()":{
"prefix":"cc.BillBoard:getMode()",
"body":["cc.BillBoard:getMode()"],
"description":"getMode()",
"scope":"source.lua"},

"cc.BillBoard:setMode(Mode_mode)":{
"prefix":"cc.BillBoard:setMode(Mode_mode)",
"body":["cc.BillBoard:setMode(Mode_mode)"],
"description":"setMode(Mode_mode)",
"scope":"source.lua"},

"cc.BillBoard:create(Mode_mode)":{
"prefix":"cc.BillBoard:create(Mode_mode)",
"body":["cc.BillBoard:create(Mode_mode)"],
"description":"create(Mode_mode)",
"scope":"source.lua"},

"cc.BillBoard:create(const_std_string_filename,Mode_mode)":{
"prefix":"cc.BillBoard:create(const_std_string_filename,Mode_mode)",
"body":["cc.BillBoard:create(const_std_string_filename,Mode_mode)"],
"description":"create(const_std_string_filename,Mode_mode)",
"scope":"source.lua"},

"cc.BillBoard:create(const_std_string_filename,const_Rect_rect,Mode_mode)":{
"prefix":"cc.BillBoard:create(const_std_string_filename,const_Rect_rect,Mode_mode)",
"body":["cc.BillBoard:create(const_std_string_filename,const_Rect_rect,Mode_mode)"],
"description":"create(const_std_string_filename,const_Rect_rect,Mode_mode)",
"scope":"source.lua"},

"cc.BillBoard:createWithTexture(Texture2D_texture,Mode_mode)":{
"prefix":"cc.BillBoard:createWithTexture(Texture2D_texture,Mode_mode)",
"body":["cc.BillBoard:createWithTexture(Texture2D_texture,Mode_mode)"],
"description":"createWithTexture(Texture2D_texture,Mode_mode)",
"scope":"source.lua"},

"cc.Mesh":{
"prefix":"cc.Mesh",
"body":["cc.Mesh"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Mesh:getMaterial()":{
"prefix":"cc.Mesh:getMaterial()",
"body":["cc.Mesh:getMaterial()"],
"description":"getMaterial()",
"scope":"source.lua"},

"cc.Mesh:getVertexSizeInBytes()":{
"prefix":"cc.Mesh:getVertexSizeInBytes()",
"body":["cc.Mesh:getVertexSizeInBytes()"],
"description":"getVertexSizeInBytes()",
"scope":"source.lua"},

"cc.Mesh:setMaterial(Material_material)":{
"prefix":"cc.Mesh:setMaterial(Material_material)",
"body":["cc.Mesh:setMaterial(Material_material)"],
"description":"setMaterial(Material_material)",
"scope":"source.lua"},

"cc.Mesh:getName()":{
"prefix":"cc.Mesh:getName()",
"body":["cc.Mesh:getName()"],
"description":"getName()",
"scope":"source.lua"},

"cc.Mesh:getMeshVertexAttribute(int_idx)":{
"prefix":"cc.Mesh:getMeshVertexAttribute(int_idx)",
"body":["cc.Mesh:getMeshVertexAttribute(int_idx)"],
"description":"getMeshVertexAttribute(int_idx)",
"scope":"source.lua"},

"cc.Mesh:calculateAABB()":{
"prefix":"cc.Mesh:calculateAABB()",
"body":["cc.Mesh:calculateAABB()"],
"description":"calculateAABB()",
"scope":"source.lua"},

"cc.Mesh:draw(Renderer_renderer,float_globalZ,const_Mat4_transform,uint32_t_flags,unsigned_int_lightMask,const_Vec4_color,bool_forceDepthWrite)":{
"prefix":"cc.Mesh:draw(Renderer_renderer,float_globalZ,const_Mat4_transform,uint32_t_flags,unsigned_int_lightMask,const_Vec4_color,bool_forceDepthWrite)",
"body":["cc.Mesh:draw(Renderer_renderer,float_globalZ,const_Mat4_transform,uint32_t_flags,unsigned_int_lightMask,const_Vec4_color,bool_forceDepthWrite)"],
"description":"draw(Renderer_renderer,float_globalZ,const_Mat4_transform,uint32_t_flags,unsigned_int_lightMask,const_Vec4_color,bool_forceDepthWrite)",
"scope":"source.lua"},

"cc.Mesh:setName(const_std_string_name)":{
"prefix":"cc.Mesh:setName(const_std_string_name)",
"body":["cc.Mesh:setName(const_std_string_name)"],
"description":"setName(const_std_string_name)",
"scope":"source.lua"},

"cc.Mesh:setMeshIndexData(MeshIndexData_indexdata)":{
"prefix":"cc.Mesh:setMeshIndexData(MeshIndexData_indexdata)",
"body":["cc.Mesh:setMeshIndexData(MeshIndexData_indexdata)"],
"description":"setMeshIndexData(MeshIndexData_indexdata)",
"scope":"source.lua"},

"cc.Mesh:getMeshVertexAttribCount()":{
"prefix":"cc.Mesh:getMeshVertexAttribCount()",
"body":["cc.Mesh:getMeshVertexAttribCount()"],
"description":"getMeshVertexAttribCount()",
"scope":"source.lua"},

"cc.Mesh:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.Mesh:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.Mesh:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.Mesh:setForce2DQueue(bool_force2D)":{
"prefix":"cc.Mesh:setForce2DQueue(bool_force2D)",
"body":["cc.Mesh:setForce2DQueue(bool_force2D)"],
"description":"setForce2DQueue(bool_force2D)",
"scope":"source.lua"},

"cc.Mesh:setSkin(MeshSkin_skin)":{
"prefix":"cc.Mesh:setSkin(MeshSkin_skin)",
"body":["cc.Mesh:setSkin(MeshSkin_skin)"],
"description":"setSkin(MeshSkin_skin)",
"scope":"source.lua"},

"cc.Mesh:isVisible()":{
"prefix":"cc.Mesh:isVisible()",
"body":["cc.Mesh:isVisible()"],
"description":"isVisible()",
"scope":"source.lua"},

"cc.Mesh:setGLProgramState(GLProgramState_glProgramState)":{
"prefix":"cc.Mesh:setGLProgramState(GLProgramState_glProgramState)",
"body":["cc.Mesh:setGLProgramState(GLProgramState_glProgramState)"],
"description":"setGLProgramState(GLProgramState_glProgramState)",
"scope":"source.lua"},

"cc.Mesh:setVisible(bool_visible)":{
"prefix":"cc.Mesh:setVisible(bool_visible)",
"body":["cc.Mesh:setVisible(bool_visible)"],
"description":"setVisible(bool_visible)",
"scope":"source.lua"},

"cc.Skeleton3D":{
"prefix":"cc.Skeleton3D",
"body":["cc.Skeleton3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Skeleton3D:removeAllBones()":{
"prefix":"cc.Skeleton3D:removeAllBones()",
"body":["cc.Skeleton3D:removeAllBones()"],
"description":"removeAllBones()",
"scope":"source.lua"},

"cc.Skeleton3D:addBone(Bone3D_bone)":{
"prefix":"cc.Skeleton3D:addBone(Bone3D_bone)",
"body":["cc.Skeleton3D:addBone(Bone3D_bone)"],
"description":"addBone(Bone3D_bone)",
"scope":"source.lua"},

"cc.Skeleton3D:getBoneByName(const_std_string_id)":{
"prefix":"cc.Skeleton3D:getBoneByName(const_std_string_id)",
"body":["cc.Skeleton3D:getBoneByName(const_std_string_id)"],
"description":"getBoneByName(const_std_string_id)",
"scope":"source.lua"},

"cc.Skeleton3D:getRootBone(int_index)":{
"prefix":"cc.Skeleton3D:getRootBone(int_index)",
"body":["cc.Skeleton3D:getRootBone(int_index)"],
"description":"getRootBone(int_index)",
"scope":"source.lua"},

"cc.Skeleton3D:updateBoneMatrix()":{
"prefix":"cc.Skeleton3D:updateBoneMatrix()",
"body":["cc.Skeleton3D:updateBoneMatrix()"],
"description":"updateBoneMatrix()",
"scope":"source.lua"},

"cc.Skeleton3D:getBoneByIndex(unsigned_int_index)":{
"prefix":"cc.Skeleton3D:getBoneByIndex(unsigned_int_index)",
"body":["cc.Skeleton3D:getBoneByIndex(unsigned_int_index)"],
"description":"getBoneByIndex(unsigned_int_index)",
"scope":"source.lua"},

"cc.Skeleton3D:getRootCount()":{
"prefix":"cc.Skeleton3D:getRootCount()",
"body":["cc.Skeleton3D:getRootCount()"],
"description":"getRootCount()",
"scope":"source.lua"},

"cc.Skeleton3D:getBoneIndex(Bone3D_bone)":{
"prefix":"cc.Skeleton3D:getBoneIndex(Bone3D_bone)",
"body":["cc.Skeleton3D:getBoneIndex(Bone3D_bone)"],
"description":"getBoneIndex(Bone3D_bone)",
"scope":"source.lua"},

"cc.Skeleton3D:getBoneCount()":{
"prefix":"cc.Skeleton3D:getBoneCount()",
"body":["cc.Skeleton3D:getBoneCount()"],
"description":"getBoneCount()",
"scope":"source.lua"},

"cc.Skybox":{
"prefix":"cc.Skybox",
"body":["cc.Skybox"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Skybox:reload()":{
"prefix":"cc.Skybox:reload()",
"body":["cc.Skybox:reload()"],
"description":"reload()",
"scope":"source.lua"},

"cc.Skybox:init()":{
"prefix":"cc.Skybox:init()",
"body":["cc.Skybox:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.Skybox:setTexture(TextureCube)":{
"prefix":"cc.Skybox:setTexture(TextureCube)",
"body":["cc.Skybox:setTexture(TextureCube)"],
"description":"setTexture(TextureCube)",
"scope":"source.lua"},

"cc.Sprite3D":{
"prefix":"cc.Sprite3D",
"body":["cc.Sprite3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Sprite3D:setCullFaceEnabled(bool_enable)":{
"prefix":"cc.Sprite3D:setCullFaceEnabled(bool_enable)",
"body":["cc.Sprite3D:setCullFaceEnabled(bool_enable)"],
"description":"setCullFaceEnabled(bool_enable)",
"scope":"source.lua"},

"cc.Sprite3D:setTexture(const_std_string_texFile)":{
"prefix":"cc.Sprite3D:setTexture(const_std_string_texFile)",
"body":["cc.Sprite3D:setTexture(const_std_string_texFile)"],
"description":"setTexture(const_std_string_texFile)",
"scope":"source.lua"},

"cc.Sprite3D:getLightMask()":{
"prefix":"cc.Sprite3D:getLightMask()",
"body":["cc.Sprite3D:getLightMask()"],
"description":"getLightMask()",
"scope":"source.lua"},

"cc.Sprite3D:getMaterial(int_meshIndex)":{
"prefix":"cc.Sprite3D:getMaterial(int_meshIndex)",
"body":["cc.Sprite3D:getMaterial(int_meshIndex)"],
"description":"getMaterial(int_meshIndex)",
"scope":"source.lua"},

"cc.Sprite3D:setCullFace(GLenum_cullFace)":{
"prefix":"cc.Sprite3D:setCullFace(GLenum_cullFace)",
"body":["cc.Sprite3D:setCullFace(GLenum_cullFace)"],
"description":"setCullFace(GLenum_cullFace)",
"scope":"source.lua"},

"cc.Sprite3D:getMeshes()":{
"prefix":"cc.Sprite3D:getMeshes()",
"body":["cc.Sprite3D:getMeshes()"],
"description":"getMeshes()",
"scope":"source.lua"},

"cc.Sprite3D:removeAllAttachNode()":{
"prefix":"cc.Sprite3D:removeAllAttachNode()",
"body":["cc.Sprite3D:removeAllAttachNode()"],
"description":"removeAllAttachNode()",
"scope":"source.lua"},

"cc.Sprite3D:setMaterial(Material_material)":{
"prefix":"cc.Sprite3D:setMaterial(Material_material)",
"body":["cc.Sprite3D:setMaterial(Material_material)"],
"description":"setMaterial(Material_material)",
"scope":"source.lua"},

"cc.Sprite3D:setMaterial(Material_material,int_meshIndex)":{
"prefix":"cc.Sprite3D:setMaterial(Material_material,int_meshIndex)",
"body":["cc.Sprite3D:setMaterial(Material_material,int_meshIndex)"],
"description":"setMaterial(Material_material,int_meshIndex)",
"scope":"source.lua"},

"cc.Sprite3D:getMesh()":{
"prefix":"cc.Sprite3D:getMesh()",
"body":["cc.Sprite3D:getMesh()"],
"description":"getMesh()",
"scope":"source.lua"},

"cc.Sprite3D:getMeshCount()":{
"prefix":"cc.Sprite3D:getMeshCount()",
"body":["cc.Sprite3D:getMeshCount()"],
"description":"getMeshCount()",
"scope":"source.lua"},

"cc.Sprite3D:getMeshByIndex(int_index)":{
"prefix":"cc.Sprite3D:getMeshByIndex(int_index)",
"body":["cc.Sprite3D:getMeshByIndex(int_index)"],
"description":"getMeshByIndex(int_index)",
"scope":"source.lua"},

"cc.Sprite3D:isForceDepthWrite()":{
"prefix":"cc.Sprite3D:isForceDepthWrite()",
"body":["cc.Sprite3D:isForceDepthWrite()"],
"description":"isForceDepthWrite()",
"scope":"source.lua"},

"cc.Sprite3D:setLightMask(unsigned_int_mask)":{
"prefix":"cc.Sprite3D:setLightMask(unsigned_int_mask)",
"body":["cc.Sprite3D:setLightMask(unsigned_int_mask)"],
"description":"setLightMask(unsigned_int_mask)",
"scope":"source.lua"},

"cc.Sprite3D:getAttachNode(const_std_string_boneName)":{
"prefix":"cc.Sprite3D:getAttachNode(const_std_string_boneName)",
"body":["cc.Sprite3D:getAttachNode(const_std_string_boneName)"],
"description":"getAttachNode(const_std_string_boneName)",
"scope":"source.lua"},

"cc.Sprite3D:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.Sprite3D:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.Sprite3D:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.Sprite3D:setForce2DQueue(bool_force2D)":{
"prefix":"cc.Sprite3D:setForce2DQueue(bool_force2D)",
"body":["cc.Sprite3D:setForce2DQueue(bool_force2D)"],
"description":"setForce2DQueue(bool_force2D)",
"scope":"source.lua"},

"cc.Sprite3D:genMaterial(bool_useLight)":{
"prefix":"cc.Sprite3D:genMaterial(bool_useLight)",
"body":["cc.Sprite3D:genMaterial(bool_useLight)"],
"description":"genMaterial(bool_useLight)",
"scope":"source.lua"},

"cc.Sprite3D:removeAttachNode(const_std_string_boneName)":{
"prefix":"cc.Sprite3D:removeAttachNode(const_std_string_boneName)",
"body":["cc.Sprite3D:removeAttachNode(const_std_string_boneName)"],
"description":"removeAttachNode(const_std_string_boneName)",
"scope":"source.lua"},

"cc.Sprite3D:getSkeleton()":{
"prefix":"cc.Sprite3D:getSkeleton()",
"body":["cc.Sprite3D:getSkeleton()"],
"description":"getSkeleton()",
"scope":"source.lua"},

"cc.Sprite3D:setForceDepthWrite(bool_value)":{
"prefix":"cc.Sprite3D:setForceDepthWrite(bool_value)",
"body":["cc.Sprite3D:setForceDepthWrite(bool_value)"],
"description":"setForceDepthWrite(bool_value)",
"scope":"source.lua"},

"cc.Sprite3D:getMeshByName(const_std_string_name)":{
"prefix":"cc.Sprite3D:getMeshByName(const_std_string_name)",
"body":["cc.Sprite3D:getMeshByName(const_std_string_name)"],
"description":"getMeshByName(const_std_string_name)",
"scope":"source.lua"},

"cc.Sprite3D:create()":{
"prefix":"cc.Sprite3D:create()",
"body":["cc.Sprite3D:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Sprite3D:create(const_std_string_modelPath)":{
"prefix":"cc.Sprite3D:create(const_std_string_modelPath)",
"body":["cc.Sprite3D:create(const_std_string_modelPath)"],
"description":"create(const_std_string_modelPath)",
"scope":"source.lua"},

"cc.Sprite3D:create(const_std_string_modelPath,const_std_string_texturePath)":{
"prefix":"cc.Sprite3D:create(const_std_string_modelPath,const_std_string_texturePath)",
"body":["cc.Sprite3D:create(const_std_string_modelPath,const_std_string_texturePath)"],
"description":"create(const_std_string_modelPath,const_std_string_texturePath)",
"scope":"source.lua"},

"cc.Sprite3DCache":{
"prefix":"cc.Sprite3DCache",
"body":["cc.Sprite3DCache"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Sprite3DCache:removeSprite3DData(const_std_string_key)":{
"prefix":"cc.Sprite3DCache:removeSprite3DData(const_std_string_key)",
"body":["cc.Sprite3DCache:removeSprite3DData(const_std_string_key)"],
"description":"removeSprite3DData(const_std_string_key)",
"scope":"source.lua"},

"cc.Sprite3DCache:removeAllSprite3DData()":{
"prefix":"cc.Sprite3DCache:removeAllSprite3DData()",
"body":["cc.Sprite3DCache:removeAllSprite3DData()"],
"description":"removeAllSprite3DData()",
"scope":"source.lua"},

"cc.Sprite3DCache:destroyInstance()":{
"prefix":"cc.Sprite3DCache:destroyInstance()",
"body":["cc.Sprite3DCache:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"cc.Sprite3DCache:getInstance()":{
"prefix":"cc.Sprite3DCache:getInstance()",
"body":["cc.Sprite3DCache:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"cc.Sprite3DMaterial":{
"prefix":"cc.Sprite3DMaterial",
"body":["cc.Sprite3DMaterial"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Sprite3DMaterial:getMaterialType()":{
"prefix":"cc.Sprite3DMaterial:getMaterialType()",
"body":["cc.Sprite3DMaterial:getMaterialType()"],
"description":"getMaterialType()",
"scope":"source.lua"},

"cc.Sprite3DMaterial:createWithFilename(const_std_string_path)":{
"prefix":"cc.Sprite3DMaterial:createWithFilename(const_std_string_path)",
"body":["cc.Sprite3DMaterial:createWithFilename(const_std_string_path)"],
"description":"createWithFilename(const_std_string_path)",
"scope":"source.lua"},

"cc.Sprite3DMaterial:releaseCachedMaterial()":{
"prefix":"cc.Sprite3DMaterial:releaseCachedMaterial()",
"body":["cc.Sprite3DMaterial:releaseCachedMaterial()"],
"description":"releaseCachedMaterial()",
"scope":"source.lua"},

"cc.Sprite3DMaterial:createBuiltInMaterial(MaterialType_type,bool_skinned)":{
"prefix":"cc.Sprite3DMaterial:createBuiltInMaterial(MaterialType_type,bool_skinned)",
"body":["cc.Sprite3DMaterial:createBuiltInMaterial(MaterialType_type,bool_skinned)"],
"description":"createBuiltInMaterial(MaterialType_type,bool_skinned)",
"scope":"source.lua"},

"cc.Sprite3DMaterial:createBuiltInMaterial()":{
"prefix":"cc.Sprite3DMaterial:createBuiltInMaterial()",
"body":["cc.Sprite3DMaterial:createBuiltInMaterial()"],
"description":"createBuiltInMaterial()",
"scope":"source.lua"},

"cc.Sprite3DMaterial:createWithGLStateProgram(GLProgramState_programState)":{
"prefix":"cc.Sprite3DMaterial:createWithGLStateProgram(GLProgramState_programState)",
"body":["cc.Sprite3DMaterial:createWithGLStateProgram(GLProgramState_programState)"],
"description":"createWithGLStateProgram(GLProgramState_programState)",
"scope":"source.lua"},

"cc.Sprite3DMaterial:releaseBuiltInMaterial()":{
"prefix":"cc.Sprite3DMaterial:releaseBuiltInMaterial()",
"body":["cc.Sprite3DMaterial:releaseBuiltInMaterial()"],
"description":"releaseBuiltInMaterial()",
"scope":"source.lua"},

"cc.Terrain":{
"prefix":"cc.Terrain",
"body":["cc.Terrain"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Terrain:initHeightMap(const_std_string_heightMap)":{
"prefix":"cc.Terrain:initHeightMap(const_std_string_heightMap)",
"body":["cc.Terrain:initHeightMap(const_std_string_heightMap)"],
"description":"initHeightMap(const_std_string_heightMap)",
"scope":"source.lua"},

"cc.Terrain:setMaxDetailMapAmount(int_maxValue)":{
"prefix":"cc.Terrain:setMaxDetailMapAmount(int_maxValue)",
"body":["cc.Terrain:setMaxDetailMapAmount(int_maxValue)"],
"description":"setMaxDetailMapAmount(int_maxValue)",
"scope":"source.lua"},

"cc.Terrain:setDrawWire(bool_boolValue)":{
"prefix":"cc.Terrain:setDrawWire(bool_boolValue)",
"body":["cc.Terrain:setDrawWire(bool_boolValue)"],
"description":"setDrawWire(bool_boolValue)",
"scope":"source.lua"},

"cc.Terrain:getHeightData()":{
"prefix":"cc.Terrain:getHeightData()",
"body":["cc.Terrain:getHeightData()"],
"description":"getHeightData()",
"scope":"source.lua"},

"cc.Terrain:setDetailMap(unsigned_int_index,DetailMap_detailMap)":{
"prefix":"cc.Terrain:setDetailMap(unsigned_int_index,DetailMap_detailMap)",
"body":["cc.Terrain:setDetailMap(unsigned_int_index,DetailMap_detailMap)"],
"description":"setDetailMap(unsigned_int_index,DetailMap_detailMap)",
"scope":"source.lua"},

"cc.Terrain:resetHeightMap(const_std_string_heightMap)":{
"prefix":"cc.Terrain:resetHeightMap(const_std_string_heightMap)",
"body":["cc.Terrain:resetHeightMap(const_std_string_heightMap)"],
"description":"resetHeightMap(const_std_string_heightMap)",
"scope":"source.lua"},

"cc.Terrain:setLightDir(const_Vec3_lightDir)":{
"prefix":"cc.Terrain:setLightDir(const_Vec3_lightDir)",
"body":["cc.Terrain:setLightDir(const_Vec3_lightDir)"],
"description":"setLightDir(const_Vec3_lightDir)",
"scope":"source.lua"},

"cc.Terrain:setAlphaMap(cocos2d_Texture2D__newAlphaMapTexture)":{
"prefix":"cc.Terrain:setAlphaMap(cocos2d_Texture2D__newAlphaMapTexture)",
"body":["cc.Terrain:setAlphaMap(cocos2d_Texture2D__newAlphaMapTexture)"],
"description":"setAlphaMap(cocos2d_Texture2D__newAlphaMapTexture)",
"scope":"source.lua"},

"cc.Terrain:setSkirtHeightRatio(float_ratio)":{
"prefix":"cc.Terrain:setSkirtHeightRatio(float_ratio)",
"body":["cc.Terrain:setSkirtHeightRatio(float_ratio)"],
"description":"setSkirtHeightRatio(float_ratio)",
"scope":"source.lua"},

"cc.Terrain:convertToTerrainSpace(const_Vec2_worldSpace)":{
"prefix":"cc.Terrain:convertToTerrainSpace(const_Vec2_worldSpace)",
"body":["cc.Terrain:convertToTerrainSpace(const_Vec2_worldSpace)"],
"description":"convertToTerrainSpace(const_Vec2_worldSpace)",
"scope":"source.lua"},

"cc.Terrain:initTextures()":{
"prefix":"cc.Terrain:initTextures()",
"body":["cc.Terrain:initTextures()"],
"description":"initTextures()",
"scope":"source.lua"},

"cc.Terrain:initProperties()":{
"prefix":"cc.Terrain:initProperties()",
"body":["cc.Terrain:initProperties()"],
"description":"initProperties()",
"scope":"source.lua"},

"cc.Terrain:initWithTerrainData(TerrainData_parameter,CrackFixedType_fixedType)":{
"prefix":"cc.Terrain:initWithTerrainData(TerrainData_parameter,CrackFixedType_fixedType)",
"body":["cc.Terrain:initWithTerrainData(TerrainData_parameter,CrackFixedType_fixedType)"],
"description":"initWithTerrainData(TerrainData_parameter,CrackFixedType_fixedType)",
"scope":"source.lua"},

"cc.Terrain:setLODDistance(float_lod1,float_lod2,float_lod3)":{
"prefix":"cc.Terrain:setLODDistance(float_lod1,float_lod2,float_lod3)",
"body":["cc.Terrain:setLODDistance(float_lod1,float_lod2,float_lod3)"],
"description":"setLODDistance(float_lod1,float_lod2,float_lod3)",
"scope":"source.lua"},

"cc.Terrain:getTerrainSize()":{
"prefix":"cc.Terrain:getTerrainSize()",
"body":["cc.Terrain:getTerrainSize()"],
"description":"getTerrainSize()",
"scope":"source.lua"},

"cc.Terrain:getNormal(int_pixelX,int_pixelY)":{
"prefix":"cc.Terrain:getNormal(int_pixelX,int_pixelY)",
"body":["cc.Terrain:getNormal(int_pixelX,int_pixelY)"],
"description":"getNormal(int_pixelX,int_pixelY)",
"scope":"source.lua"},

"cc.Terrain:reload()":{
"prefix":"cc.Terrain:reload()",
"body":["cc.Terrain:reload()"],
"description":"reload()",
"scope":"source.lua"},

"cc.Terrain:getImageHeight(int_pixelX,int_pixelY)":{
"prefix":"cc.Terrain:getImageHeight(int_pixelX,int_pixelY)",
"body":["cc.Terrain:getImageHeight(int_pixelX,int_pixelY)"],
"description":"getImageHeight(int_pixelX,int_pixelY)",
"scope":"source.lua"},

"cc.Terrain:setLightMap(const_std_string_fileName)":{
"prefix":"cc.Terrain:setLightMap(const_std_string_fileName)",
"body":["cc.Terrain:setLightMap(const_std_string_fileName)"],
"description":"setLightMap(const_std_string_fileName)",
"scope":"source.lua"},

"cc.Terrain:setIsEnableFrustumCull(bool_boolValue)":{
"prefix":"cc.Terrain:setIsEnableFrustumCull(bool_boolValue)",
"body":["cc.Terrain:setIsEnableFrustumCull(bool_boolValue)"],
"description":"setIsEnableFrustumCull(bool_boolValue)",
"scope":"source.lua"},

"cc.Terrain:getMinHeight()":{
"prefix":"cc.Terrain:getMinHeight()",
"body":["cc.Terrain:getMinHeight()"],
"description":"getMinHeight()",
"scope":"source.lua"},

"cc.Terrain:getMaxHeight()":{
"prefix":"cc.Terrain:getMaxHeight()",
"body":["cc.Terrain:getMaxHeight()"],
"description":"getMaxHeight()",
"scope":"source.lua"},

"cc.Bundle3D":{
"prefix":"cc.Bundle3D",
"body":["cc.Bundle3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Bundle3D:load(const_std_string_path)":{
"prefix":"cc.Bundle3D:load(const_std_string_path)",
"body":["cc.Bundle3D:load(const_std_string_path)"],
"description":"load(const_std_string_path)",
"scope":"source.lua"},

"cc.Bundle3D:loadSkinData(const_std_string_id,SkinData_skindata)":{
"prefix":"cc.Bundle3D:loadSkinData(const_std_string_id,SkinData_skindata)",
"body":["cc.Bundle3D:loadSkinData(const_std_string_id,SkinData_skindata)"],
"description":"loadSkinData(const_std_string_id,SkinData_skindata)",
"scope":"source.lua"},

"cc.Bundle3D:clear()":{
"prefix":"cc.Bundle3D:clear()",
"body":["cc.Bundle3D:clear()"],
"description":"clear()",
"scope":"source.lua"},

"cc.Bundle3D:loadMaterials(MaterialDatas_materialdatas)":{
"prefix":"cc.Bundle3D:loadMaterials(MaterialDatas_materialdatas)",
"body":["cc.Bundle3D:loadMaterials(MaterialDatas_materialdatas)"],
"description":"loadMaterials(MaterialDatas_materialdatas)",
"scope":"source.lua"},

"cc.Bundle3D:loadNodes(NodeDatas_nodedatas)":{
"prefix":"cc.Bundle3D:loadNodes(NodeDatas_nodedatas)",
"body":["cc.Bundle3D:loadNodes(NodeDatas_nodedatas)"],
"description":"loadNodes(NodeDatas_nodedatas)",
"scope":"source.lua"},

"cc.Bundle3D:loadAnimationData(const_std_string_id,Animation3DData_animationdata)":{
"prefix":"cc.Bundle3D:loadAnimationData(const_std_string_id,Animation3DData_animationdata)",
"body":["cc.Bundle3D:loadAnimationData(const_std_string_id,Animation3DData_animationdata)"],
"description":"loadAnimationData(const_std_string_id,Animation3DData_animationdata)",
"scope":"source.lua"},

"cc.Bundle3D:createBundle()":{
"prefix":"cc.Bundle3D:createBundle()",
"body":["cc.Bundle3D:createBundle()"],
"description":"createBundle()",
"scope":"source.lua"},

"cc.Bundle3D:destroyBundle(Bundle3D_bundle)":{
"prefix":"cc.Bundle3D:destroyBundle(Bundle3D_bundle)",
"body":["cc.Bundle3D:destroyBundle(Bundle3D_bundle)"],
"description":"destroyBundle(Bundle3D_bundle)",
"scope":"source.lua"},

"ccexp.AudioProfile":{
"prefix":"ccexp.AudioProfile",
"body":["ccexp.AudioProfile"],
"description":"cocos class",
"scope":"source.lua"},

"ccexp.AudioProfile:new()":{
"prefix":"ccexp.AudioProfile:new()",
"body":["ccexp.AudioProfile:new()"],
"description":"new()",
"scope":"source.lua"},

"ccexp.AudioEngine":{
"prefix":"ccexp.AudioEngine",
"body":["ccexp.AudioEngine"],
"description":"cocos class",
"scope":"source.lua"},

"ccexp.AudioEngine:lazyInit()":{
"prefix":"ccexp.AudioEngine:lazyInit()",
"body":["ccexp.AudioEngine:lazyInit()"],
"description":"lazyInit()",
"scope":"source.lua"},

"ccexp.AudioEngine:setCurrentTime(int_audioID,float_sec)":{
"prefix":"ccexp.AudioEngine:setCurrentTime(int_audioID,float_sec)",
"body":["ccexp.AudioEngine:setCurrentTime(int_audioID,float_sec)"],
"description":"setCurrentTime(int_audioID,float_sec)",
"scope":"source.lua"},

"ccexp.AudioEngine:getVolume(int_audioID)":{
"prefix":"ccexp.AudioEngine:getVolume(int_audioID)",
"body":["ccexp.AudioEngine:getVolume(int_audioID)"],
"description":"getVolume(int_audioID)",
"scope":"source.lua"},

"ccexp.AudioEngine:uncache(const_std_string_filePath)":{
"prefix":"ccexp.AudioEngine:uncache(const_std_string_filePath)",
"body":["ccexp.AudioEngine:uncache(const_std_string_filePath)"],
"description":"uncache(const_std_string_filePath)",
"scope":"source.lua"},

"ccexp.AudioEngine:resumeAll()":{
"prefix":"ccexp.AudioEngine:resumeAll()",
"body":["ccexp.AudioEngine:resumeAll()"],
"description":"resumeAll()",
"scope":"source.lua"},

"ccexp.AudioEngine:stopAll()":{
"prefix":"ccexp.AudioEngine:stopAll()",
"body":["ccexp.AudioEngine:stopAll()"],
"description":"stopAll()",
"scope":"source.lua"},

"ccexp.AudioEngine:pause(int_audioID)":{
"prefix":"ccexp.AudioEngine:pause(int_audioID)",
"body":["ccexp.AudioEngine:pause(int_audioID)"],
"description":"pause(int_audioID)",
"scope":"source.lua"},

"ccexp.AudioEngine:getMaxAudioInstance()":{
"prefix":"ccexp.AudioEngine:getMaxAudioInstance()",
"body":["ccexp.AudioEngine:getMaxAudioInstance()"],
"description":"getMaxAudioInstance()",
"scope":"source.lua"},

"ccexp.AudioEngine:isEnabled()":{
"prefix":"ccexp.AudioEngine:isEnabled()",
"body":["ccexp.AudioEngine:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"ccexp.AudioEngine:getCurrentTime(int_audioID)":{
"prefix":"ccexp.AudioEngine:getCurrentTime(int_audioID)",
"body":["ccexp.AudioEngine:getCurrentTime(int_audioID)"],
"description":"getCurrentTime(int_audioID)",
"scope":"source.lua"},

"ccexp.AudioEngine:setMaxAudioInstance(int_maxInstances)":{
"prefix":"ccexp.AudioEngine:setMaxAudioInstance(int_maxInstances)",
"body":["ccexp.AudioEngine:setMaxAudioInstance(int_maxInstances)"],
"description":"setMaxAudioInstance(int_maxInstances)",
"scope":"source.lua"},

"ccexp.AudioEngine:isLoop(int_audioID)":{
"prefix":"ccexp.AudioEngine:isLoop(int_audioID)",
"body":["ccexp.AudioEngine:isLoop(int_audioID)"],
"description":"isLoop(int_audioID)",
"scope":"source.lua"},

"ccexp.AudioEngine:pauseAll()":{
"prefix":"ccexp.AudioEngine:pauseAll()",
"body":["ccexp.AudioEngine:pauseAll()"],
"description":"pauseAll()",
"scope":"source.lua"},

"ccexp.AudioEngine:uncacheAll()":{
"prefix":"ccexp.AudioEngine:uncacheAll()",
"body":["ccexp.AudioEngine:uncacheAll()"],
"description":"uncacheAll()",
"scope":"source.lua"},

"ccexp.AudioEngine:setVolume(int_audioID,float_volume)":{
"prefix":"ccexp.AudioEngine:setVolume(int_audioID,float_volume)",
"body":["ccexp.AudioEngine:setVolume(int_audioID,float_volume)"],
"description":"setVolume(int_audioID,float_volume)",
"scope":"source.lua"},

"ccexp.AudioEngine:preload(const_std_string_filePath)":{
"prefix":"ccexp.AudioEngine:preload(const_std_string_filePath)",
"body":["ccexp.AudioEngine:preload(const_std_string_filePath)"],
"description":"preload(const_std_string_filePath)",
"scope":"source.lua"},

"ccexp.AudioEngine:setEnabled(bool_isEnabled)":{
"prefix":"ccexp.AudioEngine:setEnabled(bool_isEnabled)",
"body":["ccexp.AudioEngine:setEnabled(bool_isEnabled)"],
"description":"setEnabled(bool_isEnabled)",
"scope":"source.lua"},

"ccexp.AudioEngine:play2d(const_std_string_filePath,bool_loop,float_volume,const_AudioProfile_profile)":{
"prefix":"ccexp.AudioEngine:play2d(const_std_string_filePath,bool_loop,float_volume,const_AudioProfile_profile)",
"body":["ccexp.AudioEngine:play2d(const_std_string_filePath,bool_loop,float_volume,const_AudioProfile_profile)"],
"description":"play2d(const_std_string_filePath,bool_loop,float_volume,const_AudioProfile_profile)",
"scope":"source.lua"},

"ccexp.AudioEngine:getState(int_audioID)":{
"prefix":"ccexp.AudioEngine:getState(int_audioID)",
"body":["ccexp.AudioEngine:getState(int_audioID)"],
"description":"getState(int_audioID)",
"scope":"source.lua"},

"ccexp.AudioEngine:resume(int_audioID)":{
"prefix":"ccexp.AudioEngine:resume(int_audioID)",
"body":["ccexp.AudioEngine:resume(int_audioID)"],
"description":"resume(int_audioID)",
"scope":"source.lua"},

"ccexp.AudioEngine:stop(int_audioID)":{
"prefix":"ccexp.AudioEngine:stop(int_audioID)",
"body":["ccexp.AudioEngine:stop(int_audioID)"],
"description":"stop(int_audioID)",
"scope":"source.lua"},

"ccexp.AudioEngine:getDuration(int_audioID)":{
"prefix":"ccexp.AudioEngine:getDuration(int_audioID)",
"body":["ccexp.AudioEngine:getDuration(int_audioID)"],
"description":"getDuration(int_audioID)",
"scope":"source.lua"},

"ccexp.AudioEngine:setLoop(int_audioID,bool_loop)":{
"prefix":"ccexp.AudioEngine:setLoop(int_audioID,bool_loop)",
"body":["ccexp.AudioEngine:setLoop(int_audioID,bool_loop)"],
"description":"setLoop(int_audioID,bool_loop)",
"scope":"source.lua"},

"ccexp.AudioEngine:getDefaultProfile()":{
"prefix":"ccexp.AudioEngine:getDefaultProfile()",
"body":["ccexp.AudioEngine:getDefaultProfile()"],
"description":"getDefaultProfile()",
"scope":"source.lua"},

"ccexp.AudioEngine:getProfile(int_audioID)":{
"prefix":"ccexp.AudioEngine:getProfile(int_audioID)",
"body":["ccexp.AudioEngine:getProfile(int_audioID)"],
"description":"getProfile(int_audioID)",
"scope":"source.lua"},

"ccexp.AudioEngine:getProfile(const_std_string_profileName)":{
"prefix":"ccexp.AudioEngine:getProfile(const_std_string_profileName)",
"body":["ccexp.AudioEngine:getProfile(const_std_string_profileName)"],
"description":"getProfile(const_std_string_profileName)",
"scope":"source.lua"},

"ccexp.AudioEngine:getPlayingAudioCount()":{
"prefix":"ccexp.AudioEngine:getPlayingAudioCount()",
"body":["ccexp.AudioEngine:getPlayingAudioCount()"],
"description":"getPlayingAudioCount()",
"scope":"source.lua"},

"cc.Ref":{
"prefix":"cc.Ref",
"body":["cc.Ref"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Ref:release()":{
"prefix":"cc.Ref:release()",
"body":["cc.Ref:release()"],
"description":"release()",
"scope":"source.lua"},

"cc.Ref:retain()":{
"prefix":"cc.Ref:retain()",
"body":["cc.Ref:retain()"],
"description":"retain()",
"scope":"source.lua"},

"cc.Ref:getReferenceCount()":{
"prefix":"cc.Ref:getReferenceCount()",
"body":["cc.Ref:getReferenceCount()"],
"description":"getReferenceCount()",
"scope":"source.lua"},

"cc.Console":{
"prefix":"cc.Console",
"body":["cc.Console"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Console:addSubCommand(const_Command_subCmd)":{
"prefix":"cc.Console:addSubCommand(const_Command_subCmd)",
"body":["cc.Console:addSubCommand(const_Command_subCmd)"],
"description":"addSubCommand(const_Command_subCmd)",
"scope":"source.lua"},

"cc.Console:getSubCommand(const_std_string_subCmdName)":{
"prefix":"cc.Console:getSubCommand(const_std_string_subCmdName)",
"body":["cc.Console:getSubCommand(const_std_string_subCmdName)"],
"description":"getSubCommand(const_std_string_subCmdName)",
"scope":"source.lua"},

"cc.Console:delSubCommand(const_std_string_subCmdName)":{
"prefix":"cc.Console:delSubCommand(const_std_string_subCmdName)",
"body":["cc.Console:delSubCommand(const_std_string_subCmdName)"],
"description":"delSubCommand(const_std_string_subCmdName)",
"scope":"source.lua"},

"cc.Texture2D":{
"prefix":"cc.Texture2D",
"body":["cc.Texture2D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Texture2D:getMaxT()":{
"prefix":"cc.Texture2D:getMaxT()",
"body":["cc.Texture2D:getMaxT()"],
"description":"getMaxT()",
"scope":"source.lua"},

"cc.Texture2D:setAlphaTexture(Texture2D_alphaTexture)":{
"prefix":"cc.Texture2D:setAlphaTexture(Texture2D_alphaTexture)",
"body":["cc.Texture2D:setAlphaTexture(Texture2D_alphaTexture)"],
"description":"setAlphaTexture(Texture2D_alphaTexture)",
"scope":"source.lua"},

"cc.Texture2D:getStringForFormat()":{
"prefix":"cc.Texture2D:getStringForFormat()",
"body":["cc.Texture2D:getStringForFormat()"],
"description":"getStringForFormat()",
"scope":"source.lua"},

"cc.Texture2D:initWithImage(Image__image)":{
"prefix":"cc.Texture2D:initWithImage(Image__image)",
"body":["cc.Texture2D:initWithImage(Image__image)"],
"description":"initWithImage(Image__image)",
"scope":"source.lua"},

"cc.Texture2D:initWithImage(Image__image,PixelFormat_format)":{
"prefix":"cc.Texture2D:initWithImage(Image__image,PixelFormat_format)",
"body":["cc.Texture2D:initWithImage(Image__image,PixelFormat_format)"],
"description":"initWithImage(Image__image,PixelFormat_format)",
"scope":"source.lua"},

"cc.Texture2D:getMaxS()":{
"prefix":"cc.Texture2D:getMaxS()",
"body":["cc.Texture2D:getMaxS()"],
"description":"getMaxS()",
"scope":"source.lua"},

"cc.Texture2D:releaseGLTexture()":{
"prefix":"cc.Texture2D:releaseGLTexture()",
"body":["cc.Texture2D:releaseGLTexture()"],
"description":"releaseGLTexture()",
"scope":"source.lua"},

"cc.Texture2D:hasPremultipliedAlpha()":{
"prefix":"cc.Texture2D:hasPremultipliedAlpha()",
"body":["cc.Texture2D:hasPremultipliedAlpha()"],
"description":"hasPremultipliedAlpha()",
"scope":"source.lua"},

"cc.Texture2D:getPixelsHigh()":{
"prefix":"cc.Texture2D:getPixelsHigh()",
"body":["cc.Texture2D:getPixelsHigh()"],
"description":"getPixelsHigh()",
"scope":"source.lua"},

"cc.Texture2D:getAlphaTextureName()":{
"prefix":"cc.Texture2D:getAlphaTextureName()",
"body":["cc.Texture2D:getAlphaTextureName()"],
"description":"getAlphaTextureName()",
"scope":"source.lua"},

"cc.Texture2D:getBitsPerPixelForFormat()":{
"prefix":"cc.Texture2D:getBitsPerPixelForFormat()",
"body":["cc.Texture2D:getBitsPerPixelForFormat()"],
"description":"getBitsPerPixelForFormat()",
"scope":"source.lua"},

"cc.Texture2D:getBitsPerPixelForFormat(Texture2D_PixelFormat_format)":{
"prefix":"cc.Texture2D:getBitsPerPixelForFormat(Texture2D_PixelFormat_format)",
"body":["cc.Texture2D:getBitsPerPixelForFormat(Texture2D_PixelFormat_format)"],
"description":"getBitsPerPixelForFormat(Texture2D_PixelFormat_format)",
"scope":"source.lua"},

"cc.Texture2D:getName()":{
"prefix":"cc.Texture2D:getName()",
"body":["cc.Texture2D:getName()"],
"description":"getName()",
"scope":"source.lua"},

"cc.Texture2D:initWithString(const_char_text,const_std_string_fontName,float_fontSize,const_Size_dimensions,TextHAlignment_hAlignment,TextVAlignment_vAlignment,bool_enableWrap,int_overflow)":{
"prefix":"cc.Texture2D:initWithString(const_char_text,const_std_string_fontName,float_fontSize,const_Size_dimensions,TextHAlignment_hAlignment,TextVAlignment_vAlignment,bool_enableWrap,int_overflow)",
"body":["cc.Texture2D:initWithString(const_char_text,const_std_string_fontName,float_fontSize,const_Size_dimensions,TextHAlignment_hAlignment,TextVAlignment_vAlignment,bool_enableWrap,int_overflow)"],
"description":"initWithString(const_char_text,const_std_string_fontName,float_fontSize,const_Size_dimensions,TextHAlignment_hAlignment,TextVAlignment_vAlignment,bool_enableWrap,int_overflow)",
"scope":"source.lua"},

"cc.Texture2D:initWithString(const_char_text,const_FontDefinition_textDefinition)":{
"prefix":"cc.Texture2D:initWithString(const_char_text,const_FontDefinition_textDefinition)",
"body":["cc.Texture2D:initWithString(const_char_text,const_FontDefinition_textDefinition)"],
"description":"initWithString(const_char_text,const_FontDefinition_textDefinition)",
"scope":"source.lua"},

"cc.Texture2D:setMaxT(GLfloat_maxT)":{
"prefix":"cc.Texture2D:setMaxT(GLfloat_maxT)",
"body":["cc.Texture2D:setMaxT(GLfloat_maxT)"],
"description":"setMaxT(GLfloat_maxT)",
"scope":"source.lua"},

"cc.Texture2D:getPath()":{
"prefix":"cc.Texture2D:getPath()",
"body":["cc.Texture2D:getPath()"],
"description":"getPath()",
"scope":"source.lua"},

"cc.Texture2D:drawInRect(const_Rect_rect)":{
"prefix":"cc.Texture2D:drawInRect(const_Rect_rect)",
"body":["cc.Texture2D:drawInRect(const_Rect_rect)"],
"description":"drawInRect(const_Rect_rect)",
"scope":"source.lua"},

"cc.Texture2D:getContentSize()":{
"prefix":"cc.Texture2D:getContentSize()",
"body":["cc.Texture2D:getContentSize()"],
"description":"getContentSize()",
"scope":"source.lua"},

"cc.Texture2D:setAliasTexParameters()":{
"prefix":"cc.Texture2D:setAliasTexParameters()",
"body":["cc.Texture2D:setAliasTexParameters()"],
"description":"setAliasTexParameters()",
"scope":"source.lua"},

"cc.Texture2D:setAntiAliasTexParameters()":{
"prefix":"cc.Texture2D:setAntiAliasTexParameters()",
"body":["cc.Texture2D:setAntiAliasTexParameters()"],
"description":"setAntiAliasTexParameters()",
"scope":"source.lua"},

"cc.Texture2D:generateMipmap()":{
"prefix":"cc.Texture2D:generateMipmap()",
"body":["cc.Texture2D:generateMipmap()"],
"description":"generateMipmap()",
"scope":"source.lua"},

"cc.Texture2D:getAlphaTexture()":{
"prefix":"cc.Texture2D:getAlphaTexture()",
"body":["cc.Texture2D:getAlphaTexture()"],
"description":"getAlphaTexture()",
"scope":"source.lua"},

"cc.Texture2D:getDescription()":{
"prefix":"cc.Texture2D:getDescription()",
"body":["cc.Texture2D:getDescription()"],
"description":"getDescription()",
"scope":"source.lua"},

"cc.Texture2D:getPixelFormat()":{
"prefix":"cc.Texture2D:getPixelFormat()",
"body":["cc.Texture2D:getPixelFormat()"],
"description":"getPixelFormat()",
"scope":"source.lua"},

"cc.Texture2D:setGLProgram(GLProgram_program)":{
"prefix":"cc.Texture2D:setGLProgram(GLProgram_program)",
"body":["cc.Texture2D:setGLProgram(GLProgram_program)"],
"description":"setGLProgram(GLProgram_program)",
"scope":"source.lua"},

"cc.Texture2D:getContentSizeInPixels()":{
"prefix":"cc.Texture2D:getContentSizeInPixels()",
"body":["cc.Texture2D:getContentSizeInPixels()"],
"description":"getContentSizeInPixels()",
"scope":"source.lua"},

"cc.Texture2D:getPixelsWide()":{
"prefix":"cc.Texture2D:getPixelsWide()",
"body":["cc.Texture2D:getPixelsWide()"],
"description":"getPixelsWide()",
"scope":"source.lua"},

"cc.Texture2D:drawAtPoint(const_Vec2_point)":{
"prefix":"cc.Texture2D:drawAtPoint(const_Vec2_point)",
"body":["cc.Texture2D:drawAtPoint(const_Vec2_point)"],
"description":"drawAtPoint(const_Vec2_point)",
"scope":"source.lua"},

"cc.Texture2D:getGLProgram()":{
"prefix":"cc.Texture2D:getGLProgram()",
"body":["cc.Texture2D:getGLProgram()"],
"description":"getGLProgram()",
"scope":"source.lua"},

"cc.Texture2D:hasMipmaps()":{
"prefix":"cc.Texture2D:hasMipmaps()",
"body":["cc.Texture2D:hasMipmaps()"],
"description":"hasMipmaps()",
"scope":"source.lua"},

"cc.Texture2D:setMaxS(GLfloat_maxS)":{
"prefix":"cc.Texture2D:setMaxS(GLfloat_maxS)",
"body":["cc.Texture2D:setMaxS(GLfloat_maxS)"],
"description":"setMaxS(GLfloat_maxS)",
"scope":"source.lua"},

"cc.Texture2D:setDefaultAlphaPixelFormat(Texture2D_PixelFormat_format)":{
"prefix":"cc.Texture2D:setDefaultAlphaPixelFormat(Texture2D_PixelFormat_format)",
"body":["cc.Texture2D:setDefaultAlphaPixelFormat(Texture2D_PixelFormat_format)"],
"description":"setDefaultAlphaPixelFormat(Texture2D_PixelFormat_format)",
"scope":"source.lua"},

"cc.Texture2D:getDefaultAlphaPixelFormat()":{
"prefix":"cc.Texture2D:getDefaultAlphaPixelFormat()",
"body":["cc.Texture2D:getDefaultAlphaPixelFormat()"],
"description":"getDefaultAlphaPixelFormat()",
"scope":"source.lua"},

"cc.Touch":{
"prefix":"cc.Touch",
"body":["cc.Touch"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Touch:getPreviousLocationInView()":{
"prefix":"cc.Touch:getPreviousLocationInView()",
"body":["cc.Touch:getPreviousLocationInView()"],
"description":"getPreviousLocationInView()",
"scope":"source.lua"},

"cc.Touch:getLocation()":{
"prefix":"cc.Touch:getLocation()",
"body":["cc.Touch:getLocation()"],
"description":"getLocation()",
"scope":"source.lua"},

"cc.Touch:getDelta()":{
"prefix":"cc.Touch:getDelta()",
"body":["cc.Touch:getDelta()"],
"description":"getDelta()",
"scope":"source.lua"},

"cc.Touch:getStartLocationInView()":{
"prefix":"cc.Touch:getStartLocationInView()",
"body":["cc.Touch:getStartLocationInView()"],
"description":"getStartLocationInView()",
"scope":"source.lua"},

"cc.Touch:getCurrentForce()":{
"prefix":"cc.Touch:getCurrentForce()",
"body":["cc.Touch:getCurrentForce()"],
"description":"getCurrentForce()",
"scope":"source.lua"},

"cc.Touch:getStartLocation()":{
"prefix":"cc.Touch:getStartLocation()",
"body":["cc.Touch:getStartLocation()"],
"description":"getStartLocation()",
"scope":"source.lua"},

"cc.Touch:setTouchInfo(int_id,float_x,float_y)":{
"prefix":"cc.Touch:setTouchInfo(int_id,float_x,float_y)",
"body":["cc.Touch:setTouchInfo(int_id,float_x,float_y)"],
"description":"setTouchInfo(int_id,float_x,float_y)",
"scope":"source.lua"},

"cc.Touch:setTouchInfo(int_id,float_x,float_y,float_force,float_maxForce)":{
"prefix":"cc.Touch:setTouchInfo(int_id,float_x,float_y,float_force,float_maxForce)",
"body":["cc.Touch:setTouchInfo(int_id,float_x,float_y,float_force,float_maxForce)"],
"description":"setTouchInfo(int_id,float_x,float_y,float_force,float_maxForce)",
"scope":"source.lua"},

"cc.Touch:getMaxForce()":{
"prefix":"cc.Touch:getMaxForce()",
"body":["cc.Touch:getMaxForce()"],
"description":"getMaxForce()",
"scope":"source.lua"},

"cc.Touch:getLocationInView()":{
"prefix":"cc.Touch:getLocationInView()",
"body":["cc.Touch:getLocationInView()"],
"description":"getLocationInView()",
"scope":"source.lua"},

"cc.Touch:getPreviousLocation()":{
"prefix":"cc.Touch:getPreviousLocation()",
"body":["cc.Touch:getPreviousLocation()"],
"description":"getPreviousLocation()",
"scope":"source.lua"},

"cc.Event":{
"prefix":"cc.Event",
"body":["cc.Event"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Event:isStopped()":{
"prefix":"cc.Event:isStopped()",
"body":["cc.Event:isStopped()"],
"description":"isStopped()",
"scope":"source.lua"},

"cc.Event:getType()":{
"prefix":"cc.Event:getType()",
"body":["cc.Event:getType()"],
"description":"getType()",
"scope":"source.lua"},

"cc.Event:getCurrentTarget()":{
"prefix":"cc.Event:getCurrentTarget()",
"body":["cc.Event:getCurrentTarget()"],
"description":"getCurrentTarget()",
"scope":"source.lua"},

"cc.Event:stopPropagation()":{
"prefix":"cc.Event:stopPropagation()",
"body":["cc.Event:stopPropagation()"],
"description":"stopPropagation()",
"scope":"source.lua"},

"cc.EventTouch":{
"prefix":"cc.EventTouch",
"body":["cc.EventTouch"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventTouch:getEventCode()":{
"prefix":"cc.EventTouch:getEventCode()",
"body":["cc.EventTouch:getEventCode()"],
"description":"getEventCode()",
"scope":"source.lua"},

"cc.EventTouch:setEventCode(EventCode_eventCode)":{
"prefix":"cc.EventTouch:setEventCode(EventCode_eventCode)",
"body":["cc.EventTouch:setEventCode(EventCode_eventCode)"],
"description":"setEventCode(EventCode_eventCode)",
"scope":"source.lua"},

"cc.EventKeyboard":{
"prefix":"cc.EventKeyboard",
"body":["cc.EventKeyboard"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventKeyboard:new()":{
"prefix":"cc.EventKeyboard:new()",
"body":["cc.EventKeyboard:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.Component":{
"prefix":"cc.Component",
"body":["cc.Component"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Component:setEnabled(bool_enabled)":{
"prefix":"cc.Component:setEnabled(bool_enabled)",
"body":["cc.Component:setEnabled(bool_enabled)"],
"description":"setEnabled(bool_enabled)",
"scope":"source.lua"},

"cc.Component:onRemove()":{
"prefix":"cc.Component:onRemove()",
"body":["cc.Component:onRemove()"],
"description":"onRemove()",
"scope":"source.lua"},

"cc.Component:setName(const_std_string_name)":{
"prefix":"cc.Component:setName(const_std_string_name)",
"body":["cc.Component:setName(const_std_string_name)"],
"description":"setName(const_std_string_name)",
"scope":"source.lua"},

"cc.Component:isEnabled()":{
"prefix":"cc.Component:isEnabled()",
"body":["cc.Component:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"cc.Component:update(float_delta)":{
"prefix":"cc.Component:update(float_delta)",
"body":["cc.Component:update(float_delta)"],
"description":"update(float_delta)",
"scope":"source.lua"},

"cc.Component:getOwner()":{
"prefix":"cc.Component:getOwner()",
"body":["cc.Component:getOwner()"],
"description":"getOwner()",
"scope":"source.lua"},

"cc.Component:init()":{
"prefix":"cc.Component:init()",
"body":["cc.Component:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.Component:setOwner(Node_owner)":{
"prefix":"cc.Component:setOwner(Node_owner)",
"body":["cc.Component:setOwner(Node_owner)"],
"description":"setOwner(Node_owner)",
"scope":"source.lua"},

"cc.Component:getName()":{
"prefix":"cc.Component:getName()",
"body":["cc.Component:getName()"],
"description":"getName()",
"scope":"source.lua"},

"cc.Component:onAdd()":{
"prefix":"cc.Component:onAdd()",
"body":["cc.Component:onAdd()"],
"description":"onAdd()",
"scope":"source.lua"},

"cc.Component:create()":{
"prefix":"cc.Component:create()",
"body":["cc.Component:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Node":{
"prefix":"cc.Node",
"body":["cc.Node"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Node:addChild(Node__child)":{
"prefix":"cc.Node:addChild(Node__child)",
"body":["cc.Node:addChild(Node__child)"],
"description":"addChild(Node__child)",
"scope":"source.lua"},

"cc.Node:addChild(Node__child,int_localZOrder)":{
"prefix":"cc.Node:addChild(Node__child,int_localZOrder)",
"body":["cc.Node:addChild(Node__child,int_localZOrder)"],
"description":"addChild(Node__child,int_localZOrder)",
"scope":"source.lua"},

"cc.Node:addChild(Node_child,int_localZOrder,int_tag)":{
"prefix":"cc.Node:addChild(Node_child,int_localZOrder,int_tag)",
"body":["cc.Node:addChild(Node_child,int_localZOrder,int_tag)"],
"description":"addChild(Node_child,int_localZOrder,int_tag)",
"scope":"source.lua"},

"cc.Node:addChild(Node_child,int_localZOrder,const_std_string_name)":{
"prefix":"cc.Node:addChild(Node_child,int_localZOrder,const_std_string_name)",
"body":["cc.Node:addChild(Node_child,int_localZOrder,const_std_string_name)"],
"description":"addChild(Node_child,int_localZOrder,const_std_string_name)",
"scope":"source.lua"},

"cc.Node:getDescription()":{
"prefix":"cc.Node:getDescription()",
"body":["cc.Node:getDescription()"],
"description":"getDescription()",
"scope":"source.lua"},

"cc.Node:setRotationSkewY(float_rotationY)":{
"prefix":"cc.Node:setRotationSkewY(float_rotationY)",
"body":["cc.Node:setRotationSkewY(float_rotationY)"],
"description":"setRotationSkewY(float_rotationY)",
"scope":"source.lua"},

"cc.Node:getChildren()":{
"prefix":"cc.Node:getChildren()",
"body":["cc.Node:getChildren()"],
"description":"getChildren()",
"scope":"source.lua"},

"cc.Node:isIgnoreAnchorPointForPosition()":{
"prefix":"cc.Node:isIgnoreAnchorPointForPosition()",
"body":["cc.Node:isIgnoreAnchorPointForPosition()"],
"description":"isIgnoreAnchorPointForPosition()",
"scope":"source.lua"},

"cc.Node:getChildByName(const_std_string_name)":{
"prefix":"cc.Node:getChildByName(const_std_string_name)",
"body":["cc.Node:getChildByName(const_std_string_name)"],
"description":"getChildByName(const_std_string_name)",
"scope":"source.lua"},

"cc.Node:setRotation(float_rotation)":{
"prefix":"cc.Node:setRotation(float_rotation)",
"body":["cc.Node:setRotation(float_rotation)"],
"description":"setRotation(float_rotation)",
"scope":"source.lua"},

"cc.Node:setScaleZ(float_scaleZ)":{
"prefix":"cc.Node:setScaleZ(float_scaleZ)",
"body":["cc.Node:setScaleZ(float_scaleZ)"],
"description":"setScaleZ(float_scaleZ)",
"scope":"source.lua"},

"cc.Node:setScaleY(float_scaleY)":{
"prefix":"cc.Node:setScaleY(float_scaleY)",
"body":["cc.Node:setScaleY(float_scaleY)"],
"description":"setScaleY(float_scaleY)",
"scope":"source.lua"},

"cc.Node:setScaleX(float_scaleX)":{
"prefix":"cc.Node:setScaleX(float_scaleX)",
"body":["cc.Node:setScaleX(float_scaleX)"],
"description":"setScaleX(float_scaleX)",
"scope":"source.lua"},

"cc.Node:setRotationSkewX(float_rotationX)":{
"prefix":"cc.Node:setRotationSkewX(float_rotationX)",
"body":["cc.Node:setRotationSkewX(float_rotationX)"],
"description":"setRotationSkewX(float_rotationX)",
"scope":"source.lua"},

"cc.Node:_setLocalZOrder(int_z)":{
"prefix":"cc.Node:_setLocalZOrder(int_z)",
"body":["cc.Node:_setLocalZOrder(int_z)"],
"description":"_setLocalZOrder(int_z)",
"scope":"source.lua"},

"cc.Node:getTag()":{
"prefix":"cc.Node:getTag()",
"body":["cc.Node:getTag()"],
"description":"getTag()",
"scope":"source.lua"},

"cc.Node:getGLProgram()":{
"prefix":"cc.Node:getGLProgram()",
"body":["cc.Node:getGLProgram()"],
"description":"getGLProgram()",
"scope":"source.lua"},

"cc.Node:getPosition3D()":{
"prefix":"cc.Node:getPosition3D()",
"body":["cc.Node:getPosition3D()"],
"description":"getPosition3D()",
"scope":"source.lua"},

"cc.Node:removeChild(Node_child,bool_cleanup)":{
"prefix":"cc.Node:removeChild(Node_child,bool_cleanup)",
"body":["cc.Node:removeChild(Node_child,bool_cleanup)"],
"description":"removeChild(Node_child,bool_cleanup)",
"scope":"source.lua"},

"cc.Node:setSkewX(float_skewX)":{
"prefix":"cc.Node:setSkewX(float_skewX)",
"body":["cc.Node:setSkewX(float_skewX)"],
"description":"setSkewX(float_skewX)",
"scope":"source.lua"},

"cc.Node:setGLProgramState(GLProgramState_glProgramState)":{
"prefix":"cc.Node:setGLProgramState(GLProgramState_glProgramState)",
"body":["cc.Node:setGLProgramState(GLProgramState_glProgramState)"],
"description":"setGLProgramState(GLProgramState_glProgramState)",
"scope":"source.lua"},

"cc.Node:setNormalizedPosition(const_Vec2_position)":{
"prefix":"cc.Node:setNormalizedPosition(const_Vec2_position)",
"body":["cc.Node:setNormalizedPosition(const_Vec2_position)"],
"description":"setNormalizedPosition(const_Vec2_position)",
"scope":"source.lua"},

"cc.Node:removeAllChildren()":{
"prefix":"cc.Node:removeAllChildren()",
"body":["cc.Node:removeAllChildren()"],
"description":"removeAllChildren()",
"scope":"source.lua"},

"cc.Node:setParent(Node_parent)":{
"prefix":"cc.Node:setParent(Node_parent)",
"body":["cc.Node:setParent(Node_parent)"],
"description":"setParent(Node_parent)",
"scope":"source.lua"},

"cc.Node:getName()":{
"prefix":"cc.Node:getName()",
"body":["cc.Node:getName()"],
"description":"getName()",
"scope":"source.lua"},

"cc.Node:getRotation3D()":{
"prefix":"cc.Node:getRotation3D()",
"body":["cc.Node:getRotation3D()"],
"description":"getRotation3D()",
"scope":"source.lua"},

"cc.Node:setPositionNormalized(const_Vec2_position)":{
"prefix":"cc.Node:setPositionNormalized(const_Vec2_position)",
"body":["cc.Node:setPositionNormalized(const_Vec2_position)"],
"description":"setPositionNormalized(const_Vec2_position)",
"scope":"source.lua"},

"cc.Node:setPosition(const_Vec2_position)":{
"prefix":"cc.Node:setPosition(const_Vec2_position)",
"body":["cc.Node:setPosition(const_Vec2_position)"],
"description":"setPosition(const_Vec2_position)",
"scope":"source.lua"},

"cc.Node:setPosition(float_x,float_y)":{
"prefix":"cc.Node:setPosition(float_x,float_y)",
"body":["cc.Node:setPosition(float_x,float_y)"],
"description":"setPosition(float_x,float_y)",
"scope":"source.lua"},

"cc.Node:reorderChild(Node__child,int_localZOrder)":{
"prefix":"cc.Node:reorderChild(Node__child,int_localZOrder)",
"body":["cc.Node:reorderChild(Node__child,int_localZOrder)"],
"description":"reorderChild(Node__child,int_localZOrder)",
"scope":"source.lua"},

"cc.Node:setSkewY(float_skewY)":{
"prefix":"cc.Node:setSkewY(float_skewY)",
"body":["cc.Node:setSkewY(float_skewY)"],
"description":"setSkewY(float_skewY)",
"scope":"source.lua"},

"cc.Node:setPositionZ(float_positionZ)":{
"prefix":"cc.Node:setPositionZ(float_positionZ)",
"body":["cc.Node:setPositionZ(float_positionZ)"],
"description":"setPositionZ(float_positionZ)",
"scope":"source.lua"},

"cc.Node:setRotation3D(const_Vec3_rotation)":{
"prefix":"cc.Node:setRotation3D(const_Vec3_rotation)",
"body":["cc.Node:setRotation3D(const_Vec3_rotation)"],
"description":"setRotation3D(const_Vec3_rotation)",
"scope":"source.lua"},

"cc.Node:setPositionX(float_x)":{
"prefix":"cc.Node:setPositionX(float_x)",
"body":["cc.Node:setPositionX(float_x)"],
"description":"setPositionX(float_x)",
"scope":"source.lua"},

"cc.Node:getAnchorPoint()":{
"prefix":"cc.Node:getAnchorPoint()",
"body":["cc.Node:getAnchorPoint()"],
"description":"getAnchorPoint()",
"scope":"source.lua"},

"cc.Node:setGLProgram(GLProgram_glprogram)":{
"prefix":"cc.Node:setGLProgram(GLProgram_glprogram)",
"body":["cc.Node:setGLProgram(GLProgram_glprogram)"],
"description":"setGLProgram(GLProgram_glprogram)",
"scope":"source.lua"},

"cc.Node:isVisible()":{
"prefix":"cc.Node:isVisible()",
"body":["cc.Node:isVisible()"],
"description":"isVisible()",
"scope":"source.lua"},

"cc.Node:getChildrenCount()":{
"prefix":"cc.Node:getChildrenCount()",
"body":["cc.Node:getChildrenCount()"],
"description":"getChildrenCount()",
"scope":"source.lua"},

"cc.Node:getRotation()":{
"prefix":"cc.Node:getRotation()",
"body":["cc.Node:getRotation()"],
"description":"getRotation()",
"scope":"source.lua"},

"cc.Node:getAnchorPointInPoints()":{
"prefix":"cc.Node:getAnchorPointInPoints()",
"body":["cc.Node:getAnchorPointInPoints()"],
"description":"getAnchorPointInPoints()",
"scope":"source.lua"},

"cc.Node:removeChildByName(const_std_string_name,bool_cleanup)":{
"prefix":"cc.Node:removeChildByName(const_std_string_name,bool_cleanup)",
"body":["cc.Node:removeChildByName(const_std_string_name,bool_cleanup)"],
"description":"removeChildByName(const_std_string_name,bool_cleanup)",
"scope":"source.lua"},

"cc.Node:getGLProgramState()":{
"prefix":"cc.Node:getGLProgramState()",
"body":["cc.Node:getGLProgramState()"],
"description":"getGLProgramState()",
"scope":"source.lua"},

"cc.Node:getSkewX()":{
"prefix":"cc.Node:getSkewX()",
"body":["cc.Node:getSkewX()"],
"description":"getSkewX()",
"scope":"source.lua"},

"cc.Node:getSkewY()":{
"prefix":"cc.Node:getSkewY()",
"body":["cc.Node:getSkewY()"],
"description":"getSkewY()",
"scope":"source.lua"},

"cc.Node:setName(const_std_string_name)":{
"prefix":"cc.Node:setName(const_std_string_name)",
"body":["cc.Node:setName(const_std_string_name)"],
"description":"setName(const_std_string_name)",
"scope":"source.lua"},

"cc.Node:getLocalZOrder()":{
"prefix":"cc.Node:getLocalZOrder()",
"body":["cc.Node:getLocalZOrder()"],
"description":"getLocalZOrder()",
"scope":"source.lua"},

"cc.Node:getPositionNormalized()":{
"prefix":"cc.Node:getPositionNormalized()",
"body":["cc.Node:getPositionNormalized()"],
"description":"getPositionNormalized()",
"scope":"source.lua"},

"cc.Node:isRunning()":{
"prefix":"cc.Node:isRunning()",
"body":["cc.Node:isRunning()"],
"description":"isRunning()",
"scope":"source.lua"},

"cc.Node:getParent()":{
"prefix":"cc.Node:getParent()",
"body":["cc.Node:getParent()"],
"description":"getParent()",
"scope":"source.lua"},

"cc.Node:getPositionZ()":{
"prefix":"cc.Node:getPositionZ()",
"body":["cc.Node:getPositionZ()"],
"description":"getPositionZ()",
"scope":"source.lua"},

"cc.Node:getPositionY()":{
"prefix":"cc.Node:getPositionY()",
"body":["cc.Node:getPositionY()"],
"description":"getPositionY()",
"scope":"source.lua"},

"cc.Node:getPositionX()":{
"prefix":"cc.Node:getPositionX()",
"body":["cc.Node:getPositionX()"],
"description":"getPositionX()",
"scope":"source.lua"},

"cc.Node:removeChildByTag(int_tag,bool_cleanup)":{
"prefix":"cc.Node:removeChildByTag(int_tag,bool_cleanup)",
"body":["cc.Node:removeChildByTag(int_tag,bool_cleanup)"],
"description":"removeChildByTag(int_tag,bool_cleanup)",
"scope":"source.lua"},

"cc.Node:setPositionY(float_y)":{
"prefix":"cc.Node:setPositionY(float_y)",
"body":["cc.Node:setPositionY(float_y)"],
"description":"setPositionY(float_y)",
"scope":"source.lua"},

"cc.Node:setVisible(bool_visible)":{
"prefix":"cc.Node:setVisible(bool_visible)",
"body":["cc.Node:setVisible(bool_visible)"],
"description":"setVisible(bool_visible)",
"scope":"source.lua"},

"cc.Node:setGlobalZOrder(float_globalZOrder)":{
"prefix":"cc.Node:setGlobalZOrder(float_globalZOrder)",
"body":["cc.Node:setGlobalZOrder(float_globalZOrder)"],
"description":"setGlobalZOrder(float_globalZOrder)",
"scope":"source.lua"},

"cc.Node:setScale(float_scale)":{
"prefix":"cc.Node:setScale(float_scale)",
"body":["cc.Node:setScale(float_scale)"],
"description":"setScale(float_scale)",
"scope":"source.lua"},

"cc.Node:setScale(float_scaleX,float_scaleY)":{
"prefix":"cc.Node:setScale(float_scaleX,float_scaleY)",
"body":["cc.Node:setScale(float_scaleX,float_scaleY)"],
"description":"setScale(float_scaleX,float_scaleY)",
"scope":"source.lua"},

"cc.Node:getChildByTag(int_tag)":{
"prefix":"cc.Node:getChildByTag(int_tag)",
"body":["cc.Node:getChildByTag(int_tag)"],
"description":"getChildByTag(int_tag)",
"scope":"source.lua"},

"cc.Node:getScaleZ()":{
"prefix":"cc.Node:getScaleZ()",
"body":["cc.Node:getScaleZ()"],
"description":"getScaleZ()",
"scope":"source.lua"},

"cc.Node:getScaleY()":{
"prefix":"cc.Node:getScaleY()",
"body":["cc.Node:getScaleY()"],
"description":"getScaleY()",
"scope":"source.lua"},

"cc.Node:getScaleX()":{
"prefix":"cc.Node:getScaleX()",
"body":["cc.Node:getScaleX()"],
"description":"getScaleX()",
"scope":"source.lua"},

"cc.Node:setLocalZOrder(int_localZOrder)":{
"prefix":"cc.Node:setLocalZOrder(int_localZOrder)",
"body":["cc.Node:setLocalZOrder(int_localZOrder)"],
"description":"setLocalZOrder(int_localZOrder)",
"scope":"source.lua"},

"cc.Node:getContentSize()":{
"prefix":"cc.Node:getContentSize()",
"body":["cc.Node:getContentSize()"],
"description":"getContentSize()",
"scope":"source.lua"},

"cc.Node:setIgnoreAnchorPointForPosition(bool_ignore)":{
"prefix":"cc.Node:setIgnoreAnchorPointForPosition(bool_ignore)",
"body":["cc.Node:setIgnoreAnchorPointForPosition(bool_ignore)"],
"description":"setIgnoreAnchorPointForPosition(bool_ignore)",
"scope":"source.lua"},

"cc.Node:getGlobalZOrder()":{
"prefix":"cc.Node:getGlobalZOrder()",
"body":["cc.Node:getGlobalZOrder()"],
"description":"getGlobalZOrder()",
"scope":"source.lua"},

"cc.Node:setUserObject(Ref_userObject)":{
"prefix":"cc.Node:setUserObject(Ref_userObject)",
"body":["cc.Node:setUserObject(Ref_userObject)"],
"description":"setUserObject(Ref_userObject)",
"scope":"source.lua"},

"cc.Node:removeFromParent()":{
"prefix":"cc.Node:removeFromParent()",
"body":["cc.Node:removeFromParent()"],
"description":"removeFromParent()",
"scope":"source.lua"},

"cc.Node:setPosition3D(const_Vec3_position)":{
"prefix":"cc.Node:setPosition3D(const_Vec3_position)",
"body":["cc.Node:setPosition3D(const_Vec3_position)"],
"description":"setPosition3D(const_Vec3_position)",
"scope":"source.lua"},

"cc.Node:sortAllChildren()":{
"prefix":"cc.Node:sortAllChildren()",
"body":["cc.Node:sortAllChildren()"],
"description":"sortAllChildren()",
"scope":"source.lua"},

"cc.Node:getScale()":{
"prefix":"cc.Node:getScale()",
"body":["cc.Node:getScale()"],
"description":"getScale()",
"scope":"source.lua"},

"cc.Node:updateOrderOfArrival()":{
"prefix":"cc.Node:updateOrderOfArrival()",
"body":["cc.Node:updateOrderOfArrival()"],
"description":"updateOrderOfArrival()",
"scope":"source.lua"},

"cc.Node:getNormalizedPosition()":{
"prefix":"cc.Node:getNormalizedPosition()",
"body":["cc.Node:getNormalizedPosition()"],
"description":"getNormalizedPosition()",
"scope":"source.lua"},

"cc.Node:getRotationSkewX()":{
"prefix":"cc.Node:getRotationSkewX()",
"body":["cc.Node:getRotationSkewX()"],
"description":"getRotationSkewX()",
"scope":"source.lua"},

"cc.Node:getRotationSkewY()":{
"prefix":"cc.Node:getRotationSkewY()",
"body":["cc.Node:getRotationSkewY()"],
"description":"getRotationSkewY()",
"scope":"source.lua"},

"cc.Node:setTag(int_tag)":{
"prefix":"cc.Node:setTag(int_tag)",
"body":["cc.Node:setTag(int_tag)"],
"description":"setTag(int_tag)",
"scope":"source.lua"},

"cc.Node:create()":{
"prefix":"cc.Node:create()",
"body":["cc.Node:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Node:getAttachedNodeCount()":{
"prefix":"cc.Node:getAttachedNodeCount()",
"body":["cc.Node:getAttachedNodeCount()"],
"description":"getAttachedNodeCount()",
"scope":"source.lua"},

"cc.Scene":{
"prefix":"cc.Scene",
"body":["cc.Scene"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Scene:initWithPhysics()":{
"prefix":"cc.Scene:initWithPhysics()",
"body":["cc.Scene:initWithPhysics()"],
"description":"initWithPhysics()",
"scope":"source.lua"},

"cc.Scene:setCameraOrderDirty()":{
"prefix":"cc.Scene:setCameraOrderDirty()",
"body":["cc.Scene:setCameraOrderDirty()"],
"description":"setCameraOrderDirty()",
"scope":"source.lua"},

"cc.Scene:render(Renderer_renderer,const_Mat4_eyeTransform,const_Mat4_eyeProjection)":{
"prefix":"cc.Scene:render(Renderer_renderer,const_Mat4_eyeTransform,const_Mat4_eyeProjection)",
"body":["cc.Scene:render(Renderer_renderer,const_Mat4_eyeTransform,const_Mat4_eyeProjection)"],
"description":"render(Renderer_renderer,const_Mat4_eyeTransform,const_Mat4_eyeProjection)",
"scope":"source.lua"},

"cc.Scene:render(Renderer_renderer,const_Mat4_eyeTransforms,const_Mat4_eyeProjections,unsigned_int_multiViewCount)":{
"prefix":"cc.Scene:render(Renderer_renderer,const_Mat4_eyeTransforms,const_Mat4_eyeProjections,unsigned_int_multiViewCount)",
"body":["cc.Scene:render(Renderer_renderer,const_Mat4_eyeTransforms,const_Mat4_eyeProjections,unsigned_int_multiViewCount)"],
"description":"render(Renderer_renderer,const_Mat4_eyeTransforms,const_Mat4_eyeProjections,unsigned_int_multiViewCount)",
"scope":"source.lua"},

"cc.Scene:stepPhysicsAndNavigation(float_deltaTime)":{
"prefix":"cc.Scene:stepPhysicsAndNavigation(float_deltaTime)",
"body":["cc.Scene:stepPhysicsAndNavigation(float_deltaTime)"],
"description":"stepPhysicsAndNavigation(float_deltaTime)",
"scope":"source.lua"},

"cc.Scene:onProjectionChanged(EventCustom_event)":{
"prefix":"cc.Scene:onProjectionChanged(EventCustom_event)",
"body":["cc.Scene:onProjectionChanged(EventCustom_event)"],
"description":"onProjectionChanged(EventCustom_event)",
"scope":"source.lua"},

"cc.Scene:getPhysicsWorld()":{
"prefix":"cc.Scene:getPhysicsWorld()",
"body":["cc.Scene:getPhysicsWorld()"],
"description":"getPhysicsWorld()",
"scope":"source.lua"},

"cc.Scene:initWithSize(const_Size_size)":{
"prefix":"cc.Scene:initWithSize(const_Size_size)",
"body":["cc.Scene:initWithSize(const_Size_size)"],
"description":"initWithSize(const_Size_size)",
"scope":"source.lua"},

"cc.Scene:getDefaultCamera()":{
"prefix":"cc.Scene:getDefaultCamera()",
"body":["cc.Scene:getDefaultCamera()"],
"description":"getDefaultCamera()",
"scope":"source.lua"},

"cc.Scene:createWithSize(const_Size_size)":{
"prefix":"cc.Scene:createWithSize(const_Size_size)",
"body":["cc.Scene:createWithSize(const_Size_size)"],
"description":"createWithSize(const_Size_size)",
"scope":"source.lua"},

"cc.Scene:create()":{
"prefix":"cc.Scene:create()",
"body":["cc.Scene:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Scene:createWithPhysics()":{
"prefix":"cc.Scene:createWithPhysics()",
"body":["cc.Scene:createWithPhysics()"],
"description":"createWithPhysics()",
"scope":"source.lua"},

"cc.GLView":{
"prefix":"cc.GLView",
"body":["cc.GLView"],
"description":"cocos class",
"scope":"source.lua"},

"cc.GLView:setFrameSize(float_width,float_height)":{
"prefix":"cc.GLView:setFrameSize(float_width,float_height)",
"body":["cc.GLView:setFrameSize(float_width,float_height)"],
"description":"setFrameSize(float_width,float_height)",
"scope":"source.lua"},

"cc.GLView:getViewPortRect()":{
"prefix":"cc.GLView:getViewPortRect()",
"body":["cc.GLView:getViewPortRect()"],
"description":"getViewPortRect()",
"scope":"source.lua"},

"cc.GLView:setContentScaleFactor(float_scaleFactor)":{
"prefix":"cc.GLView:setContentScaleFactor(float_scaleFactor)",
"body":["cc.GLView:setContentScaleFactor(float_scaleFactor)"],
"description":"setContentScaleFactor(float_scaleFactor)",
"scope":"source.lua"},

"cc.GLView:getContentScaleFactor()":{
"prefix":"cc.GLView:getContentScaleFactor()",
"body":["cc.GLView:getContentScaleFactor()"],
"description":"getContentScaleFactor()",
"scope":"source.lua"},

"cc.GLView:setIMEKeyboardState(bool_open)":{
"prefix":"cc.GLView:setIMEKeyboardState(bool_open)",
"body":["cc.GLView:setIMEKeyboardState(bool_open)"],
"description":"setIMEKeyboardState(bool_open)",
"scope":"source.lua"},

"cc.GLView:getVR()":{
"prefix":"cc.GLView:getVR()",
"body":["cc.GLView:getVR()"],
"description":"getVR()",
"scope":"source.lua"},

"cc.GLView:setScissorInPoints(float_x,float_y,float_w,float_h)":{
"prefix":"cc.GLView:setScissorInPoints(float_x,float_y,float_w,float_h)",
"body":["cc.GLView:setScissorInPoints(float_x,float_y,float_w,float_h)"],
"description":"setScissorInPoints(float_x,float_y,float_w,float_h)",
"scope":"source.lua"},

"cc.GLView:getViewName()":{
"prefix":"cc.GLView:getViewName()",
"body":["cc.GLView:getViewName()"],
"description":"getViewName()",
"scope":"source.lua"},

"cc.GLView:isOpenGLReady()":{
"prefix":"cc.GLView:isOpenGLReady()",
"body":["cc.GLView:isOpenGLReady()"],
"description":"isOpenGLReady()",
"scope":"source.lua"},

"cc.GLView:setCursorVisible(bool_isVisible)":{
"prefix":"cc.GLView:setCursorVisible(bool_isVisible)",
"body":["cc.GLView:setCursorVisible(bool_isVisible)"],
"description":"setCursorVisible(bool_isVisible)",
"scope":"source.lua"},

"cc.GLView:getFrameSize()":{
"prefix":"cc.GLView:getFrameSize()",
"body":["cc.GLView:getFrameSize()"],
"description":"getFrameSize()",
"scope":"source.lua"},

"cc.GLView:getScaleY()":{
"prefix":"cc.GLView:getScaleY()",
"body":["cc.GLView:getScaleY()"],
"description":"getScaleY()",
"scope":"source.lua"},

"cc.GLView:getScaleX()":{
"prefix":"cc.GLView:getScaleX()",
"body":["cc.GLView:getScaleX()"],
"description":"getScaleX()",
"scope":"source.lua"},

"cc.GLView:getVisibleOrigin()":{
"prefix":"cc.GLView:getVisibleOrigin()",
"body":["cc.GLView:getVisibleOrigin()"],
"description":"getVisibleOrigin()",
"scope":"source.lua"},

"cc.GLView:setFrameZoomFactor(float_zoomFactor)":{
"prefix":"cc.GLView:setFrameZoomFactor(float_zoomFactor)",
"body":["cc.GLView:setFrameZoomFactor(float_zoomFactor)"],
"description":"setFrameZoomFactor(float_zoomFactor)",
"scope":"source.lua"},

"cc.GLView:getFrameZoomFactor()":{
"prefix":"cc.GLView:getFrameZoomFactor()",
"body":["cc.GLView:getFrameZoomFactor()"],
"description":"getFrameZoomFactor()",
"scope":"source.lua"},

"cc.GLView:getDesignResolutionSize()":{
"prefix":"cc.GLView:getDesignResolutionSize()",
"body":["cc.GLView:getDesignResolutionSize()"],
"description":"getDesignResolutionSize()",
"scope":"source.lua"},

"cc.GLView:windowShouldClose()":{
"prefix":"cc.GLView:windowShouldClose()",
"body":["cc.GLView:windowShouldClose()"],
"description":"windowShouldClose()",
"scope":"source.lua"},

"cc.GLView:swapBuffers()":{
"prefix":"cc.GLView:swapBuffers()",
"body":["cc.GLView:swapBuffers()"],
"description":"swapBuffers()",
"scope":"source.lua"},

"cc.GLView:setDesignResolutionSize(float_width,float_height,ResolutionPolicy_resolutionPolicy)":{
"prefix":"cc.GLView:setDesignResolutionSize(float_width,float_height,ResolutionPolicy_resolutionPolicy)",
"body":["cc.GLView:setDesignResolutionSize(float_width,float_height,ResolutionPolicy_resolutionPolicy)"],
"description":"setDesignResolutionSize(float_width,float_height,ResolutionPolicy_resolutionPolicy)",
"scope":"source.lua"},

"cc.GLView:getResolutionPolicy()":{
"prefix":"cc.GLView:getResolutionPolicy()",
"body":["cc.GLView:getResolutionPolicy()"],
"description":"getResolutionPolicy()",
"scope":"source.lua"},

"cc.GLView:isRetinaDisplay()":{
"prefix":"cc.GLView:isRetinaDisplay()",
"body":["cc.GLView:isRetinaDisplay()"],
"description":"isRetinaDisplay()",
"scope":"source.lua"},

"cc.GLView:renderScene(Scene_scene,Renderer_renderer)":{
"prefix":"cc.GLView:renderScene(Scene_scene,Renderer_renderer)",
"body":["cc.GLView:renderScene(Scene_scene,Renderer_renderer)"],
"description":"renderScene(Scene_scene,Renderer_renderer)",
"scope":"source.lua"},

"cc.GLView:setVR(VRIRenderer_vrrenderer)":{
"prefix":"cc.GLView:setVR(VRIRenderer_vrrenderer)",
"body":["cc.GLView:setVR(VRIRenderer_vrrenderer)"],
"description":"setVR(VRIRenderer_vrrenderer)",
"scope":"source.lua"},

"cc.GLView:setViewPortInPoints(float_x,float_y,float_w,float_h)":{
"prefix":"cc.GLView:setViewPortInPoints(float_x,float_y,float_w,float_h)",
"body":["cc.GLView:setViewPortInPoints(float_x,float_y,float_w,float_h)"],
"description":"setViewPortInPoints(float_x,float_y,float_w,float_h)",
"scope":"source.lua"},

"cc.GLView:getScissorRect()":{
"prefix":"cc.GLView:getScissorRect()",
"body":["cc.GLView:getScissorRect()"],
"description":"getScissorRect()",
"scope":"source.lua"},

"cc.GLView:getRetinaFactor()":{
"prefix":"cc.GLView:getRetinaFactor()",
"body":["cc.GLView:getRetinaFactor()"],
"description":"getRetinaFactor()",
"scope":"source.lua"},

"cc.GLView:setViewName(const_std_string_viewname)":{
"prefix":"cc.GLView:setViewName(const_std_string_viewname)",
"body":["cc.GLView:setViewName(const_std_string_viewname)"],
"description":"setViewName(const_std_string_viewname)",
"scope":"source.lua"},

"cc.GLView:getVisibleRect()":{
"prefix":"cc.GLView:getVisibleRect()",
"body":["cc.GLView:getVisibleRect()"],
"description":"getVisibleRect()",
"scope":"source.lua"},

"cc.GLView:getVisibleSize()":{
"prefix":"cc.GLView:getVisibleSize()",
"body":["cc.GLView:getVisibleSize()"],
"description":"getVisibleSize()",
"scope":"source.lua"},

"cc.GLView:isScissorEnabled()":{
"prefix":"cc.GLView:isScissorEnabled()",
"body":["cc.GLView:isScissorEnabled()"],
"description":"isScissorEnabled()",
"scope":"source.lua"},

"cc.GLView:pollEvents()":{
"prefix":"cc.GLView:pollEvents()",
"body":["cc.GLView:pollEvents()"],
"description":"pollEvents()",
"scope":"source.lua"},

"cc.GLView:setGLContextAttrs(GLContextAttrs_glContextAttrs)":{
"prefix":"cc.GLView:setGLContextAttrs(GLContextAttrs_glContextAttrs)",
"body":["cc.GLView:setGLContextAttrs(GLContextAttrs_glContextAttrs)"],
"description":"setGLContextAttrs(GLContextAttrs_glContextAttrs)",
"scope":"source.lua"},

"cc.GLView:getGLContextAttrs()":{
"prefix":"cc.GLView:getGLContextAttrs()",
"body":["cc.GLView:getGLContextAttrs()"],
"description":"getGLContextAttrs()",
"scope":"source.lua"},

"cc.Director":{
"prefix":"cc.Director",
"body":["cc.Director"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Director:pause()":{
"prefix":"cc.Director:pause()",
"body":["cc.Director:pause()"],
"description":"pause()",
"scope":"source.lua"},

"cc.Director:pushProjectionMatrix(size_t_index)":{
"prefix":"cc.Director:pushProjectionMatrix(size_t_index)",
"body":["cc.Director:pushProjectionMatrix(size_t_index)"],
"description":"pushProjectionMatrix(size_t_index)",
"scope":"source.lua"},

"cc.Director:popProjectionMatrix(size_t_index)":{
"prefix":"cc.Director:popProjectionMatrix(size_t_index)",
"body":["cc.Director:popProjectionMatrix(size_t_index)"],
"description":"popProjectionMatrix(size_t_index)",
"scope":"source.lua"},

"cc.Director:setEventDispatcher(EventDispatcher_dispatcher)":{
"prefix":"cc.Director:setEventDispatcher(EventDispatcher_dispatcher)",
"body":["cc.Director:setEventDispatcher(EventDispatcher_dispatcher)"],
"description":"setEventDispatcher(EventDispatcher_dispatcher)",
"scope":"source.lua"},

"cc.Director:loadProjectionIdentityMatrix(size_t_index)":{
"prefix":"cc.Director:loadProjectionIdentityMatrix(size_t_index)",
"body":["cc.Director:loadProjectionIdentityMatrix(size_t_index)"],
"description":"loadProjectionIdentityMatrix(size_t_index)",
"scope":"source.lua"},

"cc.Director:setContentScaleFactor(float_scaleFactor)":{
"prefix":"cc.Director:setContentScaleFactor(float_scaleFactor)",
"body":["cc.Director:setContentScaleFactor(float_scaleFactor)"],
"description":"setContentScaleFactor(float_scaleFactor)",
"scope":"source.lua"},

"cc.Director:getContentScaleFactor()":{
"prefix":"cc.Director:getContentScaleFactor()",
"body":["cc.Director:getContentScaleFactor()"],
"description":"getContentScaleFactor()",
"scope":"source.lua"},

"cc.Director:getWinSizeInPixels()":{
"prefix":"cc.Director:getWinSizeInPixels()",
"body":["cc.Director:getWinSizeInPixels()"],
"description":"getWinSizeInPixels()",
"scope":"source.lua"},

"cc.Director:getDeltaTime()":{
"prefix":"cc.Director:getDeltaTime()",
"body":["cc.Director:getDeltaTime()"],
"description":"getDeltaTime()",
"scope":"source.lua"},

"cc.Director:setGLDefaultValues()":{
"prefix":"cc.Director:setGLDefaultValues()",
"body":["cc.Director:setGLDefaultValues()"],
"description":"setGLDefaultValues()",
"scope":"source.lua"},

"cc.Director:setActionManager(ActionManager_actionManager)":{
"prefix":"cc.Director:setActionManager(ActionManager_actionManager)",
"body":["cc.Director:setActionManager(ActionManager_actionManager)"],
"description":"setActionManager(ActionManager_actionManager)",
"scope":"source.lua"},

"cc.Director:setAlphaBlending(bool_on)":{
"prefix":"cc.Director:setAlphaBlending(bool_on)",
"body":["cc.Director:setAlphaBlending(bool_on)"],
"description":"setAlphaBlending(bool_on)",
"scope":"source.lua"},

"cc.Director:popToRootScene()":{
"prefix":"cc.Director:popToRootScene()",
"body":["cc.Director:popToRootScene()"],
"description":"popToRootScene()",
"scope":"source.lua"},

"cc.Director:loadMatrix(MATRIX_STACK_TYPE_type,const_Mat4_mat)":{
"prefix":"cc.Director:loadMatrix(MATRIX_STACK_TYPE_type,const_Mat4_mat)",
"body":["cc.Director:loadMatrix(MATRIX_STACK_TYPE_type,const_Mat4_mat)"],
"description":"loadMatrix(MATRIX_STACK_TYPE_type,const_Mat4_mat)",
"scope":"source.lua"},

"cc.Director:getNotificationNode()":{
"prefix":"cc.Director:getNotificationNode()",
"body":["cc.Director:getNotificationNode()"],
"description":"getNotificationNode()",
"scope":"source.lua"},

"cc.Director:getWinSize()":{
"prefix":"cc.Director:getWinSize()",
"body":["cc.Director:getWinSize()"],
"description":"getWinSize()",
"scope":"source.lua"},

"cc.Director:getTextureCache()":{
"prefix":"cc.Director:getTextureCache()",
"body":["cc.Director:getTextureCache()"],
"description":"getTextureCache()",
"scope":"source.lua"},

"cc.Director:isSendCleanupToScene()":{
"prefix":"cc.Director:isSendCleanupToScene()",
"body":["cc.Director:isSendCleanupToScene()"],
"description":"isSendCleanupToScene()",
"scope":"source.lua"},

"cc.Director:getVisibleOrigin()":{
"prefix":"cc.Director:getVisibleOrigin()",
"body":["cc.Director:getVisibleOrigin()"],
"description":"getVisibleOrigin()",
"scope":"source.lua"},

"cc.Director:mainLoop()":{
"prefix":"cc.Director:mainLoop()",
"body":["cc.Director:mainLoop()"],
"description":"mainLoop()",
"scope":"source.lua"},

"cc.Director:mainLoop(float_dt)":{
"prefix":"cc.Director:mainLoop(float_dt)",
"body":["cc.Director:mainLoop(float_dt)"],
"description":"mainLoop(float_dt)",
"scope":"source.lua"},

"cc.Director:setDepthTest(bool_on)":{
"prefix":"cc.Director:setDepthTest(bool_on)",
"body":["cc.Director:setDepthTest(bool_on)"],
"description":"setDepthTest(bool_on)",
"scope":"source.lua"},

"cc.Director:getFrameRate()":{
"prefix":"cc.Director:getFrameRate()",
"body":["cc.Director:getFrameRate()"],
"description":"getFrameRate()",
"scope":"source.lua"},

"cc.Director:getSecondsPerFrame()":{
"prefix":"cc.Director:getSecondsPerFrame()",
"body":["cc.Director:getSecondsPerFrame()"],
"description":"getSecondsPerFrame()",
"scope":"source.lua"},

"cc.Director:resetMatrixStack()":{
"prefix":"cc.Director:resetMatrixStack()",
"body":["cc.Director:resetMatrixStack()"],
"description":"resetMatrixStack()",
"scope":"source.lua"},

"cc.Director:convertToUI(const_Vec2_point)":{
"prefix":"cc.Director:convertToUI(const_Vec2_point)",
"body":["cc.Director:convertToUI(const_Vec2_point)"],
"description":"convertToUI(const_Vec2_point)",
"scope":"source.lua"},

"cc.Director:pushMatrix(MATRIX_STACK_TYPE_type)":{
"prefix":"cc.Director:pushMatrix(MATRIX_STACK_TYPE_type)",
"body":["cc.Director:pushMatrix(MATRIX_STACK_TYPE_type)"],
"description":"pushMatrix(MATRIX_STACK_TYPE_type)",
"scope":"source.lua"},

"cc.Director:setDefaultValues()":{
"prefix":"cc.Director:setDefaultValues()",
"body":["cc.Director:setDefaultValues()"],
"description":"setDefaultValues()",
"scope":"source.lua"},

"cc.Director:init()":{
"prefix":"cc.Director:init()",
"body":["cc.Director:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.Director:setScheduler(Scheduler_scheduler)":{
"prefix":"cc.Director:setScheduler(Scheduler_scheduler)",
"body":["cc.Director:setScheduler(Scheduler_scheduler)"],
"description":"setScheduler(Scheduler_scheduler)",
"scope":"source.lua"},

"cc.Director:multiplyProjectionMatrix(const_Mat4_mat,size_t_index)":{
"prefix":"cc.Director:multiplyProjectionMatrix(const_Mat4_mat,size_t_index)",
"body":["cc.Director:multiplyProjectionMatrix(const_Mat4_mat,size_t_index)"],
"description":"multiplyProjectionMatrix(const_Mat4_mat,size_t_index)",
"scope":"source.lua"},

"cc.Director:getMatrix(MATRIX_STACK_TYPE_type)":{
"prefix":"cc.Director:getMatrix(MATRIX_STACK_TYPE_type)",
"body":["cc.Director:getMatrix(MATRIX_STACK_TYPE_type)"],
"description":"getMatrix(MATRIX_STACK_TYPE_type)",
"scope":"source.lua"},

"cc.Director:isValid()":{
"prefix":"cc.Director:isValid()",
"body":["cc.Director:isValid()"],
"description":"isValid()",
"scope":"source.lua"},

"cc.Director:startAnimation()":{
"prefix":"cc.Director:startAnimation()",
"body":["cc.Director:startAnimation()"],
"description":"startAnimation()",
"scope":"source.lua"},

"cc.Director:startAnimation(SetIntervalReason_reason)":{
"prefix":"cc.Director:startAnimation(SetIntervalReason_reason)",
"body":["cc.Director:startAnimation(SetIntervalReason_reason)"],
"description":"startAnimation(SetIntervalReason_reason)",
"scope":"source.lua"},

"cc.Director:getOpenGLView()":{
"prefix":"cc.Director:getOpenGLView()",
"body":["cc.Director:getOpenGLView()"],
"description":"getOpenGLView()",
"scope":"source.lua"},

"cc.Director:getRunningScene()":{
"prefix":"cc.Director:getRunningScene()",
"body":["cc.Director:getRunningScene()"],
"description":"getRunningScene()",
"scope":"source.lua"},

"cc.Director:setViewport()":{
"prefix":"cc.Director:setViewport()",
"body":["cc.Director:setViewport()"],
"description":"setViewport()",
"scope":"source.lua"},

"cc.Director:stopAnimation()":{
"prefix":"cc.Director:stopAnimation()",
"body":["cc.Director:stopAnimation()"],
"description":"stopAnimation()",
"scope":"source.lua"},

"cc.Director:popToSceneStackLevel(int_level)":{
"prefix":"cc.Director:popToSceneStackLevel(int_level)",
"body":["cc.Director:popToSceneStackLevel(int_level)"],
"description":"popToSceneStackLevel(int_level)",
"scope":"source.lua"},

"cc.Director:resume()":{
"prefix":"cc.Director:resume()",
"body":["cc.Director:resume()"],
"description":"resume()",
"scope":"source.lua"},

"cc.Director:isNextDeltaTimeZero()":{
"prefix":"cc.Director:isNextDeltaTimeZero()",
"body":["cc.Director:isNextDeltaTimeZero()"],
"description":"isNextDeltaTimeZero()",
"scope":"source.lua"},

"cc.Director:setClearColor(const_Color4F_clearColor)":{
"prefix":"cc.Director:setClearColor(const_Color4F_clearColor)",
"body":["cc.Director:setClearColor(const_Color4F_clearColor)"],
"description":"setClearColor(const_Color4F_clearColor)",
"scope":"source.lua"},

"cc.Director:setOpenGLView(GLView_openGLView)":{
"prefix":"cc.Director:setOpenGLView(GLView_openGLView)",
"body":["cc.Director:setOpenGLView(GLView_openGLView)"],
"description":"setOpenGLView(GLView_openGLView)",
"scope":"source.lua"},

"cc.Director:convertToGL(const_Vec2_point)":{
"prefix":"cc.Director:convertToGL(const_Vec2_point)",
"body":["cc.Director:convertToGL(const_Vec2_point)"],
"description":"convertToGL(const_Vec2_point)",
"scope":"source.lua"},

"cc.Director:purgeCachedData()":{
"prefix":"cc.Director:purgeCachedData()",
"body":["cc.Director:purgeCachedData()"],
"description":"purgeCachedData()",
"scope":"source.lua"},

"cc.Director:getTotalFrames()":{
"prefix":"cc.Director:getTotalFrames()",
"body":["cc.Director:getTotalFrames()"],
"description":"getTotalFrames()",
"scope":"source.lua"},

"cc.Director:runWithScene(Scene_scene)":{
"prefix":"cc.Director:runWithScene(Scene_scene)",
"body":["cc.Director:runWithScene(Scene_scene)"],
"description":"runWithScene(Scene_scene)",
"scope":"source.lua"},

"cc.Director:setNotificationNode(Node_node)":{
"prefix":"cc.Director:setNotificationNode(Node_node)",
"body":["cc.Director:setNotificationNode(Node_node)"],
"description":"setNotificationNode(Node_node)",
"scope":"source.lua"},

"cc.Director:drawScene()":{
"prefix":"cc.Director:drawScene()",
"body":["cc.Director:drawScene()"],
"description":"drawScene()",
"scope":"source.lua"},

"cc.Director:restart()":{
"prefix":"cc.Director:restart()",
"body":["cc.Director:restart()"],
"description":"restart()",
"scope":"source.lua"},

"cc.Director:popScene()":{
"prefix":"cc.Director:popScene()",
"body":["cc.Director:popScene()"],
"description":"popScene()",
"scope":"source.lua"},

"cc.Director:loadIdentityMatrix(MATRIX_STACK_TYPE_type)":{
"prefix":"cc.Director:loadIdentityMatrix(MATRIX_STACK_TYPE_type)",
"body":["cc.Director:loadIdentityMatrix(MATRIX_STACK_TYPE_type)"],
"description":"loadIdentityMatrix(MATRIX_STACK_TYPE_type)",
"scope":"source.lua"},

"cc.Director:isDisplayStats()":{
"prefix":"cc.Director:isDisplayStats()",
"body":["cc.Director:isDisplayStats()"],
"description":"isDisplayStats()",
"scope":"source.lua"},

"cc.Director:setProjection(Projection_projection)":{
"prefix":"cc.Director:setProjection(Projection_projection)",
"body":["cc.Director:setProjection(Projection_projection)"],
"description":"setProjection(Projection_projection)",
"scope":"source.lua"},

"cc.Director:getConsole()":{
"prefix":"cc.Director:getConsole()",
"body":["cc.Director:getConsole()"],
"description":"getConsole()",
"scope":"source.lua"},

"cc.Director:multiplyMatrix(MATRIX_STACK_TYPE_type,const_Mat4_mat)":{
"prefix":"cc.Director:multiplyMatrix(MATRIX_STACK_TYPE_type,const_Mat4_mat)",
"body":["cc.Director:multiplyMatrix(MATRIX_STACK_TYPE_type,const_Mat4_mat)"],
"description":"multiplyMatrix(MATRIX_STACK_TYPE_type,const_Mat4_mat)",
"scope":"source.lua"},

"cc.Director:getZEye()":{
"prefix":"cc.Director:getZEye()",
"body":["cc.Director:getZEye()"],
"description":"getZEye()",
"scope":"source.lua"},

"cc.Director:setNextDeltaTimeZero(bool_nextDeltaTimeZero)":{
"prefix":"cc.Director:setNextDeltaTimeZero(bool_nextDeltaTimeZero)",
"body":["cc.Director:setNextDeltaTimeZero(bool_nextDeltaTimeZero)"],
"description":"setNextDeltaTimeZero(bool_nextDeltaTimeZero)",
"scope":"source.lua"},

"cc.Director:popMatrix(MATRIX_STACK_TYPE_type)":{
"prefix":"cc.Director:popMatrix(MATRIX_STACK_TYPE_type)",
"body":["cc.Director:popMatrix(MATRIX_STACK_TYPE_type)"],
"description":"popMatrix(MATRIX_STACK_TYPE_type)",
"scope":"source.lua"},

"cc.Director:getVisibleSize()":{
"prefix":"cc.Director:getVisibleSize()",
"body":["cc.Director:getVisibleSize()"],
"description":"getVisibleSize()",
"scope":"source.lua"},

"cc.Director:loadProjectionMatrix(const_Mat4_mat,size_t_index)":{
"prefix":"cc.Director:loadProjectionMatrix(const_Mat4_mat,size_t_index)",
"body":["cc.Director:loadProjectionMatrix(const_Mat4_mat,size_t_index)"],
"description":"loadProjectionMatrix(const_Mat4_mat,size_t_index)",
"scope":"source.lua"},

"cc.Director:initProjectionMatrixStack(size_t_stackCount)":{
"prefix":"cc.Director:initProjectionMatrixStack(size_t_stackCount)",
"body":["cc.Director:initProjectionMatrixStack(size_t_stackCount)"],
"description":"initProjectionMatrixStack(size_t_stackCount)",
"scope":"source.lua"},

"cc.Director:getScheduler()":{
"prefix":"cc.Director:getScheduler()",
"body":["cc.Director:getScheduler()"],
"description":"getScheduler()",
"scope":"source.lua"},

"cc.Director:pushScene(Scene_scene)":{
"prefix":"cc.Director:pushScene(Scene_scene)",
"body":["cc.Director:pushScene(Scene_scene)"],
"description":"pushScene(Scene_scene)",
"scope":"source.lua"},

"cc.Director:getAnimationInterval()":{
"prefix":"cc.Director:getAnimationInterval()",
"body":["cc.Director:getAnimationInterval()"],
"description":"getAnimationInterval()",
"scope":"source.lua"},

"cc.Director:isPaused()":{
"prefix":"cc.Director:isPaused()",
"body":["cc.Director:isPaused()"],
"description":"isPaused()",
"scope":"source.lua"},

"cc.Director:setDisplayStats(bool_displayStats)":{
"prefix":"cc.Director:setDisplayStats(bool_displayStats)",
"body":["cc.Director:setDisplayStats(bool_displayStats)"],
"description":"setDisplayStats(bool_displayStats)",
"scope":"source.lua"},

"cc.Director:getEventDispatcher()":{
"prefix":"cc.Director:getEventDispatcher()",
"body":["cc.Director:getEventDispatcher()"],
"description":"getEventDispatcher()",
"scope":"source.lua"},

"cc.Director:replaceScene(Scene_scene)":{
"prefix":"cc.Director:replaceScene(Scene_scene)",
"body":["cc.Director:replaceScene(Scene_scene)"],
"description":"replaceScene(Scene_scene)",
"scope":"source.lua"},

"cc.Director:setAnimationInterval(float_interval)":{
"prefix":"cc.Director:setAnimationInterval(float_interval)",
"body":["cc.Director:setAnimationInterval(float_interval)"],
"description":"setAnimationInterval(float_interval)",
"scope":"source.lua"},

"cc.Director:setAnimationInterval(float_interval,SetIntervalReason_reason)":{
"prefix":"cc.Director:setAnimationInterval(float_interval,SetIntervalReason_reason)",
"body":["cc.Director:setAnimationInterval(float_interval,SetIntervalReason_reason)"],
"description":"setAnimationInterval(float_interval,SetIntervalReason_reason)",
"scope":"source.lua"},

"cc.Director:getActionManager()":{
"prefix":"cc.Director:getActionManager()",
"body":["cc.Director:getActionManager()"],
"description":"getActionManager()",
"scope":"source.lua"},

"cc.Director:getInstance()":{
"prefix":"cc.Director:getInstance()",
"body":["cc.Director:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"cc.Timer":{
"prefix":"cc.Timer",
"body":["cc.Timer"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Timer:setupTimerWithInterval(float_seconds,unsigned_int_repeat,float_delay)":{
"prefix":"cc.Timer:setupTimerWithInterval(float_seconds,unsigned_int_repeat,float_delay)",
"body":["cc.Timer:setupTimerWithInterval(float_seconds,unsigned_int_repeat,float_delay)"],
"description":"setupTimerWithInterval(float_seconds,unsigned_int_repeat,float_delay)",
"scope":"source.lua"},

"cc.Timer:update(float_dt)":{
"prefix":"cc.Timer:update(float_dt)",
"body":["cc.Timer:update(float_dt)"],
"description":"update(float_dt)",
"scope":"source.lua"},

"cc.Timer:isAborted()":{
"prefix":"cc.Timer:isAborted()",
"body":["cc.Timer:isAborted()"],
"description":"isAborted()",
"scope":"source.lua"},

"cc.Timer:isExhausted()":{
"prefix":"cc.Timer:isExhausted()",
"body":["cc.Timer:isExhausted()"],
"description":"isExhausted()",
"scope":"source.lua"},

"cc.Timer:trigger(float_dt)":{
"prefix":"cc.Timer:trigger(float_dt)",
"body":["cc.Timer:trigger(float_dt)"],
"description":"trigger(float_dt)",
"scope":"source.lua"},

"cc.Timer:cancel()":{
"prefix":"cc.Timer:cancel()",
"body":["cc.Timer:cancel()"],
"description":"cancel()",
"scope":"source.lua"},

"cc.Timer:setAborted()":{
"prefix":"cc.Timer:setAborted()",
"body":["cc.Timer:setAborted()"],
"description":"setAborted()",
"scope":"source.lua"},

"cc.Scheduler":{
"prefix":"cc.Scheduler",
"body":["cc.Scheduler"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Scheduler:setTimeScale(float_timeScale)":{
"prefix":"cc.Scheduler:setTimeScale(float_timeScale)",
"body":["cc.Scheduler:setTimeScale(float_timeScale)"],
"description":"setTimeScale(float_timeScale)",
"scope":"source.lua"},

"cc.Scheduler:removeAllFunctionsToBePerformedInCocosThread()":{
"prefix":"cc.Scheduler:removeAllFunctionsToBePerformedInCocosThread()",
"body":["cc.Scheduler:removeAllFunctionsToBePerformedInCocosThread()"],
"description":"removeAllFunctionsToBePerformedInCocosThread()",
"scope":"source.lua"},

"cc.Scheduler:getTimeScale()":{
"prefix":"cc.Scheduler:getTimeScale()",
"body":["cc.Scheduler:getTimeScale()"],
"description":"getTimeScale()",
"scope":"source.lua"},

"cc.AsyncTaskPool":{
"prefix":"cc.AsyncTaskPool",
"body":["cc.AsyncTaskPool"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AsyncTaskPool:enqueue(TaskType_type,TaskCallBack_callback,void_callbackParam)":{
"prefix":"cc.AsyncTaskPool:enqueue(TaskType_type,TaskCallBack_callback,void_callbackParam)",
"body":["cc.AsyncTaskPool:enqueue(TaskType_type,TaskCallBack_callback,void_callbackParam)"],
"description":"enqueue(TaskType_type,TaskCallBack_callback,void_callbackParam)",
"scope":"source.lua"},

"cc.AsyncTaskPool:enqueue(AsyncTaskPool_TaskType_type)":{
"prefix":"cc.AsyncTaskPool:enqueue(AsyncTaskPool_TaskType_type)",
"body":["cc.AsyncTaskPool:enqueue(AsyncTaskPool_TaskType_type)"],
"description":"enqueue(AsyncTaskPool_TaskType_type)",
"scope":"source.lua"},

"cc.AsyncTaskPool:enqueue(TaskCallBack_callback,void_callbackParam)":{
"prefix":"cc.AsyncTaskPool:enqueue(TaskCallBack_callback,void_callbackParam)",
"body":["cc.AsyncTaskPool:enqueue(TaskCallBack_callback,void_callbackParam)"],
"description":"enqueue(TaskCallBack_callback,void_callbackParam)",
"scope":"source.lua"},

"cc.AsyncTaskPool:stopTasks(TaskType_type)":{
"prefix":"cc.AsyncTaskPool:stopTasks(TaskType_type)",
"body":["cc.AsyncTaskPool:stopTasks(TaskType_type)"],
"description":"stopTasks(TaskType_type)",
"scope":"source.lua"},

"cc.AsyncTaskPool:destroyInstance()":{
"prefix":"cc.AsyncTaskPool:destroyInstance()",
"body":["cc.AsyncTaskPool:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"cc.AsyncTaskPool:getInstance()":{
"prefix":"cc.AsyncTaskPool:getInstance()",
"body":["cc.AsyncTaskPool:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"cc.Action":{
"prefix":"cc.Action",
"body":["cc.Action"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Action:startWithTarget(Node_target)":{
"prefix":"cc.Action:startWithTarget(Node_target)",
"body":["cc.Action:startWithTarget(Node_target)"],
"description":"startWithTarget(Node_target)",
"scope":"source.lua"},

"cc.Action:setOriginalTarget(Node_originalTarget)":{
"prefix":"cc.Action:setOriginalTarget(Node_originalTarget)",
"body":["cc.Action:setOriginalTarget(Node_originalTarget)"],
"description":"setOriginalTarget(Node_originalTarget)",
"scope":"source.lua"},

"cc.Action:clone()":{
"prefix":"cc.Action:clone()",
"body":["cc.Action:clone()"],
"description":"clone()",
"scope":"source.lua"},

"cc.Action:getOriginalTarget()":{
"prefix":"cc.Action:getOriginalTarget()",
"body":["cc.Action:getOriginalTarget()"],
"description":"getOriginalTarget()",
"scope":"source.lua"},

"cc.Action:stop()":{
"prefix":"cc.Action:stop()",
"body":["cc.Action:stop()"],
"description":"stop()",
"scope":"source.lua"},

"cc.Action:update(float_time)":{
"prefix":"cc.Action:update(float_time)",
"body":["cc.Action:update(float_time)"],
"description":"update(float_time)",
"scope":"source.lua"},

"cc.Action:getTarget()":{
"prefix":"cc.Action:getTarget()",
"body":["cc.Action:getTarget()"],
"description":"getTarget()",
"scope":"source.lua"},

"cc.Action:getFlags()":{
"prefix":"cc.Action:getFlags()",
"body":["cc.Action:getFlags()"],
"description":"getFlags()",
"scope":"source.lua"},

"cc.Action:step(float_dt)":{
"prefix":"cc.Action:step(float_dt)",
"body":["cc.Action:step(float_dt)"],
"description":"step(float_dt)",
"scope":"source.lua"},

"cc.Action:setTag(int_tag)":{
"prefix":"cc.Action:setTag(int_tag)",
"body":["cc.Action:setTag(int_tag)"],
"description":"setTag(int_tag)",
"scope":"source.lua"},

"cc.Action:setFlags(unsigned_int_flags)":{
"prefix":"cc.Action:setFlags(unsigned_int_flags)",
"body":["cc.Action:setFlags(unsigned_int_flags)"],
"description":"setFlags(unsigned_int_flags)",
"scope":"source.lua"},

"cc.Action:getTag()":{
"prefix":"cc.Action:getTag()",
"body":["cc.Action:getTag()"],
"description":"getTag()",
"scope":"source.lua"},

"cc.Action:setTarget(Node_target)":{
"prefix":"cc.Action:setTarget(Node_target)",
"body":["cc.Action:setTarget(Node_target)"],
"description":"setTarget(Node_target)",
"scope":"source.lua"},

"cc.Action:isDone()":{
"prefix":"cc.Action:isDone()",
"body":["cc.Action:isDone()"],
"description":"isDone()",
"scope":"source.lua"},

"cc.Action:reverse()":{
"prefix":"cc.Action:reverse()",
"body":["cc.Action:reverse()"],
"description":"reverse()",
"scope":"source.lua"},

"cc.FiniteTimeAction":{
"prefix":"cc.FiniteTimeAction",
"body":["cc.FiniteTimeAction"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FiniteTimeAction:setDuration(float_duration)":{
"prefix":"cc.FiniteTimeAction:setDuration(float_duration)",
"body":["cc.FiniteTimeAction:setDuration(float_duration)"],
"description":"setDuration(float_duration)",
"scope":"source.lua"},

"cc.FiniteTimeAction:getDuration()":{
"prefix":"cc.FiniteTimeAction:getDuration()",
"body":["cc.FiniteTimeAction:getDuration()"],
"description":"getDuration()",
"scope":"source.lua"},

"cc.Speed":{
"prefix":"cc.Speed",
"body":["cc.Speed"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Speed:setInnerAction(ActionInterval_action)":{
"prefix":"cc.Speed:setInnerAction(ActionInterval_action)",
"body":["cc.Speed:setInnerAction(ActionInterval_action)"],
"description":"setInnerAction(ActionInterval_action)",
"scope":"source.lua"},

"cc.Speed:getSpeed()":{
"prefix":"cc.Speed:getSpeed()",
"body":["cc.Speed:getSpeed()"],
"description":"getSpeed()",
"scope":"source.lua"},

"cc.Speed:setSpeed(float_speed)":{
"prefix":"cc.Speed:setSpeed(float_speed)",
"body":["cc.Speed:setSpeed(float_speed)"],
"description":"setSpeed(float_speed)",
"scope":"source.lua"},

"cc.Speed:initWithAction(ActionInterval_action,float_speed)":{
"prefix":"cc.Speed:initWithAction(ActionInterval_action,float_speed)",
"body":["cc.Speed:initWithAction(ActionInterval_action,float_speed)"],
"description":"initWithAction(ActionInterval_action,float_speed)",
"scope":"source.lua"},

"cc.Speed:getInnerAction()":{
"prefix":"cc.Speed:getInnerAction()",
"body":["cc.Speed:getInnerAction()"],
"description":"getInnerAction()",
"scope":"source.lua"},

"cc.Speed:create(ActionInterval_action,float_speed)":{
"prefix":"cc.Speed:create(ActionInterval_action,float_speed)",
"body":["cc.Speed:create(ActionInterval_action,float_speed)"],
"description":"create(ActionInterval_action,float_speed)",
"scope":"source.lua"},

"cc.Follow":{
"prefix":"cc.Follow",
"body":["cc.Follow"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Follow:setBoundarySet(bool_value)":{
"prefix":"cc.Follow:setBoundarySet(bool_value)",
"body":["cc.Follow:setBoundarySet(bool_value)"],
"description":"setBoundarySet(bool_value)",
"scope":"source.lua"},

"cc.Follow:initWithTarget(Node_followedNode,const_Rect_rect)":{
"prefix":"cc.Follow:initWithTarget(Node_followedNode,const_Rect_rect)",
"body":["cc.Follow:initWithTarget(Node_followedNode,const_Rect_rect)"],
"description":"initWithTarget(Node_followedNode,const_Rect_rect)",
"scope":"source.lua"},

"cc.Follow:initWithTargetAndOffset(Node_followedNode,float_xOffset,float_yOffset,const_Rect_rect)":{
"prefix":"cc.Follow:initWithTargetAndOffset(Node_followedNode,float_xOffset,float_yOffset,const_Rect_rect)",
"body":["cc.Follow:initWithTargetAndOffset(Node_followedNode,float_xOffset,float_yOffset,const_Rect_rect)"],
"description":"initWithTargetAndOffset(Node_followedNode,float_xOffset,float_yOffset,const_Rect_rect)",
"scope":"source.lua"},

"cc.Follow:isBoundarySet()":{
"prefix":"cc.Follow:isBoundarySet()",
"body":["cc.Follow:isBoundarySet()"],
"description":"isBoundarySet()",
"scope":"source.lua"},

"cc.Follow:create(Node_followedNode,const_Rect_rect)":{
"prefix":"cc.Follow:create(Node_followedNode,const_Rect_rect)",
"body":["cc.Follow:create(Node_followedNode,const_Rect_rect)"],
"description":"create(Node_followedNode,const_Rect_rect)",
"scope":"source.lua"},

"cc.Follow:createWithOffset(Node_followedNode,float_xOffset,float_yOffset,const_Rect_rect)":{
"prefix":"cc.Follow:createWithOffset(Node_followedNode,float_xOffset,float_yOffset,const_Rect_rect)",
"body":["cc.Follow:createWithOffset(Node_followedNode,float_xOffset,float_yOffset,const_Rect_rect)"],
"description":"createWithOffset(Node_followedNode,float_xOffset,float_yOffset,const_Rect_rect)",
"scope":"source.lua"},

"cc.Image":{
"prefix":"cc.Image",
"body":["cc.Image"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Image:hasPremultipliedAlpha()":{
"prefix":"cc.Image:hasPremultipliedAlpha()",
"body":["cc.Image:hasPremultipliedAlpha()"],
"description":"hasPremultipliedAlpha()",
"scope":"source.lua"},

"cc.Image:saveToFile(const_std_string_filename,bool_isToRGB)":{
"prefix":"cc.Image:saveToFile(const_std_string_filename,bool_isToRGB)",
"body":["cc.Image:saveToFile(const_std_string_filename,bool_isToRGB)"],
"description":"saveToFile(const_std_string_filename,bool_isToRGB)",
"scope":"source.lua"},

"cc.Image:hasAlpha()":{
"prefix":"cc.Image:hasAlpha()",
"body":["cc.Image:hasAlpha()"],
"description":"hasAlpha()",
"scope":"source.lua"},

"cc.Image:isCompressed()":{
"prefix":"cc.Image:isCompressed()",
"body":["cc.Image:isCompressed()"],
"description":"isCompressed()",
"scope":"source.lua"},

"cc.Image:getHeight()":{
"prefix":"cc.Image:getHeight()",
"body":["cc.Image:getHeight()"],
"description":"getHeight()",
"scope":"source.lua"},

"cc.Image:initWithImageFile(const_std_string_path)":{
"prefix":"cc.Image:initWithImageFile(const_std_string_path)",
"body":["cc.Image:initWithImageFile(const_std_string_path)"],
"description":"initWithImageFile(const_std_string_path)",
"scope":"source.lua"},

"cc.Image:getWidth()":{
"prefix":"cc.Image:getWidth()",
"body":["cc.Image:getWidth()"],
"description":"getWidth()",
"scope":"source.lua"},

"cc.Image:getBitPerPixel()":{
"prefix":"cc.Image:getBitPerPixel()",
"body":["cc.Image:getBitPerPixel()"],
"description":"getBitPerPixel()",
"scope":"source.lua"},

"cc.Image:getFileType()":{
"prefix":"cc.Image:getFileType()",
"body":["cc.Image:getFileType()"],
"description":"getFileType()",
"scope":"source.lua"},

"cc.Image:getFilePath()":{
"prefix":"cc.Image:getFilePath()",
"body":["cc.Image:getFilePath()"],
"description":"getFilePath()",
"scope":"source.lua"},

"cc.Image:getNumberOfMipmaps()":{
"prefix":"cc.Image:getNumberOfMipmaps()",
"body":["cc.Image:getNumberOfMipmaps()"],
"description":"getNumberOfMipmaps()",
"scope":"source.lua"},

"cc.Image:getRenderFormat()":{
"prefix":"cc.Image:getRenderFormat()",
"body":["cc.Image:getRenderFormat()"],
"description":"getRenderFormat()",
"scope":"source.lua"},

"cc.Image:setPVRImagesHavePremultipliedAlpha(bool_haveAlphaPremultiplied)":{
"prefix":"cc.Image:setPVRImagesHavePremultipliedAlpha(bool_haveAlphaPremultiplied)",
"body":["cc.Image:setPVRImagesHavePremultipliedAlpha(bool_haveAlphaPremultiplied)"],
"description":"setPVRImagesHavePremultipliedAlpha(bool_haveAlphaPremultiplied)",
"scope":"source.lua"},

"cc.Image:setPNGPremultipliedAlphaEnabled(bool_enabled)":{
"prefix":"cc.Image:setPNGPremultipliedAlphaEnabled(bool_enabled)",
"body":["cc.Image:setPNGPremultipliedAlphaEnabled(bool_enabled)"],
"description":"setPNGPremultipliedAlphaEnabled(bool_enabled)",
"scope":"source.lua"},

"cc.GLProgramState":{
"prefix":"cc.GLProgramState",
"body":["cc.GLProgramState"],
"description":"cocos class",
"scope":"source.lua"},

"cc.GLProgramState:getVertexAttribsFlags()":{
"prefix":"cc.GLProgramState:getVertexAttribsFlags()",
"body":["cc.GLProgramState:getVertexAttribsFlags()"],
"description":"getVertexAttribsFlags()",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec4(const_std_string_uniformName,const_Vec4_value)":{
"prefix":"cc.GLProgramState:setUniformVec4(const_std_string_uniformName,const_Vec4_value)",
"body":["cc.GLProgramState:setUniformVec4(const_std_string_uniformName,const_Vec4_value)"],
"description":"setUniformVec4(const_std_string_uniformName,const_Vec4_value)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec4(GLint_uniformLocation,const_Vec4_value)":{
"prefix":"cc.GLProgramState:setUniformVec4(GLint_uniformLocation,const_Vec4_value)",
"body":["cc.GLProgramState:setUniformVec4(GLint_uniformLocation,const_Vec4_value)"],
"description":"setUniformVec4(GLint_uniformLocation,const_Vec4_value)",
"scope":"source.lua"},

"cc.GLProgramState:applyAutoBinding(const_std_string_uniformName,const_std_string_autoBinding)":{
"prefix":"cc.GLProgramState:applyAutoBinding(const_std_string_uniformName,const_std_string_autoBinding)",
"body":["cc.GLProgramState:applyAutoBinding(const_std_string_uniformName,const_std_string_autoBinding)"],
"description":"applyAutoBinding(const_std_string_uniformName,const_std_string_autoBinding)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec2(const_std_string_uniformName,const_Vec2_value)":{
"prefix":"cc.GLProgramState:setUniformVec2(const_std_string_uniformName,const_Vec2_value)",
"body":["cc.GLProgramState:setUniformVec2(const_std_string_uniformName,const_Vec2_value)"],
"description":"setUniformVec2(const_std_string_uniformName,const_Vec2_value)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec2(GLint_uniformLocation,const_Vec2_value)":{
"prefix":"cc.GLProgramState:setUniformVec2(GLint_uniformLocation,const_Vec2_value)",
"body":["cc.GLProgramState:setUniformVec2(GLint_uniformLocation,const_Vec2_value)"],
"description":"setUniformVec2(GLint_uniformLocation,const_Vec2_value)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec3(const_std_string_uniformName,const_Vec3_value)":{
"prefix":"cc.GLProgramState:setUniformVec3(const_std_string_uniformName,const_Vec3_value)",
"body":["cc.GLProgramState:setUniformVec3(const_std_string_uniformName,const_Vec3_value)"],
"description":"setUniformVec3(const_std_string_uniformName,const_Vec3_value)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec3(GLint_uniformLocation,const_Vec3_value)":{
"prefix":"cc.GLProgramState:setUniformVec3(GLint_uniformLocation,const_Vec3_value)",
"body":["cc.GLProgramState:setUniformVec3(GLint_uniformLocation,const_Vec3_value)"],
"description":"setUniformVec3(GLint_uniformLocation,const_Vec3_value)",
"scope":"source.lua"},

"cc.GLProgramState:apply(const_Mat4_modelView)":{
"prefix":"cc.GLProgramState:apply(const_Mat4_modelView)",
"body":["cc.GLProgramState:apply(const_Mat4_modelView)"],
"description":"apply(const_Mat4_modelView)",
"scope":"source.lua"},

"cc.GLProgramState:getNodeBinding()":{
"prefix":"cc.GLProgramState:getNodeBinding()",
"body":["cc.GLProgramState:getNodeBinding()"],
"description":"getNodeBinding()",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec4v(const_std_string_uniformName,ssize_t_size,const_Vec4_pointer)":{
"prefix":"cc.GLProgramState:setUniformVec4v(const_std_string_uniformName,ssize_t_size,const_Vec4_pointer)",
"body":["cc.GLProgramState:setUniformVec4v(const_std_string_uniformName,ssize_t_size,const_Vec4_pointer)"],
"description":"setUniformVec4v(const_std_string_uniformName,ssize_t_size,const_Vec4_pointer)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec4v(GLint_uniformLocation,ssize_t_size,const_Vec4_pointer)":{
"prefix":"cc.GLProgramState:setUniformVec4v(GLint_uniformLocation,ssize_t_size,const_Vec4_pointer)",
"body":["cc.GLProgramState:setUniformVec4v(GLint_uniformLocation,ssize_t_size,const_Vec4_pointer)"],
"description":"setUniformVec4v(GLint_uniformLocation,ssize_t_size,const_Vec4_pointer)",
"scope":"source.lua"},

"cc.GLProgramState:applyGLProgram(const_Mat4_modelView)":{
"prefix":"cc.GLProgramState:applyGLProgram(const_Mat4_modelView)",
"body":["cc.GLProgramState:applyGLProgram(const_Mat4_modelView)"],
"description":"applyGLProgram(const_Mat4_modelView)",
"scope":"source.lua"},

"cc.GLProgramState:setNodeBinding(Node_node)":{
"prefix":"cc.GLProgramState:setNodeBinding(Node_node)",
"body":["cc.GLProgramState:setNodeBinding(Node_node)"],
"description":"setNodeBinding(Node_node)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformInt(const_std_string_uniformName,int_value)":{
"prefix":"cc.GLProgramState:setUniformInt(const_std_string_uniformName,int_value)",
"body":["cc.GLProgramState:setUniformInt(const_std_string_uniformName,int_value)"],
"description":"setUniformInt(const_std_string_uniformName,int_value)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformInt(GLint_uniformLocation,int_value)":{
"prefix":"cc.GLProgramState:setUniformInt(GLint_uniformLocation,int_value)",
"body":["cc.GLProgramState:setUniformInt(GLint_uniformLocation,int_value)"],
"description":"setUniformInt(GLint_uniformLocation,int_value)",
"scope":"source.lua"},

"cc.GLProgramState:setParameterAutoBinding(const_std_string_uniformName,const_std_string_autoBinding)":{
"prefix":"cc.GLProgramState:setParameterAutoBinding(const_std_string_uniformName,const_std_string_autoBinding)",
"body":["cc.GLProgramState:setParameterAutoBinding(const_std_string_uniformName,const_std_string_autoBinding)"],
"description":"setParameterAutoBinding(const_std_string_uniformName,const_std_string_autoBinding)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec2v(const_std_string_uniformName,ssize_t_size,const_Vec2_pointer)":{
"prefix":"cc.GLProgramState:setUniformVec2v(const_std_string_uniformName,ssize_t_size,const_Vec2_pointer)",
"body":["cc.GLProgramState:setUniformVec2v(const_std_string_uniformName,ssize_t_size,const_Vec2_pointer)"],
"description":"setUniformVec2v(const_std_string_uniformName,ssize_t_size,const_Vec2_pointer)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec2v(GLint_uniformLocation,ssize_t_size,const_Vec2_pointer)":{
"prefix":"cc.GLProgramState:setUniformVec2v(GLint_uniformLocation,ssize_t_size,const_Vec2_pointer)",
"body":["cc.GLProgramState:setUniformVec2v(GLint_uniformLocation,ssize_t_size,const_Vec2_pointer)"],
"description":"setUniformVec2v(GLint_uniformLocation,ssize_t_size,const_Vec2_pointer)",
"scope":"source.lua"},

"cc.GLProgramState:getUniformCount()":{
"prefix":"cc.GLProgramState:getUniformCount()",
"body":["cc.GLProgramState:getUniformCount()"],
"description":"getUniformCount()",
"scope":"source.lua"},

"cc.GLProgramState:applyAttributes(bool_applyAttribFlags)":{
"prefix":"cc.GLProgramState:applyAttributes(bool_applyAttribFlags)",
"body":["cc.GLProgramState:applyAttributes(bool_applyAttribFlags)"],
"description":"applyAttributes(bool_applyAttribFlags)",
"scope":"source.lua"},

"cc.GLProgramState:clone()":{
"prefix":"cc.GLProgramState:clone()",
"body":["cc.GLProgramState:clone()"],
"description":"clone()",
"scope":"source.lua"},

"cc.GLProgramState:setGLProgram(GLProgram_glprogram)":{
"prefix":"cc.GLProgramState:setGLProgram(GLProgram_glprogram)",
"body":["cc.GLProgramState:setGLProgram(GLProgram_glprogram)"],
"description":"setGLProgram(GLProgram_glprogram)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformFloatv(const_std_string_uniformName,ssize_t_size,const_float_pointer)":{
"prefix":"cc.GLProgramState:setUniformFloatv(const_std_string_uniformName,ssize_t_size,const_float_pointer)",
"body":["cc.GLProgramState:setUniformFloatv(const_std_string_uniformName,ssize_t_size,const_float_pointer)"],
"description":"setUniformFloatv(const_std_string_uniformName,ssize_t_size,const_float_pointer)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformFloatv(GLint_uniformLocation,ssize_t_size,const_float_pointer)":{
"prefix":"cc.GLProgramState:setUniformFloatv(GLint_uniformLocation,ssize_t_size,const_float_pointer)",
"body":["cc.GLProgramState:setUniformFloatv(GLint_uniformLocation,ssize_t_size,const_float_pointer)"],
"description":"setUniformFloatv(GLint_uniformLocation,ssize_t_size,const_float_pointer)",
"scope":"source.lua"},

"cc.GLProgramState:getGLProgram()":{
"prefix":"cc.GLProgramState:getGLProgram()",
"body":["cc.GLProgramState:getGLProgram()"],
"description":"getGLProgram()",
"scope":"source.lua"},

"cc.GLProgramState:setUniformTexture(const_std_string_uniformName,Texture2D_texture)":{
"prefix":"cc.GLProgramState:setUniformTexture(const_std_string_uniformName,Texture2D_texture)",
"body":["cc.GLProgramState:setUniformTexture(const_std_string_uniformName,Texture2D_texture)"],
"description":"setUniformTexture(const_std_string_uniformName,Texture2D_texture)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformTexture(const_std_string_uniformName,GLuint_textureId)":{
"prefix":"cc.GLProgramState:setUniformTexture(const_std_string_uniformName,GLuint_textureId)",
"body":["cc.GLProgramState:setUniformTexture(const_std_string_uniformName,GLuint_textureId)"],
"description":"setUniformTexture(const_std_string_uniformName,GLuint_textureId)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformTexture(GLint_uniformLocation,Texture2D_texture)":{
"prefix":"cc.GLProgramState:setUniformTexture(GLint_uniformLocation,Texture2D_texture)",
"body":["cc.GLProgramState:setUniformTexture(GLint_uniformLocation,Texture2D_texture)"],
"description":"setUniformTexture(GLint_uniformLocation,Texture2D_texture)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformTexture(GLint_uniformLocation,GLuint_textureId)":{
"prefix":"cc.GLProgramState:setUniformTexture(GLint_uniformLocation,GLuint_textureId)",
"body":["cc.GLProgramState:setUniformTexture(GLint_uniformLocation,GLuint_textureId)"],
"description":"setUniformTexture(GLint_uniformLocation,GLuint_textureId)",
"scope":"source.lua"},

"cc.GLProgramState:applyUniforms()":{
"prefix":"cc.GLProgramState:applyUniforms()",
"body":["cc.GLProgramState:applyUniforms()"],
"description":"applyUniforms()",
"scope":"source.lua"},

"cc.GLProgramState:setUniformFloat(const_std_string_uniformName,float_value)":{
"prefix":"cc.GLProgramState:setUniformFloat(const_std_string_uniformName,float_value)",
"body":["cc.GLProgramState:setUniformFloat(const_std_string_uniformName,float_value)"],
"description":"setUniformFloat(const_std_string_uniformName,float_value)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformFloat(GLint_uniformLocation,float_value)":{
"prefix":"cc.GLProgramState:setUniformFloat(GLint_uniformLocation,float_value)",
"body":["cc.GLProgramState:setUniformFloat(GLint_uniformLocation,float_value)"],
"description":"setUniformFloat(GLint_uniformLocation,float_value)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformMat4(const_std_string_uniformName,const_Mat4_value)":{
"prefix":"cc.GLProgramState:setUniformMat4(const_std_string_uniformName,const_Mat4_value)",
"body":["cc.GLProgramState:setUniformMat4(const_std_string_uniformName,const_Mat4_value)"],
"description":"setUniformMat4(const_std_string_uniformName,const_Mat4_value)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformMat4(GLint_uniformLocation,const_Mat4_value)":{
"prefix":"cc.GLProgramState:setUniformMat4(GLint_uniformLocation,const_Mat4_value)",
"body":["cc.GLProgramState:setUniformMat4(GLint_uniformLocation,const_Mat4_value)"],
"description":"setUniformMat4(GLint_uniformLocation,const_Mat4_value)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec3v(const_std_string_uniformName,ssize_t_size,const_Vec3_pointer)":{
"prefix":"cc.GLProgramState:setUniformVec3v(const_std_string_uniformName,ssize_t_size,const_Vec3_pointer)",
"body":["cc.GLProgramState:setUniformVec3v(const_std_string_uniformName,ssize_t_size,const_Vec3_pointer)"],
"description":"setUniformVec3v(const_std_string_uniformName,ssize_t_size,const_Vec3_pointer)",
"scope":"source.lua"},

"cc.GLProgramState:setUniformVec3v(GLint_uniformLocation,ssize_t_size,const_Vec3_pointer)":{
"prefix":"cc.GLProgramState:setUniformVec3v(GLint_uniformLocation,ssize_t_size,const_Vec3_pointer)",
"body":["cc.GLProgramState:setUniformVec3v(GLint_uniformLocation,ssize_t_size,const_Vec3_pointer)"],
"description":"setUniformVec3v(GLint_uniformLocation,ssize_t_size,const_Vec3_pointer)",
"scope":"source.lua"},

"cc.GLProgramState:getVertexAttribCount()":{
"prefix":"cc.GLProgramState:getVertexAttribCount()",
"body":["cc.GLProgramState:getVertexAttribCount()"],
"description":"getVertexAttribCount()",
"scope":"source.lua"},

"cc.GLProgramState:create(GLProgram_glprogram)":{
"prefix":"cc.GLProgramState:create(GLProgram_glprogram)",
"body":["cc.GLProgramState:create(GLProgram_glprogram)"],
"description":"create(GLProgram_glprogram)",
"scope":"source.lua"},

"cc.GLProgramState:getOrCreateWithGLProgramName(const_std_string_glProgramName)":{
"prefix":"cc.GLProgramState:getOrCreateWithGLProgramName(const_std_string_glProgramName)",
"body":["cc.GLProgramState:getOrCreateWithGLProgramName(const_std_string_glProgramName)"],
"description":"getOrCreateWithGLProgramName(const_std_string_glProgramName)",
"scope":"source.lua"},

"cc.GLProgramState:getOrCreateWithGLProgramName(const_std_string_glProgramName,Texture2D_texture)":{
"prefix":"cc.GLProgramState:getOrCreateWithGLProgramName(const_std_string_glProgramName,Texture2D_texture)",
"body":["cc.GLProgramState:getOrCreateWithGLProgramName(const_std_string_glProgramName,Texture2D_texture)"],
"description":"getOrCreateWithGLProgramName(const_std_string_glProgramName,Texture2D_texture)",
"scope":"source.lua"},

"cc.GLProgramState:getOrCreateWithGLProgram(GLProgram_glprogram)":{
"prefix":"cc.GLProgramState:getOrCreateWithGLProgram(GLProgram_glprogram)",
"body":["cc.GLProgramState:getOrCreateWithGLProgram(GLProgram_glprogram)"],
"description":"getOrCreateWithGLProgram(GLProgram_glprogram)",
"scope":"source.lua"},

"cc.GLProgramState:getOrCreateWithShaders(const_std_string_vertexShader,const_std_string_fragShader,const_std_string_compileTimeDefines)":{
"prefix":"cc.GLProgramState:getOrCreateWithShaders(const_std_string_vertexShader,const_std_string_fragShader,const_std_string_compileTimeDefines)",
"body":["cc.GLProgramState:getOrCreateWithShaders(const_std_string_vertexShader,const_std_string_fragShader,const_std_string_compileTimeDefines)"],
"description":"getOrCreateWithShaders(const_std_string_vertexShader,const_std_string_fragShader,const_std_string_compileTimeDefines)",
"scope":"source.lua"},

"cc.PolygonInfo":{
"prefix":"cc.PolygonInfo",
"body":["cc.PolygonInfo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PolygonInfo:getFilename()":{
"prefix":"cc.PolygonInfo:getFilename()",
"body":["cc.PolygonInfo:getFilename()"],
"description":"getFilename()",
"scope":"source.lua"},

"cc.PolygonInfo:getArea()":{
"prefix":"cc.PolygonInfo:getArea()",
"body":["cc.PolygonInfo:getArea()"],
"description":"getArea()",
"scope":"source.lua"},

"cc.PolygonInfo:getRect()":{
"prefix":"cc.PolygonInfo:getRect()",
"body":["cc.PolygonInfo:getRect()"],
"description":"getRect()",
"scope":"source.lua"},

"cc.PolygonInfo:setFilename(const_std_string_filename)":{
"prefix":"cc.PolygonInfo:setFilename(const_std_string_filename)",
"body":["cc.PolygonInfo:setFilename(const_std_string_filename)"],
"description":"setFilename(const_std_string_filename)",
"scope":"source.lua"},

"cc.PolygonInfo:setQuads(V3F_C4B_T2F_Quad_quads,int_numberOfQuads)":{
"prefix":"cc.PolygonInfo:setQuads(V3F_C4B_T2F_Quad_quads,int_numberOfQuads)",
"body":["cc.PolygonInfo:setQuads(V3F_C4B_T2F_Quad_quads,int_numberOfQuads)"],
"description":"setQuads(V3F_C4B_T2F_Quad_quads,int_numberOfQuads)",
"scope":"source.lua"},

"cc.PolygonInfo:getVertCount()":{
"prefix":"cc.PolygonInfo:getVertCount()",
"body":["cc.PolygonInfo:getVertCount()"],
"description":"getVertCount()",
"scope":"source.lua"},

"cc.PolygonInfo:getTrianglesCount()":{
"prefix":"cc.PolygonInfo:getTrianglesCount()",
"body":["cc.PolygonInfo:getTrianglesCount()"],
"description":"getTrianglesCount()",
"scope":"source.lua"},

"cc.PolygonInfo:setQuad(V3F_C4B_T2F_Quad_quad)":{
"prefix":"cc.PolygonInfo:setQuad(V3F_C4B_T2F_Quad_quad)",
"body":["cc.PolygonInfo:setQuad(V3F_C4B_T2F_Quad_quad)"],
"description":"setQuad(V3F_C4B_T2F_Quad_quad)",
"scope":"source.lua"},

"cc.PolygonInfo:setTriangles(const_TrianglesCommand_Triangles_triangles)":{
"prefix":"cc.PolygonInfo:setTriangles(const_TrianglesCommand_Triangles_triangles)",
"body":["cc.PolygonInfo:setTriangles(const_TrianglesCommand_Triangles_triangles)"],
"description":"setTriangles(const_TrianglesCommand_Triangles_triangles)",
"scope":"source.lua"},

"cc.PolygonInfo:setRect(const_Rect_rect)":{
"prefix":"cc.PolygonInfo:setRect(const_Rect_rect)",
"body":["cc.PolygonInfo:setRect(const_Rect_rect)"],
"description":"setRect(const_Rect_rect)",
"scope":"source.lua"},

"cc.AutoPolygon":{
"prefix":"cc.AutoPolygon",
"body":["cc.AutoPolygon"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AutoPolygon:new()":{
"prefix":"cc.AutoPolygon:new()",
"body":["cc.AutoPolygon:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.SpriteFrame":{
"prefix":"cc.SpriteFrame",
"body":["cc.SpriteFrame"],
"description":"cocos class",
"scope":"source.lua"},

"cc.SpriteFrame:setAnchorPoint(const_Vec2_anchorPoint)":{
"prefix":"cc.SpriteFrame:setAnchorPoint(const_Vec2_anchorPoint)",
"body":["cc.SpriteFrame:setAnchorPoint(const_Vec2_anchorPoint)"],
"description":"setAnchorPoint(const_Vec2_anchorPoint)",
"scope":"source.lua"},

"cc.SpriteFrame:setTexture(Texture2D_pobTexture)":{
"prefix":"cc.SpriteFrame:setTexture(Texture2D_pobTexture)",
"body":["cc.SpriteFrame:setTexture(Texture2D_pobTexture)"],
"description":"setTexture(Texture2D_pobTexture)",
"scope":"source.lua"},

"cc.SpriteFrame:getTexture()":{
"prefix":"cc.SpriteFrame:getTexture()",
"body":["cc.SpriteFrame:getTexture()"],
"description":"getTexture()",
"scope":"source.lua"},

"cc.SpriteFrame:setOffsetInPixels(const_Vec2_offsetInPixels)":{
"prefix":"cc.SpriteFrame:setOffsetInPixels(const_Vec2_offsetInPixels)",
"body":["cc.SpriteFrame:setOffsetInPixels(const_Vec2_offsetInPixels)"],
"description":"setOffsetInPixels(const_Vec2_offsetInPixels)",
"scope":"source.lua"},

"cc.SpriteFrame:getOriginalSizeInPixels()":{
"prefix":"cc.SpriteFrame:getOriginalSizeInPixels()",
"body":["cc.SpriteFrame:getOriginalSizeInPixels()"],
"description":"getOriginalSizeInPixels()",
"scope":"source.lua"},

"cc.SpriteFrame:setOriginalSize(const_Size_sizeInPixels)":{
"prefix":"cc.SpriteFrame:setOriginalSize(const_Size_sizeInPixels)",
"body":["cc.SpriteFrame:setOriginalSize(const_Size_sizeInPixels)"],
"description":"setOriginalSize(const_Size_sizeInPixels)",
"scope":"source.lua"},

"cc.SpriteFrame:getCenterRect()":{
"prefix":"cc.SpriteFrame:getCenterRect()",
"body":["cc.SpriteFrame:getCenterRect()"],
"description":"getCenterRect()",
"scope":"source.lua"},

"cc.SpriteFrame:setRectInPixels(const_Rect_rectInPixels)":{
"prefix":"cc.SpriteFrame:setRectInPixels(const_Rect_rectInPixels)",
"body":["cc.SpriteFrame:setRectInPixels(const_Rect_rectInPixels)"],
"description":"setRectInPixels(const_Rect_rectInPixels)",
"scope":"source.lua"},

"cc.SpriteFrame:getRect()":{
"prefix":"cc.SpriteFrame:getRect()",
"body":["cc.SpriteFrame:getRect()"],
"description":"getRect()",
"scope":"source.lua"},

"cc.SpriteFrame:setCenterRectInPixels(const_Rect_centerRect)":{
"prefix":"cc.SpriteFrame:setCenterRectInPixels(const_Rect_centerRect)",
"body":["cc.SpriteFrame:setCenterRectInPixels(const_Rect_centerRect)"],
"description":"setCenterRectInPixels(const_Rect_centerRect)",
"scope":"source.lua"},

"cc.SpriteFrame:setOffset(const_Vec2_offsets)":{
"prefix":"cc.SpriteFrame:setOffset(const_Vec2_offsets)",
"body":["cc.SpriteFrame:setOffset(const_Vec2_offsets)"],
"description":"setOffset(const_Vec2_offsets)",
"scope":"source.lua"},

"cc.SpriteFrame:initWithTextureFilename(const_std_string_filename,const_Rect_rect)":{
"prefix":"cc.SpriteFrame:initWithTextureFilename(const_std_string_filename,const_Rect_rect)",
"body":["cc.SpriteFrame:initWithTextureFilename(const_std_string_filename,const_Rect_rect)"],
"description":"initWithTextureFilename(const_std_string_filename,const_Rect_rect)",
"scope":"source.lua"},

"cc.SpriteFrame:initWithTextureFilename(const_std_string_filename,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)":{
"prefix":"cc.SpriteFrame:initWithTextureFilename(const_std_string_filename,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)",
"body":["cc.SpriteFrame:initWithTextureFilename(const_std_string_filename,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)"],
"description":"initWithTextureFilename(const_std_string_filename,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)",
"scope":"source.lua"},

"cc.SpriteFrame:setRect(const_Rect_rect)":{
"prefix":"cc.SpriteFrame:setRect(const_Rect_rect)",
"body":["cc.SpriteFrame:setRect(const_Rect_rect)"],
"description":"setRect(const_Rect_rect)",
"scope":"source.lua"},

"cc.SpriteFrame:initWithTexture(Texture2D_pobTexture,const_Rect_rect)":{
"prefix":"cc.SpriteFrame:initWithTexture(Texture2D_pobTexture,const_Rect_rect)",
"body":["cc.SpriteFrame:initWithTexture(Texture2D_pobTexture,const_Rect_rect)"],
"description":"initWithTexture(Texture2D_pobTexture,const_Rect_rect)",
"scope":"source.lua"},

"cc.SpriteFrame:initWithTexture(Texture2D_pobTexture,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)":{
"prefix":"cc.SpriteFrame:initWithTexture(Texture2D_pobTexture,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)",
"body":["cc.SpriteFrame:initWithTexture(Texture2D_pobTexture,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)"],
"description":"initWithTexture(Texture2D_pobTexture,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)",
"scope":"source.lua"},

"cc.SpriteFrame:getOriginalSize()":{
"prefix":"cc.SpriteFrame:getOriginalSize()",
"body":["cc.SpriteFrame:getOriginalSize()"],
"description":"getOriginalSize()",
"scope":"source.lua"},

"cc.SpriteFrame:clone()":{
"prefix":"cc.SpriteFrame:clone()",
"body":["cc.SpriteFrame:clone()"],
"description":"clone()",
"scope":"source.lua"},

"cc.SpriteFrame:getRectInPixels()":{
"prefix":"cc.SpriteFrame:getRectInPixels()",
"body":["cc.SpriteFrame:getRectInPixels()"],
"description":"getRectInPixels()",
"scope":"source.lua"},

"cc.SpriteFrame:isRotated()":{
"prefix":"cc.SpriteFrame:isRotated()",
"body":["cc.SpriteFrame:isRotated()"],
"description":"isRotated()",
"scope":"source.lua"},

"cc.SpriteFrame:hasCenterRect()":{
"prefix":"cc.SpriteFrame:hasCenterRect()",
"body":["cc.SpriteFrame:hasCenterRect()"],
"description":"hasCenterRect()",
"scope":"source.lua"},

"cc.SpriteFrame:setRotated(bool_rotated)":{
"prefix":"cc.SpriteFrame:setRotated(bool_rotated)",
"body":["cc.SpriteFrame:setRotated(bool_rotated)"],
"description":"setRotated(bool_rotated)",
"scope":"source.lua"},

"cc.SpriteFrame:getOffset()":{
"prefix":"cc.SpriteFrame:getOffset()",
"body":["cc.SpriteFrame:getOffset()"],
"description":"getOffset()",
"scope":"source.lua"},

"cc.SpriteFrame:setOriginalSizeInPixels(const_Size_sizeInPixels)":{
"prefix":"cc.SpriteFrame:setOriginalSizeInPixels(const_Size_sizeInPixels)",
"body":["cc.SpriteFrame:setOriginalSizeInPixels(const_Size_sizeInPixels)"],
"description":"setOriginalSizeInPixels(const_Size_sizeInPixels)",
"scope":"source.lua"},

"cc.SpriteFrame:getAnchorPoint()":{
"prefix":"cc.SpriteFrame:getAnchorPoint()",
"body":["cc.SpriteFrame:getAnchorPoint()"],
"description":"getAnchorPoint()",
"scope":"source.lua"},

"cc.SpriteFrame:hasAnchorPoint()":{
"prefix":"cc.SpriteFrame:hasAnchorPoint()",
"body":["cc.SpriteFrame:hasAnchorPoint()"],
"description":"hasAnchorPoint()",
"scope":"source.lua"},

"cc.SpriteFrame:getOffsetInPixels()":{
"prefix":"cc.SpriteFrame:getOffsetInPixels()",
"body":["cc.SpriteFrame:getOffsetInPixels()"],
"description":"getOffsetInPixels()",
"scope":"source.lua"},

"cc.SpriteFrame:create(const_std_string_filename,const_Rect_rect)":{
"prefix":"cc.SpriteFrame:create(const_std_string_filename,const_Rect_rect)",
"body":["cc.SpriteFrame:create(const_std_string_filename,const_Rect_rect)"],
"description":"create(const_std_string_filename,const_Rect_rect)",
"scope":"source.lua"},

"cc.SpriteFrame:create(const_std_string_filename,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)":{
"prefix":"cc.SpriteFrame:create(const_std_string_filename,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)",
"body":["cc.SpriteFrame:create(const_std_string_filename,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)"],
"description":"create(const_std_string_filename,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)",
"scope":"source.lua"},

"cc.SpriteFrame:createWithTexture(Texture2D_pobTexture,const_Rect_rect)":{
"prefix":"cc.SpriteFrame:createWithTexture(Texture2D_pobTexture,const_Rect_rect)",
"body":["cc.SpriteFrame:createWithTexture(Texture2D_pobTexture,const_Rect_rect)"],
"description":"createWithTexture(Texture2D_pobTexture,const_Rect_rect)",
"scope":"source.lua"},

"cc.SpriteFrame:createWithTexture(Texture2D_pobTexture,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)":{
"prefix":"cc.SpriteFrame:createWithTexture(Texture2D_pobTexture,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)",
"body":["cc.SpriteFrame:createWithTexture(Texture2D_pobTexture,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)"],
"description":"createWithTexture(Texture2D_pobTexture,const_Rect_rect,bool_rotated,const_Vec2_offset,const_Size_originalSize)",
"scope":"source.lua"},

"cc.AnimationFrame":{
"prefix":"cc.AnimationFrame",
"body":["cc.AnimationFrame"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AnimationFrame:setSpriteFrame(SpriteFrame_frame)":{
"prefix":"cc.AnimationFrame:setSpriteFrame(SpriteFrame_frame)",
"body":["cc.AnimationFrame:setSpriteFrame(SpriteFrame_frame)"],
"description":"setSpriteFrame(SpriteFrame_frame)",
"scope":"source.lua"},

"cc.AnimationFrame:getUserInfo()":{
"prefix":"cc.AnimationFrame:getUserInfo()",
"body":["cc.AnimationFrame:getUserInfo()"],
"description":"getUserInfo()",
"scope":"source.lua"},

"cc.AnimationFrame:setDelayUnits(float_delayUnits)":{
"prefix":"cc.AnimationFrame:setDelayUnits(float_delayUnits)",
"body":["cc.AnimationFrame:setDelayUnits(float_delayUnits)"],
"description":"setDelayUnits(float_delayUnits)",
"scope":"source.lua"},

"cc.AnimationFrame:clone()":{
"prefix":"cc.AnimationFrame:clone()",
"body":["cc.AnimationFrame:clone()"],
"description":"clone()",
"scope":"source.lua"},

"cc.AnimationFrame:getSpriteFrame()":{
"prefix":"cc.AnimationFrame:getSpriteFrame()",
"body":["cc.AnimationFrame:getSpriteFrame()"],
"description":"getSpriteFrame()",
"scope":"source.lua"},

"cc.AnimationFrame:getDelayUnits()":{
"prefix":"cc.AnimationFrame:getDelayUnits()",
"body":["cc.AnimationFrame:getDelayUnits()"],
"description":"getDelayUnits()",
"scope":"source.lua"},

"cc.AnimationFrame:setUserInfo(const_ValueMap_userInfo)":{
"prefix":"cc.AnimationFrame:setUserInfo(const_ValueMap_userInfo)",
"body":["cc.AnimationFrame:setUserInfo(const_ValueMap_userInfo)"],
"description":"setUserInfo(const_ValueMap_userInfo)",
"scope":"source.lua"},

"cc.AnimationFrame:initWithSpriteFrame(SpriteFrame_spriteFrame,float_delayUnits,const_ValueMap_userInfo)":{
"prefix":"cc.AnimationFrame:initWithSpriteFrame(SpriteFrame_spriteFrame,float_delayUnits,const_ValueMap_userInfo)",
"body":["cc.AnimationFrame:initWithSpriteFrame(SpriteFrame_spriteFrame,float_delayUnits,const_ValueMap_userInfo)"],
"description":"initWithSpriteFrame(SpriteFrame_spriteFrame,float_delayUnits,const_ValueMap_userInfo)",
"scope":"source.lua"},

"cc.AnimationFrame:create(SpriteFrame_spriteFrame,float_delayUnits,const_ValueMap_userInfo)":{
"prefix":"cc.AnimationFrame:create(SpriteFrame_spriteFrame,float_delayUnits,const_ValueMap_userInfo)",
"body":["cc.AnimationFrame:create(SpriteFrame_spriteFrame,float_delayUnits,const_ValueMap_userInfo)"],
"description":"create(SpriteFrame_spriteFrame,float_delayUnits,const_ValueMap_userInfo)",
"scope":"source.lua"},

"cc.Animation":{
"prefix":"cc.Animation",
"body":["cc.Animation"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Animation:getLoops()":{
"prefix":"cc.Animation:getLoops()",
"body":["cc.Animation:getLoops()"],
"description":"getLoops()",
"scope":"source.lua"},

"cc.Animation:addSpriteFrame(SpriteFrame_frame)":{
"prefix":"cc.Animation:addSpriteFrame(SpriteFrame_frame)",
"body":["cc.Animation:addSpriteFrame(SpriteFrame_frame)"],
"description":"addSpriteFrame(SpriteFrame_frame)",
"scope":"source.lua"},

"cc.Animation:setRestoreOriginalFrame(bool_restoreOriginalFrame)":{
"prefix":"cc.Animation:setRestoreOriginalFrame(bool_restoreOriginalFrame)",
"body":["cc.Animation:setRestoreOriginalFrame(bool_restoreOriginalFrame)"],
"description":"setRestoreOriginalFrame(bool_restoreOriginalFrame)",
"scope":"source.lua"},

"cc.Animation:clone()":{
"prefix":"cc.Animation:clone()",
"body":["cc.Animation:clone()"],
"description":"clone()",
"scope":"source.lua"},

"cc.Animation:getDuration()":{
"prefix":"cc.Animation:getDuration()",
"body":["cc.Animation:getDuration()"],
"description":"getDuration()",
"scope":"source.lua"},

"cc.Animation:initWithAnimationFrames(float_delayPerUnit,unsigned_int_loops)":{
"prefix":"cc.Animation:initWithAnimationFrames(float_delayPerUnit,unsigned_int_loops)",
"body":["cc.Animation:initWithAnimationFrames(float_delayPerUnit,unsigned_int_loops)"],
"description":"initWithAnimationFrames(float_delayPerUnit,unsigned_int_loops)",
"scope":"source.lua"},

"cc.Animation:init()":{
"prefix":"cc.Animation:init()",
"body":["cc.Animation:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.Animation:setFrames()":{
"prefix":"cc.Animation:setFrames()",
"body":["cc.Animation:setFrames()"],
"description":"setFrames()",
"scope":"source.lua"},

"cc.Animation:getFrames()":{
"prefix":"cc.Animation:getFrames()",
"body":["cc.Animation:getFrames()"],
"description":"getFrames()",
"scope":"source.lua"},

"cc.Animation:setLoops(unsigned_int_loops)":{
"prefix":"cc.Animation:setLoops(unsigned_int_loops)",
"body":["cc.Animation:setLoops(unsigned_int_loops)"],
"description":"setLoops(unsigned_int_loops)",
"scope":"source.lua"},

"cc.Animation:setDelayPerUnit(float_delayPerUnit)":{
"prefix":"cc.Animation:setDelayPerUnit(float_delayPerUnit)",
"body":["cc.Animation:setDelayPerUnit(float_delayPerUnit)"],
"description":"setDelayPerUnit(float_delayPerUnit)",
"scope":"source.lua"},

"cc.Animation:addSpriteFrameWithFile(const_std_string_filename)":{
"prefix":"cc.Animation:addSpriteFrameWithFile(const_std_string_filename)",
"body":["cc.Animation:addSpriteFrameWithFile(const_std_string_filename)"],
"description":"addSpriteFrameWithFile(const_std_string_filename)",
"scope":"source.lua"},

"cc.Animation:getTotalDelayUnits()":{
"prefix":"cc.Animation:getTotalDelayUnits()",
"body":["cc.Animation:getTotalDelayUnits()"],
"description":"getTotalDelayUnits()",
"scope":"source.lua"},

"cc.Animation:getDelayPerUnit()":{
"prefix":"cc.Animation:getDelayPerUnit()",
"body":["cc.Animation:getDelayPerUnit()"],
"description":"getDelayPerUnit()",
"scope":"source.lua"},

"cc.Animation:initWithSpriteFrames(float_delay,unsigned_int_loops)":{
"prefix":"cc.Animation:initWithSpriteFrames(float_delay,unsigned_int_loops)",
"body":["cc.Animation:initWithSpriteFrames(float_delay,unsigned_int_loops)"],
"description":"initWithSpriteFrames(float_delay,unsigned_int_loops)",
"scope":"source.lua"},

"cc.Animation:getRestoreOriginalFrame()":{
"prefix":"cc.Animation:getRestoreOriginalFrame()",
"body":["cc.Animation:getRestoreOriginalFrame()"],
"description":"getRestoreOriginalFrame()",
"scope":"source.lua"},

"cc.Animation:addSpriteFrameWithTexture(Texture2D_pobTexture,const_Rect_rect)":{
"prefix":"cc.Animation:addSpriteFrameWithTexture(Texture2D_pobTexture,const_Rect_rect)",
"body":["cc.Animation:addSpriteFrameWithTexture(Texture2D_pobTexture,const_Rect_rect)"],
"description":"addSpriteFrameWithTexture(Texture2D_pobTexture,const_Rect_rect)",
"scope":"source.lua"},

"cc.Animation:create()":{
"prefix":"cc.Animation:create()",
"body":["cc.Animation:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Animation:create(float_delayPerUnit,unsigned_int_loops)":{
"prefix":"cc.Animation:create(float_delayPerUnit,unsigned_int_loops)",
"body":["cc.Animation:create(float_delayPerUnit,unsigned_int_loops)"],
"description":"create(float_delayPerUnit,unsigned_int_loops)",
"scope":"source.lua"},

"cc.Animation:createWithSpriteFrames(float_delay,unsigned_int_loops)":{
"prefix":"cc.Animation:createWithSpriteFrames(float_delay,unsigned_int_loops)",
"body":["cc.Animation:createWithSpriteFrames(float_delay,unsigned_int_loops)"],
"description":"createWithSpriteFrames(float_delay,unsigned_int_loops)",
"scope":"source.lua"},

"cc.ActionInterval":{
"prefix":"cc.ActionInterval",
"body":["cc.ActionInterval"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ActionInterval:getAmplitudeRate()":{
"prefix":"cc.ActionInterval:getAmplitudeRate()",
"body":["cc.ActionInterval:getAmplitudeRate()"],
"description":"getAmplitudeRate()",
"scope":"source.lua"},

"cc.ActionInterval:initWithDuration(float_d)":{
"prefix":"cc.ActionInterval:initWithDuration(float_d)",
"body":["cc.ActionInterval:initWithDuration(float_d)"],
"description":"initWithDuration(float_d)",
"scope":"source.lua"},

"cc.ActionInterval:setAmplitudeRate(float_amp)":{
"prefix":"cc.ActionInterval:setAmplitudeRate(float_amp)",
"body":["cc.ActionInterval:setAmplitudeRate(float_amp)"],
"description":"setAmplitudeRate(float_amp)",
"scope":"source.lua"},

"cc.ActionInterval:getElapsed()":{
"prefix":"cc.ActionInterval:getElapsed()",
"body":["cc.ActionInterval:getElapsed()"],
"description":"getElapsed()",
"scope":"source.lua"},

"cc.Sequence":{
"prefix":"cc.Sequence",
"body":["cc.Sequence"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Sequence:init()":{
"prefix":"cc.Sequence:init()",
"body":["cc.Sequence:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.Sequence:initWithTwoActions(FiniteTimeAction_pActionOne,FiniteTimeAction_pActionTwo)":{
"prefix":"cc.Sequence:initWithTwoActions(FiniteTimeAction_pActionOne,FiniteTimeAction_pActionTwo)",
"body":["cc.Sequence:initWithTwoActions(FiniteTimeAction_pActionOne,FiniteTimeAction_pActionTwo)"],
"description":"initWithTwoActions(FiniteTimeAction_pActionOne,FiniteTimeAction_pActionTwo)",
"scope":"source.lua"},

"cc.Repeat":{
"prefix":"cc.Repeat",
"body":["cc.Repeat"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Repeat:setInnerAction(FiniteTimeAction_action)":{
"prefix":"cc.Repeat:setInnerAction(FiniteTimeAction_action)",
"body":["cc.Repeat:setInnerAction(FiniteTimeAction_action)"],
"description":"setInnerAction(FiniteTimeAction_action)",
"scope":"source.lua"},

"cc.Repeat:initWithAction(FiniteTimeAction_pAction,unsigned_int_times)":{
"prefix":"cc.Repeat:initWithAction(FiniteTimeAction_pAction,unsigned_int_times)",
"body":["cc.Repeat:initWithAction(FiniteTimeAction_pAction,unsigned_int_times)"],
"description":"initWithAction(FiniteTimeAction_pAction,unsigned_int_times)",
"scope":"source.lua"},

"cc.Repeat:getInnerAction()":{
"prefix":"cc.Repeat:getInnerAction()",
"body":["cc.Repeat:getInnerAction()"],
"description":"getInnerAction()",
"scope":"source.lua"},

"cc.Repeat:create(FiniteTimeAction_action,unsigned_int_times)":{
"prefix":"cc.Repeat:create(FiniteTimeAction_action,unsigned_int_times)",
"body":["cc.Repeat:create(FiniteTimeAction_action,unsigned_int_times)"],
"description":"create(FiniteTimeAction_action,unsigned_int_times)",
"scope":"source.lua"},

"cc.RepeatForever":{
"prefix":"cc.RepeatForever",
"body":["cc.RepeatForever"],
"description":"cocos class",
"scope":"source.lua"},

"cc.RepeatForever:setInnerAction(ActionInterval_action)":{
"prefix":"cc.RepeatForever:setInnerAction(ActionInterval_action)",
"body":["cc.RepeatForever:setInnerAction(ActionInterval_action)"],
"description":"setInnerAction(ActionInterval_action)",
"scope":"source.lua"},

"cc.RepeatForever:initWithAction(ActionInterval_action)":{
"prefix":"cc.RepeatForever:initWithAction(ActionInterval_action)",
"body":["cc.RepeatForever:initWithAction(ActionInterval_action)"],
"description":"initWithAction(ActionInterval_action)",
"scope":"source.lua"},

"cc.RepeatForever:getInnerAction()":{
"prefix":"cc.RepeatForever:getInnerAction()",
"body":["cc.RepeatForever:getInnerAction()"],
"description":"getInnerAction()",
"scope":"source.lua"},

"cc.RepeatForever:create(ActionInterval_action)":{
"prefix":"cc.RepeatForever:create(ActionInterval_action)",
"body":["cc.RepeatForever:create(ActionInterval_action)"],
"description":"create(ActionInterval_action)",
"scope":"source.lua"},

"cc.Spawn":{
"prefix":"cc.Spawn",
"body":["cc.Spawn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Spawn:init()":{
"prefix":"cc.Spawn:init()",
"body":["cc.Spawn:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.Spawn:initWithTwoActions(FiniteTimeAction_action1,FiniteTimeAction_action2)":{
"prefix":"cc.Spawn:initWithTwoActions(FiniteTimeAction_action1,FiniteTimeAction_action2)",
"body":["cc.Spawn:initWithTwoActions(FiniteTimeAction_action1,FiniteTimeAction_action2)"],
"description":"initWithTwoActions(FiniteTimeAction_action1,FiniteTimeAction_action2)",
"scope":"source.lua"},

"cc.RotateTo":{
"prefix":"cc.RotateTo",
"body":["cc.RotateTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.RotateTo:initWithDuration(float_duration,float_dstAngleX,float_dstAngleY)":{
"prefix":"cc.RotateTo:initWithDuration(float_duration,float_dstAngleX,float_dstAngleY)",
"body":["cc.RotateTo:initWithDuration(float_duration,float_dstAngleX,float_dstAngleY)"],
"description":"initWithDuration(float_duration,float_dstAngleX,float_dstAngleY)",
"scope":"source.lua"},

"cc.RotateTo:initWithDuration(float_duration,const_Vec3_dstAngle3D)":{
"prefix":"cc.RotateTo:initWithDuration(float_duration,const_Vec3_dstAngle3D)",
"body":["cc.RotateTo:initWithDuration(float_duration,const_Vec3_dstAngle3D)"],
"description":"initWithDuration(float_duration,const_Vec3_dstAngle3D)",
"scope":"source.lua"},

"cc.RotateTo:create(float_duration,float_dstAngleX,float_dstAngleY)":{
"prefix":"cc.RotateTo:create(float_duration,float_dstAngleX,float_dstAngleY)",
"body":["cc.RotateTo:create(float_duration,float_dstAngleX,float_dstAngleY)"],
"description":"create(float_duration,float_dstAngleX,float_dstAngleY)",
"scope":"source.lua"},

"cc.RotateTo:create(float_duration,float_dstAngle)":{
"prefix":"cc.RotateTo:create(float_duration,float_dstAngle)",
"body":["cc.RotateTo:create(float_duration,float_dstAngle)"],
"description":"create(float_duration,float_dstAngle)",
"scope":"source.lua"},

"cc.RotateTo:create(float_duration,const_Vec3_dstAngle3D)":{
"prefix":"cc.RotateTo:create(float_duration,const_Vec3_dstAngle3D)",
"body":["cc.RotateTo:create(float_duration,const_Vec3_dstAngle3D)"],
"description":"create(float_duration,const_Vec3_dstAngle3D)",
"scope":"source.lua"},

"cc.RotateBy":{
"prefix":"cc.RotateBy",
"body":["cc.RotateBy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.RotateBy:initWithDuration(float_duration,float_deltaAngle)":{
"prefix":"cc.RotateBy:initWithDuration(float_duration,float_deltaAngle)",
"body":["cc.RotateBy:initWithDuration(float_duration,float_deltaAngle)"],
"description":"initWithDuration(float_duration,float_deltaAngle)",
"scope":"source.lua"},

"cc.RotateBy:initWithDuration(float_duration,float_deltaAngleZ_X,float_deltaAngleZ_Y)":{
"prefix":"cc.RotateBy:initWithDuration(float_duration,float_deltaAngleZ_X,float_deltaAngleZ_Y)",
"body":["cc.RotateBy:initWithDuration(float_duration,float_deltaAngleZ_X,float_deltaAngleZ_Y)"],
"description":"initWithDuration(float_duration,float_deltaAngleZ_X,float_deltaAngleZ_Y)",
"scope":"source.lua"},

"cc.RotateBy:create(float_duration,float_deltaAngle)":{
"prefix":"cc.RotateBy:create(float_duration,float_deltaAngle)",
"body":["cc.RotateBy:create(float_duration,float_deltaAngle)"],
"description":"create(float_duration,float_deltaAngle)",
"scope":"source.lua"},

"cc.RotateBy:create(float_duration,float_deltaAngleZ_X,float_deltaAngleZ_Y)":{
"prefix":"cc.RotateBy:create(float_duration,float_deltaAngleZ_X,float_deltaAngleZ_Y)",
"body":["cc.RotateBy:create(float_duration,float_deltaAngleZ_X,float_deltaAngleZ_Y)"],
"description":"create(float_duration,float_deltaAngleZ_X,float_deltaAngleZ_Y)",
"scope":"source.lua"},

"cc.RotateBy:create(float_duration,const_Vec3_deltaAngle3D)":{
"prefix":"cc.RotateBy:create(float_duration,const_Vec3_deltaAngle3D)",
"body":["cc.RotateBy:create(float_duration,const_Vec3_deltaAngle3D)"],
"description":"create(float_duration,const_Vec3_deltaAngle3D)",
"scope":"source.lua"},

"cc.MoveBy":{
"prefix":"cc.MoveBy",
"body":["cc.MoveBy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MoveBy:initWithDuration(float_duration,const_Vec2_deltaPosition)":{
"prefix":"cc.MoveBy:initWithDuration(float_duration,const_Vec2_deltaPosition)",
"body":["cc.MoveBy:initWithDuration(float_duration,const_Vec2_deltaPosition)"],
"description":"initWithDuration(float_duration,const_Vec2_deltaPosition)",
"scope":"source.lua"},

"cc.MoveBy:create(float_duration,const_Vec2_deltaPosition)":{
"prefix":"cc.MoveBy:create(float_duration,const_Vec2_deltaPosition)",
"body":["cc.MoveBy:create(float_duration,const_Vec2_deltaPosition)"],
"description":"create(float_duration,const_Vec2_deltaPosition)",
"scope":"source.lua"},

"cc.MoveBy:create(float_duration,const_Vec3_deltaPosition)":{
"prefix":"cc.MoveBy:create(float_duration,const_Vec3_deltaPosition)",
"body":["cc.MoveBy:create(float_duration,const_Vec3_deltaPosition)"],
"description":"create(float_duration,const_Vec3_deltaPosition)",
"scope":"source.lua"},

"cc.MoveTo":{
"prefix":"cc.MoveTo",
"body":["cc.MoveTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MoveTo:initWithDuration(float_duration,const_Vec2_position)":{
"prefix":"cc.MoveTo:initWithDuration(float_duration,const_Vec2_position)",
"body":["cc.MoveTo:initWithDuration(float_duration,const_Vec2_position)"],
"description":"initWithDuration(float_duration,const_Vec2_position)",
"scope":"source.lua"},

"cc.MoveTo:initWithDuration(float_duration,const_Vec3_position)":{
"prefix":"cc.MoveTo:initWithDuration(float_duration,const_Vec3_position)",
"body":["cc.MoveTo:initWithDuration(float_duration,const_Vec3_position)"],
"description":"initWithDuration(float_duration,const_Vec3_position)",
"scope":"source.lua"},

"cc.MoveTo:create(float_duration,const_Vec2_position)":{
"prefix":"cc.MoveTo:create(float_duration,const_Vec2_position)",
"body":["cc.MoveTo:create(float_duration,const_Vec2_position)"],
"description":"create(float_duration,const_Vec2_position)",
"scope":"source.lua"},

"cc.MoveTo:create(float_duration,const_Vec3_position)":{
"prefix":"cc.MoveTo:create(float_duration,const_Vec3_position)",
"body":["cc.MoveTo:create(float_duration,const_Vec3_position)"],
"description":"create(float_duration,const_Vec3_position)",
"scope":"source.lua"},

"cc.SkewTo":{
"prefix":"cc.SkewTo",
"body":["cc.SkewTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.SkewTo:initWithDuration(float_t,float_sx,float_sy)":{
"prefix":"cc.SkewTo:initWithDuration(float_t,float_sx,float_sy)",
"body":["cc.SkewTo:initWithDuration(float_t,float_sx,float_sy)"],
"description":"initWithDuration(float_t,float_sx,float_sy)",
"scope":"source.lua"},

"cc.SkewTo:create(float_t,float_sx,float_sy)":{
"prefix":"cc.SkewTo:create(float_t,float_sx,float_sy)",
"body":["cc.SkewTo:create(float_t,float_sx,float_sy)"],
"description":"create(float_t,float_sx,float_sy)",
"scope":"source.lua"},

"cc.SkewBy":{
"prefix":"cc.SkewBy",
"body":["cc.SkewBy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.SkewBy:initWithDuration(float_t,float_sx,float_sy)":{
"prefix":"cc.SkewBy:initWithDuration(float_t,float_sx,float_sy)",
"body":["cc.SkewBy:initWithDuration(float_t,float_sx,float_sy)"],
"description":"initWithDuration(float_t,float_sx,float_sy)",
"scope":"source.lua"},

"cc.SkewBy:create(float_t,float_deltaSkewX,float_deltaSkewY)":{
"prefix":"cc.SkewBy:create(float_t,float_deltaSkewX,float_deltaSkewY)",
"body":["cc.SkewBy:create(float_t,float_deltaSkewX,float_deltaSkewY)"],
"description":"create(float_t,float_deltaSkewX,float_deltaSkewY)",
"scope":"source.lua"},

"cc.JumpBy":{
"prefix":"cc.JumpBy",
"body":["cc.JumpBy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.JumpBy:initWithDuration(float_duration,const_Vec2_position,float_height,int_jumps)":{
"prefix":"cc.JumpBy:initWithDuration(float_duration,const_Vec2_position,float_height,int_jumps)",
"body":["cc.JumpBy:initWithDuration(float_duration,const_Vec2_position,float_height,int_jumps)"],
"description":"initWithDuration(float_duration,const_Vec2_position,float_height,int_jumps)",
"scope":"source.lua"},

"cc.JumpBy:create(float_duration,const_Vec2_position,float_height,int_jumps)":{
"prefix":"cc.JumpBy:create(float_duration,const_Vec2_position,float_height,int_jumps)",
"body":["cc.JumpBy:create(float_duration,const_Vec2_position,float_height,int_jumps)"],
"description":"create(float_duration,const_Vec2_position,float_height,int_jumps)",
"scope":"source.lua"},

"cc.JumpTo":{
"prefix":"cc.JumpTo",
"body":["cc.JumpTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.JumpTo:initWithDuration(float_duration,const_Vec2_position,float_height,int_jumps)":{
"prefix":"cc.JumpTo:initWithDuration(float_duration,const_Vec2_position,float_height,int_jumps)",
"body":["cc.JumpTo:initWithDuration(float_duration,const_Vec2_position,float_height,int_jumps)"],
"description":"initWithDuration(float_duration,const_Vec2_position,float_height,int_jumps)",
"scope":"source.lua"},

"cc.JumpTo:create(float_duration,const_Vec2_position,float_height,int_jumps)":{
"prefix":"cc.JumpTo:create(float_duration,const_Vec2_position,float_height,int_jumps)",
"body":["cc.JumpTo:create(float_duration,const_Vec2_position,float_height,int_jumps)"],
"description":"create(float_duration,const_Vec2_position,float_height,int_jumps)",
"scope":"source.lua"},

"cc.BezierBy":{
"prefix":"cc.BezierBy",
"body":["cc.BezierBy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.BezierBy:initWithDuration(float_t,const_ccBezierConfig_c)":{
"prefix":"cc.BezierBy:initWithDuration(float_t,const_ccBezierConfig_c)",
"body":["cc.BezierBy:initWithDuration(float_t,const_ccBezierConfig_c)"],
"description":"initWithDuration(float_t,const_ccBezierConfig_c)",
"scope":"source.lua"},

"cc.BezierTo":{
"prefix":"cc.BezierTo",
"body":["cc.BezierTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.BezierTo:initWithDuration(float_t,const_ccBezierConfig_c)":{
"prefix":"cc.BezierTo:initWithDuration(float_t,const_ccBezierConfig_c)",
"body":["cc.BezierTo:initWithDuration(float_t,const_ccBezierConfig_c)"],
"description":"initWithDuration(float_t,const_ccBezierConfig_c)",
"scope":"source.lua"},

"cc.ScaleTo":{
"prefix":"cc.ScaleTo",
"body":["cc.ScaleTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ScaleTo:initWithDuration(float_duration,float_s)":{
"prefix":"cc.ScaleTo:initWithDuration(float_duration,float_s)",
"body":["cc.ScaleTo:initWithDuration(float_duration,float_s)"],
"description":"initWithDuration(float_duration,float_s)",
"scope":"source.lua"},

"cc.ScaleTo:initWithDuration(float_duration,float_sx,float_sy)":{
"prefix":"cc.ScaleTo:initWithDuration(float_duration,float_sx,float_sy)",
"body":["cc.ScaleTo:initWithDuration(float_duration,float_sx,float_sy)"],
"description":"initWithDuration(float_duration,float_sx,float_sy)",
"scope":"source.lua"},

"cc.ScaleTo:initWithDuration(float_duration,float_sx,float_sy,float_sz)":{
"prefix":"cc.ScaleTo:initWithDuration(float_duration,float_sx,float_sy,float_sz)",
"body":["cc.ScaleTo:initWithDuration(float_duration,float_sx,float_sy,float_sz)"],
"description":"initWithDuration(float_duration,float_sx,float_sy,float_sz)",
"scope":"source.lua"},

"cc.ScaleTo:create(float_duration,float_s)":{
"prefix":"cc.ScaleTo:create(float_duration,float_s)",
"body":["cc.ScaleTo:create(float_duration,float_s)"],
"description":"create(float_duration,float_s)",
"scope":"source.lua"},

"cc.ScaleTo:create(float_duration,float_sx,float_sy)":{
"prefix":"cc.ScaleTo:create(float_duration,float_sx,float_sy)",
"body":["cc.ScaleTo:create(float_duration,float_sx,float_sy)"],
"description":"create(float_duration,float_sx,float_sy)",
"scope":"source.lua"},

"cc.ScaleTo:create(float_duration,float_sx,float_sy,float_sz)":{
"prefix":"cc.ScaleTo:create(float_duration,float_sx,float_sy,float_sz)",
"body":["cc.ScaleTo:create(float_duration,float_sx,float_sy,float_sz)"],
"description":"create(float_duration,float_sx,float_sy,float_sz)",
"scope":"source.lua"},

"cc.ScaleBy":{
"prefix":"cc.ScaleBy",
"body":["cc.ScaleBy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ScaleBy:create(float_duration,float_s)":{
"prefix":"cc.ScaleBy:create(float_duration,float_s)",
"body":["cc.ScaleBy:create(float_duration,float_s)"],
"description":"create(float_duration,float_s)",
"scope":"source.lua"},

"cc.ScaleBy:create(float_duration,float_sx,float_sy)":{
"prefix":"cc.ScaleBy:create(float_duration,float_sx,float_sy)",
"body":["cc.ScaleBy:create(float_duration,float_sx,float_sy)"],
"description":"create(float_duration,float_sx,float_sy)",
"scope":"source.lua"},

"cc.ScaleBy:create(float_duration,float_sx,float_sy,float_sz)":{
"prefix":"cc.ScaleBy:create(float_duration,float_sx,float_sy,float_sz)",
"body":["cc.ScaleBy:create(float_duration,float_sx,float_sy,float_sz)"],
"description":"create(float_duration,float_sx,float_sy,float_sz)",
"scope":"source.lua"},

"cc.Blink":{
"prefix":"cc.Blink",
"body":["cc.Blink"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Blink:initWithDuration(float_duration,int_blinks)":{
"prefix":"cc.Blink:initWithDuration(float_duration,int_blinks)",
"body":["cc.Blink:initWithDuration(float_duration,int_blinks)"],
"description":"initWithDuration(float_duration,int_blinks)",
"scope":"source.lua"},

"cc.Blink:create(float_duration,int_blinks)":{
"prefix":"cc.Blink:create(float_duration,int_blinks)",
"body":["cc.Blink:create(float_duration,int_blinks)"],
"description":"create(float_duration,int_blinks)",
"scope":"source.lua"},

"cc.FadeTo":{
"prefix":"cc.FadeTo",
"body":["cc.FadeTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FadeTo:initWithDuration(float_duration,GLubyte_opacity)":{
"prefix":"cc.FadeTo:initWithDuration(float_duration,GLubyte_opacity)",
"body":["cc.FadeTo:initWithDuration(float_duration,GLubyte_opacity)"],
"description":"initWithDuration(float_duration,GLubyte_opacity)",
"scope":"source.lua"},

"cc.FadeTo:create(float_duration,GLubyte_opacity)":{
"prefix":"cc.FadeTo:create(float_duration,GLubyte_opacity)",
"body":["cc.FadeTo:create(float_duration,GLubyte_opacity)"],
"description":"create(float_duration,GLubyte_opacity)",
"scope":"source.lua"},

"cc.FadeIn":{
"prefix":"cc.FadeIn",
"body":["cc.FadeIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FadeIn:setReverseAction(FadeTo_ac)":{
"prefix":"cc.FadeIn:setReverseAction(FadeTo_ac)",
"body":["cc.FadeIn:setReverseAction(FadeTo_ac)"],
"description":"setReverseAction(FadeTo_ac)",
"scope":"source.lua"},

"cc.FadeIn:create(float_d)":{
"prefix":"cc.FadeIn:create(float_d)",
"body":["cc.FadeIn:create(float_d)"],
"description":"create(float_d)",
"scope":"source.lua"},

"cc.FadeOut":{
"prefix":"cc.FadeOut",
"body":["cc.FadeOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FadeOut:setReverseAction(FadeTo_ac)":{
"prefix":"cc.FadeOut:setReverseAction(FadeTo_ac)",
"body":["cc.FadeOut:setReverseAction(FadeTo_ac)"],
"description":"setReverseAction(FadeTo_ac)",
"scope":"source.lua"},

"cc.FadeOut:create(float_d)":{
"prefix":"cc.FadeOut:create(float_d)",
"body":["cc.FadeOut:create(float_d)"],
"description":"create(float_d)",
"scope":"source.lua"},

"cc.TintTo":{
"prefix":"cc.TintTo",
"body":["cc.TintTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TintTo:initWithDuration(float_duration,GLubyte_red,GLubyte_green,GLubyte_blue)":{
"prefix":"cc.TintTo:initWithDuration(float_duration,GLubyte_red,GLubyte_green,GLubyte_blue)",
"body":["cc.TintTo:initWithDuration(float_duration,GLubyte_red,GLubyte_green,GLubyte_blue)"],
"description":"initWithDuration(float_duration,GLubyte_red,GLubyte_green,GLubyte_blue)",
"scope":"source.lua"},

"cc.TintTo:create(float_duration,GLubyte_red,GLubyte_green,GLubyte_blue)":{
"prefix":"cc.TintTo:create(float_duration,GLubyte_red,GLubyte_green,GLubyte_blue)",
"body":["cc.TintTo:create(float_duration,GLubyte_red,GLubyte_green,GLubyte_blue)"],
"description":"create(float_duration,GLubyte_red,GLubyte_green,GLubyte_blue)",
"scope":"source.lua"},

"cc.TintTo:create(float_duration,const_Color3B_color)":{
"prefix":"cc.TintTo:create(float_duration,const_Color3B_color)",
"body":["cc.TintTo:create(float_duration,const_Color3B_color)"],
"description":"create(float_duration,const_Color3B_color)",
"scope":"source.lua"},

"cc.TintBy":{
"prefix":"cc.TintBy",
"body":["cc.TintBy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TintBy:initWithDuration(float_duration,GLshort_deltaRed,GLshort_deltaGreen,GLshort_deltaBlue)":{
"prefix":"cc.TintBy:initWithDuration(float_duration,GLshort_deltaRed,GLshort_deltaGreen,GLshort_deltaBlue)",
"body":["cc.TintBy:initWithDuration(float_duration,GLshort_deltaRed,GLshort_deltaGreen,GLshort_deltaBlue)"],
"description":"initWithDuration(float_duration,GLshort_deltaRed,GLshort_deltaGreen,GLshort_deltaBlue)",
"scope":"source.lua"},

"cc.TintBy:create(float_duration,GLshort_deltaRed,GLshort_deltaGreen,GLshort_deltaBlue)":{
"prefix":"cc.TintBy:create(float_duration,GLshort_deltaRed,GLshort_deltaGreen,GLshort_deltaBlue)",
"body":["cc.TintBy:create(float_duration,GLshort_deltaRed,GLshort_deltaGreen,GLshort_deltaBlue)"],
"description":"create(float_duration,GLshort_deltaRed,GLshort_deltaGreen,GLshort_deltaBlue)",
"scope":"source.lua"},

"cc.DelayTime":{
"prefix":"cc.DelayTime",
"body":["cc.DelayTime"],
"description":"cocos class",
"scope":"source.lua"},

"cc.DelayTime:create(float_d)":{
"prefix":"cc.DelayTime:create(float_d)",
"body":["cc.DelayTime:create(float_d)"],
"description":"create(float_d)",
"scope":"source.lua"},

"cc.Animate":{
"prefix":"cc.Animate",
"body":["cc.Animate"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Animate:initWithAnimation(Animation_animation)":{
"prefix":"cc.Animate:initWithAnimation(Animation_animation)",
"body":["cc.Animate:initWithAnimation(Animation_animation)"],
"description":"initWithAnimation(Animation_animation)",
"scope":"source.lua"},

"cc.Animate:getAnimation()":{
"prefix":"cc.Animate:getAnimation()",
"body":["cc.Animate:getAnimation()"],
"description":"getAnimation()",
"scope":"source.lua"},

"cc.Animate:getCurrentFrameIndex()":{
"prefix":"cc.Animate:getCurrentFrameIndex()",
"body":["cc.Animate:getCurrentFrameIndex()"],
"description":"getCurrentFrameIndex()",
"scope":"source.lua"},

"cc.Animate:setAnimation(Animation_animation)":{
"prefix":"cc.Animate:setAnimation(Animation_animation)",
"body":["cc.Animate:setAnimation(Animation_animation)"],
"description":"setAnimation(Animation_animation)",
"scope":"source.lua"},

"cc.Animate:create(Animation_animation)":{
"prefix":"cc.Animate:create(Animation_animation)",
"body":["cc.Animate:create(Animation_animation)"],
"description":"create(Animation_animation)",
"scope":"source.lua"},

"cc.TargetedAction":{
"prefix":"cc.TargetedAction",
"body":["cc.TargetedAction"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TargetedAction:getForcedTarget()":{
"prefix":"cc.TargetedAction:getForcedTarget()",
"body":["cc.TargetedAction:getForcedTarget()"],
"description":"getForcedTarget()",
"scope":"source.lua"},

"cc.TargetedAction:initWithTarget(Node_target,FiniteTimeAction_action)":{
"prefix":"cc.TargetedAction:initWithTarget(Node_target,FiniteTimeAction_action)",
"body":["cc.TargetedAction:initWithTarget(Node_target,FiniteTimeAction_action)"],
"description":"initWithTarget(Node_target,FiniteTimeAction_action)",
"scope":"source.lua"},

"cc.TargetedAction:setForcedTarget(Node_forcedTarget)":{
"prefix":"cc.TargetedAction:setForcedTarget(Node_forcedTarget)",
"body":["cc.TargetedAction:setForcedTarget(Node_forcedTarget)"],
"description":"setForcedTarget(Node_forcedTarget)",
"scope":"source.lua"},

"cc.TargetedAction:create(Node_target,FiniteTimeAction_action)":{
"prefix":"cc.TargetedAction:create(Node_target,FiniteTimeAction_action)",
"body":["cc.TargetedAction:create(Node_target,FiniteTimeAction_action)"],
"description":"create(Node_target,FiniteTimeAction_action)",
"scope":"source.lua"},

"cc.ActionFloat":{
"prefix":"cc.ActionFloat",
"body":["cc.ActionFloat"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ActionFloat:initWithDuration(float_duration,float_from,float_to,ActionFloatCallback_callback)":{
"prefix":"cc.ActionFloat:initWithDuration(float_duration,float_from,float_to,ActionFloatCallback_callback)",
"body":["cc.ActionFloat:initWithDuration(float_duration,float_from,float_to,ActionFloatCallback_callback)"],
"description":"initWithDuration(float_duration,float_from,float_to,ActionFloatCallback_callback)",
"scope":"source.lua"},

"cc.ActionFloat:create(float_duration,float_from,float_to,ActionFloatCallback_callback)":{
"prefix":"cc.ActionFloat:create(float_duration,float_from,float_to,ActionFloatCallback_callback)",
"body":["cc.ActionFloat:create(float_duration,float_from,float_to,ActionFloatCallback_callback)"],
"description":"create(float_duration,float_from,float_to,ActionFloatCallback_callback)",
"scope":"source.lua"},

"cc.Properties":{
"prefix":"cc.Properties",
"body":["cc.Properties"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Properties:getVariable(const_char_name,const_char_defaultValue)":{
"prefix":"cc.Properties:getVariable(const_char_name,const_char_defaultValue)",
"body":["cc.Properties:getVariable(const_char_name,const_char_defaultValue)"],
"description":"getVariable(const_char_name,const_char_defaultValue)",
"scope":"source.lua"},

"cc.Properties:getString(const_char_name,const_char_defaultValue)":{
"prefix":"cc.Properties:getString(const_char_name,const_char_defaultValue)",
"body":["cc.Properties:getString(const_char_name,const_char_defaultValue)"],
"description":"getString(const_char_name,const_char_defaultValue)",
"scope":"source.lua"},

"cc.Properties:getLong(const_char_name)":{
"prefix":"cc.Properties:getLong(const_char_name)",
"body":["cc.Properties:getLong(const_char_name)"],
"description":"getLong(const_char_name)",
"scope":"source.lua"},

"cc.Properties:getNamespace(const_char_id,bool_searchNames,bool_recurse)":{
"prefix":"cc.Properties:getNamespace(const_char_id,bool_searchNames,bool_recurse)",
"body":["cc.Properties:getNamespace(const_char_id,bool_searchNames,bool_recurse)"],
"description":"getNamespace(const_char_id,bool_searchNames,bool_recurse)",
"scope":"source.lua"},

"cc.Properties:getNamespace()":{
"prefix":"cc.Properties:getNamespace()",
"body":["cc.Properties:getNamespace()"],
"description":"getNamespace()",
"scope":"source.lua"},

"cc.Properties:getPath(const_char_name,std_string_path)":{
"prefix":"cc.Properties:getPath(const_char_name,std_string_path)",
"body":["cc.Properties:getPath(const_char_name,std_string_path)"],
"description":"getPath(const_char_name,std_string_path)",
"scope":"source.lua"},

"cc.Properties:getMat4(const_char_name,Mat4_out)":{
"prefix":"cc.Properties:getMat4(const_char_name,Mat4_out)",
"body":["cc.Properties:getMat4(const_char_name,Mat4_out)"],
"description":"getMat4(const_char_name,Mat4_out)",
"scope":"source.lua"},

"cc.Properties:exists(const_char_name)":{
"prefix":"cc.Properties:exists(const_char_name)",
"body":["cc.Properties:exists(const_char_name)"],
"description":"exists(const_char_name)",
"scope":"source.lua"},

"cc.Properties:setString(const_char_name,const_char_value)":{
"prefix":"cc.Properties:setString(const_char_name,const_char_value)",
"body":["cc.Properties:setString(const_char_name,const_char_value)"],
"description":"setString(const_char_name,const_char_value)",
"scope":"source.lua"},

"cc.Properties:getId()":{
"prefix":"cc.Properties:getId()",
"body":["cc.Properties:getId()"],
"description":"getId()",
"scope":"source.lua"},

"cc.Properties:rewind()":{
"prefix":"cc.Properties:rewind()",
"body":["cc.Properties:rewind()"],
"description":"rewind()",
"scope":"source.lua"},

"cc.Properties:setVariable(const_char_name,const_char_value)":{
"prefix":"cc.Properties:setVariable(const_char_name,const_char_value)",
"body":["cc.Properties:setVariable(const_char_name,const_char_value)"],
"description":"setVariable(const_char_name,const_char_value)",
"scope":"source.lua"},

"cc.Properties:getBool(const_char_name,bool_defaultValue)":{
"prefix":"cc.Properties:getBool(const_char_name,bool_defaultValue)",
"body":["cc.Properties:getBool(const_char_name,bool_defaultValue)"],
"description":"getBool(const_char_name,bool_defaultValue)",
"scope":"source.lua"},

"cc.Properties:getColor(const_char_name,Vec3_out)":{
"prefix":"cc.Properties:getColor(const_char_name,Vec3_out)",
"body":["cc.Properties:getColor(const_char_name,Vec3_out)"],
"description":"getColor(const_char_name,Vec3_out)",
"scope":"source.lua"},

"cc.Properties:getColor(const_char_name,Vec4_out)":{
"prefix":"cc.Properties:getColor(const_char_name,Vec4_out)",
"body":["cc.Properties:getColor(const_char_name,Vec4_out)"],
"description":"getColor(const_char_name,Vec4_out)",
"scope":"source.lua"},

"cc.Properties:getType(const_char_name)":{
"prefix":"cc.Properties:getType(const_char_name)",
"body":["cc.Properties:getType(const_char_name)"],
"description":"getType(const_char_name)",
"scope":"source.lua"},

"cc.Properties:getNextNamespace()":{
"prefix":"cc.Properties:getNextNamespace()",
"body":["cc.Properties:getNextNamespace()"],
"description":"getNextNamespace()",
"scope":"source.lua"},

"cc.Properties:getInt(const_char_name)":{
"prefix":"cc.Properties:getInt(const_char_name)",
"body":["cc.Properties:getInt(const_char_name)"],
"description":"getInt(const_char_name)",
"scope":"source.lua"},

"cc.Properties:getVec3(const_char_name,Vec3_out)":{
"prefix":"cc.Properties:getVec3(const_char_name,Vec3_out)",
"body":["cc.Properties:getVec3(const_char_name,Vec3_out)"],
"description":"getVec3(const_char_name,Vec3_out)",
"scope":"source.lua"},

"cc.Properties:getVec2(const_char_name,Vec2_out)":{
"prefix":"cc.Properties:getVec2(const_char_name,Vec2_out)",
"body":["cc.Properties:getVec2(const_char_name,Vec2_out)"],
"description":"getVec2(const_char_name,Vec2_out)",
"scope":"source.lua"},

"cc.Properties:getVec4(const_char_name,Vec4_out)":{
"prefix":"cc.Properties:getVec4(const_char_name,Vec4_out)",
"body":["cc.Properties:getVec4(const_char_name,Vec4_out)"],
"description":"getVec4(const_char_name,Vec4_out)",
"scope":"source.lua"},

"cc.Properties:getNextProperty()":{
"prefix":"cc.Properties:getNextProperty()",
"body":["cc.Properties:getNextProperty()"],
"description":"getNextProperty()",
"scope":"source.lua"},

"cc.Properties:getFloat(const_char_name)":{
"prefix":"cc.Properties:getFloat(const_char_name)",
"body":["cc.Properties:getFloat(const_char_name)"],
"description":"getFloat(const_char_name)",
"scope":"source.lua"},

"cc.Properties:getQuaternionFromAxisAngle(const_char_name,Quaternion_out)":{
"prefix":"cc.Properties:getQuaternionFromAxisAngle(const_char_name,Quaternion_out)",
"body":["cc.Properties:getQuaternionFromAxisAngle(const_char_name,Quaternion_out)"],
"description":"getQuaternionFromAxisAngle(const_char_name,Quaternion_out)",
"scope":"source.lua"},

"cc.Properties:parseColor(const_char_str,Vec3_out)":{
"prefix":"cc.Properties:parseColor(const_char_str,Vec3_out)",
"body":["cc.Properties:parseColor(const_char_str,Vec3_out)"],
"description":"parseColor(const_char_str,Vec3_out)",
"scope":"source.lua"},

"cc.Properties:parseColor(const_char_str,Vec4_out)":{
"prefix":"cc.Properties:parseColor(const_char_str,Vec4_out)",
"body":["cc.Properties:parseColor(const_char_str,Vec4_out)"],
"description":"parseColor(const_char_str,Vec4_out)",
"scope":"source.lua"},

"cc.Properties:parseVec3(const_char_str,Vec3_out)":{
"prefix":"cc.Properties:parseVec3(const_char_str,Vec3_out)",
"body":["cc.Properties:parseVec3(const_char_str,Vec3_out)"],
"description":"parseVec3(const_char_str,Vec3_out)",
"scope":"source.lua"},

"cc.Properties:parseAxisAngle(const_char_str,Quaternion_out)":{
"prefix":"cc.Properties:parseAxisAngle(const_char_str,Quaternion_out)",
"body":["cc.Properties:parseAxisAngle(const_char_str,Quaternion_out)"],
"description":"parseAxisAngle(const_char_str,Quaternion_out)",
"scope":"source.lua"},

"cc.Properties:parseVec2(const_char_str,Vec2_out)":{
"prefix":"cc.Properties:parseVec2(const_char_str,Vec2_out)",
"body":["cc.Properties:parseVec2(const_char_str,Vec2_out)"],
"description":"parseVec2(const_char_str,Vec2_out)",
"scope":"source.lua"},

"cc.Properties:parseVec4(const_char_str,Vec4_out)":{
"prefix":"cc.Properties:parseVec4(const_char_str,Vec4_out)",
"body":["cc.Properties:parseVec4(const_char_str,Vec4_out)"],
"description":"parseVec4(const_char_str,Vec4_out)",
"scope":"source.lua"},

"cc.UserDefault":{
"prefix":"cc.UserDefault",
"body":["cc.UserDefault"],
"description":"cocos class",
"scope":"source.lua"},

"cc.UserDefault:setIntegerForKey(const_char_key,int_value)":{
"prefix":"cc.UserDefault:setIntegerForKey(const_char_key,int_value)",
"body":["cc.UserDefault:setIntegerForKey(const_char_key,int_value)"],
"description":"setIntegerForKey(const_char_key,int_value)",
"scope":"source.lua"},

"cc.UserDefault:deleteValueForKey(const_char_key)":{
"prefix":"cc.UserDefault:deleteValueForKey(const_char_key)",
"body":["cc.UserDefault:deleteValueForKey(const_char_key)"],
"description":"deleteValueForKey(const_char_key)",
"scope":"source.lua"},

"cc.UserDefault:getFloatForKey(const_char_key)":{
"prefix":"cc.UserDefault:getFloatForKey(const_char_key)",
"body":["cc.UserDefault:getFloatForKey(const_char_key)"],
"description":"getFloatForKey(const_char_key)",
"scope":"source.lua"},

"cc.UserDefault:getFloatForKey(const_char_key,float_defaultValue)":{
"prefix":"cc.UserDefault:getFloatForKey(const_char_key,float_defaultValue)",
"body":["cc.UserDefault:getFloatForKey(const_char_key,float_defaultValue)"],
"description":"getFloatForKey(const_char_key,float_defaultValue)",
"scope":"source.lua"},

"cc.UserDefault:getBoolForKey(const_char_key)":{
"prefix":"cc.UserDefault:getBoolForKey(const_char_key)",
"body":["cc.UserDefault:getBoolForKey(const_char_key)"],
"description":"getBoolForKey(const_char_key)",
"scope":"source.lua"},

"cc.UserDefault:getBoolForKey(const_char_key,bool_defaultValue)":{
"prefix":"cc.UserDefault:getBoolForKey(const_char_key,bool_defaultValue)",
"body":["cc.UserDefault:getBoolForKey(const_char_key,bool_defaultValue)"],
"description":"getBoolForKey(const_char_key,bool_defaultValue)",
"scope":"source.lua"},

"cc.UserDefault:setDoubleForKey(const_char_key,double_value)":{
"prefix":"cc.UserDefault:setDoubleForKey(const_char_key,double_value)",
"body":["cc.UserDefault:setDoubleForKey(const_char_key,double_value)"],
"description":"setDoubleForKey(const_char_key,double_value)",
"scope":"source.lua"},

"cc.UserDefault:setFloatForKey(const_char_key,float_value)":{
"prefix":"cc.UserDefault:setFloatForKey(const_char_key,float_value)",
"body":["cc.UserDefault:setFloatForKey(const_char_key,float_value)"],
"description":"setFloatForKey(const_char_key,float_value)",
"scope":"source.lua"},

"cc.UserDefault:getStringForKey(const_char_key)":{
"prefix":"cc.UserDefault:getStringForKey(const_char_key)",
"body":["cc.UserDefault:getStringForKey(const_char_key)"],
"description":"getStringForKey(const_char_key)",
"scope":"source.lua"},

"cc.UserDefault:getStringForKey(const_char_key,const_std_string__defaultValue)":{
"prefix":"cc.UserDefault:getStringForKey(const_char_key,const_std_string__defaultValue)",
"body":["cc.UserDefault:getStringForKey(const_char_key,const_std_string__defaultValue)"],
"description":"getStringForKey(const_char_key,const_std_string__defaultValue)",
"scope":"source.lua"},

"cc.UserDefault:setStringForKey(const_char_key,const_std_string__value)":{
"prefix":"cc.UserDefault:setStringForKey(const_char_key,const_std_string__value)",
"body":["cc.UserDefault:setStringForKey(const_char_key,const_std_string__value)"],
"description":"setStringForKey(const_char_key,const_std_string__value)",
"scope":"source.lua"},

"cc.UserDefault:flush()":{
"prefix":"cc.UserDefault:flush()",
"body":["cc.UserDefault:flush()"],
"description":"flush()",
"scope":"source.lua"},

"cc.UserDefault:getIntegerForKey(const_char_key)":{
"prefix":"cc.UserDefault:getIntegerForKey(const_char_key)",
"body":["cc.UserDefault:getIntegerForKey(const_char_key)"],
"description":"getIntegerForKey(const_char_key)",
"scope":"source.lua"},

"cc.UserDefault:getIntegerForKey(const_char_key,int_defaultValue)":{
"prefix":"cc.UserDefault:getIntegerForKey(const_char_key,int_defaultValue)",
"body":["cc.UserDefault:getIntegerForKey(const_char_key,int_defaultValue)"],
"description":"getIntegerForKey(const_char_key,int_defaultValue)",
"scope":"source.lua"},

"cc.UserDefault:getDoubleForKey(const_char_key)":{
"prefix":"cc.UserDefault:getDoubleForKey(const_char_key)",
"body":["cc.UserDefault:getDoubleForKey(const_char_key)"],
"description":"getDoubleForKey(const_char_key)",
"scope":"source.lua"},

"cc.UserDefault:getDoubleForKey(const_char_key,double_defaultValue)":{
"prefix":"cc.UserDefault:getDoubleForKey(const_char_key,double_defaultValue)",
"body":["cc.UserDefault:getDoubleForKey(const_char_key,double_defaultValue)"],
"description":"getDoubleForKey(const_char_key,double_defaultValue)",
"scope":"source.lua"},

"cc.UserDefault:setBoolForKey(const_char_key,bool_value)":{
"prefix":"cc.UserDefault:setBoolForKey(const_char_key,bool_value)",
"body":["cc.UserDefault:setBoolForKey(const_char_key,bool_value)"],
"description":"setBoolForKey(const_char_key,bool_value)",
"scope":"source.lua"},

"cc.UserDefault:destroyInstance()":{
"prefix":"cc.UserDefault:destroyInstance()",
"body":["cc.UserDefault:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"cc.UserDefault:getXMLFilePath()":{
"prefix":"cc.UserDefault:getXMLFilePath()",
"body":["cc.UserDefault:getXMLFilePath()"],
"description":"getXMLFilePath()",
"scope":"source.lua"},

"cc.UserDefault:isXMLFileExist()":{
"prefix":"cc.UserDefault:isXMLFileExist()",
"body":["cc.UserDefault:isXMLFileExist()"],
"description":"isXMLFileExist()",
"scope":"source.lua"},

"cc.FileUtils":{
"prefix":"cc.FileUtils",
"body":["cc.FileUtils"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FileUtils:fullPathForFilename(const_std_string_filename)":{
"prefix":"cc.FileUtils:fullPathForFilename(const_std_string_filename)",
"body":["cc.FileUtils:fullPathForFilename(const_std_string_filename)"],
"description":"fullPathForFilename(const_std_string_filename)",
"scope":"source.lua"},

"cc.FileUtils:getStringFromFile(const_std_string_filename)":{
"prefix":"cc.FileUtils:getStringFromFile(const_std_string_filename)",
"body":["cc.FileUtils:getStringFromFile(const_std_string_filename)"],
"description":"getStringFromFile(const_std_string_filename)",
"scope":"source.lua"},

"cc.FileUtils:getStringFromFile(const_std_string_path)":{
"prefix":"cc.FileUtils:getStringFromFile(const_std_string_path)",
"body":["cc.FileUtils:getStringFromFile(const_std_string_path)"],
"description":"getStringFromFile(const_std_string_path)",
"scope":"source.lua"},

"cc.FileUtils:setFilenameLookupDictionary(const_ValueMap_filenameLookupDict)":{
"prefix":"cc.FileUtils:setFilenameLookupDictionary(const_ValueMap_filenameLookupDict)",
"body":["cc.FileUtils:setFilenameLookupDictionary(const_ValueMap_filenameLookupDict)"],
"description":"setFilenameLookupDictionary(const_ValueMap_filenameLookupDict)",
"scope":"source.lua"},

"cc.FileUtils:removeFile(const_std_string_filepath)":{
"prefix":"cc.FileUtils:removeFile(const_std_string_filepath)",
"body":["cc.FileUtils:removeFile(const_std_string_filepath)"],
"description":"removeFile(const_std_string_filepath)",
"scope":"source.lua"},

"cc.FileUtils:listFilesRecursivelyAsync(const_std_string_dirPath)":{
"prefix":"cc.FileUtils:listFilesRecursivelyAsync(const_std_string_dirPath)",
"body":["cc.FileUtils:listFilesRecursivelyAsync(const_std_string_dirPath)"],
"description":"listFilesRecursivelyAsync(const_std_string_dirPath)",
"scope":"source.lua"},

"cc.FileUtils:isAbsolutePath(const_std_string_path)":{
"prefix":"cc.FileUtils:isAbsolutePath(const_std_string_path)",
"body":["cc.FileUtils:isAbsolutePath(const_std_string_path)"],
"description":"isAbsolutePath(const_std_string_path)",
"scope":"source.lua"},

"cc.FileUtils:renameFile(const_std_string_path,const_std_string_oldname,const_std_string_name)":{
"prefix":"cc.FileUtils:renameFile(const_std_string_path,const_std_string_oldname,const_std_string_name)",
"body":["cc.FileUtils:renameFile(const_std_string_path,const_std_string_oldname,const_std_string_name)"],
"description":"renameFile(const_std_string_path,const_std_string_oldname,const_std_string_name)",
"scope":"source.lua"},

"cc.FileUtils:renameFile(const_std_string_oldfullpath,const_std_string_newfullpath)":{
"prefix":"cc.FileUtils:renameFile(const_std_string_oldfullpath,const_std_string_newfullpath)",
"body":["cc.FileUtils:renameFile(const_std_string_oldfullpath,const_std_string_newfullpath)"],
"description":"renameFile(const_std_string_oldfullpath,const_std_string_newfullpath)",
"scope":"source.lua"},

"cc.FileUtils:getDefaultResourceRootPath()":{
"prefix":"cc.FileUtils:getDefaultResourceRootPath()",
"body":["cc.FileUtils:getDefaultResourceRootPath()"],
"description":"getDefaultResourceRootPath()",
"scope":"source.lua"},

"cc.FileUtils:isPopupNotify()":{
"prefix":"cc.FileUtils:isPopupNotify()",
"body":["cc.FileUtils:isPopupNotify()"],
"description":"isPopupNotify()",
"scope":"source.lua"},

"cc.FileUtils:getValueVectorFromFile(const_std_string_filename)":{
"prefix":"cc.FileUtils:getValueVectorFromFile(const_std_string_filename)",
"body":["cc.FileUtils:getValueVectorFromFile(const_std_string_filename)"],
"description":"getValueVectorFromFile(const_std_string_filename)",
"scope":"source.lua"},

"cc.FileUtils:getSearchPaths()":{
"prefix":"cc.FileUtils:getSearchPaths()",
"body":["cc.FileUtils:getSearchPaths()"],
"description":"getSearchPaths()",
"scope":"source.lua"},

"cc.FileUtils:writeToFile(const_ValueMap_dict,const_std_string_fullPath)":{
"prefix":"cc.FileUtils:writeToFile(const_ValueMap_dict,const_std_string_fullPath)",
"body":["cc.FileUtils:writeToFile(const_ValueMap_dict,const_std_string_fullPath)"],
"description":"writeToFile(const_ValueMap_dict,const_std_string_fullPath)",
"scope":"source.lua"},

"cc.FileUtils:getOriginalSearchPaths()":{
"prefix":"cc.FileUtils:getOriginalSearchPaths()",
"body":["cc.FileUtils:getOriginalSearchPaths()"],
"description":"getOriginalSearchPaths()",
"scope":"source.lua"},

"cc.FileUtils:getNewFilename(const_std_string_filename)":{
"prefix":"cc.FileUtils:getNewFilename(const_std_string_filename)",
"body":["cc.FileUtils:getNewFilename(const_std_string_filename)"],
"description":"getNewFilename(const_std_string_filename)",
"scope":"source.lua"},

"cc.FileUtils:listFiles(const_std_string_dirPath)":{
"prefix":"cc.FileUtils:listFiles(const_std_string_dirPath)",
"body":["cc.FileUtils:listFiles(const_std_string_dirPath)"],
"description":"listFiles(const_std_string_dirPath)",
"scope":"source.lua"},

"cc.FileUtils:getValueMapFromFile(const_std_string_filename)":{
"prefix":"cc.FileUtils:getValueMapFromFile(const_std_string_filename)",
"body":["cc.FileUtils:getValueMapFromFile(const_std_string_filename)"],
"description":"getValueMapFromFile(const_std_string_filename)",
"scope":"source.lua"},

"cc.FileUtils:getFileSize(const_std_string_filepath)":{
"prefix":"cc.FileUtils:getFileSize(const_std_string_filepath)",
"body":["cc.FileUtils:getFileSize(const_std_string_filepath)"],
"description":"getFileSize(const_std_string_filepath)",
"scope":"source.lua"},

"cc.FileUtils:getValueMapFromData(const_char_filedata,int_filesize)":{
"prefix":"cc.FileUtils:getValueMapFromData(const_char_filedata,int_filesize)",
"body":["cc.FileUtils:getValueMapFromData(const_char_filedata,int_filesize)"],
"description":"getValueMapFromData(const_char_filedata,int_filesize)",
"scope":"source.lua"},

"cc.FileUtils:removeDirectory(const_std_string_dirPath)":{
"prefix":"cc.FileUtils:removeDirectory(const_std_string_dirPath)",
"body":["cc.FileUtils:removeDirectory(const_std_string_dirPath)"],
"description":"removeDirectory(const_std_string_dirPath)",
"scope":"source.lua"},

"cc.FileUtils:setSearchPaths()":{
"prefix":"cc.FileUtils:setSearchPaths()",
"body":["cc.FileUtils:setSearchPaths()"],
"description":"setSearchPaths()",
"scope":"source.lua"},

"cc.FileUtils:writeStringToFile(const_std_string_dataStr,const_std_string_fullPath)":{
"prefix":"cc.FileUtils:writeStringToFile(const_std_string_dataStr,const_std_string_fullPath)",
"body":["cc.FileUtils:writeStringToFile(const_std_string_dataStr,const_std_string_fullPath)"],
"description":"writeStringToFile(const_std_string_dataStr,const_std_string_fullPath)",
"scope":"source.lua"},

"cc.FileUtils:writeStringToFile(std_string_dataStr,const_std_string_fullPath)":{
"prefix":"cc.FileUtils:writeStringToFile(std_string_dataStr,const_std_string_fullPath)",
"body":["cc.FileUtils:writeStringToFile(std_string_dataStr,const_std_string_fullPath)"],
"description":"writeStringToFile(std_string_dataStr,const_std_string_fullPath)",
"scope":"source.lua"},

"cc.FileUtils:setSearchResolutionsOrder()":{
"prefix":"cc.FileUtils:setSearchResolutionsOrder()",
"body":["cc.FileUtils:setSearchResolutionsOrder()"],
"description":"setSearchResolutionsOrder()",
"scope":"source.lua"},

"cc.FileUtils:addSearchResolutionsOrder(const_std_string_order,const_bool_front)":{
"prefix":"cc.FileUtils:addSearchResolutionsOrder(const_std_string_order,const_bool_front)",
"body":["cc.FileUtils:addSearchResolutionsOrder(const_std_string_order,const_bool_front)"],
"description":"addSearchResolutionsOrder(const_std_string_order,const_bool_front)",
"scope":"source.lua"},

"cc.FileUtils:addSearchPath(const_std_string__path,const_bool_front)":{
"prefix":"cc.FileUtils:addSearchPath(const_std_string__path,const_bool_front)",
"body":["cc.FileUtils:addSearchPath(const_std_string__path,const_bool_front)"],
"description":"addSearchPath(const_std_string__path,const_bool_front)",
"scope":"source.lua"},

"cc.FileUtils:writeValueVectorToFile(const_ValueVector_vecData,const_std_string_fullPath)":{
"prefix":"cc.FileUtils:writeValueVectorToFile(const_ValueVector_vecData,const_std_string_fullPath)",
"body":["cc.FileUtils:writeValueVectorToFile(const_ValueVector_vecData,const_std_string_fullPath)"],
"description":"writeValueVectorToFile(const_ValueVector_vecData,const_std_string_fullPath)",
"scope":"source.lua"},

"cc.FileUtils:writeValueVectorToFile(ValueVector_vecData,const_std_string_fullPath)":{
"prefix":"cc.FileUtils:writeValueVectorToFile(ValueVector_vecData,const_std_string_fullPath)",
"body":["cc.FileUtils:writeValueVectorToFile(ValueVector_vecData,const_std_string_fullPath)"],
"description":"writeValueVectorToFile(ValueVector_vecData,const_std_string_fullPath)",
"scope":"source.lua"},

"cc.FileUtils:isFileExist(const_std_string_filename)":{
"prefix":"cc.FileUtils:isFileExist(const_std_string_filename)",
"body":["cc.FileUtils:isFileExist(const_std_string_filename)"],
"description":"isFileExist(const_std_string_filename)",
"scope":"source.lua"},

"cc.FileUtils:purgeCachedEntries()":{
"prefix":"cc.FileUtils:purgeCachedEntries()",
"body":["cc.FileUtils:purgeCachedEntries()"],
"description":"purgeCachedEntries()",
"scope":"source.lua"},

"cc.FileUtils:fullPathFromRelativeFile(const_std_string_filename,const_std_string_relativeFile)":{
"prefix":"cc.FileUtils:fullPathFromRelativeFile(const_std_string_filename,const_std_string_relativeFile)",
"body":["cc.FileUtils:fullPathFromRelativeFile(const_std_string_filename,const_std_string_relativeFile)"],
"description":"fullPathFromRelativeFile(const_std_string_filename,const_std_string_relativeFile)",
"scope":"source.lua"},

"cc.FileUtils:getSuitableFOpen(const_std_string_filenameUtf8)":{
"prefix":"cc.FileUtils:getSuitableFOpen(const_std_string_filenameUtf8)",
"body":["cc.FileUtils:getSuitableFOpen(const_std_string_filenameUtf8)"],
"description":"getSuitableFOpen(const_std_string_filenameUtf8)",
"scope":"source.lua"},

"cc.FileUtils:writeValueMapToFile(const_ValueMap_dict,const_std_string_fullPath)":{
"prefix":"cc.FileUtils:writeValueMapToFile(const_ValueMap_dict,const_std_string_fullPath)",
"body":["cc.FileUtils:writeValueMapToFile(const_ValueMap_dict,const_std_string_fullPath)"],
"description":"writeValueMapToFile(const_ValueMap_dict,const_std_string_fullPath)",
"scope":"source.lua"},

"cc.FileUtils:writeValueMapToFile(ValueMap_dict,const_std_string_fullPath)":{
"prefix":"cc.FileUtils:writeValueMapToFile(ValueMap_dict,const_std_string_fullPath)",
"body":["cc.FileUtils:writeValueMapToFile(ValueMap_dict,const_std_string_fullPath)"],
"description":"writeValueMapToFile(ValueMap_dict,const_std_string_fullPath)",
"scope":"source.lua"},

"cc.FileUtils:getFileExtension(const_std_string_filePath)":{
"prefix":"cc.FileUtils:getFileExtension(const_std_string_filePath)",
"body":["cc.FileUtils:getFileExtension(const_std_string_filePath)"],
"description":"getFileExtension(const_std_string_filePath)",
"scope":"source.lua"},

"cc.FileUtils:setWritablePath(const_std_string_writablePath)":{
"prefix":"cc.FileUtils:setWritablePath(const_std_string_writablePath)",
"body":["cc.FileUtils:setWritablePath(const_std_string_writablePath)"],
"description":"setWritablePath(const_std_string_writablePath)",
"scope":"source.lua"},

"cc.FileUtils:setPopupNotify(bool_notify)":{
"prefix":"cc.FileUtils:setPopupNotify(bool_notify)",
"body":["cc.FileUtils:setPopupNotify(bool_notify)"],
"description":"setPopupNotify(bool_notify)",
"scope":"source.lua"},

"cc.FileUtils:isDirectoryExist(const_std_string_dirPath)":{
"prefix":"cc.FileUtils:isDirectoryExist(const_std_string_dirPath)",
"body":["cc.FileUtils:isDirectoryExist(const_std_string_dirPath)"],
"description":"isDirectoryExist(const_std_string_dirPath)",
"scope":"source.lua"},

"cc.FileUtils:isDirectoryExist(const_std_string_fullPath)":{
"prefix":"cc.FileUtils:isDirectoryExist(const_std_string_fullPath)",
"body":["cc.FileUtils:isDirectoryExist(const_std_string_fullPath)"],
"description":"isDirectoryExist(const_std_string_fullPath)",
"scope":"source.lua"},

"cc.FileUtils:setDefaultResourceRootPath(const_std_string_path)":{
"prefix":"cc.FileUtils:setDefaultResourceRootPath(const_std_string_path)",
"body":["cc.FileUtils:setDefaultResourceRootPath(const_std_string_path)"],
"description":"setDefaultResourceRootPath(const_std_string_path)",
"scope":"source.lua"},

"cc.FileUtils:getSearchResolutionsOrder()":{
"prefix":"cc.FileUtils:getSearchResolutionsOrder()",
"body":["cc.FileUtils:getSearchResolutionsOrder()"],
"description":"getSearchResolutionsOrder()",
"scope":"source.lua"},

"cc.FileUtils:createDirectory(const_std_string_dirPath)":{
"prefix":"cc.FileUtils:createDirectory(const_std_string_dirPath)",
"body":["cc.FileUtils:createDirectory(const_std_string_dirPath)"],
"description":"createDirectory(const_std_string_dirPath)",
"scope":"source.lua"},

"cc.FileUtils:listFilesAsync(const_std_string_dirPath)":{
"prefix":"cc.FileUtils:listFilesAsync(const_std_string_dirPath)",
"body":["cc.FileUtils:listFilesAsync(const_std_string_dirPath)"],
"description":"listFilesAsync(const_std_string_dirPath)",
"scope":"source.lua"},

"cc.FileUtils:getWritablePath()":{
"prefix":"cc.FileUtils:getWritablePath()",
"body":["cc.FileUtils:getWritablePath()"],
"description":"getWritablePath()",
"scope":"source.lua"},

"cc.FileUtils:listFilesRecursively(const_std_string_dirPath)":{
"prefix":"cc.FileUtils:listFilesRecursively(const_std_string_dirPath)",
"body":["cc.FileUtils:listFilesRecursively(const_std_string_dirPath)"],
"description":"listFilesRecursively(const_std_string_dirPath)",
"scope":"source.lua"},

"cc.FileUtils:destroyInstance()":{
"prefix":"cc.FileUtils:destroyInstance()",
"body":["cc.FileUtils:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"cc.FileUtils:getInstance()":{
"prefix":"cc.FileUtils:getInstance()",
"body":["cc.FileUtils:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"cc.EventAcceleration":{
"prefix":"cc.EventAcceleration",
"body":["cc.EventAcceleration"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventCustom":{
"prefix":"cc.EventCustom",
"body":["cc.EventCustom"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventCustom:getEventName()":{
"prefix":"cc.EventCustom:getEventName()",
"body":["cc.EventCustom:getEventName()"],
"description":"getEventName()",
"scope":"source.lua"},

"cc.EventListener":{
"prefix":"cc.EventListener",
"body":["cc.EventListener"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListener:setEnabled(bool_enabled)":{
"prefix":"cc.EventListener:setEnabled(bool_enabled)",
"body":["cc.EventListener:setEnabled(bool_enabled)"],
"description":"setEnabled(bool_enabled)",
"scope":"source.lua"},

"cc.EventListener:isEnabled()":{
"prefix":"cc.EventListener:isEnabled()",
"body":["cc.EventListener:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"cc.EventListener:clone()":{
"prefix":"cc.EventListener:clone()",
"body":["cc.EventListener:clone()"],
"description":"clone()",
"scope":"source.lua"},

"cc.EventListener:checkAvailable()":{
"prefix":"cc.EventListener:checkAvailable()",
"body":["cc.EventListener:checkAvailable()"],
"description":"checkAvailable()",
"scope":"source.lua"},

"cc.EventDispatcher":{
"prefix":"cc.EventDispatcher",
"body":["cc.EventDispatcher"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventDispatcher:pauseEventListenersForTarget(Node_target,bool_recursive)":{
"prefix":"cc.EventDispatcher:pauseEventListenersForTarget(Node_target,bool_recursive)",
"body":["cc.EventDispatcher:pauseEventListenersForTarget(Node_target,bool_recursive)"],
"description":"pauseEventListenersForTarget(Node_target,bool_recursive)",
"scope":"source.lua"},

"cc.EventDispatcher:addEventListenerWithSceneGraphPriority(EventListener_listener,Node_node)":{
"prefix":"cc.EventDispatcher:addEventListenerWithSceneGraphPriority(EventListener_listener,Node_node)",
"body":["cc.EventDispatcher:addEventListenerWithSceneGraphPriority(EventListener_listener,Node_node)"],
"description":"addEventListenerWithSceneGraphPriority(EventListener_listener,Node_node)",
"scope":"source.lua"},

"cc.EventDispatcher:setEnabled(bool_isEnabled)":{
"prefix":"cc.EventDispatcher:setEnabled(bool_isEnabled)",
"body":["cc.EventDispatcher:setEnabled(bool_isEnabled)"],
"description":"setEnabled(bool_isEnabled)",
"scope":"source.lua"},

"cc.EventDispatcher:addEventListenerWithFixedPriority(EventListener_listener,int_fixedPriority)":{
"prefix":"cc.EventDispatcher:addEventListenerWithFixedPriority(EventListener_listener,int_fixedPriority)",
"body":["cc.EventDispatcher:addEventListenerWithFixedPriority(EventListener_listener,int_fixedPriority)"],
"description":"addEventListenerWithFixedPriority(EventListener_listener,int_fixedPriority)",
"scope":"source.lua"},

"cc.EventDispatcher:removeEventListener(EventListener_listener)":{
"prefix":"cc.EventDispatcher:removeEventListener(EventListener_listener)",
"body":["cc.EventDispatcher:removeEventListener(EventListener_listener)"],
"description":"removeEventListener(EventListener_listener)",
"scope":"source.lua"},

"cc.EventDispatcher:dispatchCustomEvent(const_std_string_eventName,void_optionalUserData)":{
"prefix":"cc.EventDispatcher:dispatchCustomEvent(const_std_string_eventName,void_optionalUserData)",
"body":["cc.EventDispatcher:dispatchCustomEvent(const_std_string_eventName,void_optionalUserData)"],
"description":"dispatchCustomEvent(const_std_string_eventName,void_optionalUserData)",
"scope":"source.lua"},

"cc.EventDispatcher:resumeEventListenersForTarget(Node_target,bool_recursive)":{
"prefix":"cc.EventDispatcher:resumeEventListenersForTarget(Node_target,bool_recursive)",
"body":["cc.EventDispatcher:resumeEventListenersForTarget(Node_target,bool_recursive)"],
"description":"resumeEventListenersForTarget(Node_target,bool_recursive)",
"scope":"source.lua"},

"cc.EventDispatcher:removeEventListenersForTarget(Node_target,bool_recursive)":{
"prefix":"cc.EventDispatcher:removeEventListenersForTarget(Node_target,bool_recursive)",
"body":["cc.EventDispatcher:removeEventListenersForTarget(Node_target,bool_recursive)"],
"description":"removeEventListenersForTarget(Node_target,bool_recursive)",
"scope":"source.lua"},

"cc.EventDispatcher:setPriority(EventListener_listener,int_fixedPriority)":{
"prefix":"cc.EventDispatcher:setPriority(EventListener_listener,int_fixedPriority)",
"body":["cc.EventDispatcher:setPriority(EventListener_listener,int_fixedPriority)"],
"description":"setPriority(EventListener_listener,int_fixedPriority)",
"scope":"source.lua"},

"cc.EventDispatcher:addCustomEventListener(const_std_string_eventName)":{
"prefix":"cc.EventDispatcher:addCustomEventListener(const_std_string_eventName)",
"body":["cc.EventDispatcher:addCustomEventListener(const_std_string_eventName)"],
"description":"addCustomEventListener(const_std_string_eventName)",
"scope":"source.lua"},

"cc.EventDispatcher:dispatchEvent(Event_event)":{
"prefix":"cc.EventDispatcher:dispatchEvent(Event_event)",
"body":["cc.EventDispatcher:dispatchEvent(Event_event)"],
"description":"dispatchEvent(Event_event)",
"scope":"source.lua"},

"cc.EventDispatcher:hasEventListener(const_EventListener_ListenerID_listenerID)":{
"prefix":"cc.EventDispatcher:hasEventListener(const_EventListener_ListenerID_listenerID)",
"body":["cc.EventDispatcher:hasEventListener(const_EventListener_ListenerID_listenerID)"],
"description":"hasEventListener(const_EventListener_ListenerID_listenerID)",
"scope":"source.lua"},

"cc.EventDispatcher:removeAllEventListeners()":{
"prefix":"cc.EventDispatcher:removeAllEventListeners()",
"body":["cc.EventDispatcher:removeAllEventListeners()"],
"description":"removeAllEventListeners()",
"scope":"source.lua"},

"cc.EventDispatcher:removeCustomEventListeners(const_std_string_customEventName)":{
"prefix":"cc.EventDispatcher:removeCustomEventListeners(const_std_string_customEventName)",
"body":["cc.EventDispatcher:removeCustomEventListeners(const_std_string_customEventName)"],
"description":"removeCustomEventListeners(const_std_string_customEventName)",
"scope":"source.lua"},

"cc.EventDispatcher:isEnabled()":{
"prefix":"cc.EventDispatcher:isEnabled()",
"body":["cc.EventDispatcher:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"cc.EventDispatcher:removeEventListenersForType(EventListener_Type_listenerType)":{
"prefix":"cc.EventDispatcher:removeEventListenersForType(EventListener_Type_listenerType)",
"body":["cc.EventDispatcher:removeEventListenersForType(EventListener_Type_listenerType)"],
"description":"removeEventListenersForType(EventListener_Type_listenerType)",
"scope":"source.lua"},

"cc.EventFocus":{
"prefix":"cc.EventFocus",
"body":["cc.EventFocus"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventFocus:new()":{
"prefix":"cc.EventFocus:new()",
"body":["cc.EventFocus:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EventListenerAcceleration":{
"prefix":"cc.EventListenerAcceleration",
"body":["cc.EventListenerAcceleration"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerAcceleration:init()":{
"prefix":"cc.EventListenerAcceleration:init()",
"body":["cc.EventListenerAcceleration:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.EventListenerCustom":{
"prefix":"cc.EventListenerCustom",
"body":["cc.EventListenerCustom"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerCustom:new()":{
"prefix":"cc.EventListenerCustom:new()",
"body":["cc.EventListenerCustom:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EventListenerFocus":{
"prefix":"cc.EventListenerFocus",
"body":["cc.EventListenerFocus"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerFocus:init()":{
"prefix":"cc.EventListenerFocus:init()",
"body":["cc.EventListenerFocus:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.EventListenerKeyboard":{
"prefix":"cc.EventListenerKeyboard",
"body":["cc.EventListenerKeyboard"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerKeyboard:init()":{
"prefix":"cc.EventListenerKeyboard:init()",
"body":["cc.EventListenerKeyboard:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.EventMouse":{
"prefix":"cc.EventMouse",
"body":["cc.EventMouse"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventMouse:getPreviousLocationInView()":{
"prefix":"cc.EventMouse:getPreviousLocationInView()",
"body":["cc.EventMouse:getPreviousLocationInView()"],
"description":"getPreviousLocationInView()",
"scope":"source.lua"},

"cc.EventMouse:getLocation()":{
"prefix":"cc.EventMouse:getLocation()",
"body":["cc.EventMouse:getLocation()"],
"description":"getLocation()",
"scope":"source.lua"},

"cc.EventMouse:getMouseButton()":{
"prefix":"cc.EventMouse:getMouseButton()",
"body":["cc.EventMouse:getMouseButton()"],
"description":"getMouseButton()",
"scope":"source.lua"},

"cc.EventMouse:getPreviousLocation()":{
"prefix":"cc.EventMouse:getPreviousLocation()",
"body":["cc.EventMouse:getPreviousLocation()"],
"description":"getPreviousLocation()",
"scope":"source.lua"},

"cc.EventMouse:getDelta()":{
"prefix":"cc.EventMouse:getDelta()",
"body":["cc.EventMouse:getDelta()"],
"description":"getDelta()",
"scope":"source.lua"},

"cc.EventMouse:setScrollData(float_scrollX,float_scrollY)":{
"prefix":"cc.EventMouse:setScrollData(float_scrollX,float_scrollY)",
"body":["cc.EventMouse:setScrollData(float_scrollX,float_scrollY)"],
"description":"setScrollData(float_scrollX,float_scrollY)",
"scope":"source.lua"},

"cc.EventMouse:getStartLocationInView()":{
"prefix":"cc.EventMouse:getStartLocationInView()",
"body":["cc.EventMouse:getStartLocationInView()"],
"description":"getStartLocationInView()",
"scope":"source.lua"},

"cc.EventMouse:getStartLocation()":{
"prefix":"cc.EventMouse:getStartLocation()",
"body":["cc.EventMouse:getStartLocation()"],
"description":"getStartLocation()",
"scope":"source.lua"},

"cc.EventMouse:setMouseButton(MouseButton_button)":{
"prefix":"cc.EventMouse:setMouseButton(MouseButton_button)",
"body":["cc.EventMouse:setMouseButton(MouseButton_button)"],
"description":"setMouseButton(MouseButton_button)",
"scope":"source.lua"},

"cc.EventMouse:getLocationInView()":{
"prefix":"cc.EventMouse:getLocationInView()",
"body":["cc.EventMouse:getLocationInView()"],
"description":"getLocationInView()",
"scope":"source.lua"},

"cc.EventMouse:getScrollY()":{
"prefix":"cc.EventMouse:getScrollY()",
"body":["cc.EventMouse:getScrollY()"],
"description":"getScrollY()",
"scope":"source.lua"},

"cc.EventMouse:getScrollX()":{
"prefix":"cc.EventMouse:getScrollX()",
"body":["cc.EventMouse:getScrollX()"],
"description":"getScrollX()",
"scope":"source.lua"},

"cc.EventMouse:getCursorX()":{
"prefix":"cc.EventMouse:getCursorX()",
"body":["cc.EventMouse:getCursorX()"],
"description":"getCursorX()",
"scope":"source.lua"},

"cc.EventMouse:getCursorY()":{
"prefix":"cc.EventMouse:getCursorY()",
"body":["cc.EventMouse:getCursorY()"],
"description":"getCursorY()",
"scope":"source.lua"},

"cc.EventMouse:setCursorPosition(float_x,float_y)":{
"prefix":"cc.EventMouse:setCursorPosition(float_x,float_y)",
"body":["cc.EventMouse:setCursorPosition(float_x,float_y)"],
"description":"setCursorPosition(float_x,float_y)",
"scope":"source.lua"},

"cc.EventListenerMouse":{
"prefix":"cc.EventListenerMouse",
"body":["cc.EventListenerMouse"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerMouse:init()":{
"prefix":"cc.EventListenerMouse:init()",
"body":["cc.EventListenerMouse:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.EventListenerController":{
"prefix":"cc.EventListenerController",
"body":["cc.EventListenerController"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerController:create()":{
"prefix":"cc.EventListenerController:create()",
"body":["cc.EventListenerController:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EventListenerTouchOneByOne":{
"prefix":"cc.EventListenerTouchOneByOne",
"body":["cc.EventListenerTouchOneByOne"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerTouchOneByOne:isSwallowTouches()":{
"prefix":"cc.EventListenerTouchOneByOne:isSwallowTouches()",
"body":["cc.EventListenerTouchOneByOne:isSwallowTouches()"],
"description":"isSwallowTouches()",
"scope":"source.lua"},

"cc.EventListenerTouchOneByOne:setSwallowTouches(bool_needSwallow)":{
"prefix":"cc.EventListenerTouchOneByOne:setSwallowTouches(bool_needSwallow)",
"body":["cc.EventListenerTouchOneByOne:setSwallowTouches(bool_needSwallow)"],
"description":"setSwallowTouches(bool_needSwallow)",
"scope":"source.lua"},

"cc.EventListenerTouchOneByOne:init()":{
"prefix":"cc.EventListenerTouchOneByOne:init()",
"body":["cc.EventListenerTouchOneByOne:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.EventListenerTouchAllAtOnce":{
"prefix":"cc.EventListenerTouchAllAtOnce",
"body":["cc.EventListenerTouchAllAtOnce"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerTouchAllAtOnce:init()":{
"prefix":"cc.EventListenerTouchAllAtOnce:init()",
"body":["cc.EventListenerTouchAllAtOnce:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.EventController":{
"prefix":"cc.EventController",
"body":["cc.EventController"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventController:getControllerEventType()":{
"prefix":"cc.EventController:getControllerEventType()",
"body":["cc.EventController:getControllerEventType()"],
"description":"getControllerEventType()",
"scope":"source.lua"},

"cc.EventController:setConnectStatus(bool_isConnected)":{
"prefix":"cc.EventController:setConnectStatus(bool_isConnected)",
"body":["cc.EventController:setConnectStatus(bool_isConnected)"],
"description":"setConnectStatus(bool_isConnected)",
"scope":"source.lua"},

"cc.EventController:isConnected()":{
"prefix":"cc.EventController:isConnected()",
"body":["cc.EventController:isConnected()"],
"description":"isConnected()",
"scope":"source.lua"},

"cc.EventController:setKeyCode(int_keyCode)":{
"prefix":"cc.EventController:setKeyCode(int_keyCode)",
"body":["cc.EventController:setKeyCode(int_keyCode)"],
"description":"setKeyCode(int_keyCode)",
"scope":"source.lua"},

"cc.EventController:getController()":{
"prefix":"cc.EventController:getController()",
"body":["cc.EventController:getController()"],
"description":"getController()",
"scope":"source.lua"},

"cc.EventController:getKeyCode()":{
"prefix":"cc.EventController:getKeyCode()",
"body":["cc.EventController:getKeyCode()"],
"description":"getKeyCode()",
"scope":"source.lua"},

"cc.ActionCamera":{
"prefix":"cc.ActionCamera",
"body":["cc.ActionCamera"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ActionCamera:setEye(const_Vec3_eye)":{
"prefix":"cc.ActionCamera:setEye(const_Vec3_eye)",
"body":["cc.ActionCamera:setEye(const_Vec3_eye)"],
"description":"setEye(const_Vec3_eye)",
"scope":"source.lua"},

"cc.ActionCamera:getEye()":{
"prefix":"cc.ActionCamera:getEye()",
"body":["cc.ActionCamera:getEye()"],
"description":"getEye()",
"scope":"source.lua"},

"cc.ActionCamera:setUp(const_Vec3_up)":{
"prefix":"cc.ActionCamera:setUp(const_Vec3_up)",
"body":["cc.ActionCamera:setUp(const_Vec3_up)"],
"description":"setUp(const_Vec3_up)",
"scope":"source.lua"},

"cc.ActionCamera:getCenter()":{
"prefix":"cc.ActionCamera:getCenter()",
"body":["cc.ActionCamera:getCenter()"],
"description":"getCenter()",
"scope":"source.lua"},

"cc.ActionCamera:setCenter(const_Vec3_center)":{
"prefix":"cc.ActionCamera:setCenter(const_Vec3_center)",
"body":["cc.ActionCamera:setCenter(const_Vec3_center)"],
"description":"setCenter(const_Vec3_center)",
"scope":"source.lua"},

"cc.ActionCamera:getUp()":{
"prefix":"cc.ActionCamera:getUp()",
"body":["cc.ActionCamera:getUp()"],
"description":"getUp()",
"scope":"source.lua"},

"cc.OrbitCamera":{
"prefix":"cc.OrbitCamera",
"body":["cc.OrbitCamera"],
"description":"cocos class",
"scope":"source.lua"},

"cc.OrbitCamera:initWithDuration(float_t,float_radius,float_deltaRadius,float_angleZ,float_deltaAngleZ,float_angleX,float_deltaAngleX)":{
"prefix":"cc.OrbitCamera:initWithDuration(float_t,float_radius,float_deltaRadius,float_angleZ,float_deltaAngleZ,float_angleX,float_deltaAngleX)",
"body":["cc.OrbitCamera:initWithDuration(float_t,float_radius,float_deltaRadius,float_angleZ,float_deltaAngleZ,float_angleX,float_deltaAngleX)"],
"description":"initWithDuration(float_t,float_radius,float_deltaRadius,float_angleZ,float_deltaAngleZ,float_angleX,float_deltaAngleX)",
"scope":"source.lua"},

"cc.OrbitCamera:create(float_t,float_radius,float_deltaRadius,float_angleZ,float_deltaAngleZ,float_angleX,float_deltaAngleX)":{
"prefix":"cc.OrbitCamera:create(float_t,float_radius,float_deltaRadius,float_angleZ,float_deltaAngleZ,float_angleX,float_deltaAngleX)",
"body":["cc.OrbitCamera:create(float_t,float_radius,float_deltaRadius,float_angleZ,float_deltaAngleZ,float_angleX,float_deltaAngleX)"],
"description":"create(float_t,float_radius,float_deltaRadius,float_angleZ,float_deltaAngleZ,float_angleX,float_deltaAngleX)",
"scope":"source.lua"},

"cc.CardinalSplineTo":{
"prefix":"cc.CardinalSplineTo",
"body":["cc.CardinalSplineTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CardinalSplineTo:getPoints()":{
"prefix":"cc.CardinalSplineTo:getPoints()",
"body":["cc.CardinalSplineTo:getPoints()"],
"description":"getPoints()",
"scope":"source.lua"},

"cc.CardinalSplineTo:updatePosition(const_Vec2_newPos)":{
"prefix":"cc.CardinalSplineTo:updatePosition(const_Vec2_newPos)",
"body":["cc.CardinalSplineTo:updatePosition(const_Vec2_newPos)"],
"description":"updatePosition(const_Vec2_newPos)",
"scope":"source.lua"},

"cc.CardinalSplineTo:initWithDuration(float_duration,PointArray_points,float_tension)":{
"prefix":"cc.CardinalSplineTo:initWithDuration(float_duration,PointArray_points,float_tension)",
"body":["cc.CardinalSplineTo:initWithDuration(float_duration,PointArray_points,float_tension)"],
"description":"initWithDuration(float_duration,PointArray_points,float_tension)",
"scope":"source.lua"},

"cc.CardinalSplineBy":{
"prefix":"cc.CardinalSplineBy",
"body":["cc.CardinalSplineBy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CardinalSplineBy:new()":{
"prefix":"cc.CardinalSplineBy:new()",
"body":["cc.CardinalSplineBy:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.CatmullRomTo":{
"prefix":"cc.CatmullRomTo",
"body":["cc.CatmullRomTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CatmullRomTo:initWithDuration(float_dt,PointArray_points)":{
"prefix":"cc.CatmullRomTo:initWithDuration(float_dt,PointArray_points)",
"body":["cc.CatmullRomTo:initWithDuration(float_dt,PointArray_points)"],
"description":"initWithDuration(float_dt,PointArray_points)",
"scope":"source.lua"},

"cc.CatmullRomBy":{
"prefix":"cc.CatmullRomBy",
"body":["cc.CatmullRomBy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CatmullRomBy:initWithDuration(float_dt,PointArray_points)":{
"prefix":"cc.CatmullRomBy:initWithDuration(float_dt,PointArray_points)",
"body":["cc.CatmullRomBy:initWithDuration(float_dt,PointArray_points)"],
"description":"initWithDuration(float_dt,PointArray_points)",
"scope":"source.lua"},

"cc.ActionEase":{
"prefix":"cc.ActionEase",
"body":["cc.ActionEase"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ActionEase:initWithAction(ActionInterval_action)":{
"prefix":"cc.ActionEase:initWithAction(ActionInterval_action)",
"body":["cc.ActionEase:initWithAction(ActionInterval_action)"],
"description":"initWithAction(ActionInterval_action)",
"scope":"source.lua"},

"cc.ActionEase:getInnerAction()":{
"prefix":"cc.ActionEase:getInnerAction()",
"body":["cc.ActionEase:getInnerAction()"],
"description":"getInnerAction()",
"scope":"source.lua"},

"cc.EaseRateAction":{
"prefix":"cc.EaseRateAction",
"body":["cc.EaseRateAction"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseRateAction:setRate(float_rate)":{
"prefix":"cc.EaseRateAction:setRate(float_rate)",
"body":["cc.EaseRateAction:setRate(float_rate)"],
"description":"setRate(float_rate)",
"scope":"source.lua"},

"cc.EaseRateAction:initWithAction(ActionInterval_pAction,float_fRate)":{
"prefix":"cc.EaseRateAction:initWithAction(ActionInterval_pAction,float_fRate)",
"body":["cc.EaseRateAction:initWithAction(ActionInterval_pAction,float_fRate)"],
"description":"initWithAction(ActionInterval_pAction,float_fRate)",
"scope":"source.lua"},

"cc.EaseRateAction:getRate()":{
"prefix":"cc.EaseRateAction:getRate()",
"body":["cc.EaseRateAction:getRate()"],
"description":"getRate()",
"scope":"source.lua"},

"cc.EaseRateAction:create(ActionInterval_action,float_rate)":{
"prefix":"cc.EaseRateAction:create(ActionInterval_action,float_rate)",
"body":["cc.EaseRateAction:create(ActionInterval_action,float_rate)"],
"description":"create(ActionInterval_action,float_rate)",
"scope":"source.lua"},

"cc.EaseExponentialIn":{
"prefix":"cc.EaseExponentialIn",
"body":["cc.EaseExponentialIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseExponentialIn:new()":{
"prefix":"cc.EaseExponentialIn:new()",
"body":["cc.EaseExponentialIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseExponentialIn:create()":{
"prefix":"cc.EaseExponentialIn:create()",
"body":["cc.EaseExponentialIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseExponentialOut":{
"prefix":"cc.EaseExponentialOut",
"body":["cc.EaseExponentialOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseExponentialOut:new()":{
"prefix":"cc.EaseExponentialOut:new()",
"body":["cc.EaseExponentialOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseExponentialOut:create()":{
"prefix":"cc.EaseExponentialOut:create()",
"body":["cc.EaseExponentialOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseExponentialInOut":{
"prefix":"cc.EaseExponentialInOut",
"body":["cc.EaseExponentialInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseExponentialInOut:new()":{
"prefix":"cc.EaseExponentialInOut:new()",
"body":["cc.EaseExponentialInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseExponentialInOut:create()":{
"prefix":"cc.EaseExponentialInOut:create()",
"body":["cc.EaseExponentialInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseSineIn":{
"prefix":"cc.EaseSineIn",
"body":["cc.EaseSineIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseSineIn:new()":{
"prefix":"cc.EaseSineIn:new()",
"body":["cc.EaseSineIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseSineIn:create()":{
"prefix":"cc.EaseSineIn:create()",
"body":["cc.EaseSineIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseSineOut":{
"prefix":"cc.EaseSineOut",
"body":["cc.EaseSineOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseSineOut:new()":{
"prefix":"cc.EaseSineOut:new()",
"body":["cc.EaseSineOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseSineOut:create()":{
"prefix":"cc.EaseSineOut:create()",
"body":["cc.EaseSineOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseSineInOut":{
"prefix":"cc.EaseSineInOut",
"body":["cc.EaseSineInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseSineInOut:new()":{
"prefix":"cc.EaseSineInOut:new()",
"body":["cc.EaseSineInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseSineInOut:create()":{
"prefix":"cc.EaseSineInOut:create()",
"body":["cc.EaseSineInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseBounce":{
"prefix":"cc.EaseBounce",
"body":["cc.EaseBounce"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseBounceIn":{
"prefix":"cc.EaseBounceIn",
"body":["cc.EaseBounceIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseBounceIn:new()":{
"prefix":"cc.EaseBounceIn:new()",
"body":["cc.EaseBounceIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseBounceIn:create()":{
"prefix":"cc.EaseBounceIn:create()",
"body":["cc.EaseBounceIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseBounceOut":{
"prefix":"cc.EaseBounceOut",
"body":["cc.EaseBounceOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseBounceOut:new()":{
"prefix":"cc.EaseBounceOut:new()",
"body":["cc.EaseBounceOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseBounceOut:create()":{
"prefix":"cc.EaseBounceOut:create()",
"body":["cc.EaseBounceOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseBounceInOut":{
"prefix":"cc.EaseBounceInOut",
"body":["cc.EaseBounceInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseBounceInOut:new()":{
"prefix":"cc.EaseBounceInOut:new()",
"body":["cc.EaseBounceInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseBounceInOut:create()":{
"prefix":"cc.EaseBounceInOut:create()",
"body":["cc.EaseBounceInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseBackIn":{
"prefix":"cc.EaseBackIn",
"body":["cc.EaseBackIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseBackIn:new()":{
"prefix":"cc.EaseBackIn:new()",
"body":["cc.EaseBackIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseBackIn:create()":{
"prefix":"cc.EaseBackIn:create()",
"body":["cc.EaseBackIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseBackOut":{
"prefix":"cc.EaseBackOut",
"body":["cc.EaseBackOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseBackOut:new()":{
"prefix":"cc.EaseBackOut:new()",
"body":["cc.EaseBackOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseBackOut:create()":{
"prefix":"cc.EaseBackOut:create()",
"body":["cc.EaseBackOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseBackInOut":{
"prefix":"cc.EaseBackInOut",
"body":["cc.EaseBackInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseBackInOut:new()":{
"prefix":"cc.EaseBackInOut:new()",
"body":["cc.EaseBackInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseBackInOut:create()":{
"prefix":"cc.EaseBackInOut:create()",
"body":["cc.EaseBackInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseQuadraticActionIn":{
"prefix":"cc.EaseQuadraticActionIn",
"body":["cc.EaseQuadraticActionIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseQuadraticActionIn:new()":{
"prefix":"cc.EaseQuadraticActionIn:new()",
"body":["cc.EaseQuadraticActionIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseQuadraticActionIn:create()":{
"prefix":"cc.EaseQuadraticActionIn:create()",
"body":["cc.EaseQuadraticActionIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseQuadraticActionOut":{
"prefix":"cc.EaseQuadraticActionOut",
"body":["cc.EaseQuadraticActionOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseQuadraticActionOut:new()":{
"prefix":"cc.EaseQuadraticActionOut:new()",
"body":["cc.EaseQuadraticActionOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseQuadraticActionOut:create()":{
"prefix":"cc.EaseQuadraticActionOut:create()",
"body":["cc.EaseQuadraticActionOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseQuadraticActionInOut":{
"prefix":"cc.EaseQuadraticActionInOut",
"body":["cc.EaseQuadraticActionInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseQuadraticActionInOut:new()":{
"prefix":"cc.EaseQuadraticActionInOut:new()",
"body":["cc.EaseQuadraticActionInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseQuadraticActionInOut:create()":{
"prefix":"cc.EaseQuadraticActionInOut:create()",
"body":["cc.EaseQuadraticActionInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseQuarticActionIn":{
"prefix":"cc.EaseQuarticActionIn",
"body":["cc.EaseQuarticActionIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseQuarticActionIn:new()":{
"prefix":"cc.EaseQuarticActionIn:new()",
"body":["cc.EaseQuarticActionIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseQuarticActionIn:create()":{
"prefix":"cc.EaseQuarticActionIn:create()",
"body":["cc.EaseQuarticActionIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseQuarticActionOut":{
"prefix":"cc.EaseQuarticActionOut",
"body":["cc.EaseQuarticActionOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseQuarticActionOut:new()":{
"prefix":"cc.EaseQuarticActionOut:new()",
"body":["cc.EaseQuarticActionOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseQuarticActionOut:create()":{
"prefix":"cc.EaseQuarticActionOut:create()",
"body":["cc.EaseQuarticActionOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseQuarticActionInOut":{
"prefix":"cc.EaseQuarticActionInOut",
"body":["cc.EaseQuarticActionInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseQuarticActionInOut:new()":{
"prefix":"cc.EaseQuarticActionInOut:new()",
"body":["cc.EaseQuarticActionInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseQuarticActionInOut:create()":{
"prefix":"cc.EaseQuarticActionInOut:create()",
"body":["cc.EaseQuarticActionInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseQuinticActionIn":{
"prefix":"cc.EaseQuinticActionIn",
"body":["cc.EaseQuinticActionIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseQuinticActionIn:new()":{
"prefix":"cc.EaseQuinticActionIn:new()",
"body":["cc.EaseQuinticActionIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseQuinticActionIn:create()":{
"prefix":"cc.EaseQuinticActionIn:create()",
"body":["cc.EaseQuinticActionIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseQuinticActionOut":{
"prefix":"cc.EaseQuinticActionOut",
"body":["cc.EaseQuinticActionOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseQuinticActionOut:new()":{
"prefix":"cc.EaseQuinticActionOut:new()",
"body":["cc.EaseQuinticActionOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseQuinticActionOut:create()":{
"prefix":"cc.EaseQuinticActionOut:create()",
"body":["cc.EaseQuinticActionOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseQuinticActionInOut":{
"prefix":"cc.EaseQuinticActionInOut",
"body":["cc.EaseQuinticActionInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseQuinticActionInOut:new()":{
"prefix":"cc.EaseQuinticActionInOut:new()",
"body":["cc.EaseQuinticActionInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseQuinticActionInOut:create()":{
"prefix":"cc.EaseQuinticActionInOut:create()",
"body":["cc.EaseQuinticActionInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseCircleActionIn":{
"prefix":"cc.EaseCircleActionIn",
"body":["cc.EaseCircleActionIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseCircleActionIn:new()":{
"prefix":"cc.EaseCircleActionIn:new()",
"body":["cc.EaseCircleActionIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseCircleActionIn:create()":{
"prefix":"cc.EaseCircleActionIn:create()",
"body":["cc.EaseCircleActionIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseCircleActionOut":{
"prefix":"cc.EaseCircleActionOut",
"body":["cc.EaseCircleActionOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseCircleActionOut:new()":{
"prefix":"cc.EaseCircleActionOut:new()",
"body":["cc.EaseCircleActionOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseCircleActionOut:create()":{
"prefix":"cc.EaseCircleActionOut:create()",
"body":["cc.EaseCircleActionOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseCircleActionInOut":{
"prefix":"cc.EaseCircleActionInOut",
"body":["cc.EaseCircleActionInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseCircleActionInOut:new()":{
"prefix":"cc.EaseCircleActionInOut:new()",
"body":["cc.EaseCircleActionInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseCircleActionInOut:create()":{
"prefix":"cc.EaseCircleActionInOut:create()",
"body":["cc.EaseCircleActionInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseCubicActionIn":{
"prefix":"cc.EaseCubicActionIn",
"body":["cc.EaseCubicActionIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseCubicActionIn:new()":{
"prefix":"cc.EaseCubicActionIn:new()",
"body":["cc.EaseCubicActionIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseCubicActionIn:create()":{
"prefix":"cc.EaseCubicActionIn:create()",
"body":["cc.EaseCubicActionIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseCubicActionOut":{
"prefix":"cc.EaseCubicActionOut",
"body":["cc.EaseCubicActionOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseCubicActionOut:new()":{
"prefix":"cc.EaseCubicActionOut:new()",
"body":["cc.EaseCubicActionOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseCubicActionOut:create()":{
"prefix":"cc.EaseCubicActionOut:create()",
"body":["cc.EaseCubicActionOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseCubicActionInOut":{
"prefix":"cc.EaseCubicActionInOut",
"body":["cc.EaseCubicActionInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseCubicActionInOut:new()":{
"prefix":"cc.EaseCubicActionInOut:new()",
"body":["cc.EaseCubicActionInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseCubicActionInOut:create()":{
"prefix":"cc.EaseCubicActionInOut:create()",
"body":["cc.EaseCubicActionInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseIn":{
"prefix":"cc.EaseIn",
"body":["cc.EaseIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseIn:new()":{
"prefix":"cc.EaseIn:new()",
"body":["cc.EaseIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseIn:create()":{
"prefix":"cc.EaseIn:create()",
"body":["cc.EaseIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseOut":{
"prefix":"cc.EaseOut",
"body":["cc.EaseOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseOut:new()":{
"prefix":"cc.EaseOut:new()",
"body":["cc.EaseOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseOut:create()":{
"prefix":"cc.EaseOut:create()",
"body":["cc.EaseOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseInOut":{
"prefix":"cc.EaseInOut",
"body":["cc.EaseInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseInOut:new()":{
"prefix":"cc.EaseInOut:new()",
"body":["cc.EaseInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseInOut:create()":{
"prefix":"cc.EaseInOut:create()",
"body":["cc.EaseInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseElastic":{
"prefix":"cc.EaseElastic",
"body":["cc.EaseElastic"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseElastic:setPeriod(float_fPeriod)":{
"prefix":"cc.EaseElastic:setPeriod(float_fPeriod)",
"body":["cc.EaseElastic:setPeriod(float_fPeriod)"],
"description":"setPeriod(float_fPeriod)",
"scope":"source.lua"},

"cc.EaseElastic:initWithAction(ActionInterval_action,float_period)":{
"prefix":"cc.EaseElastic:initWithAction(ActionInterval_action,float_period)",
"body":["cc.EaseElastic:initWithAction(ActionInterval_action,float_period)"],
"description":"initWithAction(ActionInterval_action,float_period)",
"scope":"source.lua"},

"cc.EaseElastic:getPeriod()":{
"prefix":"cc.EaseElastic:getPeriod()",
"body":["cc.EaseElastic:getPeriod()"],
"description":"getPeriod()",
"scope":"source.lua"},

"cc.EaseElasticIn":{
"prefix":"cc.EaseElasticIn",
"body":["cc.EaseElasticIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseElasticIn:new()":{
"prefix":"cc.EaseElasticIn:new()",
"body":["cc.EaseElasticIn:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseElasticIn:create()":{
"prefix":"cc.EaseElasticIn:create()",
"body":["cc.EaseElasticIn:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseElasticOut":{
"prefix":"cc.EaseElasticOut",
"body":["cc.EaseElasticOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseElasticOut:new()":{
"prefix":"cc.EaseElasticOut:new()",
"body":["cc.EaseElasticOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseElasticOut:create()":{
"prefix":"cc.EaseElasticOut:create()",
"body":["cc.EaseElasticOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseElasticInOut":{
"prefix":"cc.EaseElasticInOut",
"body":["cc.EaseElasticInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseElasticInOut:new()":{
"prefix":"cc.EaseElasticInOut:new()",
"body":["cc.EaseElasticInOut:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.EaseElasticInOut:create()":{
"prefix":"cc.EaseElasticInOut:create()",
"body":["cc.EaseElasticInOut:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EaseBezierAction":{
"prefix":"cc.EaseBezierAction",
"body":["cc.EaseBezierAction"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EaseBezierAction:setBezierParamer(float_p0,float_p1,float_p2,float_p3)":{
"prefix":"cc.EaseBezierAction:setBezierParamer(float_p0,float_p1,float_p2,float_p3)",
"body":["cc.EaseBezierAction:setBezierParamer(float_p0,float_p1,float_p2,float_p3)"],
"description":"setBezierParamer(float_p0,float_p1,float_p2,float_p3)",
"scope":"source.lua"},

"cc.EaseBezierAction:create(cocos2d_ActionInterval_action)":{
"prefix":"cc.EaseBezierAction:create(cocos2d_ActionInterval_action)",
"body":["cc.EaseBezierAction:create(cocos2d_ActionInterval_action)"],
"description":"create(cocos2d_ActionInterval_action)",
"scope":"source.lua"},

"cc.ActionInstant":{
"prefix":"cc.ActionInstant",
"body":["cc.ActionInstant"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Show":{
"prefix":"cc.Show",
"body":["cc.Show"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Show:create()":{
"prefix":"cc.Show:create()",
"body":["cc.Show:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Hide":{
"prefix":"cc.Hide",
"body":["cc.Hide"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Hide:create()":{
"prefix":"cc.Hide:create()",
"body":["cc.Hide:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ToggleVisibility":{
"prefix":"cc.ToggleVisibility",
"body":["cc.ToggleVisibility"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ToggleVisibility:create()":{
"prefix":"cc.ToggleVisibility:create()",
"body":["cc.ToggleVisibility:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.RemoveSelf":{
"prefix":"cc.RemoveSelf",
"body":["cc.RemoveSelf"],
"description":"cocos class",
"scope":"source.lua"},

"cc.RemoveSelf:init(bool_isNeedCleanUp)":{
"prefix":"cc.RemoveSelf:init(bool_isNeedCleanUp)",
"body":["cc.RemoveSelf:init(bool_isNeedCleanUp)"],
"description":"init(bool_isNeedCleanUp)",
"scope":"source.lua"},

"cc.RemoveSelf:create(bool_isNeedCleanUp)":{
"prefix":"cc.RemoveSelf:create(bool_isNeedCleanUp)",
"body":["cc.RemoveSelf:create(bool_isNeedCleanUp)"],
"description":"create(bool_isNeedCleanUp)",
"scope":"source.lua"},

"cc.FlipX":{
"prefix":"cc.FlipX",
"body":["cc.FlipX"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FlipX:initWithFlipX(bool_x)":{
"prefix":"cc.FlipX:initWithFlipX(bool_x)",
"body":["cc.FlipX:initWithFlipX(bool_x)"],
"description":"initWithFlipX(bool_x)",
"scope":"source.lua"},

"cc.FlipX:create(bool_x)":{
"prefix":"cc.FlipX:create(bool_x)",
"body":["cc.FlipX:create(bool_x)"],
"description":"create(bool_x)",
"scope":"source.lua"},

"cc.FlipY":{
"prefix":"cc.FlipY",
"body":["cc.FlipY"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FlipY:initWithFlipY(bool_y)":{
"prefix":"cc.FlipY:initWithFlipY(bool_y)",
"body":["cc.FlipY:initWithFlipY(bool_y)"],
"description":"initWithFlipY(bool_y)",
"scope":"source.lua"},

"cc.FlipY:create(bool_y)":{
"prefix":"cc.FlipY:create(bool_y)",
"body":["cc.FlipY:create(bool_y)"],
"description":"create(bool_y)",
"scope":"source.lua"},

"cc.Place":{
"prefix":"cc.Place",
"body":["cc.Place"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Place:initWithPosition(const_Vec2_pos)":{
"prefix":"cc.Place:initWithPosition(const_Vec2_pos)",
"body":["cc.Place:initWithPosition(const_Vec2_pos)"],
"description":"initWithPosition(const_Vec2_pos)",
"scope":"source.lua"},

"cc.Place:create(const_Vec2_pos)":{
"prefix":"cc.Place:create(const_Vec2_pos)",
"body":["cc.Place:create(const_Vec2_pos)"],
"description":"create(const_Vec2_pos)",
"scope":"source.lua"},

"cc.CallFunc":{
"prefix":"cc.CallFunc",
"body":["cc.CallFunc"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CallFunc:execute()":{
"prefix":"cc.CallFunc:execute()",
"body":["cc.CallFunc:execute()"],
"description":"execute()",
"scope":"source.lua"},

"cc.CallFunc:getTargetCallback()":{
"prefix":"cc.CallFunc:getTargetCallback()",
"body":["cc.CallFunc:getTargetCallback()"],
"description":"getTargetCallback()",
"scope":"source.lua"},

"cc.CallFunc:setTargetCallback(Ref_sel)":{
"prefix":"cc.CallFunc:setTargetCallback(Ref_sel)",
"body":["cc.CallFunc:setTargetCallback(Ref_sel)"],
"description":"setTargetCallback(Ref_sel)",
"scope":"source.lua"},

"cc.GridAction":{
"prefix":"cc.GridAction",
"body":["cc.GridAction"],
"description":"cocos class",
"scope":"source.lua"},

"cc.GridAction:getGrid()":{
"prefix":"cc.GridAction:getGrid()",
"body":["cc.GridAction:getGrid()"],
"description":"getGrid()",
"scope":"source.lua"},

"cc.GridAction:initWithDuration(float_duration,const_Size_gridSize)":{
"prefix":"cc.GridAction:initWithDuration(float_duration,const_Size_gridSize)",
"body":["cc.GridAction:initWithDuration(float_duration,const_Size_gridSize)"],
"description":"initWithDuration(float_duration,const_Size_gridSize)",
"scope":"source.lua"},

"cc.Grid3DAction":{
"prefix":"cc.Grid3DAction",
"body":["cc.Grid3DAction"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Grid3DAction:getGridRect()":{
"prefix":"cc.Grid3DAction:getGridRect()",
"body":["cc.Grid3DAction:getGridRect()"],
"description":"getGridRect()",
"scope":"source.lua"},

"cc.TiledGrid3DAction":{
"prefix":"cc.TiledGrid3DAction",
"body":["cc.TiledGrid3DAction"],
"description":"cocos class",
"scope":"source.lua"},

"cc.StopGrid":{
"prefix":"cc.StopGrid",
"body":["cc.StopGrid"],
"description":"cocos class",
"scope":"source.lua"},

"cc.StopGrid:create()":{
"prefix":"cc.StopGrid:create()",
"body":["cc.StopGrid:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ReuseGrid":{
"prefix":"cc.ReuseGrid",
"body":["cc.ReuseGrid"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ReuseGrid:initWithTimes(int_times)":{
"prefix":"cc.ReuseGrid:initWithTimes(int_times)",
"body":["cc.ReuseGrid:initWithTimes(int_times)"],
"description":"initWithTimes(int_times)",
"scope":"source.lua"},

"cc.ReuseGrid:create(int_times)":{
"prefix":"cc.ReuseGrid:create(int_times)",
"body":["cc.ReuseGrid:create(int_times)"],
"description":"create(int_times)",
"scope":"source.lua"},

"cc.Waves3D":{
"prefix":"cc.Waves3D",
"body":["cc.Waves3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Waves3D:setAmplitudeRate(float_amplitudeRate)":{
"prefix":"cc.Waves3D:setAmplitudeRate(float_amplitudeRate)",
"body":["cc.Waves3D:setAmplitudeRate(float_amplitudeRate)"],
"description":"setAmplitudeRate(float_amplitudeRate)",
"scope":"source.lua"},

"cc.Waves3D:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)":{
"prefix":"cc.Waves3D:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"body":["cc.Waves3D:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"scope":"source.lua"},

"cc.Waves3D:getAmplitude()":{
"prefix":"cc.Waves3D:getAmplitude()",
"body":["cc.Waves3D:getAmplitude()"],
"description":"getAmplitude()",
"scope":"source.lua"},

"cc.Waves3D:getAmplitudeRate()":{
"prefix":"cc.Waves3D:getAmplitudeRate()",
"body":["cc.Waves3D:getAmplitudeRate()"],
"description":"getAmplitudeRate()",
"scope":"source.lua"},

"cc.Waves3D:setAmplitude(float_amplitude)":{
"prefix":"cc.Waves3D:setAmplitude(float_amplitude)",
"body":["cc.Waves3D:setAmplitude(float_amplitude)"],
"description":"setAmplitude(float_amplitude)",
"scope":"source.lua"},

"cc.Waves3D:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)":{
"prefix":"cc.Waves3D:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"body":["cc.Waves3D:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)"],
"description":"create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"scope":"source.lua"},

"cc.FlipX3D":{
"prefix":"cc.FlipX3D",
"body":["cc.FlipX3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FlipX3D:initWithSize(const_Size_gridSize,float_duration)":{
"prefix":"cc.FlipX3D:initWithSize(const_Size_gridSize,float_duration)",
"body":["cc.FlipX3D:initWithSize(const_Size_gridSize,float_duration)"],
"description":"initWithSize(const_Size_gridSize,float_duration)",
"scope":"source.lua"},

"cc.FlipX3D:initWithDuration(float_duration)":{
"prefix":"cc.FlipX3D:initWithDuration(float_duration)",
"body":["cc.FlipX3D:initWithDuration(float_duration)"],
"description":"initWithDuration(float_duration)",
"scope":"source.lua"},

"cc.FlipX3D:create(float_duration)":{
"prefix":"cc.FlipX3D:create(float_duration)",
"body":["cc.FlipX3D:create(float_duration)"],
"description":"create(float_duration)",
"scope":"source.lua"},

"cc.FlipY3D":{
"prefix":"cc.FlipY3D",
"body":["cc.FlipY3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FlipY3D:create(float_duration)":{
"prefix":"cc.FlipY3D:create(float_duration)",
"body":["cc.FlipY3D:create(float_duration)"],
"description":"create(float_duration)",
"scope":"source.lua"},

"cc.Lens3D":{
"prefix":"cc.Lens3D",
"body":["cc.Lens3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Lens3D:setConcave(bool_concave)":{
"prefix":"cc.Lens3D:setConcave(bool_concave)",
"body":["cc.Lens3D:setConcave(bool_concave)"],
"description":"setConcave(bool_concave)",
"scope":"source.lua"},

"cc.Lens3D:initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,float_radius)":{
"prefix":"cc.Lens3D:initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,float_radius)",
"body":["cc.Lens3D:initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,float_radius)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,float_radius)",
"scope":"source.lua"},

"cc.Lens3D:setLensEffect(float_lensEffect)":{
"prefix":"cc.Lens3D:setLensEffect(float_lensEffect)",
"body":["cc.Lens3D:setLensEffect(float_lensEffect)"],
"description":"setLensEffect(float_lensEffect)",
"scope":"source.lua"},

"cc.Lens3D:getLensEffect()":{
"prefix":"cc.Lens3D:getLensEffect()",
"body":["cc.Lens3D:getLensEffect()"],
"description":"getLensEffect()",
"scope":"source.lua"},

"cc.Lens3D:setPosition(const_Vec2_position)":{
"prefix":"cc.Lens3D:setPosition(const_Vec2_position)",
"body":["cc.Lens3D:setPosition(const_Vec2_position)"],
"description":"setPosition(const_Vec2_position)",
"scope":"source.lua"},

"cc.Lens3D:getPosition()":{
"prefix":"cc.Lens3D:getPosition()",
"body":["cc.Lens3D:getPosition()"],
"description":"getPosition()",
"scope":"source.lua"},

"cc.Lens3D:create(float_duration,const_Size_gridSize,const_Vec2_position,float_radius)":{
"prefix":"cc.Lens3D:create(float_duration,const_Size_gridSize,const_Vec2_position,float_radius)",
"body":["cc.Lens3D:create(float_duration,const_Size_gridSize,const_Vec2_position,float_radius)"],
"description":"create(float_duration,const_Size_gridSize,const_Vec2_position,float_radius)",
"scope":"source.lua"},

"cc.Ripple3D":{
"prefix":"cc.Ripple3D",
"body":["cc.Ripple3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Ripple3D:setAmplitudeRate(float_fAmplitudeRate)":{
"prefix":"cc.Ripple3D:setAmplitudeRate(float_fAmplitudeRate)",
"body":["cc.Ripple3D:setAmplitudeRate(float_fAmplitudeRate)"],
"description":"setAmplitudeRate(float_fAmplitudeRate)",
"scope":"source.lua"},

"cc.Ripple3D:initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,float_radius,unsigned_int_waves,float_amplitude)":{
"prefix":"cc.Ripple3D:initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,float_radius,unsigned_int_waves,float_amplitude)",
"body":["cc.Ripple3D:initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,float_radius,unsigned_int_waves,float_amplitude)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,float_radius,unsigned_int_waves,float_amplitude)",
"scope":"source.lua"},

"cc.Ripple3D:getAmplitudeRate()":{
"prefix":"cc.Ripple3D:getAmplitudeRate()",
"body":["cc.Ripple3D:getAmplitudeRate()"],
"description":"getAmplitudeRate()",
"scope":"source.lua"},

"cc.Ripple3D:setAmplitude(float_fAmplitude)":{
"prefix":"cc.Ripple3D:setAmplitude(float_fAmplitude)",
"body":["cc.Ripple3D:setAmplitude(float_fAmplitude)"],
"description":"setAmplitude(float_fAmplitude)",
"scope":"source.lua"},

"cc.Ripple3D:getAmplitude()":{
"prefix":"cc.Ripple3D:getAmplitude()",
"body":["cc.Ripple3D:getAmplitude()"],
"description":"getAmplitude()",
"scope":"source.lua"},

"cc.Ripple3D:setPosition(const_Vec2_position)":{
"prefix":"cc.Ripple3D:setPosition(const_Vec2_position)",
"body":["cc.Ripple3D:setPosition(const_Vec2_position)"],
"description":"setPosition(const_Vec2_position)",
"scope":"source.lua"},

"cc.Ripple3D:getPosition()":{
"prefix":"cc.Ripple3D:getPosition()",
"body":["cc.Ripple3D:getPosition()"],
"description":"getPosition()",
"scope":"source.lua"},

"cc.Ripple3D:create(float_duration,const_Size_gridSize,const_Vec2_position,float_radius,unsigned_int_waves,float_amplitude)":{
"prefix":"cc.Ripple3D:create(float_duration,const_Size_gridSize,const_Vec2_position,float_radius,unsigned_int_waves,float_amplitude)",
"body":["cc.Ripple3D:create(float_duration,const_Size_gridSize,const_Vec2_position,float_radius,unsigned_int_waves,float_amplitude)"],
"description":"create(float_duration,const_Size_gridSize,const_Vec2_position,float_radius,unsigned_int_waves,float_amplitude)",
"scope":"source.lua"},

"cc.Shaky3D":{
"prefix":"cc.Shaky3D",
"body":["cc.Shaky3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Shaky3D:initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shakeZ)":{
"prefix":"cc.Shaky3D:initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shakeZ)",
"body":["cc.Shaky3D:initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shakeZ)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shakeZ)",
"scope":"source.lua"},

"cc.Shaky3D:create(float_initWithDuration,const_Size_gridSize,int_range,bool_shakeZ)":{
"prefix":"cc.Shaky3D:create(float_initWithDuration,const_Size_gridSize,int_range,bool_shakeZ)",
"body":["cc.Shaky3D:create(float_initWithDuration,const_Size_gridSize,int_range,bool_shakeZ)"],
"description":"create(float_initWithDuration,const_Size_gridSize,int_range,bool_shakeZ)",
"scope":"source.lua"},

"cc.Liquid":{
"prefix":"cc.Liquid",
"body":["cc.Liquid"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Liquid:setAmplitudeRate(float_amplitudeRate)":{
"prefix":"cc.Liquid:setAmplitudeRate(float_amplitudeRate)",
"body":["cc.Liquid:setAmplitudeRate(float_amplitudeRate)"],
"description":"setAmplitudeRate(float_amplitudeRate)",
"scope":"source.lua"},

"cc.Liquid:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)":{
"prefix":"cc.Liquid:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"body":["cc.Liquid:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"scope":"source.lua"},

"cc.Liquid:getAmplitude()":{
"prefix":"cc.Liquid:getAmplitude()",
"body":["cc.Liquid:getAmplitude()"],
"description":"getAmplitude()",
"scope":"source.lua"},

"cc.Liquid:getAmplitudeRate()":{
"prefix":"cc.Liquid:getAmplitudeRate()",
"body":["cc.Liquid:getAmplitudeRate()"],
"description":"getAmplitudeRate()",
"scope":"source.lua"},

"cc.Liquid:setAmplitude(float_amplitude)":{
"prefix":"cc.Liquid:setAmplitude(float_amplitude)",
"body":["cc.Liquid:setAmplitude(float_amplitude)"],
"description":"setAmplitude(float_amplitude)",
"scope":"source.lua"},

"cc.Liquid:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)":{
"prefix":"cc.Liquid:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"body":["cc.Liquid:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)"],
"description":"create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"scope":"source.lua"},

"cc.Waves":{
"prefix":"cc.Waves",
"body":["cc.Waves"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Waves:setAmplitudeRate(float_amplitudeRate)":{
"prefix":"cc.Waves:setAmplitudeRate(float_amplitudeRate)",
"body":["cc.Waves:setAmplitudeRate(float_amplitudeRate)"],
"description":"setAmplitudeRate(float_amplitudeRate)",
"scope":"source.lua"},

"cc.Waves:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude,bool_horizontal,bool_vertical)":{
"prefix":"cc.Waves:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude,bool_horizontal,bool_vertical)",
"body":["cc.Waves:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude,bool_horizontal,bool_vertical)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude,bool_horizontal,bool_vertical)",
"scope":"source.lua"},

"cc.Waves:getAmplitude()":{
"prefix":"cc.Waves:getAmplitude()",
"body":["cc.Waves:getAmplitude()"],
"description":"getAmplitude()",
"scope":"source.lua"},

"cc.Waves:getAmplitudeRate()":{
"prefix":"cc.Waves:getAmplitudeRate()",
"body":["cc.Waves:getAmplitudeRate()"],
"description":"getAmplitudeRate()",
"scope":"source.lua"},

"cc.Waves:setAmplitude(float_amplitude)":{
"prefix":"cc.Waves:setAmplitude(float_amplitude)",
"body":["cc.Waves:setAmplitude(float_amplitude)"],
"description":"setAmplitude(float_amplitude)",
"scope":"source.lua"},

"cc.Waves:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude,bool_horizontal,bool_vertical)":{
"prefix":"cc.Waves:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude,bool_horizontal,bool_vertical)",
"body":["cc.Waves:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude,bool_horizontal,bool_vertical)"],
"description":"create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude,bool_horizontal,bool_vertical)",
"scope":"source.lua"},

"cc.Twirl":{
"prefix":"cc.Twirl",
"body":["cc.Twirl"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Twirl:setAmplitudeRate(float_amplitudeRate)":{
"prefix":"cc.Twirl:setAmplitudeRate(float_amplitudeRate)",
"body":["cc.Twirl:setAmplitudeRate(float_amplitudeRate)"],
"description":"setAmplitudeRate(float_amplitudeRate)",
"scope":"source.lua"},

"cc.Twirl:initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,unsigned_int_twirls,float_amplitude)":{
"prefix":"cc.Twirl:initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,unsigned_int_twirls,float_amplitude)",
"body":["cc.Twirl:initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,unsigned_int_twirls,float_amplitude)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,const_Vec2_position,unsigned_int_twirls,float_amplitude)",
"scope":"source.lua"},

"cc.Twirl:getAmplitudeRate()":{
"prefix":"cc.Twirl:getAmplitudeRate()",
"body":["cc.Twirl:getAmplitudeRate()"],
"description":"getAmplitudeRate()",
"scope":"source.lua"},

"cc.Twirl:setAmplitude(float_amplitude)":{
"prefix":"cc.Twirl:setAmplitude(float_amplitude)",
"body":["cc.Twirl:setAmplitude(float_amplitude)"],
"description":"setAmplitude(float_amplitude)",
"scope":"source.lua"},

"cc.Twirl:getAmplitude()":{
"prefix":"cc.Twirl:getAmplitude()",
"body":["cc.Twirl:getAmplitude()"],
"description":"getAmplitude()",
"scope":"source.lua"},

"cc.Twirl:setPosition(const_Vec2_position)":{
"prefix":"cc.Twirl:setPosition(const_Vec2_position)",
"body":["cc.Twirl:setPosition(const_Vec2_position)"],
"description":"setPosition(const_Vec2_position)",
"scope":"source.lua"},

"cc.Twirl:getPosition()":{
"prefix":"cc.Twirl:getPosition()",
"body":["cc.Twirl:getPosition()"],
"description":"getPosition()",
"scope":"source.lua"},

"cc.Twirl:create(float_duration,const_Size_gridSize,const_Vec2_position,unsigned_int_twirls,float_amplitude)":{
"prefix":"cc.Twirl:create(float_duration,const_Size_gridSize,const_Vec2_position,unsigned_int_twirls,float_amplitude)",
"body":["cc.Twirl:create(float_duration,const_Size_gridSize,const_Vec2_position,unsigned_int_twirls,float_amplitude)"],
"description":"create(float_duration,const_Size_gridSize,const_Vec2_position,unsigned_int_twirls,float_amplitude)",
"scope":"source.lua"},

"cc.ActionManager":{
"prefix":"cc.ActionManager",
"body":["cc.ActionManager"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ActionManager:getActionByTag(int_tag,const_Node_target)":{
"prefix":"cc.ActionManager:getActionByTag(int_tag,const_Node_target)",
"body":["cc.ActionManager:getActionByTag(int_tag,const_Node_target)"],
"description":"getActionByTag(int_tag,const_Node_target)",
"scope":"source.lua"},

"cc.ActionManager:removeActionByTag(int_tag,Node_target)":{
"prefix":"cc.ActionManager:removeActionByTag(int_tag,Node_target)",
"body":["cc.ActionManager:removeActionByTag(int_tag,Node_target)"],
"description":"removeActionByTag(int_tag,Node_target)",
"scope":"source.lua"},

"cc.ActionManager:removeActionsByFlags(unsigned_int_flags,Node_target)":{
"prefix":"cc.ActionManager:removeActionsByFlags(unsigned_int_flags,Node_target)",
"body":["cc.ActionManager:removeActionsByFlags(unsigned_int_flags,Node_target)"],
"description":"removeActionsByFlags(unsigned_int_flags,Node_target)",
"scope":"source.lua"},

"cc.ActionManager:removeAllActions()":{
"prefix":"cc.ActionManager:removeAllActions()",
"body":["cc.ActionManager:removeAllActions()"],
"description":"removeAllActions()",
"scope":"source.lua"},

"cc.ActionManager:addAction(Action_action,Node_target,bool_paused)":{
"prefix":"cc.ActionManager:addAction(Action_action,Node_target,bool_paused)",
"body":["cc.ActionManager:addAction(Action_action,Node_target,bool_paused)"],
"description":"addAction(Action_action,Node_target,bool_paused)",
"scope":"source.lua"},

"cc.ActionManager:resumeTarget(Node_target)":{
"prefix":"cc.ActionManager:resumeTarget(Node_target)",
"body":["cc.ActionManager:resumeTarget(Node_target)"],
"description":"resumeTarget(Node_target)",
"scope":"source.lua"},

"cc.ActionManager:getNumberOfRunningActions()":{
"prefix":"cc.ActionManager:getNumberOfRunningActions()",
"body":["cc.ActionManager:getNumberOfRunningActions()"],
"description":"getNumberOfRunningActions()",
"scope":"source.lua"},

"cc.ActionManager:pauseTarget(Node_target)":{
"prefix":"cc.ActionManager:pauseTarget(Node_target)",
"body":["cc.ActionManager:pauseTarget(Node_target)"],
"description":"pauseTarget(Node_target)",
"scope":"source.lua"},

"cc.ActionManager:getNumberOfRunningActionsInTarget(const_Node_target)":{
"prefix":"cc.ActionManager:getNumberOfRunningActionsInTarget(const_Node_target)",
"body":["cc.ActionManager:getNumberOfRunningActionsInTarget(const_Node_target)"],
"description":"getNumberOfRunningActionsInTarget(const_Node_target)",
"scope":"source.lua"},

"cc.ActionManager:removeAllActionsFromTarget(Node_target)":{
"prefix":"cc.ActionManager:removeAllActionsFromTarget(Node_target)",
"body":["cc.ActionManager:removeAllActionsFromTarget(Node_target)"],
"description":"removeAllActionsFromTarget(Node_target)",
"scope":"source.lua"},

"cc.ActionManager:resumeTargets()":{
"prefix":"cc.ActionManager:resumeTargets()",
"body":["cc.ActionManager:resumeTargets()"],
"description":"resumeTargets()",
"scope":"source.lua"},

"cc.ActionManager:removeAction(Action_action)":{
"prefix":"cc.ActionManager:removeAction(Action_action)",
"body":["cc.ActionManager:removeAction(Action_action)"],
"description":"removeAction(Action_action)",
"scope":"source.lua"},

"cc.ActionManager:pauseAllRunningActions()":{
"prefix":"cc.ActionManager:pauseAllRunningActions()",
"body":["cc.ActionManager:pauseAllRunningActions()"],
"description":"pauseAllRunningActions()",
"scope":"source.lua"},

"cc.ActionManager:update(float_dt)":{
"prefix":"cc.ActionManager:update(float_dt)",
"body":["cc.ActionManager:update(float_dt)"],
"description":"update(float_dt)",
"scope":"source.lua"},

"cc.ActionManager:removeAllActionsByTag(int_tag,Node_target)":{
"prefix":"cc.ActionManager:removeAllActionsByTag(int_tag,Node_target)",
"body":["cc.ActionManager:removeAllActionsByTag(int_tag,Node_target)"],
"description":"removeAllActionsByTag(int_tag,Node_target)",
"scope":"source.lua"},

"cc.ActionManager:getNumberOfRunningActionsInTargetByTag(const_Node_target,int_tag)":{
"prefix":"cc.ActionManager:getNumberOfRunningActionsInTargetByTag(const_Node_target,int_tag)",
"body":["cc.ActionManager:getNumberOfRunningActionsInTargetByTag(const_Node_target,int_tag)"],
"description":"getNumberOfRunningActionsInTargetByTag(const_Node_target,int_tag)",
"scope":"source.lua"},

"cc.PageTurn3D":{
"prefix":"cc.PageTurn3D",
"body":["cc.PageTurn3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PageTurn3D:create(float_duration,const_Size_gridSize)":{
"prefix":"cc.PageTurn3D:create(float_duration,const_Size_gridSize)",
"body":["cc.PageTurn3D:create(float_duration,const_Size_gridSize)"],
"description":"create(float_duration,const_Size_gridSize)",
"scope":"source.lua"},

"cc.ProgressTo":{
"prefix":"cc.ProgressTo",
"body":["cc.ProgressTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ProgressTo:initWithDuration(float_duration,float_percent)":{
"prefix":"cc.ProgressTo:initWithDuration(float_duration,float_percent)",
"body":["cc.ProgressTo:initWithDuration(float_duration,float_percent)"],
"description":"initWithDuration(float_duration,float_percent)",
"scope":"source.lua"},

"cc.ProgressTo:create(float_duration,float_percent)":{
"prefix":"cc.ProgressTo:create(float_duration,float_percent)",
"body":["cc.ProgressTo:create(float_duration,float_percent)"],
"description":"create(float_duration,float_percent)",
"scope":"source.lua"},

"cc.ProgressFromTo":{
"prefix":"cc.ProgressFromTo",
"body":["cc.ProgressFromTo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ProgressFromTo:initWithDuration(float_duration,float_fromPercentage,float_toPercentage)":{
"prefix":"cc.ProgressFromTo:initWithDuration(float_duration,float_fromPercentage,float_toPercentage)",
"body":["cc.ProgressFromTo:initWithDuration(float_duration,float_fromPercentage,float_toPercentage)"],
"description":"initWithDuration(float_duration,float_fromPercentage,float_toPercentage)",
"scope":"source.lua"},

"cc.ProgressFromTo:create(float_duration,float_fromPercentage,float_toPercentage)":{
"prefix":"cc.ProgressFromTo:create(float_duration,float_fromPercentage,float_toPercentage)",
"body":["cc.ProgressFromTo:create(float_duration,float_fromPercentage,float_toPercentage)"],
"description":"create(float_duration,float_fromPercentage,float_toPercentage)",
"scope":"source.lua"},

"cc.ShakyTiles3D":{
"prefix":"cc.ShakyTiles3D",
"body":["cc.ShakyTiles3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ShakyTiles3D:initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shakeZ)":{
"prefix":"cc.ShakyTiles3D:initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shakeZ)",
"body":["cc.ShakyTiles3D:initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shakeZ)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shakeZ)",
"scope":"source.lua"},

"cc.ShakyTiles3D:create(float_duration,const_Size_gridSize,int_range,bool_shakeZ)":{
"prefix":"cc.ShakyTiles3D:create(float_duration,const_Size_gridSize,int_range,bool_shakeZ)",
"body":["cc.ShakyTiles3D:create(float_duration,const_Size_gridSize,int_range,bool_shakeZ)"],
"description":"create(float_duration,const_Size_gridSize,int_range,bool_shakeZ)",
"scope":"source.lua"},

"cc.ShatteredTiles3D":{
"prefix":"cc.ShatteredTiles3D",
"body":["cc.ShatteredTiles3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ShatteredTiles3D:initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shatterZ)":{
"prefix":"cc.ShatteredTiles3D:initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shatterZ)",
"body":["cc.ShatteredTiles3D:initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shatterZ)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,int_range,bool_shatterZ)",
"scope":"source.lua"},

"cc.ShatteredTiles3D:create(float_duration,const_Size_gridSize,int_range,bool_shatterZ)":{
"prefix":"cc.ShatteredTiles3D:create(float_duration,const_Size_gridSize,int_range,bool_shatterZ)",
"body":["cc.ShatteredTiles3D:create(float_duration,const_Size_gridSize,int_range,bool_shatterZ)"],
"description":"create(float_duration,const_Size_gridSize,int_range,bool_shatterZ)",
"scope":"source.lua"},

"cc.ShuffleTiles":{
"prefix":"cc.ShuffleTiles",
"body":["cc.ShuffleTiles"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ShuffleTiles:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_seed)":{
"prefix":"cc.ShuffleTiles:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_seed)",
"body":["cc.ShuffleTiles:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_seed)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,unsigned_int_seed)",
"scope":"source.lua"},

"cc.ShuffleTiles:getDelta(const_Size_pos)":{
"prefix":"cc.ShuffleTiles:getDelta(const_Size_pos)",
"body":["cc.ShuffleTiles:getDelta(const_Size_pos)"],
"description":"getDelta(const_Size_pos)",
"scope":"source.lua"},

"cc.ShuffleTiles:create(float_duration,const_Size_gridSize,unsigned_int_seed)":{
"prefix":"cc.ShuffleTiles:create(float_duration,const_Size_gridSize,unsigned_int_seed)",
"body":["cc.ShuffleTiles:create(float_duration,const_Size_gridSize,unsigned_int_seed)"],
"description":"create(float_duration,const_Size_gridSize,unsigned_int_seed)",
"scope":"source.lua"},

"cc.FadeOutTRTiles":{
"prefix":"cc.FadeOutTRTiles",
"body":["cc.FadeOutTRTiles"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FadeOutTRTiles:turnOnTile(const_Vec2_pos)":{
"prefix":"cc.FadeOutTRTiles:turnOnTile(const_Vec2_pos)",
"body":["cc.FadeOutTRTiles:turnOnTile(const_Vec2_pos)"],
"description":"turnOnTile(const_Vec2_pos)",
"scope":"source.lua"},

"cc.FadeOutTRTiles:turnOffTile(const_Vec2_pos)":{
"prefix":"cc.FadeOutTRTiles:turnOffTile(const_Vec2_pos)",
"body":["cc.FadeOutTRTiles:turnOffTile(const_Vec2_pos)"],
"description":"turnOffTile(const_Vec2_pos)",
"scope":"source.lua"},

"cc.FadeOutTRTiles:transformTile(const_Vec2_pos,float_distance)":{
"prefix":"cc.FadeOutTRTiles:transformTile(const_Vec2_pos,float_distance)",
"body":["cc.FadeOutTRTiles:transformTile(const_Vec2_pos,float_distance)"],
"description":"transformTile(const_Vec2_pos,float_distance)",
"scope":"source.lua"},

"cc.FadeOutTRTiles:testFunc(const_Size_pos,float_time)":{
"prefix":"cc.FadeOutTRTiles:testFunc(const_Size_pos,float_time)",
"body":["cc.FadeOutTRTiles:testFunc(const_Size_pos,float_time)"],
"description":"testFunc(const_Size_pos,float_time)",
"scope":"source.lua"},

"cc.FadeOutTRTiles:create(float_duration,const_Size_gridSize)":{
"prefix":"cc.FadeOutTRTiles:create(float_duration,const_Size_gridSize)",
"body":["cc.FadeOutTRTiles:create(float_duration,const_Size_gridSize)"],
"description":"create(float_duration,const_Size_gridSize)",
"scope":"source.lua"},

"cc.FadeOutBLTiles":{
"prefix":"cc.FadeOutBLTiles",
"body":["cc.FadeOutBLTiles"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FadeOutBLTiles:create(float_duration,const_Size_gridSize)":{
"prefix":"cc.FadeOutBLTiles:create(float_duration,const_Size_gridSize)",
"body":["cc.FadeOutBLTiles:create(float_duration,const_Size_gridSize)"],
"description":"create(float_duration,const_Size_gridSize)",
"scope":"source.lua"},

"cc.FadeOutUpTiles":{
"prefix":"cc.FadeOutUpTiles",
"body":["cc.FadeOutUpTiles"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FadeOutUpTiles:create(float_duration,const_Size_gridSize)":{
"prefix":"cc.FadeOutUpTiles:create(float_duration,const_Size_gridSize)",
"body":["cc.FadeOutUpTiles:create(float_duration,const_Size_gridSize)"],
"description":"create(float_duration,const_Size_gridSize)",
"scope":"source.lua"},

"cc.FadeOutDownTiles":{
"prefix":"cc.FadeOutDownTiles",
"body":["cc.FadeOutDownTiles"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FadeOutDownTiles:create(float_duration,const_Size_gridSize)":{
"prefix":"cc.FadeOutDownTiles:create(float_duration,const_Size_gridSize)",
"body":["cc.FadeOutDownTiles:create(float_duration,const_Size_gridSize)"],
"description":"create(float_duration,const_Size_gridSize)",
"scope":"source.lua"},

"cc.TurnOffTiles":{
"prefix":"cc.TurnOffTiles",
"body":["cc.TurnOffTiles"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TurnOffTiles:turnOnTile(const_Vec2_pos)":{
"prefix":"cc.TurnOffTiles:turnOnTile(const_Vec2_pos)",
"body":["cc.TurnOffTiles:turnOnTile(const_Vec2_pos)"],
"description":"turnOnTile(const_Vec2_pos)",
"scope":"source.lua"},

"cc.TurnOffTiles:turnOffTile(const_Vec2_pos)":{
"prefix":"cc.TurnOffTiles:turnOffTile(const_Vec2_pos)",
"body":["cc.TurnOffTiles:turnOffTile(const_Vec2_pos)"],
"description":"turnOffTile(const_Vec2_pos)",
"scope":"source.lua"},

"cc.TurnOffTiles:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_seed)":{
"prefix":"cc.TurnOffTiles:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_seed)",
"body":["cc.TurnOffTiles:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_seed)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,unsigned_int_seed)",
"scope":"source.lua"},

"cc.TurnOffTiles:create(float_duration,const_Size_gridSize)":{
"prefix":"cc.TurnOffTiles:create(float_duration,const_Size_gridSize)",
"body":["cc.TurnOffTiles:create(float_duration,const_Size_gridSize)"],
"description":"create(float_duration,const_Size_gridSize)",
"scope":"source.lua"},

"cc.TurnOffTiles:create(float_duration,const_Size_gridSize,unsigned_int_seed)":{
"prefix":"cc.TurnOffTiles:create(float_duration,const_Size_gridSize,unsigned_int_seed)",
"body":["cc.TurnOffTiles:create(float_duration,const_Size_gridSize,unsigned_int_seed)"],
"description":"create(float_duration,const_Size_gridSize,unsigned_int_seed)",
"scope":"source.lua"},

"cc.WavesTiles3D":{
"prefix":"cc.WavesTiles3D",
"body":["cc.WavesTiles3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.WavesTiles3D:setAmplitudeRate(float_amplitudeRate)":{
"prefix":"cc.WavesTiles3D:setAmplitudeRate(float_amplitudeRate)",
"body":["cc.WavesTiles3D:setAmplitudeRate(float_amplitudeRate)"],
"description":"setAmplitudeRate(float_amplitudeRate)",
"scope":"source.lua"},

"cc.WavesTiles3D:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)":{
"prefix":"cc.WavesTiles3D:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"body":["cc.WavesTiles3D:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"scope":"source.lua"},

"cc.WavesTiles3D:getAmplitude()":{
"prefix":"cc.WavesTiles3D:getAmplitude()",
"body":["cc.WavesTiles3D:getAmplitude()"],
"description":"getAmplitude()",
"scope":"source.lua"},

"cc.WavesTiles3D:getAmplitudeRate()":{
"prefix":"cc.WavesTiles3D:getAmplitudeRate()",
"body":["cc.WavesTiles3D:getAmplitudeRate()"],
"description":"getAmplitudeRate()",
"scope":"source.lua"},

"cc.WavesTiles3D:setAmplitude(float_amplitude)":{
"prefix":"cc.WavesTiles3D:setAmplitude(float_amplitude)",
"body":["cc.WavesTiles3D:setAmplitude(float_amplitude)"],
"description":"setAmplitude(float_amplitude)",
"scope":"source.lua"},

"cc.WavesTiles3D:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)":{
"prefix":"cc.WavesTiles3D:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"body":["cc.WavesTiles3D:create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)"],
"description":"create(float_duration,const_Size_gridSize,unsigned_int_waves,float_amplitude)",
"scope":"source.lua"},

"cc.JumpTiles3D":{
"prefix":"cc.JumpTiles3D",
"body":["cc.JumpTiles3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.JumpTiles3D:setAmplitudeRate(float_amplitudeRate)":{
"prefix":"cc.JumpTiles3D:setAmplitudeRate(float_amplitudeRate)",
"body":["cc.JumpTiles3D:setAmplitudeRate(float_amplitudeRate)"],
"description":"setAmplitudeRate(float_amplitudeRate)",
"scope":"source.lua"},

"cc.JumpTiles3D:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_numberOfJumps,float_amplitude)":{
"prefix":"cc.JumpTiles3D:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_numberOfJumps,float_amplitude)",
"body":["cc.JumpTiles3D:initWithDuration(float_duration,const_Size_gridSize,unsigned_int_numberOfJumps,float_amplitude)"],
"description":"initWithDuration(float_duration,const_Size_gridSize,unsigned_int_numberOfJumps,float_amplitude)",
"scope":"source.lua"},

"cc.JumpTiles3D:getAmplitude()":{
"prefix":"cc.JumpTiles3D:getAmplitude()",
"body":["cc.JumpTiles3D:getAmplitude()"],
"description":"getAmplitude()",
"scope":"source.lua"},

"cc.JumpTiles3D:getAmplitudeRate()":{
"prefix":"cc.JumpTiles3D:getAmplitudeRate()",
"body":["cc.JumpTiles3D:getAmplitudeRate()"],
"description":"getAmplitudeRate()",
"scope":"source.lua"},

"cc.JumpTiles3D:setAmplitude(float_amplitude)":{
"prefix":"cc.JumpTiles3D:setAmplitude(float_amplitude)",
"body":["cc.JumpTiles3D:setAmplitude(float_amplitude)"],
"description":"setAmplitude(float_amplitude)",
"scope":"source.lua"},

"cc.JumpTiles3D:create(float_duration,const_Size_gridSize,unsigned_int_numberOfJumps,float_amplitude)":{
"prefix":"cc.JumpTiles3D:create(float_duration,const_Size_gridSize,unsigned_int_numberOfJumps,float_amplitude)",
"body":["cc.JumpTiles3D:create(float_duration,const_Size_gridSize,unsigned_int_numberOfJumps,float_amplitude)"],
"description":"create(float_duration,const_Size_gridSize,unsigned_int_numberOfJumps,float_amplitude)",
"scope":"source.lua"},

"cc.SplitRows":{
"prefix":"cc.SplitRows",
"body":["cc.SplitRows"],
"description":"cocos class",
"scope":"source.lua"},

"cc.SplitRows:initWithDuration(float_duration,unsigned_int_rows)":{
"prefix":"cc.SplitRows:initWithDuration(float_duration,unsigned_int_rows)",
"body":["cc.SplitRows:initWithDuration(float_duration,unsigned_int_rows)"],
"description":"initWithDuration(float_duration,unsigned_int_rows)",
"scope":"source.lua"},

"cc.SplitRows:create(float_duration,unsigned_int_rows)":{
"prefix":"cc.SplitRows:create(float_duration,unsigned_int_rows)",
"body":["cc.SplitRows:create(float_duration,unsigned_int_rows)"],
"description":"create(float_duration,unsigned_int_rows)",
"scope":"source.lua"},

"cc.SplitCols":{
"prefix":"cc.SplitCols",
"body":["cc.SplitCols"],
"description":"cocos class",
"scope":"source.lua"},

"cc.SplitCols:initWithDuration(float_duration,unsigned_int_cols)":{
"prefix":"cc.SplitCols:initWithDuration(float_duration,unsigned_int_cols)",
"body":["cc.SplitCols:initWithDuration(float_duration,unsigned_int_cols)"],
"description":"initWithDuration(float_duration,unsigned_int_cols)",
"scope":"source.lua"},

"cc.SplitCols:create(float_duration,unsigned_int_cols)":{
"prefix":"cc.SplitCols:create(float_duration,unsigned_int_cols)",
"body":["cc.SplitCols:create(float_duration,unsigned_int_cols)"],
"description":"create(float_duration,unsigned_int_cols)",
"scope":"source.lua"},

"cc.ActionTween":{
"prefix":"cc.ActionTween",
"body":["cc.ActionTween"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ActionTween:initWithDuration(float_duration,const_std_string_key,float_from,float_to)":{
"prefix":"cc.ActionTween:initWithDuration(float_duration,const_std_string_key,float_from,float_to)",
"body":["cc.ActionTween:initWithDuration(float_duration,const_std_string_key,float_from,float_to)"],
"description":"initWithDuration(float_duration,const_std_string_key,float_from,float_to)",
"scope":"source.lua"},

"cc.ActionTween:create(float_duration,const_std_string_key,float_from,float_to)":{
"prefix":"cc.ActionTween:create(float_duration,const_std_string_key,float_from,float_to)",
"body":["cc.ActionTween:create(float_duration,const_std_string_key,float_from,float_to)"],
"description":"create(float_duration,const_std_string_key,float_from,float_to)",
"scope":"source.lua"},

"cc.AtlasNode":{
"prefix":"cc.AtlasNode",
"body":["cc.AtlasNode"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AtlasNode:updateAtlasValues()":{
"prefix":"cc.AtlasNode:updateAtlasValues()",
"body":["cc.AtlasNode:updateAtlasValues()"],
"description":"updateAtlasValues()",
"scope":"source.lua"},

"cc.AtlasNode:initWithTileFile(const_std_string_tile,int_tileWidth,int_tileHeight,int_itemsToRender)":{
"prefix":"cc.AtlasNode:initWithTileFile(const_std_string_tile,int_tileWidth,int_tileHeight,int_itemsToRender)",
"body":["cc.AtlasNode:initWithTileFile(const_std_string_tile,int_tileWidth,int_tileHeight,int_itemsToRender)"],
"description":"initWithTileFile(const_std_string_tile,int_tileWidth,int_tileHeight,int_itemsToRender)",
"scope":"source.lua"},

"cc.AtlasNode:getTexture()":{
"prefix":"cc.AtlasNode:getTexture()",
"body":["cc.AtlasNode:getTexture()"],
"description":"getTexture()",
"scope":"source.lua"},

"cc.AtlasNode:setTextureAtlas(TextureAtlas_textureAtlas)":{
"prefix":"cc.AtlasNode:setTextureAtlas(TextureAtlas_textureAtlas)",
"body":["cc.AtlasNode:setTextureAtlas(TextureAtlas_textureAtlas)"],
"description":"setTextureAtlas(TextureAtlas_textureAtlas)",
"scope":"source.lua"},

"cc.AtlasNode:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.AtlasNode:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.AtlasNode:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.AtlasNode:getTextureAtlas()":{
"prefix":"cc.AtlasNode:getTextureAtlas()",
"body":["cc.AtlasNode:getTextureAtlas()"],
"description":"getTextureAtlas()",
"scope":"source.lua"},

"cc.AtlasNode:getBlendFunc()":{
"prefix":"cc.AtlasNode:getBlendFunc()",
"body":["cc.AtlasNode:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.AtlasNode:getQuadsToDraw()":{
"prefix":"cc.AtlasNode:getQuadsToDraw()",
"body":["cc.AtlasNode:getQuadsToDraw()"],
"description":"getQuadsToDraw()",
"scope":"source.lua"},

"cc.AtlasNode:setTexture(Texture2D_texture)":{
"prefix":"cc.AtlasNode:setTexture(Texture2D_texture)",
"body":["cc.AtlasNode:setTexture(Texture2D_texture)"],
"description":"setTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.AtlasNode:initWithTexture(Texture2D_texture,int_tileWidth,int_tileHeight,int_itemsToRender)":{
"prefix":"cc.AtlasNode:initWithTexture(Texture2D_texture,int_tileWidth,int_tileHeight,int_itemsToRender)",
"body":["cc.AtlasNode:initWithTexture(Texture2D_texture,int_tileWidth,int_tileHeight,int_itemsToRender)"],
"description":"initWithTexture(Texture2D_texture,int_tileWidth,int_tileHeight,int_itemsToRender)",
"scope":"source.lua"},

"cc.AtlasNode:setQuadsToDraw(ssize_t_quadsToDraw)":{
"prefix":"cc.AtlasNode:setQuadsToDraw(ssize_t_quadsToDraw)",
"body":["cc.AtlasNode:setQuadsToDraw(ssize_t_quadsToDraw)"],
"description":"setQuadsToDraw(ssize_t_quadsToDraw)",
"scope":"source.lua"},

"cc.AtlasNode:create(const_std_string_filename,int_tileWidth,int_tileHeight,int_itemsToRender)":{
"prefix":"cc.AtlasNode:create(const_std_string_filename,int_tileWidth,int_tileHeight,int_itemsToRender)",
"body":["cc.AtlasNode:create(const_std_string_filename,int_tileWidth,int_tileHeight,int_itemsToRender)"],
"description":"create(const_std_string_filename,int_tileWidth,int_tileHeight,int_itemsToRender)",
"scope":"source.lua"},

"cc.ClippingNode":{
"prefix":"cc.ClippingNode",
"body":["cc.ClippingNode"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ClippingNode:hasContent()":{
"prefix":"cc.ClippingNode:hasContent()",
"body":["cc.ClippingNode:hasContent()"],
"description":"hasContent()",
"scope":"source.lua"},

"cc.ClippingNode:setInverted(bool_inverted)":{
"prefix":"cc.ClippingNode:setInverted(bool_inverted)",
"body":["cc.ClippingNode:setInverted(bool_inverted)"],
"description":"setInverted(bool_inverted)",
"scope":"source.lua"},

"cc.ClippingNode:setStencil(Node_stencil)":{
"prefix":"cc.ClippingNode:setStencil(Node_stencil)",
"body":["cc.ClippingNode:setStencil(Node_stencil)"],
"description":"setStencil(Node_stencil)",
"scope":"source.lua"},

"cc.ClippingNode:getAlphaThreshold()":{
"prefix":"cc.ClippingNode:getAlphaThreshold()",
"body":["cc.ClippingNode:getAlphaThreshold()"],
"description":"getAlphaThreshold()",
"scope":"source.lua"},

"cc.ClippingNode:init()":{
"prefix":"cc.ClippingNode:init()",
"body":["cc.ClippingNode:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ClippingNode:init(Node_stencil)":{
"prefix":"cc.ClippingNode:init(Node_stencil)",
"body":["cc.ClippingNode:init(Node_stencil)"],
"description":"init(Node_stencil)",
"scope":"source.lua"},

"cc.ClippingNode:getStencil()":{
"prefix":"cc.ClippingNode:getStencil()",
"body":["cc.ClippingNode:getStencil()"],
"description":"getStencil()",
"scope":"source.lua"},

"cc.ClippingNode:setAlphaThreshold(GLfloat_alphaThreshold)":{
"prefix":"cc.ClippingNode:setAlphaThreshold(GLfloat_alphaThreshold)",
"body":["cc.ClippingNode:setAlphaThreshold(GLfloat_alphaThreshold)"],
"description":"setAlphaThreshold(GLfloat_alphaThreshold)",
"scope":"source.lua"},

"cc.ClippingNode:isInverted()":{
"prefix":"cc.ClippingNode:isInverted()",
"body":["cc.ClippingNode:isInverted()"],
"description":"isInverted()",
"scope":"source.lua"},

"cc.ClippingNode:create()":{
"prefix":"cc.ClippingNode:create()",
"body":["cc.ClippingNode:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ClippingNode:create(Node_stencil)":{
"prefix":"cc.ClippingNode:create(Node_stencil)",
"body":["cc.ClippingNode:create(Node_stencil)"],
"description":"create(Node_stencil)",
"scope":"source.lua"},

"cc.ClippingRectangleNode":{
"prefix":"cc.ClippingRectangleNode",
"body":["cc.ClippingRectangleNode"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ClippingRectangleNode:isClippingEnabled()":{
"prefix":"cc.ClippingRectangleNode:isClippingEnabled()",
"body":["cc.ClippingRectangleNode:isClippingEnabled()"],
"description":"isClippingEnabled()",
"scope":"source.lua"},

"cc.ClippingRectangleNode:setClippingEnabled(bool_enabled)":{
"prefix":"cc.ClippingRectangleNode:setClippingEnabled(bool_enabled)",
"body":["cc.ClippingRectangleNode:setClippingEnabled(bool_enabled)"],
"description":"setClippingEnabled(bool_enabled)",
"scope":"source.lua"},

"cc.ClippingRectangleNode:getClippingRegion()":{
"prefix":"cc.ClippingRectangleNode:getClippingRegion()",
"body":["cc.ClippingRectangleNode:getClippingRegion()"],
"description":"getClippingRegion()",
"scope":"source.lua"},

"cc.ClippingRectangleNode:setClippingRegion(const_Rect_clippingRegion)":{
"prefix":"cc.ClippingRectangleNode:setClippingRegion(const_Rect_clippingRegion)",
"body":["cc.ClippingRectangleNode:setClippingRegion(const_Rect_clippingRegion)"],
"description":"setClippingRegion(const_Rect_clippingRegion)",
"scope":"source.lua"},

"cc.ClippingRectangleNode:create(const_Rect_clippingRegion)":{
"prefix":"cc.ClippingRectangleNode:create(const_Rect_clippingRegion)",
"body":["cc.ClippingRectangleNode:create(const_Rect_clippingRegion)"],
"description":"create(const_Rect_clippingRegion)",
"scope":"source.lua"},

"cc.ClippingRectangleNode:create()":{
"prefix":"cc.ClippingRectangleNode:create()",
"body":["cc.ClippingRectangleNode:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.DrawNode":{
"prefix":"cc.DrawNode",
"body":["cc.DrawNode"],
"description":"cocos class",
"scope":"source.lua"},

"cc.DrawNode:drawLine(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawLine(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)",
"body":["cc.DrawNode:drawLine(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)"],
"description":"drawLine(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:drawRect(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawRect(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)",
"body":["cc.DrawNode:drawRect(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)"],
"description":"drawRect(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:drawRect(const_Vec2_p1,const_Vec2_p2,const_Vec2_p3,const_Vec2_p4,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawRect(const_Vec2_p1,const_Vec2_p2,const_Vec2_p3,const_Vec2_p4,const_Color4F_color)",
"body":["cc.DrawNode:drawRect(const_Vec2_p1,const_Vec2_p2,const_Vec2_p3,const_Vec2_p4,const_Color4F_color)"],
"description":"drawRect(const_Vec2_p1,const_Vec2_p2,const_Vec2_p3,const_Vec2_p4,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:drawSolidCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,float_scaleX,float_scaleY,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawSolidCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,float_scaleX,float_scaleY,const_Color4F_color)",
"body":["cc.DrawNode:drawSolidCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,float_scaleX,float_scaleY,const_Color4F_color)"],
"description":"drawSolidCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,float_scaleX,float_scaleY,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:drawSolidCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawSolidCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,const_Color4F_color)",
"body":["cc.DrawNode:drawSolidCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,const_Color4F_color)"],
"description":"drawSolidCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:setLineWidth(GLfloat_lineWidth)":{
"prefix":"cc.DrawNode:setLineWidth(GLfloat_lineWidth)",
"body":["cc.DrawNode:setLineWidth(GLfloat_lineWidth)"],
"description":"setLineWidth(GLfloat_lineWidth)",
"scope":"source.lua"},

"cc.DrawNode:onDrawGLPoint(const_Mat4_transform,uint32_t_flags)":{
"prefix":"cc.DrawNode:onDrawGLPoint(const_Mat4_transform,uint32_t_flags)",
"body":["cc.DrawNode:onDrawGLPoint(const_Mat4_transform,uint32_t_flags)"],
"description":"onDrawGLPoint(const_Mat4_transform,uint32_t_flags)",
"scope":"source.lua"},

"cc.DrawNode:drawDot(const_Vec2_pos,float_radius,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawDot(const_Vec2_pos,float_radius,const_Color4F_color)",
"body":["cc.DrawNode:drawDot(const_Vec2_pos,float_radius,const_Color4F_color)"],
"description":"drawDot(const_Vec2_pos,float_radius,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:drawSegment(const_Vec2_from,const_Vec2_to,float_radius,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawSegment(const_Vec2_from,const_Vec2_to,float_radius,const_Color4F_color)",
"body":["cc.DrawNode:drawSegment(const_Vec2_from,const_Vec2_to,float_radius,const_Color4F_color)"],
"description":"drawSegment(const_Vec2_from,const_Vec2_to,float_radius,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:getBlendFunc()":{
"prefix":"cc.DrawNode:getBlendFunc()",
"body":["cc.DrawNode:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.DrawNode:onDraw(const_Mat4_transform,uint32_t_flags)":{
"prefix":"cc.DrawNode:onDraw(const_Mat4_transform,uint32_t_flags)",
"body":["cc.DrawNode:onDraw(const_Mat4_transform,uint32_t_flags)"],
"description":"onDraw(const_Mat4_transform,uint32_t_flags)",
"scope":"source.lua"},

"cc.DrawNode:drawCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,bool_drawLineToCenter,float_scaleX,float_scaleY,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,bool_drawLineToCenter,float_scaleX,float_scaleY,const_Color4F_color)",
"body":["cc.DrawNode:drawCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,bool_drawLineToCenter,float_scaleX,float_scaleY,const_Color4F_color)"],
"description":"drawCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,bool_drawLineToCenter,float_scaleX,float_scaleY,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:drawCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,bool_drawLineToCenter,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,bool_drawLineToCenter,const_Color4F_color)",
"body":["cc.DrawNode:drawCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,bool_drawLineToCenter,const_Color4F_color)"],
"description":"drawCircle(const_Vec2_center,float_radius,float_angle,unsigned_int_segments,bool_drawLineToCenter,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:drawQuadBezier(const_Vec2_origin,const_Vec2_control,const_Vec2_destination,unsigned_int_segments,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawQuadBezier(const_Vec2_origin,const_Vec2_control,const_Vec2_destination,unsigned_int_segments,const_Color4F_color)",
"body":["cc.DrawNode:drawQuadBezier(const_Vec2_origin,const_Vec2_control,const_Vec2_destination,unsigned_int_segments,const_Color4F_color)"],
"description":"drawQuadBezier(const_Vec2_origin,const_Vec2_control,const_Vec2_destination,unsigned_int_segments,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:onDrawGLLine(const_Mat4_transform,uint32_t_flags)":{
"prefix":"cc.DrawNode:onDrawGLLine(const_Mat4_transform,uint32_t_flags)",
"body":["cc.DrawNode:onDrawGLLine(const_Mat4_transform,uint32_t_flags)"],
"description":"onDrawGLLine(const_Mat4_transform,uint32_t_flags)",
"scope":"source.lua"},

"cc.DrawNode:drawTriangle(const_Vec2_p1,const_Vec2_p2,const_Vec2_p3,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawTriangle(const_Vec2_p1,const_Vec2_p2,const_Vec2_p3,const_Color4F_color)",
"body":["cc.DrawNode:drawTriangle(const_Vec2_p1,const_Vec2_p2,const_Vec2_p3,const_Color4F_color)"],
"description":"drawTriangle(const_Vec2_p1,const_Vec2_p2,const_Vec2_p3,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.DrawNode:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.DrawNode:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.DrawNode:clear()":{
"prefix":"cc.DrawNode:clear()",
"body":["cc.DrawNode:clear()"],
"description":"clear()",
"scope":"source.lua"},

"cc.DrawNode:drawSolidRect(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawSolidRect(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)",
"body":["cc.DrawNode:drawSolidRect(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)"],
"description":"drawSolidRect(const_Vec2_origin,const_Vec2_destination,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:getLineWidth()":{
"prefix":"cc.DrawNode:getLineWidth()",
"body":["cc.DrawNode:getLineWidth()"],
"description":"getLineWidth()",
"scope":"source.lua"},

"cc.DrawNode:drawPoint(const_Vec2_point,const_float_pointSize,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawPoint(const_Vec2_point,const_float_pointSize,const_Color4F_color)",
"body":["cc.DrawNode:drawPoint(const_Vec2_point,const_float_pointSize,const_Color4F_color)"],
"description":"drawPoint(const_Vec2_point,const_float_pointSize,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:drawCubicBezier(const_Vec2_origin,const_Vec2_control1,const_Vec2_control2,const_Vec2_destination,unsigned_int_segments,const_Color4F_color)":{
"prefix":"cc.DrawNode:drawCubicBezier(const_Vec2_origin,const_Vec2_control1,const_Vec2_control2,const_Vec2_destination,unsigned_int_segments,const_Color4F_color)",
"body":["cc.DrawNode:drawCubicBezier(const_Vec2_origin,const_Vec2_control1,const_Vec2_control2,const_Vec2_destination,unsigned_int_segments,const_Color4F_color)"],
"description":"drawCubicBezier(const_Vec2_origin,const_Vec2_control1,const_Vec2_control2,const_Vec2_destination,unsigned_int_segments,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode:create(GLfloat_defaultLineWidth)":{
"prefix":"cc.DrawNode:create(GLfloat_defaultLineWidth)",
"body":["cc.DrawNode:create(GLfloat_defaultLineWidth)"],
"description":"create(GLfloat_defaultLineWidth)",
"scope":"source.lua"},

"cc.Label":{
"prefix":"cc.Label",
"body":["cc.Label"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Label:isClipMarginEnabled()":{
"prefix":"cc.Label:isClipMarginEnabled()",
"body":["cc.Label:isClipMarginEnabled()"],
"description":"isClipMarginEnabled()",
"scope":"source.lua"},

"cc.Label:enableShadow(const_Color4B_shadowColor,const_Size_offset,int_blurRadius)":{
"prefix":"cc.Label:enableShadow(const_Color4B_shadowColor,const_Size_offset,int_blurRadius)",
"body":["cc.Label:enableShadow(const_Color4B_shadowColor,const_Size_offset,int_blurRadius)"],
"description":"enableShadow(const_Color4B_shadowColor,const_Size_offset,int_blurRadius)",
"scope":"source.lua"},

"cc.Label:setDimensions(float_width,float_height)":{
"prefix":"cc.Label:setDimensions(float_width,float_height)",
"body":["cc.Label:setDimensions(float_width,float_height)"],
"description":"setDimensions(float_width,float_height)",
"scope":"source.lua"},

"cc.Label:getWidth()":{
"prefix":"cc.Label:getWidth()",
"body":["cc.Label:getWidth()"],
"description":"getWidth()",
"scope":"source.lua"},

"cc.Label:getString()":{
"prefix":"cc.Label:getString()",
"body":["cc.Label:getString()"],
"description":"getString()",
"scope":"source.lua"},

"cc.Label:getHeight()":{
"prefix":"cc.Label:getHeight()",
"body":["cc.Label:getHeight()"],
"description":"getHeight()",
"scope":"source.lua"},

"cc.Label:disableEffect()":{
"prefix":"cc.Label:disableEffect()",
"body":["cc.Label:disableEffect()"],
"description":"disableEffect()",
"scope":"source.lua"},

"cc.Label:disableEffect(LabelEffect_effect)":{
"prefix":"cc.Label:disableEffect(LabelEffect_effect)",
"body":["cc.Label:disableEffect(LabelEffect_effect)"],
"description":"disableEffect(LabelEffect_effect)",
"scope":"source.lua"},

"cc.Label:setTTFConfig(const_TTFConfig_ttfConfig)":{
"prefix":"cc.Label:setTTFConfig(const_TTFConfig_ttfConfig)",
"body":["cc.Label:setTTFConfig(const_TTFConfig_ttfConfig)"],
"description":"setTTFConfig(const_TTFConfig_ttfConfig)",
"scope":"source.lua"},

"cc.Label:getTextColor()":{
"prefix":"cc.Label:getTextColor()",
"body":["cc.Label:getTextColor()"],
"description":"getTextColor()",
"scope":"source.lua"},

"cc.Label:getBlendFunc()":{
"prefix":"cc.Label:getBlendFunc()",
"body":["cc.Label:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.Label:enableWrap(bool_enable)":{
"prefix":"cc.Label:enableWrap(bool_enable)",
"body":["cc.Label:enableWrap(bool_enable)"],
"description":"enableWrap(bool_enable)",
"scope":"source.lua"},

"cc.Label:setWidth(float_width)":{
"prefix":"cc.Label:setWidth(float_width)",
"body":["cc.Label:setWidth(float_width)"],
"description":"setWidth(float_width)",
"scope":"source.lua"},

"cc.Label:getAdditionalKerning()":{
"prefix":"cc.Label:getAdditionalKerning()",
"body":["cc.Label:getAdditionalKerning()"],
"description":"getAdditionalKerning()",
"scope":"source.lua"},

"cc.Label:getBMFontSize()":{
"prefix":"cc.Label:getBMFontSize()",
"body":["cc.Label:getBMFontSize()"],
"description":"getBMFontSize()",
"scope":"source.lua"},

"cc.Label:getMaxLineWidth()":{
"prefix":"cc.Label:getMaxLineWidth()",
"body":["cc.Label:getMaxLineWidth()"],
"description":"getMaxLineWidth()",
"scope":"source.lua"},

"cc.Label:getHorizontalAlignment()":{
"prefix":"cc.Label:getHorizontalAlignment()",
"body":["cc.Label:getHorizontalAlignment()"],
"description":"getHorizontalAlignment()",
"scope":"source.lua"},

"cc.Label:getShadowOffset()":{
"prefix":"cc.Label:getShadowOffset()",
"body":["cc.Label:getShadowOffset()"],
"description":"getShadowOffset()",
"scope":"source.lua"},

"cc.Label:getLineSpacing()":{
"prefix":"cc.Label:getLineSpacing()",
"body":["cc.Label:getLineSpacing()"],
"description":"getLineSpacing()",
"scope":"source.lua"},

"cc.Label:setClipMarginEnabled(bool_clipEnabled)":{
"prefix":"cc.Label:setClipMarginEnabled(bool_clipEnabled)",
"body":["cc.Label:setClipMarginEnabled(bool_clipEnabled)"],
"description":"setClipMarginEnabled(bool_clipEnabled)",
"scope":"source.lua"},

"cc.Label:setString(const_std_string_text)":{
"prefix":"cc.Label:setString(const_std_string_text)",
"body":["cc.Label:setString(const_std_string_text)"],
"description":"setString(const_std_string_text)",
"scope":"source.lua"},

"cc.Label:setSystemFontName(const_std_string_font)":{
"prefix":"cc.Label:setSystemFontName(const_std_string_font)",
"body":["cc.Label:setSystemFontName(const_std_string_font)"],
"description":"setSystemFontName(const_std_string_font)",
"scope":"source.lua"},

"cc.Label:isWrapEnabled()":{
"prefix":"cc.Label:isWrapEnabled()",
"body":["cc.Label:isWrapEnabled()"],
"description":"isWrapEnabled()",
"scope":"source.lua"},

"cc.Label:getOutlineSize()":{
"prefix":"cc.Label:getOutlineSize()",
"body":["cc.Label:getOutlineSize()"],
"description":"getOutlineSize()",
"scope":"source.lua"},

"cc.Label:setBMFontFilePath(const_std_string_bmfontFilePath,const_Vec2_imageOffset,float_fontSize)":{
"prefix":"cc.Label:setBMFontFilePath(const_std_string_bmfontFilePath,const_Vec2_imageOffset,float_fontSize)",
"body":["cc.Label:setBMFontFilePath(const_std_string_bmfontFilePath,const_Vec2_imageOffset,float_fontSize)"],
"description":"setBMFontFilePath(const_std_string_bmfontFilePath,const_Vec2_imageOffset,float_fontSize)",
"scope":"source.lua"},

"cc.Label:initWithTTF(const_TTFConfig_ttfConfig,const_std_string_text,TextHAlignment_hAlignment,int_maxLineWidth)":{
"prefix":"cc.Label:initWithTTF(const_TTFConfig_ttfConfig,const_std_string_text,TextHAlignment_hAlignment,int_maxLineWidth)",
"body":["cc.Label:initWithTTF(const_TTFConfig_ttfConfig,const_std_string_text,TextHAlignment_hAlignment,int_maxLineWidth)"],
"description":"initWithTTF(const_TTFConfig_ttfConfig,const_std_string_text,TextHAlignment_hAlignment,int_maxLineWidth)",
"scope":"source.lua"},

"cc.Label:getFontAtlas()":{
"prefix":"cc.Label:getFontAtlas()",
"body":["cc.Label:getFontAtlas()"],
"description":"getFontAtlas()",
"scope":"source.lua"},

"cc.Label:setLineHeight(float_height)":{
"prefix":"cc.Label:setLineHeight(float_height)",
"body":["cc.Label:setLineHeight(float_height)"],
"description":"setLineHeight(float_height)",
"scope":"source.lua"},

"cc.Label:setSystemFontSize(float_fontSize)":{
"prefix":"cc.Label:setSystemFontSize(float_fontSize)",
"body":["cc.Label:setSystemFontSize(float_fontSize)"],
"description":"setSystemFontSize(float_fontSize)",
"scope":"source.lua"},

"cc.Label:setOverflow(Overflow_overflow)":{
"prefix":"cc.Label:setOverflow(Overflow_overflow)",
"body":["cc.Label:setOverflow(Overflow_overflow)"],
"description":"setOverflow(Overflow_overflow)",
"scope":"source.lua"},

"cc.Label:enableStrikethrough()":{
"prefix":"cc.Label:enableStrikethrough()",
"body":["cc.Label:enableStrikethrough()"],
"description":"enableStrikethrough()",
"scope":"source.lua"},

"cc.Label:updateContent()":{
"prefix":"cc.Label:updateContent()",
"body":["cc.Label:updateContent()"],
"description":"updateContent()",
"scope":"source.lua"},

"cc.Label:getStringLength()":{
"prefix":"cc.Label:getStringLength()",
"body":["cc.Label:getStringLength()"],
"description":"getStringLength()",
"scope":"source.lua"},

"cc.Label:setLineBreakWithoutSpace(bool_breakWithoutSpace)":{
"prefix":"cc.Label:setLineBreakWithoutSpace(bool_breakWithoutSpace)",
"body":["cc.Label:setLineBreakWithoutSpace(bool_breakWithoutSpace)"],
"description":"setLineBreakWithoutSpace(bool_breakWithoutSpace)",
"scope":"source.lua"},

"cc.Label:getStringNumLines()":{
"prefix":"cc.Label:getStringNumLines()",
"body":["cc.Label:getStringNumLines()"],
"description":"getStringNumLines()",
"scope":"source.lua"},

"cc.Label:enableOutline(const_Color4B_outlineColor,int_outlineSize)":{
"prefix":"cc.Label:enableOutline(const_Color4B_outlineColor,int_outlineSize)",
"body":["cc.Label:enableOutline(const_Color4B_outlineColor,int_outlineSize)"],
"description":"enableOutline(const_Color4B_outlineColor,int_outlineSize)",
"scope":"source.lua"},

"cc.Label:getShadowBlurRadius()":{
"prefix":"cc.Label:getShadowBlurRadius()",
"body":["cc.Label:getShadowBlurRadius()"],
"description":"getShadowBlurRadius()",
"scope":"source.lua"},

"cc.Label:getEffectColor()":{
"prefix":"cc.Label:getEffectColor()",
"body":["cc.Label:getEffectColor()"],
"description":"getEffectColor()",
"scope":"source.lua"},

"cc.Label:removeAllChildrenWithCleanup(bool_cleanup)":{
"prefix":"cc.Label:removeAllChildrenWithCleanup(bool_cleanup)",
"body":["cc.Label:removeAllChildrenWithCleanup(bool_cleanup)"],
"description":"removeAllChildrenWithCleanup(bool_cleanup)",
"scope":"source.lua"},

"cc.Label:setCharMap(const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)":{
"prefix":"cc.Label:setCharMap(const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)",
"body":["cc.Label:setCharMap(const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)"],
"description":"setCharMap(const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)",
"scope":"source.lua"},

"cc.Label:setCharMap(Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)":{
"prefix":"cc.Label:setCharMap(Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)",
"body":["cc.Label:setCharMap(Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)"],
"description":"setCharMap(Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)",
"scope":"source.lua"},

"cc.Label:setCharMap(const_std_string_plistFile)":{
"prefix":"cc.Label:setCharMap(const_std_string_plistFile)",
"body":["cc.Label:setCharMap(const_std_string_plistFile)"],
"description":"setCharMap(const_std_string_plistFile)",
"scope":"source.lua"},

"cc.Label:getDimensions()":{
"prefix":"cc.Label:getDimensions()",
"body":["cc.Label:getDimensions()"],
"description":"getDimensions()",
"scope":"source.lua"},

"cc.Label:setMaxLineWidth(float_maxLineWidth)":{
"prefix":"cc.Label:setMaxLineWidth(float_maxLineWidth)",
"body":["cc.Label:setMaxLineWidth(float_maxLineWidth)"],
"description":"setMaxLineWidth(float_maxLineWidth)",
"scope":"source.lua"},

"cc.Label:getSystemFontName()":{
"prefix":"cc.Label:getSystemFontName()",
"body":["cc.Label:getSystemFontName()"],
"description":"getSystemFontName()",
"scope":"source.lua"},

"cc.Label:setVerticalAlignment(TextVAlignment_vAlignment)":{
"prefix":"cc.Label:setVerticalAlignment(TextVAlignment_vAlignment)",
"body":["cc.Label:setVerticalAlignment(TextVAlignment_vAlignment)"],
"description":"setVerticalAlignment(TextVAlignment_vAlignment)",
"scope":"source.lua"},

"cc.Label:setLineSpacing(float_height)":{
"prefix":"cc.Label:setLineSpacing(float_height)",
"body":["cc.Label:setLineSpacing(float_height)"],
"description":"setLineSpacing(float_height)",
"scope":"source.lua"},

"cc.Label:getLineHeight()":{
"prefix":"cc.Label:getLineHeight()",
"body":["cc.Label:getLineHeight()"],
"description":"getLineHeight()",
"scope":"source.lua"},

"cc.Label:getShadowColor()":{
"prefix":"cc.Label:getShadowColor()",
"body":["cc.Label:getShadowColor()"],
"description":"getShadowColor()",
"scope":"source.lua"},

"cc.Label:getTTFConfig()":{
"prefix":"cc.Label:getTTFConfig()",
"body":["cc.Label:getTTFConfig()"],
"description":"getTTFConfig()",
"scope":"source.lua"},

"cc.Label:enableItalics()":{
"prefix":"cc.Label:enableItalics()",
"body":["cc.Label:enableItalics()"],
"description":"enableItalics()",
"scope":"source.lua"},

"cc.Label:setTextColor(const_Color4B_color)":{
"prefix":"cc.Label:setTextColor(const_Color4B_color)",
"body":["cc.Label:setTextColor(const_Color4B_color)"],
"description":"setTextColor(const_Color4B_color)",
"scope":"source.lua"},

"cc.Label:getLetter(int_lettetIndex)":{
"prefix":"cc.Label:getLetter(int_lettetIndex)",
"body":["cc.Label:getLetter(int_lettetIndex)"],
"description":"getLetter(int_lettetIndex)",
"scope":"source.lua"},

"cc.Label:setHeight(float_height)":{
"prefix":"cc.Label:setHeight(float_height)",
"body":["cc.Label:setHeight(float_height)"],
"description":"setHeight(float_height)",
"scope":"source.lua"},

"cc.Label:isShadowEnabled()":{
"prefix":"cc.Label:isShadowEnabled()",
"body":["cc.Label:isShadowEnabled()"],
"description":"isShadowEnabled()",
"scope":"source.lua"},

"cc.Label:enableGlow(const_Color4B_glowColor)":{
"prefix":"cc.Label:enableGlow(const_Color4B_glowColor)",
"body":["cc.Label:enableGlow(const_Color4B_glowColor)"],
"description":"enableGlow(const_Color4B_glowColor)",
"scope":"source.lua"},

"cc.Label:getOverflow()":{
"prefix":"cc.Label:getOverflow()",
"body":["cc.Label:getOverflow()"],
"description":"getOverflow()",
"scope":"source.lua"},

"cc.Label:getVerticalAlignment()":{
"prefix":"cc.Label:getVerticalAlignment()",
"body":["cc.Label:getVerticalAlignment()"],
"description":"getVerticalAlignment()",
"scope":"source.lua"},

"cc.Label:setAdditionalKerning(float_space)":{
"prefix":"cc.Label:setAdditionalKerning(float_space)",
"body":["cc.Label:setAdditionalKerning(float_space)"],
"description":"setAdditionalKerning(float_space)",
"scope":"source.lua"},

"cc.Label:getSystemFontSize()":{
"prefix":"cc.Label:getSystemFontSize()",
"body":["cc.Label:getSystemFontSize()"],
"description":"getSystemFontSize()",
"scope":"source.lua"},

"cc.Label:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.Label:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.Label:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.Label:getTextAlignment()":{
"prefix":"cc.Label:getTextAlignment()",
"body":["cc.Label:getTextAlignment()"],
"description":"getTextAlignment()",
"scope":"source.lua"},

"cc.Label:getBMFontFilePath()":{
"prefix":"cc.Label:getBMFontFilePath()",
"body":["cc.Label:getBMFontFilePath()"],
"description":"getBMFontFilePath()",
"scope":"source.lua"},

"cc.Label:setHorizontalAlignment(TextHAlignment_hAlignment)":{
"prefix":"cc.Label:setHorizontalAlignment(TextHAlignment_hAlignment)",
"body":["cc.Label:setHorizontalAlignment(TextHAlignment_hAlignment)"],
"description":"setHorizontalAlignment(TextHAlignment_hAlignment)",
"scope":"source.lua"},

"cc.Label:enableBold()":{
"prefix":"cc.Label:enableBold()",
"body":["cc.Label:enableBold()"],
"description":"enableBold()",
"scope":"source.lua"},

"cc.Label:enableUnderline()":{
"prefix":"cc.Label:enableUnderline()",
"body":["cc.Label:enableUnderline()"],
"description":"enableUnderline()",
"scope":"source.lua"},

"cc.Label:getLabelEffectType()":{
"prefix":"cc.Label:getLabelEffectType()",
"body":["cc.Label:getLabelEffectType()"],
"description":"getLabelEffectType()",
"scope":"source.lua"},

"cc.Label:setAlignment(TextHAlignment_hAlignment)":{
"prefix":"cc.Label:setAlignment(TextHAlignment_hAlignment)",
"body":["cc.Label:setAlignment(TextHAlignment_hAlignment)"],
"description":"setAlignment(TextHAlignment_hAlignment)",
"scope":"source.lua"},

"cc.Label:setAlignment(TextHAlignment_hAlignment,TextVAlignment_vAlignment)":{
"prefix":"cc.Label:setAlignment(TextHAlignment_hAlignment,TextVAlignment_vAlignment)",
"body":["cc.Label:setAlignment(TextHAlignment_hAlignment,TextVAlignment_vAlignment)"],
"description":"setAlignment(TextHAlignment_hAlignment,TextVAlignment_vAlignment)",
"scope":"source.lua"},

"cc.Label:requestSystemFontRefresh()":{
"prefix":"cc.Label:requestSystemFontRefresh()",
"body":["cc.Label:requestSystemFontRefresh()"],
"description":"requestSystemFontRefresh()",
"scope":"source.lua"},

"cc.Label:setBMFontSize(float_fontSize)":{
"prefix":"cc.Label:setBMFontSize(float_fontSize)",
"body":["cc.Label:setBMFontSize(float_fontSize)"],
"description":"setBMFontSize(float_fontSize)",
"scope":"source.lua"},

"cc.Label:create()":{
"prefix":"cc.Label:create()",
"body":["cc.Label:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Label:createWithCharMap(const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)":{
"prefix":"cc.Label:createWithCharMap(const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)",
"body":["cc.Label:createWithCharMap(const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)"],
"description":"createWithCharMap(const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)",
"scope":"source.lua"},

"cc.Label:createWithCharMap(Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)":{
"prefix":"cc.Label:createWithCharMap(Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)",
"body":["cc.Label:createWithCharMap(Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)"],
"description":"createWithCharMap(Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)",
"scope":"source.lua"},

"cc.Label:createWithCharMap(const_std_string_plistFile)":{
"prefix":"cc.Label:createWithCharMap(const_std_string_plistFile)",
"body":["cc.Label:createWithCharMap(const_std_string_plistFile)"],
"description":"createWithCharMap(const_std_string_plistFile)",
"scope":"source.lua"},

"cc.LabelAtlas":{
"prefix":"cc.LabelAtlas",
"body":["cc.LabelAtlas"],
"description":"cocos class",
"scope":"source.lua"},

"cc.LabelAtlas:setString(const_std_string_label)":{
"prefix":"cc.LabelAtlas:setString(const_std_string_label)",
"body":["cc.LabelAtlas:setString(const_std_string_label)"],
"description":"setString(const_std_string_label)",
"scope":"source.lua"},

"cc.LabelAtlas:initWithString(const_std_string_string,const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)":{
"prefix":"cc.LabelAtlas:initWithString(const_std_string_string,const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)",
"body":["cc.LabelAtlas:initWithString(const_std_string_string,const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)"],
"description":"initWithString(const_std_string_string,const_std_string_charMapFile,int_itemWidth,int_itemHeight,int_startCharMap)",
"scope":"source.lua"},

"cc.LabelAtlas:initWithString(const_std_string_string,const_std_string_fntFile)":{
"prefix":"cc.LabelAtlas:initWithString(const_std_string_string,const_std_string_fntFile)",
"body":["cc.LabelAtlas:initWithString(const_std_string_string,const_std_string_fntFile)"],
"description":"initWithString(const_std_string_string,const_std_string_fntFile)",
"scope":"source.lua"},

"cc.LabelAtlas:initWithString(const_std_string_string,Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)":{
"prefix":"cc.LabelAtlas:initWithString(const_std_string_string,Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)",
"body":["cc.LabelAtlas:initWithString(const_std_string_string,Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)"],
"description":"initWithString(const_std_string_string,Texture2D_texture,int_itemWidth,int_itemHeight,int_startCharMap)",
"scope":"source.lua"},

"cc.LabelAtlas:getString()":{
"prefix":"cc.LabelAtlas:getString()",
"body":["cc.LabelAtlas:getString()"],
"description":"getString()",
"scope":"source.lua"},

"cc.Layer":{
"prefix":"cc.Layer",
"body":["cc.Layer"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Layer:create()":{
"prefix":"cc.Layer:create()",
"body":["cc.Layer:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.LayerColor":{
"prefix":"cc.LayerColor",
"body":["cc.LayerColor"],
"description":"cocos class",
"scope":"source.lua"},

"cc.LayerColor:changeWidthAndHeight(GLfloat_w,GLfloat_h)":{
"prefix":"cc.LayerColor:changeWidthAndHeight(GLfloat_w,GLfloat_h)",
"body":["cc.LayerColor:changeWidthAndHeight(GLfloat_w,GLfloat_h)"],
"description":"changeWidthAndHeight(GLfloat_w,GLfloat_h)",
"scope":"source.lua"},

"cc.LayerColor:getBlendFunc()":{
"prefix":"cc.LayerColor:getBlendFunc()",
"body":["cc.LayerColor:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.LayerColor:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.LayerColor:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.LayerColor:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.LayerColor:changeWidth(GLfloat_w)":{
"prefix":"cc.LayerColor:changeWidth(GLfloat_w)",
"body":["cc.LayerColor:changeWidth(GLfloat_w)"],
"description":"changeWidth(GLfloat_w)",
"scope":"source.lua"},

"cc.LayerColor:initWithColor(const_Color4B_color,GLfloat_width,GLfloat_height)":{
"prefix":"cc.LayerColor:initWithColor(const_Color4B_color,GLfloat_width,GLfloat_height)",
"body":["cc.LayerColor:initWithColor(const_Color4B_color,GLfloat_width,GLfloat_height)"],
"description":"initWithColor(const_Color4B_color,GLfloat_width,GLfloat_height)",
"scope":"source.lua"},

"cc.LayerColor:changeHeight(GLfloat_h)":{
"prefix":"cc.LayerColor:changeHeight(GLfloat_h)",
"body":["cc.LayerColor:changeHeight(GLfloat_h)"],
"description":"changeHeight(GLfloat_h)",
"scope":"source.lua"},

"cc.LayerColor:create()":{
"prefix":"cc.LayerColor:create()",
"body":["cc.LayerColor:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.LayerColor:create(const_Color4B_color,GLfloat_width,GLfloat_height)":{
"prefix":"cc.LayerColor:create(const_Color4B_color,GLfloat_width,GLfloat_height)",
"body":["cc.LayerColor:create(const_Color4B_color,GLfloat_width,GLfloat_height)"],
"description":"create(const_Color4B_color,GLfloat_width,GLfloat_height)",
"scope":"source.lua"},

"cc.LayerColor:create(const_Color4B_color)":{
"prefix":"cc.LayerColor:create(const_Color4B_color)",
"body":["cc.LayerColor:create(const_Color4B_color)"],
"description":"create(const_Color4B_color)",
"scope":"source.lua"},

"cc.LayerGradient":{
"prefix":"cc.LayerGradient",
"body":["cc.LayerGradient"],
"description":"cocos class",
"scope":"source.lua"},

"cc.LayerGradient:getStartColor()":{
"prefix":"cc.LayerGradient:getStartColor()",
"body":["cc.LayerGradient:getStartColor()"],
"description":"getStartColor()",
"scope":"source.lua"},

"cc.LayerGradient:isCompressedInterpolation()":{
"prefix":"cc.LayerGradient:isCompressedInterpolation()",
"body":["cc.LayerGradient:isCompressedInterpolation()"],
"description":"isCompressedInterpolation()",
"scope":"source.lua"},

"cc.LayerGradient:getStartOpacity()":{
"prefix":"cc.LayerGradient:getStartOpacity()",
"body":["cc.LayerGradient:getStartOpacity()"],
"description":"getStartOpacity()",
"scope":"source.lua"},

"cc.LayerGradient:setVector(const_Vec2_alongVector)":{
"prefix":"cc.LayerGradient:setVector(const_Vec2_alongVector)",
"body":["cc.LayerGradient:setVector(const_Vec2_alongVector)"],
"description":"setVector(const_Vec2_alongVector)",
"scope":"source.lua"},

"cc.LayerGradient:setStartOpacity(GLubyte_startOpacity)":{
"prefix":"cc.LayerGradient:setStartOpacity(GLubyte_startOpacity)",
"body":["cc.LayerGradient:setStartOpacity(GLubyte_startOpacity)"],
"description":"setStartOpacity(GLubyte_startOpacity)",
"scope":"source.lua"},

"cc.LayerGradient:setCompressedInterpolation(bool_compressedInterpolation)":{
"prefix":"cc.LayerGradient:setCompressedInterpolation(bool_compressedInterpolation)",
"body":["cc.LayerGradient:setCompressedInterpolation(bool_compressedInterpolation)"],
"description":"setCompressedInterpolation(bool_compressedInterpolation)",
"scope":"source.lua"},

"cc.LayerGradient:setEndOpacity(GLubyte_endOpacity)":{
"prefix":"cc.LayerGradient:setEndOpacity(GLubyte_endOpacity)",
"body":["cc.LayerGradient:setEndOpacity(GLubyte_endOpacity)"],
"description":"setEndOpacity(GLubyte_endOpacity)",
"scope":"source.lua"},

"cc.LayerGradient:getVector()":{
"prefix":"cc.LayerGradient:getVector()",
"body":["cc.LayerGradient:getVector()"],
"description":"getVector()",
"scope":"source.lua"},

"cc.LayerGradient:setEndColor(const_Color3B_endColor)":{
"prefix":"cc.LayerGradient:setEndColor(const_Color3B_endColor)",
"body":["cc.LayerGradient:setEndColor(const_Color3B_endColor)"],
"description":"setEndColor(const_Color3B_endColor)",
"scope":"source.lua"},

"cc.LayerGradient:initWithColor(const_Color4B_start,const_Color4B_end)":{
"prefix":"cc.LayerGradient:initWithColor(const_Color4B_start,const_Color4B_end)",
"body":["cc.LayerGradient:initWithColor(const_Color4B_start,const_Color4B_end)"],
"description":"initWithColor(const_Color4B_start,const_Color4B_end)",
"scope":"source.lua"},

"cc.LayerGradient:initWithColor(const_Color4B_start,const_Color4B_end,const_Vec2_v)":{
"prefix":"cc.LayerGradient:initWithColor(const_Color4B_start,const_Color4B_end,const_Vec2_v)",
"body":["cc.LayerGradient:initWithColor(const_Color4B_start,const_Color4B_end,const_Vec2_v)"],
"description":"initWithColor(const_Color4B_start,const_Color4B_end,const_Vec2_v)",
"scope":"source.lua"},

"cc.LayerGradient:getEndColor()":{
"prefix":"cc.LayerGradient:getEndColor()",
"body":["cc.LayerGradient:getEndColor()"],
"description":"getEndColor()",
"scope":"source.lua"},

"cc.LayerGradient:getEndOpacity()":{
"prefix":"cc.LayerGradient:getEndOpacity()",
"body":["cc.LayerGradient:getEndOpacity()"],
"description":"getEndOpacity()",
"scope":"source.lua"},

"cc.LayerGradient:setStartColor(const_Color3B_startColor)":{
"prefix":"cc.LayerGradient:setStartColor(const_Color3B_startColor)",
"body":["cc.LayerGradient:setStartColor(const_Color3B_startColor)"],
"description":"setStartColor(const_Color3B_startColor)",
"scope":"source.lua"},

"cc.LayerGradient:create()":{
"prefix":"cc.LayerGradient:create()",
"body":["cc.LayerGradient:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.LayerGradient:create(const_Color4B_start,const_Color4B_end)":{
"prefix":"cc.LayerGradient:create(const_Color4B_start,const_Color4B_end)",
"body":["cc.LayerGradient:create(const_Color4B_start,const_Color4B_end)"],
"description":"create(const_Color4B_start,const_Color4B_end)",
"scope":"source.lua"},

"cc.LayerGradient:create(const_Color4B_start,const_Color4B_end,const_Vec2_v)":{
"prefix":"cc.LayerGradient:create(const_Color4B_start,const_Color4B_end,const_Vec2_v)",
"body":["cc.LayerGradient:create(const_Color4B_start,const_Color4B_end,const_Vec2_v)"],
"description":"create(const_Color4B_start,const_Color4B_end,const_Vec2_v)",
"scope":"source.lua"},

"cc.LayerRadialGradient":{
"prefix":"cc.LayerRadialGradient",
"body":["cc.LayerRadialGradient"],
"description":"cocos class",
"scope":"source.lua"},

"cc.LayerRadialGradient:getStartColor()":{
"prefix":"cc.LayerRadialGradient:getStartColor()",
"body":["cc.LayerRadialGradient:getStartColor()"],
"description":"getStartColor()",
"scope":"source.lua"},

"cc.LayerRadialGradient:getBlendFunc()":{
"prefix":"cc.LayerRadialGradient:getBlendFunc()",
"body":["cc.LayerRadialGradient:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.LayerRadialGradient:getStartColor3B()":{
"prefix":"cc.LayerRadialGradient:getStartColor3B()",
"body":["cc.LayerRadialGradient:getStartColor3B()"],
"description":"getStartColor3B()",
"scope":"source.lua"},

"cc.LayerRadialGradient:getStartOpacity()":{
"prefix":"cc.LayerRadialGradient:getStartOpacity()",
"body":["cc.LayerRadialGradient:getStartOpacity()"],
"description":"getStartOpacity()",
"scope":"source.lua"},

"cc.LayerRadialGradient:setCenter(const_Vec2_center)":{
"prefix":"cc.LayerRadialGradient:setCenter(const_Vec2_center)",
"body":["cc.LayerRadialGradient:setCenter(const_Vec2_center)"],
"description":"setCenter(const_Vec2_center)",
"scope":"source.lua"},

"cc.LayerRadialGradient:getEndColor()":{
"prefix":"cc.LayerRadialGradient:getEndColor()",
"body":["cc.LayerRadialGradient:getEndColor()"],
"description":"getEndColor()",
"scope":"source.lua"},

"cc.LayerRadialGradient:setStartOpacity(GLubyte_opacity)":{
"prefix":"cc.LayerRadialGradient:setStartOpacity(GLubyte_opacity)",
"body":["cc.LayerRadialGradient:setStartOpacity(GLubyte_opacity)"],
"description":"setStartOpacity(GLubyte_opacity)",
"scope":"source.lua"},

"cc.LayerRadialGradient:getCenter()":{
"prefix":"cc.LayerRadialGradient:getCenter()",
"body":["cc.LayerRadialGradient:getCenter()"],
"description":"getCenter()",
"scope":"source.lua"},

"cc.LayerRadialGradient:setEndOpacity(GLubyte_opacity)":{
"prefix":"cc.LayerRadialGradient:setEndOpacity(GLubyte_opacity)",
"body":["cc.LayerRadialGradient:setEndOpacity(GLubyte_opacity)"],
"description":"setEndOpacity(GLubyte_opacity)",
"scope":"source.lua"},

"cc.LayerRadialGradient:setExpand(float_expand)":{
"prefix":"cc.LayerRadialGradient:setExpand(float_expand)",
"body":["cc.LayerRadialGradient:setExpand(float_expand)"],
"description":"setExpand(float_expand)",
"scope":"source.lua"},

"cc.LayerRadialGradient:getEndOpacity()":{
"prefix":"cc.LayerRadialGradient:getEndOpacity()",
"body":["cc.LayerRadialGradient:getEndOpacity()"],
"description":"getEndOpacity()",
"scope":"source.lua"},

"cc.LayerRadialGradient:initWithColor(const_Color4B_startColor,const_Color4B_endColor,float_radius,const_Vec2_center,float_expand)":{
"prefix":"cc.LayerRadialGradient:initWithColor(const_Color4B_startColor,const_Color4B_endColor,float_radius,const_Vec2_center,float_expand)",
"body":["cc.LayerRadialGradient:initWithColor(const_Color4B_startColor,const_Color4B_endColor,float_radius,const_Vec2_center,float_expand)"],
"description":"initWithColor(const_Color4B_startColor,const_Color4B_endColor,float_radius,const_Vec2_center,float_expand)",
"scope":"source.lua"},

"cc.LayerRadialGradient:setEndColor(const_Color3B_color)":{
"prefix":"cc.LayerRadialGradient:setEndColor(const_Color3B_color)",
"body":["cc.LayerRadialGradient:setEndColor(const_Color3B_color)"],
"description":"setEndColor(const_Color3B_color)",
"scope":"source.lua"},

"cc.LayerRadialGradient:getEndColor3B()":{
"prefix":"cc.LayerRadialGradient:getEndColor3B()",
"body":["cc.LayerRadialGradient:getEndColor3B()"],
"description":"getEndColor3B()",
"scope":"source.lua"},

"cc.LayerRadialGradient:setRadius(float_radius)":{
"prefix":"cc.LayerRadialGradient:setRadius(float_radius)",
"body":["cc.LayerRadialGradient:setRadius(float_radius)"],
"description":"setRadius(float_radius)",
"scope":"source.lua"},

"cc.LayerRadialGradient:setStartColor(const_Color3B_color)":{
"prefix":"cc.LayerRadialGradient:setStartColor(const_Color3B_color)",
"body":["cc.LayerRadialGradient:setStartColor(const_Color3B_color)"],
"description":"setStartColor(const_Color3B_color)",
"scope":"source.lua"},

"cc.LayerRadialGradient:getExpand()":{
"prefix":"cc.LayerRadialGradient:getExpand()",
"body":["cc.LayerRadialGradient:getExpand()"],
"description":"getExpand()",
"scope":"source.lua"},

"cc.LayerRadialGradient:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.LayerRadialGradient:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.LayerRadialGradient:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.LayerRadialGradient:getRadius()":{
"prefix":"cc.LayerRadialGradient:getRadius()",
"body":["cc.LayerRadialGradient:getRadius()"],
"description":"getRadius()",
"scope":"source.lua"},

"cc.LayerRadialGradient:create(const_Color4B_startColor,const_Color4B_endColor,float_radius,const_Vec2_center,float_expand)":{
"prefix":"cc.LayerRadialGradient:create(const_Color4B_startColor,const_Color4B_endColor,float_radius,const_Vec2_center,float_expand)",
"body":["cc.LayerRadialGradient:create(const_Color4B_startColor,const_Color4B_endColor,float_radius,const_Vec2_center,float_expand)"],
"description":"create(const_Color4B_startColor,const_Color4B_endColor,float_radius,const_Vec2_center,float_expand)",
"scope":"source.lua"},

"cc.LayerMultiplex":{
"prefix":"cc.LayerMultiplex",
"body":["cc.LayerMultiplex"],
"description":"cocos class",
"scope":"source.lua"},

"cc.LayerMultiplex:initWithArray()":{
"prefix":"cc.LayerMultiplex:initWithArray()",
"body":["cc.LayerMultiplex:initWithArray()"],
"description":"initWithArray()",
"scope":"source.lua"},

"cc.LayerMultiplex:switchToAndReleaseMe(int_n)":{
"prefix":"cc.LayerMultiplex:switchToAndReleaseMe(int_n)",
"body":["cc.LayerMultiplex:switchToAndReleaseMe(int_n)"],
"description":"switchToAndReleaseMe(int_n)",
"scope":"source.lua"},

"cc.LayerMultiplex:addLayer(Layer_layer)":{
"prefix":"cc.LayerMultiplex:addLayer(Layer_layer)",
"body":["cc.LayerMultiplex:addLayer(Layer_layer)"],
"description":"addLayer(Layer_layer)",
"scope":"source.lua"},

"cc.LayerMultiplex:switchTo(int_n)":{
"prefix":"cc.LayerMultiplex:switchTo(int_n)",
"body":["cc.LayerMultiplex:switchTo(int_n)"],
"description":"switchTo(int_n)",
"scope":"source.lua"},

"cc.LayerMultiplex:switchTo(int_n,bool_cleanup)":{
"prefix":"cc.LayerMultiplex:switchTo(int_n,bool_cleanup)",
"body":["cc.LayerMultiplex:switchTo(int_n,bool_cleanup)"],
"description":"switchTo(int_n,bool_cleanup)",
"scope":"source.lua"},

"cc.MenuItem":{
"prefix":"cc.MenuItem",
"body":["cc.MenuItem"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MenuItem:setEnabled(bool_value)":{
"prefix":"cc.MenuItem:setEnabled(bool_value)",
"body":["cc.MenuItem:setEnabled(bool_value)"],
"description":"setEnabled(bool_value)",
"scope":"source.lua"},

"cc.MenuItem:activate()":{
"prefix":"cc.MenuItem:activate()",
"body":["cc.MenuItem:activate()"],
"description":"activate()",
"scope":"source.lua"},

"cc.MenuItem:isEnabled()":{
"prefix":"cc.MenuItem:isEnabled()",
"body":["cc.MenuItem:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"cc.MenuItem:selected()":{
"prefix":"cc.MenuItem:selected()",
"body":["cc.MenuItem:selected()"],
"description":"selected()",
"scope":"source.lua"},

"cc.MenuItem:isSelected()":{
"prefix":"cc.MenuItem:isSelected()",
"body":["cc.MenuItem:isSelected()"],
"description":"isSelected()",
"scope":"source.lua"},

"cc.MenuItem:unselected()":{
"prefix":"cc.MenuItem:unselected()",
"body":["cc.MenuItem:unselected()"],
"description":"unselected()",
"scope":"source.lua"},

"cc.MenuItem:rect()":{
"prefix":"cc.MenuItem:rect()",
"body":["cc.MenuItem:rect()"],
"description":"rect()",
"scope":"source.lua"},

"cc.MenuItemLabel":{
"prefix":"cc.MenuItemLabel",
"body":["cc.MenuItemLabel"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MenuItemLabel:setLabel(Node_node)":{
"prefix":"cc.MenuItemLabel:setLabel(Node_node)",
"body":["cc.MenuItemLabel:setLabel(Node_node)"],
"description":"setLabel(Node_node)",
"scope":"source.lua"},

"cc.MenuItemLabel:getString()":{
"prefix":"cc.MenuItemLabel:getString()",
"body":["cc.MenuItemLabel:getString()"],
"description":"getString()",
"scope":"source.lua"},

"cc.MenuItemLabel:getDisabledColor()":{
"prefix":"cc.MenuItemLabel:getDisabledColor()",
"body":["cc.MenuItemLabel:getDisabledColor()"],
"description":"getDisabledColor()",
"scope":"source.lua"},

"cc.MenuItemLabel:setString(const_std_string_label)":{
"prefix":"cc.MenuItemLabel:setString(const_std_string_label)",
"body":["cc.MenuItemLabel:setString(const_std_string_label)"],
"description":"setString(const_std_string_label)",
"scope":"source.lua"},

"cc.MenuItemLabel:initWithLabel(Node_label,const_ccMenuCallback_callback)":{
"prefix":"cc.MenuItemLabel:initWithLabel(Node_label,const_ccMenuCallback_callback)",
"body":["cc.MenuItemLabel:initWithLabel(Node_label,const_ccMenuCallback_callback)"],
"description":"initWithLabel(Node_label,const_ccMenuCallback_callback)",
"scope":"source.lua"},

"cc.MenuItemLabel:initWithLabel(Node_label,Ref_target,SEL_MenuHandler_selector)":{
"prefix":"cc.MenuItemLabel:initWithLabel(Node_label,Ref_target,SEL_MenuHandler_selector)",
"body":["cc.MenuItemLabel:initWithLabel(Node_label,Ref_target,SEL_MenuHandler_selector)"],
"description":"initWithLabel(Node_label,Ref_target,SEL_MenuHandler_selector)",
"scope":"source.lua"},

"cc.MenuItemLabel:setDisabledColor(const_Color3B_color)":{
"prefix":"cc.MenuItemLabel:setDisabledColor(const_Color3B_color)",
"body":["cc.MenuItemLabel:setDisabledColor(const_Color3B_color)"],
"description":"setDisabledColor(const_Color3B_color)",
"scope":"source.lua"},

"cc.MenuItemLabel:getLabel()":{
"prefix":"cc.MenuItemLabel:getLabel()",
"body":["cc.MenuItemLabel:getLabel()"],
"description":"getLabel()",
"scope":"source.lua"},

"cc.MenuItemAtlasFont":{
"prefix":"cc.MenuItemAtlasFont",
"body":["cc.MenuItemAtlasFont"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MenuItemAtlasFont:initWithString(const_std_string_value,const_std_string_charMapFile,int_itemWidth,int_itemHeight,char_startCharMap,Ref_target,SEL_MenuHandler_selector)":{
"prefix":"cc.MenuItemAtlasFont:initWithString(const_std_string_value,const_std_string_charMapFile,int_itemWidth,int_itemHeight,char_startCharMap,Ref_target,SEL_MenuHandler_selector)",
"body":["cc.MenuItemAtlasFont:initWithString(const_std_string_value,const_std_string_charMapFile,int_itemWidth,int_itemHeight,char_startCharMap,Ref_target,SEL_MenuHandler_selector)"],
"description":"initWithString(const_std_string_value,const_std_string_charMapFile,int_itemWidth,int_itemHeight,char_startCharMap,Ref_target,SEL_MenuHandler_selector)",
"scope":"source.lua"},

"cc.MenuItemAtlasFont:initWithString(const_std_string_value,const_std_string_charMapFile,int_itemWidth,int_itemHeight,char_startCharMap,const_ccMenuCallback_callback)":{
"prefix":"cc.MenuItemAtlasFont:initWithString(const_std_string_value,const_std_string_charMapFile,int_itemWidth,int_itemHeight,char_startCharMap,const_ccMenuCallback_callback)",
"body":["cc.MenuItemAtlasFont:initWithString(const_std_string_value,const_std_string_charMapFile,int_itemWidth,int_itemHeight,char_startCharMap,const_ccMenuCallback_callback)"],
"description":"initWithString(const_std_string_value,const_std_string_charMapFile,int_itemWidth,int_itemHeight,char_startCharMap,const_ccMenuCallback_callback)",
"scope":"source.lua"},

"cc.MenuItemFont":{
"prefix":"cc.MenuItemFont",
"body":["cc.MenuItemFont"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MenuItemFont:getFontNameObj()":{
"prefix":"cc.MenuItemFont:getFontNameObj()",
"body":["cc.MenuItemFont:getFontNameObj()"],
"description":"getFontNameObj()",
"scope":"source.lua"},

"cc.MenuItemFont:setFontNameObj(const_std_string_name)":{
"prefix":"cc.MenuItemFont:setFontNameObj(const_std_string_name)",
"body":["cc.MenuItemFont:setFontNameObj(const_std_string_name)"],
"description":"setFontNameObj(const_std_string_name)",
"scope":"source.lua"},

"cc.MenuItemFont:initWithString(const_std_string_value,Ref_target,SEL_MenuHandler_selector)":{
"prefix":"cc.MenuItemFont:initWithString(const_std_string_value,Ref_target,SEL_MenuHandler_selector)",
"body":["cc.MenuItemFont:initWithString(const_std_string_value,Ref_target,SEL_MenuHandler_selector)"],
"description":"initWithString(const_std_string_value,Ref_target,SEL_MenuHandler_selector)",
"scope":"source.lua"},

"cc.MenuItemFont:initWithString(const_std_string_value,const_ccMenuCallback_callback)":{
"prefix":"cc.MenuItemFont:initWithString(const_std_string_value,const_ccMenuCallback_callback)",
"body":["cc.MenuItemFont:initWithString(const_std_string_value,const_ccMenuCallback_callback)"],
"description":"initWithString(const_std_string_value,const_ccMenuCallback_callback)",
"scope":"source.lua"},

"cc.MenuItemFont:getFontSizeObj()":{
"prefix":"cc.MenuItemFont:getFontSizeObj()",
"body":["cc.MenuItemFont:getFontSizeObj()"],
"description":"getFontSizeObj()",
"scope":"source.lua"},

"cc.MenuItemFont:setFontSizeObj(int_size)":{
"prefix":"cc.MenuItemFont:setFontSizeObj(int_size)",
"body":["cc.MenuItemFont:setFontSizeObj(int_size)"],
"description":"setFontSizeObj(int_size)",
"scope":"source.lua"},

"cc.MenuItemFont:setFontName(const_std_string_name)":{
"prefix":"cc.MenuItemFont:setFontName(const_std_string_name)",
"body":["cc.MenuItemFont:setFontName(const_std_string_name)"],
"description":"setFontName(const_std_string_name)",
"scope":"source.lua"},

"cc.MenuItemFont:getFontSize()":{
"prefix":"cc.MenuItemFont:getFontSize()",
"body":["cc.MenuItemFont:getFontSize()"],
"description":"getFontSize()",
"scope":"source.lua"},

"cc.MenuItemFont:getFontName()":{
"prefix":"cc.MenuItemFont:getFontName()",
"body":["cc.MenuItemFont:getFontName()"],
"description":"getFontName()",
"scope":"source.lua"},

"cc.MenuItemFont:setFontSize(int_size)":{
"prefix":"cc.MenuItemFont:setFontSize(int_size)",
"body":["cc.MenuItemFont:setFontSize(int_size)"],
"description":"setFontSize(int_size)",
"scope":"source.lua"},

"cc.MenuItemSprite":{
"prefix":"cc.MenuItemSprite",
"body":["cc.MenuItemSprite"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MenuItemSprite:setEnabled(bool_bEnabled)":{
"prefix":"cc.MenuItemSprite:setEnabled(bool_bEnabled)",
"body":["cc.MenuItemSprite:setEnabled(bool_bEnabled)"],
"description":"setEnabled(bool_bEnabled)",
"scope":"source.lua"},

"cc.MenuItemSprite:selected()":{
"prefix":"cc.MenuItemSprite:selected()",
"body":["cc.MenuItemSprite:selected()"],
"description":"selected()",
"scope":"source.lua"},

"cc.MenuItemSprite:setNormalImage(Node_image)":{
"prefix":"cc.MenuItemSprite:setNormalImage(Node_image)",
"body":["cc.MenuItemSprite:setNormalImage(Node_image)"],
"description":"setNormalImage(Node_image)",
"scope":"source.lua"},

"cc.MenuItemSprite:setDisabledImage(Node_image)":{
"prefix":"cc.MenuItemSprite:setDisabledImage(Node_image)",
"body":["cc.MenuItemSprite:setDisabledImage(Node_image)"],
"description":"setDisabledImage(Node_image)",
"scope":"source.lua"},

"cc.MenuItemSprite:initWithNormalSprite(Node_normalSprite,Node_selectedSprite,Node_disabledSprite,Ref_target,SEL_MenuHandler_selector)":{
"prefix":"cc.MenuItemSprite:initWithNormalSprite(Node_normalSprite,Node_selectedSprite,Node_disabledSprite,Ref_target,SEL_MenuHandler_selector)",
"body":["cc.MenuItemSprite:initWithNormalSprite(Node_normalSprite,Node_selectedSprite,Node_disabledSprite,Ref_target,SEL_MenuHandler_selector)"],
"description":"initWithNormalSprite(Node_normalSprite,Node_selectedSprite,Node_disabledSprite,Ref_target,SEL_MenuHandler_selector)",
"scope":"source.lua"},

"cc.MenuItemSprite:initWithNormalSprite(Node_normalSprite,Node_selectedSprite,Node_disabledSprite,const_ccMenuCallback_callback)":{
"prefix":"cc.MenuItemSprite:initWithNormalSprite(Node_normalSprite,Node_selectedSprite,Node_disabledSprite,const_ccMenuCallback_callback)",
"body":["cc.MenuItemSprite:initWithNormalSprite(Node_normalSprite,Node_selectedSprite,Node_disabledSprite,const_ccMenuCallback_callback)"],
"description":"initWithNormalSprite(Node_normalSprite,Node_selectedSprite,Node_disabledSprite,const_ccMenuCallback_callback)",
"scope":"source.lua"},

"cc.MenuItemSprite:setSelectedImage(Node_image)":{
"prefix":"cc.MenuItemSprite:setSelectedImage(Node_image)",
"body":["cc.MenuItemSprite:setSelectedImage(Node_image)"],
"description":"setSelectedImage(Node_image)",
"scope":"source.lua"},

"cc.MenuItemSprite:getDisabledImage()":{
"prefix":"cc.MenuItemSprite:getDisabledImage()",
"body":["cc.MenuItemSprite:getDisabledImage()"],
"description":"getDisabledImage()",
"scope":"source.lua"},

"cc.MenuItemSprite:getSelectedImage()":{
"prefix":"cc.MenuItemSprite:getSelectedImage()",
"body":["cc.MenuItemSprite:getSelectedImage()"],
"description":"getSelectedImage()",
"scope":"source.lua"},

"cc.MenuItemSprite:getNormalImage()":{
"prefix":"cc.MenuItemSprite:getNormalImage()",
"body":["cc.MenuItemSprite:getNormalImage()"],
"description":"getNormalImage()",
"scope":"source.lua"},

"cc.MenuItemSprite:unselected()":{
"prefix":"cc.MenuItemSprite:unselected()",
"body":["cc.MenuItemSprite:unselected()"],
"description":"unselected()",
"scope":"source.lua"},

"cc.MenuItemImage":{
"prefix":"cc.MenuItemImage",
"body":["cc.MenuItemImage"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MenuItemImage:setDisabledSpriteFrame(SpriteFrame_frame)":{
"prefix":"cc.MenuItemImage:setDisabledSpriteFrame(SpriteFrame_frame)",
"body":["cc.MenuItemImage:setDisabledSpriteFrame(SpriteFrame_frame)"],
"description":"setDisabledSpriteFrame(SpriteFrame_frame)",
"scope":"source.lua"},

"cc.MenuItemImage:setSelectedSpriteFrame(SpriteFrame_frame)":{
"prefix":"cc.MenuItemImage:setSelectedSpriteFrame(SpriteFrame_frame)",
"body":["cc.MenuItemImage:setSelectedSpriteFrame(SpriteFrame_frame)"],
"description":"setSelectedSpriteFrame(SpriteFrame_frame)",
"scope":"source.lua"},

"cc.MenuItemImage:setNormalSpriteFrame(SpriteFrame_frame)":{
"prefix":"cc.MenuItemImage:setNormalSpriteFrame(SpriteFrame_frame)",
"body":["cc.MenuItemImage:setNormalSpriteFrame(SpriteFrame_frame)"],
"description":"setNormalSpriteFrame(SpriteFrame_frame)",
"scope":"source.lua"},

"cc.MenuItemImage:init()":{
"prefix":"cc.MenuItemImage:init()",
"body":["cc.MenuItemImage:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.MenuItemImage:initWithNormalImage(const_std_string_normalImage,const_std_string_selectedImage,const_std_string_disabledImage,Ref_target,SEL_MenuHandler_selector)":{
"prefix":"cc.MenuItemImage:initWithNormalImage(const_std_string_normalImage,const_std_string_selectedImage,const_std_string_disabledImage,Ref_target,SEL_MenuHandler_selector)",
"body":["cc.MenuItemImage:initWithNormalImage(const_std_string_normalImage,const_std_string_selectedImage,const_std_string_disabledImage,Ref_target,SEL_MenuHandler_selector)"],
"description":"initWithNormalImage(const_std_string_normalImage,const_std_string_selectedImage,const_std_string_disabledImage,Ref_target,SEL_MenuHandler_selector)",
"scope":"source.lua"},

"cc.MenuItemImage:initWithNormalImage(const_std_string_normalImage,const_std_string_selectedImage,const_std_string_disabledImage,const_ccMenuCallback_callback)":{
"prefix":"cc.MenuItemImage:initWithNormalImage(const_std_string_normalImage,const_std_string_selectedImage,const_std_string_disabledImage,const_ccMenuCallback_callback)",
"body":["cc.MenuItemImage:initWithNormalImage(const_std_string_normalImage,const_std_string_selectedImage,const_std_string_disabledImage,const_ccMenuCallback_callback)"],
"description":"initWithNormalImage(const_std_string_normalImage,const_std_string_selectedImage,const_std_string_disabledImage,const_ccMenuCallback_callback)",
"scope":"source.lua"},

"cc.MenuItemToggle":{
"prefix":"cc.MenuItemToggle",
"body":["cc.MenuItemToggle"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MenuItemToggle:setSubItems()":{
"prefix":"cc.MenuItemToggle:setSubItems()",
"body":["cc.MenuItemToggle:setSubItems()"],
"description":"setSubItems()",
"scope":"source.lua"},

"cc.MenuItemToggle:initWithItem(MenuItem_item)":{
"prefix":"cc.MenuItemToggle:initWithItem(MenuItem_item)",
"body":["cc.MenuItemToggle:initWithItem(MenuItem_item)"],
"description":"initWithItem(MenuItem_item)",
"scope":"source.lua"},

"cc.MenuItemToggle:getSelectedIndex()":{
"prefix":"cc.MenuItemToggle:getSelectedIndex()",
"body":["cc.MenuItemToggle:getSelectedIndex()"],
"description":"getSelectedIndex()",
"scope":"source.lua"},

"cc.MenuItemToggle:addSubItem(MenuItem_item)":{
"prefix":"cc.MenuItemToggle:addSubItem(MenuItem_item)",
"body":["cc.MenuItemToggle:addSubItem(MenuItem_item)"],
"description":"addSubItem(MenuItem_item)",
"scope":"source.lua"},

"cc.MenuItemToggle:getSelectedItem()":{
"prefix":"cc.MenuItemToggle:getSelectedItem()",
"body":["cc.MenuItemToggle:getSelectedItem()"],
"description":"getSelectedItem()",
"scope":"source.lua"},

"cc.MenuItemToggle:setSelectedIndex(unsigned_int_index)":{
"prefix":"cc.MenuItemToggle:setSelectedIndex(unsigned_int_index)",
"body":["cc.MenuItemToggle:setSelectedIndex(unsigned_int_index)"],
"description":"setSelectedIndex(unsigned_int_index)",
"scope":"source.lua"},

"cc.Menu":{
"prefix":"cc.Menu",
"body":["cc.Menu"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Menu:initWithArray()":{
"prefix":"cc.Menu:initWithArray()",
"body":["cc.Menu:initWithArray()"],
"description":"initWithArray()",
"scope":"source.lua"},

"cc.Menu:setEnabled(bool_value)":{
"prefix":"cc.Menu:setEnabled(bool_value)",
"body":["cc.Menu:setEnabled(bool_value)"],
"description":"setEnabled(bool_value)",
"scope":"source.lua"},

"cc.Menu:alignItemsVertically()":{
"prefix":"cc.Menu:alignItemsVertically()",
"body":["cc.Menu:alignItemsVertically()"],
"description":"alignItemsVertically()",
"scope":"source.lua"},

"cc.Menu:isEnabled()":{
"prefix":"cc.Menu:isEnabled()",
"body":["cc.Menu:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"cc.Menu:alignItemsHorizontallyWithPadding(float_padding)":{
"prefix":"cc.Menu:alignItemsHorizontallyWithPadding(float_padding)",
"body":["cc.Menu:alignItemsHorizontallyWithPadding(float_padding)"],
"description":"alignItemsHorizontallyWithPadding(float_padding)",
"scope":"source.lua"},

"cc.Menu:alignItemsVerticallyWithPadding(float_padding)":{
"prefix":"cc.Menu:alignItemsVerticallyWithPadding(float_padding)",
"body":["cc.Menu:alignItemsVerticallyWithPadding(float_padding)"],
"description":"alignItemsVerticallyWithPadding(float_padding)",
"scope":"source.lua"},

"cc.Menu:alignItemsHorizontally()":{
"prefix":"cc.Menu:alignItemsHorizontally()",
"body":["cc.Menu:alignItemsHorizontally()"],
"description":"alignItemsHorizontally()",
"scope":"source.lua"},

"cc.MotionStreak":{
"prefix":"cc.MotionStreak",
"body":["cc.MotionStreak"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MotionStreak:reset()":{
"prefix":"cc.MotionStreak:reset()",
"body":["cc.MotionStreak:reset()"],
"description":"reset()",
"scope":"source.lua"},

"cc.MotionStreak:setTexture(Texture2D_texture)":{
"prefix":"cc.MotionStreak:setTexture(Texture2D_texture)",
"body":["cc.MotionStreak:setTexture(Texture2D_texture)"],
"description":"setTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.MotionStreak:getTexture()":{
"prefix":"cc.MotionStreak:getTexture()",
"body":["cc.MotionStreak:getTexture()"],
"description":"getTexture()",
"scope":"source.lua"},

"cc.MotionStreak:tintWithColor(const_Color3B_colors)":{
"prefix":"cc.MotionStreak:tintWithColor(const_Color3B_colors)",
"body":["cc.MotionStreak:tintWithColor(const_Color3B_colors)"],
"description":"tintWithColor(const_Color3B_colors)",
"scope":"source.lua"},

"cc.MotionStreak:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.MotionStreak:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.MotionStreak:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.MotionStreak:setStartingPositionInitialized(bool_bStartingPositionInitialized)":{
"prefix":"cc.MotionStreak:setStartingPositionInitialized(bool_bStartingPositionInitialized)",
"body":["cc.MotionStreak:setStartingPositionInitialized(bool_bStartingPositionInitialized)"],
"description":"setStartingPositionInitialized(bool_bStartingPositionInitialized)",
"scope":"source.lua"},

"cc.MotionStreak:getBlendFunc()":{
"prefix":"cc.MotionStreak:getBlendFunc()",
"body":["cc.MotionStreak:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.MotionStreak:isStartingPositionInitialized()":{
"prefix":"cc.MotionStreak:isStartingPositionInitialized()",
"body":["cc.MotionStreak:isStartingPositionInitialized()"],
"description":"isStartingPositionInitialized()",
"scope":"source.lua"},

"cc.MotionStreak:isFastMode()":{
"prefix":"cc.MotionStreak:isFastMode()",
"body":["cc.MotionStreak:isFastMode()"],
"description":"isFastMode()",
"scope":"source.lua"},

"cc.MotionStreak:getStroke()":{
"prefix":"cc.MotionStreak:getStroke()",
"body":["cc.MotionStreak:getStroke()"],
"description":"getStroke()",
"scope":"source.lua"},

"cc.MotionStreak:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)":{
"prefix":"cc.MotionStreak:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)",
"body":["cc.MotionStreak:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)"],
"description":"initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)",
"scope":"source.lua"},

"cc.MotionStreak:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)":{
"prefix":"cc.MotionStreak:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)",
"body":["cc.MotionStreak:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)"],
"description":"initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)",
"scope":"source.lua"},

"cc.MotionStreak:setFastMode(bool_bFastMode)":{
"prefix":"cc.MotionStreak:setFastMode(bool_bFastMode)",
"body":["cc.MotionStreak:setFastMode(bool_bFastMode)"],
"description":"setFastMode(bool_bFastMode)",
"scope":"source.lua"},

"cc.MotionStreak:setStroke(float_stroke)":{
"prefix":"cc.MotionStreak:setStroke(float_stroke)",
"body":["cc.MotionStreak:setStroke(float_stroke)"],
"description":"setStroke(float_stroke)",
"scope":"source.lua"},

"cc.MotionStreak:create(float_timeToFade,float_minSeg,float_strokeWidth,const_Color3B_strokeColor,const_std_string_imagePath)":{
"prefix":"cc.MotionStreak:create(float_timeToFade,float_minSeg,float_strokeWidth,const_Color3B_strokeColor,const_std_string_imagePath)",
"body":["cc.MotionStreak:create(float_timeToFade,float_minSeg,float_strokeWidth,const_Color3B_strokeColor,const_std_string_imagePath)"],
"description":"create(float_timeToFade,float_minSeg,float_strokeWidth,const_Color3B_strokeColor,const_std_string_imagePath)",
"scope":"source.lua"},

"cc.MotionStreak:create(float_timeToFade,float_minSeg,float_strokeWidth,const_Color3B_strokeColor,Texture2D_texture)":{
"prefix":"cc.MotionStreak:create(float_timeToFade,float_minSeg,float_strokeWidth,const_Color3B_strokeColor,Texture2D_texture)",
"body":["cc.MotionStreak:create(float_timeToFade,float_minSeg,float_strokeWidth,const_Color3B_strokeColor,Texture2D_texture)"],
"description":"create(float_timeToFade,float_minSeg,float_strokeWidth,const_Color3B_strokeColor,Texture2D_texture)",
"scope":"source.lua"},

"cc.NodeGrid":{
"prefix":"cc.NodeGrid",
"body":["cc.NodeGrid"],
"description":"cocos class",
"scope":"source.lua"},

"cc.NodeGrid:setGridRect(const_Rect_gridRect)":{
"prefix":"cc.NodeGrid:setGridRect(const_Rect_gridRect)",
"body":["cc.NodeGrid:setGridRect(const_Rect_gridRect)"],
"description":"setGridRect(const_Rect_gridRect)",
"scope":"source.lua"},

"cc.NodeGrid:setTarget(Node_target)":{
"prefix":"cc.NodeGrid:setTarget(Node_target)",
"body":["cc.NodeGrid:setTarget(Node_target)"],
"description":"setTarget(Node_target)",
"scope":"source.lua"},

"cc.NodeGrid:setGrid(GridBase_grid)":{
"prefix":"cc.NodeGrid:setGrid(GridBase_grid)",
"body":["cc.NodeGrid:setGrid(GridBase_grid)"],
"description":"setGrid(GridBase_grid)",
"scope":"source.lua"},

"cc.NodeGrid:getGrid()":{
"prefix":"cc.NodeGrid:getGrid()",
"body":["cc.NodeGrid:getGrid()"],
"description":"getGrid()",
"scope":"source.lua"},

"cc.NodeGrid:getGridRect()":{
"prefix":"cc.NodeGrid:getGridRect()",
"body":["cc.NodeGrid:getGridRect()"],
"description":"getGridRect()",
"scope":"source.lua"},

"cc.NodeGrid:create()":{
"prefix":"cc.NodeGrid:create()",
"body":["cc.NodeGrid:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleBatchNode":{
"prefix":"cc.ParticleBatchNode",
"body":["cc.ParticleBatchNode"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleBatchNode:setTexture(Texture2D_texture)":{
"prefix":"cc.ParticleBatchNode:setTexture(Texture2D_texture)",
"body":["cc.ParticleBatchNode:setTexture(Texture2D_texture)"],
"description":"setTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.ParticleBatchNode:initWithTexture(Texture2D_tex,int_capacity)":{
"prefix":"cc.ParticleBatchNode:initWithTexture(Texture2D_tex,int_capacity)",
"body":["cc.ParticleBatchNode:initWithTexture(Texture2D_tex,int_capacity)"],
"description":"initWithTexture(Texture2D_tex,int_capacity)",
"scope":"source.lua"},

"cc.ParticleBatchNode:disableParticle(int_particleIndex)":{
"prefix":"cc.ParticleBatchNode:disableParticle(int_particleIndex)",
"body":["cc.ParticleBatchNode:disableParticle(int_particleIndex)"],
"description":"disableParticle(int_particleIndex)",
"scope":"source.lua"},

"cc.ParticleBatchNode:getTexture()":{
"prefix":"cc.ParticleBatchNode:getTexture()",
"body":["cc.ParticleBatchNode:getTexture()"],
"description":"getTexture()",
"scope":"source.lua"},

"cc.ParticleBatchNode:setTextureAtlas(TextureAtlas_atlas)":{
"prefix":"cc.ParticleBatchNode:setTextureAtlas(TextureAtlas_atlas)",
"body":["cc.ParticleBatchNode:setTextureAtlas(TextureAtlas_atlas)"],
"description":"setTextureAtlas(TextureAtlas_atlas)",
"scope":"source.lua"},

"cc.ParticleBatchNode:initWithFile(const_std_string_fileImage,int_capacity)":{
"prefix":"cc.ParticleBatchNode:initWithFile(const_std_string_fileImage,int_capacity)",
"body":["cc.ParticleBatchNode:initWithFile(const_std_string_fileImage,int_capacity)"],
"description":"initWithFile(const_std_string_fileImage,int_capacity)",
"scope":"source.lua"},

"cc.ParticleBatchNode:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.ParticleBatchNode:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.ParticleBatchNode:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.ParticleBatchNode:removeAllChildrenWithCleanup(bool_doCleanup)":{
"prefix":"cc.ParticleBatchNode:removeAllChildrenWithCleanup(bool_doCleanup)",
"body":["cc.ParticleBatchNode:removeAllChildrenWithCleanup(bool_doCleanup)"],
"description":"removeAllChildrenWithCleanup(bool_doCleanup)",
"scope":"source.lua"},

"cc.ParticleBatchNode:getTextureAtlas()":{
"prefix":"cc.ParticleBatchNode:getTextureAtlas()",
"body":["cc.ParticleBatchNode:getTextureAtlas()"],
"description":"getTextureAtlas()",
"scope":"source.lua"},

"cc.ParticleBatchNode:getBlendFunc()":{
"prefix":"cc.ParticleBatchNode:getBlendFunc()",
"body":["cc.ParticleBatchNode:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.ParticleBatchNode:insertChild(ParticleSystem_system,int_index)":{
"prefix":"cc.ParticleBatchNode:insertChild(ParticleSystem_system,int_index)",
"body":["cc.ParticleBatchNode:insertChild(ParticleSystem_system,int_index)"],
"description":"insertChild(ParticleSystem_system,int_index)",
"scope":"source.lua"},

"cc.ParticleBatchNode:removeChildAtIndex(int_index,bool_doCleanup)":{
"prefix":"cc.ParticleBatchNode:removeChildAtIndex(int_index,bool_doCleanup)",
"body":["cc.ParticleBatchNode:removeChildAtIndex(int_index,bool_doCleanup)"],
"description":"removeChildAtIndex(int_index,bool_doCleanup)",
"scope":"source.lua"},

"cc.ParticleBatchNode:create(const_std_string_fileImage,int_capacity)":{
"prefix":"cc.ParticleBatchNode:create(const_std_string_fileImage,int_capacity)",
"body":["cc.ParticleBatchNode:create(const_std_string_fileImage,int_capacity)"],
"description":"create(const_std_string_fileImage,int_capacity)",
"scope":"source.lua"},

"cc.ParticleBatchNode:createWithTexture(Texture2D_tex,int_capacity)":{
"prefix":"cc.ParticleBatchNode:createWithTexture(Texture2D_tex,int_capacity)",
"body":["cc.ParticleBatchNode:createWithTexture(Texture2D_tex,int_capacity)"],
"description":"createWithTexture(Texture2D_tex,int_capacity)",
"scope":"source.lua"},

"cc.ParticleData":{
"prefix":"cc.ParticleData",
"body":["cc.ParticleData"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleData:release()":{
"prefix":"cc.ParticleData:release()",
"body":["cc.ParticleData:release()"],
"description":"release()",
"scope":"source.lua"},

"cc.ParticleData:getMaxCount()":{
"prefix":"cc.ParticleData:getMaxCount()",
"body":["cc.ParticleData:getMaxCount()"],
"description":"getMaxCount()",
"scope":"source.lua"},

"cc.ParticleData:init(int_count)":{
"prefix":"cc.ParticleData:init(int_count)",
"body":["cc.ParticleData:init(int_count)"],
"description":"init(int_count)",
"scope":"source.lua"},

"cc.ParticleData:copyParticle(int_p1,int_p2)":{
"prefix":"cc.ParticleData:copyParticle(int_p1,int_p2)",
"body":["cc.ParticleData:copyParticle(int_p1,int_p2)"],
"description":"copyParticle(int_p1,int_p2)",
"scope":"source.lua"},

"cc.ParticleSystem":{
"prefix":"cc.ParticleSystem",
"body":["cc.ParticleSystem"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleSystem:getStartSizeVar()":{
"prefix":"cc.ParticleSystem:getStartSizeVar()",
"body":["cc.ParticleSystem:getStartSizeVar()"],
"description":"getStartSizeVar()",
"scope":"source.lua"},

"cc.ParticleSystem:getTexture()":{
"prefix":"cc.ParticleSystem:getTexture()",
"body":["cc.ParticleSystem:getTexture()"],
"description":"getTexture()",
"scope":"source.lua"},

"cc.ParticleSystem:isFull()":{
"prefix":"cc.ParticleSystem:isFull()",
"body":["cc.ParticleSystem:isFull()"],
"description":"isFull()",
"scope":"source.lua"},

"cc.ParticleSystem:getBatchNode()":{
"prefix":"cc.ParticleSystem:getBatchNode()",
"body":["cc.ParticleSystem:getBatchNode()"],
"description":"getBatchNode()",
"scope":"source.lua"},

"cc.ParticleSystem:getStartColor()":{
"prefix":"cc.ParticleSystem:getStartColor()",
"body":["cc.ParticleSystem:getStartColor()"],
"description":"getStartColor()",
"scope":"source.lua"},

"cc.ParticleSystem:getPositionType()":{
"prefix":"cc.ParticleSystem:getPositionType()",
"body":["cc.ParticleSystem:getPositionType()"],
"description":"getPositionType()",
"scope":"source.lua"},

"cc.ParticleSystem:setPosVar(const_Vec2_pos)":{
"prefix":"cc.ParticleSystem:setPosVar(const_Vec2_pos)",
"body":["cc.ParticleSystem:setPosVar(const_Vec2_pos)"],
"description":"setPosVar(const_Vec2_pos)",
"scope":"source.lua"},

"cc.ParticleSystem:getEndSpin()":{
"prefix":"cc.ParticleSystem:getEndSpin()",
"body":["cc.ParticleSystem:getEndSpin()"],
"description":"getEndSpin()",
"scope":"source.lua"},

"cc.ParticleSystem:setRotatePerSecondVar(float_degrees)":{
"prefix":"cc.ParticleSystem:setRotatePerSecondVar(float_degrees)",
"body":["cc.ParticleSystem:setRotatePerSecondVar(float_degrees)"],
"description":"setRotatePerSecondVar(float_degrees)",
"scope":"source.lua"},

"cc.ParticleSystem:setSourcePositionCompatible(bool_sourcePositionCompatible)":{
"prefix":"cc.ParticleSystem:setSourcePositionCompatible(bool_sourcePositionCompatible)",
"body":["cc.ParticleSystem:setSourcePositionCompatible(bool_sourcePositionCompatible)"],
"description":"setSourcePositionCompatible(bool_sourcePositionCompatible)",
"scope":"source.lua"},

"cc.ParticleSystem:getStartSpinVar()":{
"prefix":"cc.ParticleSystem:getStartSpinVar()",
"body":["cc.ParticleSystem:getStartSpinVar()"],
"description":"getStartSpinVar()",
"scope":"source.lua"},

"cc.ParticleSystem:getRadialAccelVar()":{
"prefix":"cc.ParticleSystem:getRadialAccelVar()",
"body":["cc.ParticleSystem:getRadialAccelVar()"],
"description":"getRadialAccelVar()",
"scope":"source.lua"},

"cc.ParticleSystem:getEndSizeVar()":{
"prefix":"cc.ParticleSystem:getEndSizeVar()",
"body":["cc.ParticleSystem:getEndSizeVar()"],
"description":"getEndSizeVar()",
"scope":"source.lua"},

"cc.ParticleSystem:setTangentialAccel(float_t)":{
"prefix":"cc.ParticleSystem:setTangentialAccel(float_t)",
"body":["cc.ParticleSystem:setTangentialAccel(float_t)"],
"description":"setTangentialAccel(float_t)",
"scope":"source.lua"},

"cc.ParticleSystem:getRadialAccel()":{
"prefix":"cc.ParticleSystem:getRadialAccel()",
"body":["cc.ParticleSystem:getRadialAccel()"],
"description":"getRadialAccel()",
"scope":"source.lua"},

"cc.ParticleSystem:setStartRadius(float_startRadius)":{
"prefix":"cc.ParticleSystem:setStartRadius(float_startRadius)",
"body":["cc.ParticleSystem:setStartRadius(float_startRadius)"],
"description":"setStartRadius(float_startRadius)",
"scope":"source.lua"},

"cc.ParticleSystem:setRotatePerSecond(float_degrees)":{
"prefix":"cc.ParticleSystem:setRotatePerSecond(float_degrees)",
"body":["cc.ParticleSystem:setRotatePerSecond(float_degrees)"],
"description":"setRotatePerSecond(float_degrees)",
"scope":"source.lua"},

"cc.ParticleSystem:setEndSize(float_endSize)":{
"prefix":"cc.ParticleSystem:setEndSize(float_endSize)",
"body":["cc.ParticleSystem:setEndSize(float_endSize)"],
"description":"setEndSize(float_endSize)",
"scope":"source.lua"},

"cc.ParticleSystem:getGravity()":{
"prefix":"cc.ParticleSystem:getGravity()",
"body":["cc.ParticleSystem:getGravity()"],
"description":"getGravity()",
"scope":"source.lua"},

"cc.ParticleSystem:resumeEmissions()":{
"prefix":"cc.ParticleSystem:resumeEmissions()",
"body":["cc.ParticleSystem:resumeEmissions()"],
"description":"resumeEmissions()",
"scope":"source.lua"},

"cc.ParticleSystem:getTangentialAccel()":{
"prefix":"cc.ParticleSystem:getTangentialAccel()",
"body":["cc.ParticleSystem:getTangentialAccel()"],
"description":"getTangentialAccel()",
"scope":"source.lua"},

"cc.ParticleSystem:setEndRadius(float_endRadius)":{
"prefix":"cc.ParticleSystem:setEndRadius(float_endRadius)",
"body":["cc.ParticleSystem:setEndRadius(float_endRadius)"],
"description":"setEndRadius(float_endRadius)",
"scope":"source.lua"},

"cc.ParticleSystem:getSpeed()":{
"prefix":"cc.ParticleSystem:getSpeed()",
"body":["cc.ParticleSystem:getSpeed()"],
"description":"getSpeed()",
"scope":"source.lua"},

"cc.ParticleSystem:pauseEmissions()":{
"prefix":"cc.ParticleSystem:pauseEmissions()",
"body":["cc.ParticleSystem:pauseEmissions()"],
"description":"pauseEmissions()",
"scope":"source.lua"},

"cc.ParticleSystem:getAngle()":{
"prefix":"cc.ParticleSystem:getAngle()",
"body":["cc.ParticleSystem:getAngle()"],
"description":"getAngle()",
"scope":"source.lua"},

"cc.ParticleSystem:setEndColor(const_Color4F_color)":{
"prefix":"cc.ParticleSystem:setEndColor(const_Color4F_color)",
"body":["cc.ParticleSystem:setEndColor(const_Color4F_color)"],
"description":"setEndColor(const_Color4F_color)",
"scope":"source.lua"},

"cc.ParticleSystem:setStartSpin(float_spin)":{
"prefix":"cc.ParticleSystem:setStartSpin(float_spin)",
"body":["cc.ParticleSystem:setStartSpin(float_spin)"],
"description":"setStartSpin(float_spin)",
"scope":"source.lua"},

"cc.ParticleSystem:setDuration(float_duration)":{
"prefix":"cc.ParticleSystem:setDuration(float_duration)",
"body":["cc.ParticleSystem:setDuration(float_duration)"],
"description":"setDuration(float_duration)",
"scope":"source.lua"},

"cc.ParticleSystem:initWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleSystem:initWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleSystem:initWithTotalParticles(int_numberOfParticles)"],
"description":"initWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleSystem:addParticles(int_count)":{
"prefix":"cc.ParticleSystem:addParticles(int_count)",
"body":["cc.ParticleSystem:addParticles(int_count)"],
"description":"addParticles(int_count)",
"scope":"source.lua"},

"cc.ParticleSystem:setTexture(Texture2D_texture)":{
"prefix":"cc.ParticleSystem:setTexture(Texture2D_texture)",
"body":["cc.ParticleSystem:setTexture(Texture2D_texture)"],
"description":"setTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.ParticleSystem:getPosVar()":{
"prefix":"cc.ParticleSystem:getPosVar()",
"body":["cc.ParticleSystem:getPosVar()"],
"description":"getPosVar()",
"scope":"source.lua"},

"cc.ParticleSystem:updateWithNoTime()":{
"prefix":"cc.ParticleSystem:updateWithNoTime()",
"body":["cc.ParticleSystem:updateWithNoTime()"],
"description":"updateWithNoTime()",
"scope":"source.lua"},

"cc.ParticleSystem:isBlendAdditive()":{
"prefix":"cc.ParticleSystem:isBlendAdditive()",
"body":["cc.ParticleSystem:isBlendAdditive()"],
"description":"isBlendAdditive()",
"scope":"source.lua"},

"cc.ParticleSystem:getSpeedVar()":{
"prefix":"cc.ParticleSystem:getSpeedVar()",
"body":["cc.ParticleSystem:getSpeedVar()"],
"description":"getSpeedVar()",
"scope":"source.lua"},

"cc.ParticleSystem:setPositionType(PositionType_type)":{
"prefix":"cc.ParticleSystem:setPositionType(PositionType_type)",
"body":["cc.ParticleSystem:setPositionType(PositionType_type)"],
"description":"setPositionType(PositionType_type)",
"scope":"source.lua"},

"cc.ParticleSystem:stopSystem()":{
"prefix":"cc.ParticleSystem:stopSystem()",
"body":["cc.ParticleSystem:stopSystem()"],
"description":"stopSystem()",
"scope":"source.lua"},

"cc.ParticleSystem:getSourcePosition()":{
"prefix":"cc.ParticleSystem:getSourcePosition()",
"body":["cc.ParticleSystem:getSourcePosition()"],
"description":"getSourcePosition()",
"scope":"source.lua"},

"cc.ParticleSystem:setLifeVar(float_lifeVar)":{
"prefix":"cc.ParticleSystem:setLifeVar(float_lifeVar)",
"body":["cc.ParticleSystem:setLifeVar(float_lifeVar)"],
"description":"setLifeVar(float_lifeVar)",
"scope":"source.lua"},

"cc.ParticleSystem:setTotalParticles(int_totalParticles)":{
"prefix":"cc.ParticleSystem:setTotalParticles(int_totalParticles)",
"body":["cc.ParticleSystem:setTotalParticles(int_totalParticles)"],
"description":"setTotalParticles(int_totalParticles)",
"scope":"source.lua"},

"cc.ParticleSystem:setEndColorVar(const_Color4F_color)":{
"prefix":"cc.ParticleSystem:setEndColorVar(const_Color4F_color)",
"body":["cc.ParticleSystem:setEndColorVar(const_Color4F_color)"],
"description":"setEndColorVar(const_Color4F_color)",
"scope":"source.lua"},

"cc.ParticleSystem:getAtlasIndex()":{
"prefix":"cc.ParticleSystem:getAtlasIndex()",
"body":["cc.ParticleSystem:getAtlasIndex()"],
"description":"getAtlasIndex()",
"scope":"source.lua"},

"cc.ParticleSystem:getStartSize()":{
"prefix":"cc.ParticleSystem:getStartSize()",
"body":["cc.ParticleSystem:getStartSize()"],
"description":"getStartSize()",
"scope":"source.lua"},

"cc.ParticleSystem:setStartSpinVar(float_pinVar)":{
"prefix":"cc.ParticleSystem:setStartSpinVar(float_pinVar)",
"body":["cc.ParticleSystem:setStartSpinVar(float_pinVar)"],
"description":"setStartSpinVar(float_pinVar)",
"scope":"source.lua"},

"cc.ParticleSystem:resetSystem()":{
"prefix":"cc.ParticleSystem:resetSystem()",
"body":["cc.ParticleSystem:resetSystem()"],
"description":"resetSystem()",
"scope":"source.lua"},

"cc.ParticleSystem:setAtlasIndex(int_index)":{
"prefix":"cc.ParticleSystem:setAtlasIndex(int_index)",
"body":["cc.ParticleSystem:setAtlasIndex(int_index)"],
"description":"setAtlasIndex(int_index)",
"scope":"source.lua"},

"cc.ParticleSystem:setTangentialAccelVar(float_t)":{
"prefix":"cc.ParticleSystem:setTangentialAccelVar(float_t)",
"body":["cc.ParticleSystem:setTangentialAccelVar(float_t)"],
"description":"setTangentialAccelVar(float_t)",
"scope":"source.lua"},

"cc.ParticleSystem:setEndRadiusVar(float_endRadiusVar)":{
"prefix":"cc.ParticleSystem:setEndRadiusVar(float_endRadiusVar)",
"body":["cc.ParticleSystem:setEndRadiusVar(float_endRadiusVar)"],
"description":"setEndRadiusVar(float_endRadiusVar)",
"scope":"source.lua"},

"cc.ParticleSystem:getEndRadius()":{
"prefix":"cc.ParticleSystem:getEndRadius()",
"body":["cc.ParticleSystem:getEndRadius()"],
"description":"getEndRadius()",
"scope":"source.lua"},

"cc.ParticleSystem:isActive()":{
"prefix":"cc.ParticleSystem:isActive()",
"body":["cc.ParticleSystem:isActive()"],
"description":"isActive()",
"scope":"source.lua"},

"cc.ParticleSystem:setRadialAccelVar(float_t)":{
"prefix":"cc.ParticleSystem:setRadialAccelVar(float_t)",
"body":["cc.ParticleSystem:setRadialAccelVar(float_t)"],
"description":"setRadialAccelVar(float_t)",
"scope":"source.lua"},

"cc.ParticleSystem:setStartSize(float_startSize)":{
"prefix":"cc.ParticleSystem:setStartSize(float_startSize)",
"body":["cc.ParticleSystem:setStartSize(float_startSize)"],
"description":"setStartSize(float_startSize)",
"scope":"source.lua"},

"cc.ParticleSystem:setSpeed(float_speed)":{
"prefix":"cc.ParticleSystem:setSpeed(float_speed)",
"body":["cc.ParticleSystem:setSpeed(float_speed)"],
"description":"setSpeed(float_speed)",
"scope":"source.lua"},

"cc.ParticleSystem:getStartSpin()":{
"prefix":"cc.ParticleSystem:getStartSpin()",
"body":["cc.ParticleSystem:getStartSpin()"],
"description":"getStartSpin()",
"scope":"source.lua"},

"cc.ParticleSystem:getResourceFile()":{
"prefix":"cc.ParticleSystem:getResourceFile()",
"body":["cc.ParticleSystem:getResourceFile()"],
"description":"getResourceFile()",
"scope":"source.lua"},

"cc.ParticleSystem:getRotatePerSecond()":{
"prefix":"cc.ParticleSystem:getRotatePerSecond()",
"body":["cc.ParticleSystem:getRotatePerSecond()"],
"description":"getRotatePerSecond()",
"scope":"source.lua"},

"cc.ParticleSystem:setEmitterMode(Mode_mode)":{
"prefix":"cc.ParticleSystem:setEmitterMode(Mode_mode)",
"body":["cc.ParticleSystem:setEmitterMode(Mode_mode)"],
"description":"setEmitterMode(Mode_mode)",
"scope":"source.lua"},

"cc.ParticleSystem:getDuration()":{
"prefix":"cc.ParticleSystem:getDuration()",
"body":["cc.ParticleSystem:getDuration()"],
"description":"getDuration()",
"scope":"source.lua"},

"cc.ParticleSystem:setSourcePosition(const_Vec2_pos)":{
"prefix":"cc.ParticleSystem:setSourcePosition(const_Vec2_pos)",
"body":["cc.ParticleSystem:setSourcePosition(const_Vec2_pos)"],
"description":"setSourcePosition(const_Vec2_pos)",
"scope":"source.lua"},

"cc.ParticleSystem:stop()":{
"prefix":"cc.ParticleSystem:stop()",
"body":["cc.ParticleSystem:stop()"],
"description":"stop()",
"scope":"source.lua"},

"cc.ParticleSystem:updateParticleQuads()":{
"prefix":"cc.ParticleSystem:updateParticleQuads()",
"body":["cc.ParticleSystem:updateParticleQuads()"],
"description":"updateParticleQuads()",
"scope":"source.lua"},

"cc.ParticleSystem:getEndSpinVar()":{
"prefix":"cc.ParticleSystem:getEndSpinVar()",
"body":["cc.ParticleSystem:getEndSpinVar()"],
"description":"getEndSpinVar()",
"scope":"source.lua"},

"cc.ParticleSystem:setBlendAdditive(bool_value)":{
"prefix":"cc.ParticleSystem:setBlendAdditive(bool_value)",
"body":["cc.ParticleSystem:setBlendAdditive(bool_value)"],
"description":"setBlendAdditive(bool_value)",
"scope":"source.lua"},

"cc.ParticleSystem:setLife(float_life)":{
"prefix":"cc.ParticleSystem:setLife(float_life)",
"body":["cc.ParticleSystem:setLife(float_life)"],
"description":"setLife(float_life)",
"scope":"source.lua"},

"cc.ParticleSystem:setAngleVar(float_angleVar)":{
"prefix":"cc.ParticleSystem:setAngleVar(float_angleVar)",
"body":["cc.ParticleSystem:setAngleVar(float_angleVar)"],
"description":"setAngleVar(float_angleVar)",
"scope":"source.lua"},

"cc.ParticleSystem:setRotationIsDir(bool_t)":{
"prefix":"cc.ParticleSystem:setRotationIsDir(bool_t)",
"body":["cc.ParticleSystem:setRotationIsDir(bool_t)"],
"description":"setRotationIsDir(bool_t)",
"scope":"source.lua"},

"cc.ParticleSystem:start()":{
"prefix":"cc.ParticleSystem:start()",
"body":["cc.ParticleSystem:start()"],
"description":"start()",
"scope":"source.lua"},

"cc.ParticleSystem:setEndSizeVar(float_sizeVar)":{
"prefix":"cc.ParticleSystem:setEndSizeVar(float_sizeVar)",
"body":["cc.ParticleSystem:setEndSizeVar(float_sizeVar)"],
"description":"setEndSizeVar(float_sizeVar)",
"scope":"source.lua"},

"cc.ParticleSystem:setAngle(float_angle)":{
"prefix":"cc.ParticleSystem:setAngle(float_angle)",
"body":["cc.ParticleSystem:setAngle(float_angle)"],
"description":"setAngle(float_angle)",
"scope":"source.lua"},

"cc.ParticleSystem:setBatchNode(ParticleBatchNode_batchNode)":{
"prefix":"cc.ParticleSystem:setBatchNode(ParticleBatchNode_batchNode)",
"body":["cc.ParticleSystem:setBatchNode(ParticleBatchNode_batchNode)"],
"description":"setBatchNode(ParticleBatchNode_batchNode)",
"scope":"source.lua"},

"cc.ParticleSystem:getTangentialAccelVar()":{
"prefix":"cc.ParticleSystem:getTangentialAccelVar()",
"body":["cc.ParticleSystem:getTangentialAccelVar()"],
"description":"getTangentialAccelVar()",
"scope":"source.lua"},

"cc.ParticleSystem:getEmitterMode()":{
"prefix":"cc.ParticleSystem:getEmitterMode()",
"body":["cc.ParticleSystem:getEmitterMode()"],
"description":"getEmitterMode()",
"scope":"source.lua"},

"cc.ParticleSystem:setEndSpinVar(float_endSpinVar)":{
"prefix":"cc.ParticleSystem:setEndSpinVar(float_endSpinVar)",
"body":["cc.ParticleSystem:setEndSpinVar(float_endSpinVar)"],
"description":"setEndSpinVar(float_endSpinVar)",
"scope":"source.lua"},

"cc.ParticleSystem:initWithFile(const_std_string_plistFile)":{
"prefix":"cc.ParticleSystem:initWithFile(const_std_string_plistFile)",
"body":["cc.ParticleSystem:initWithFile(const_std_string_plistFile)"],
"description":"initWithFile(const_std_string_plistFile)",
"scope":"source.lua"},

"cc.ParticleSystem:getAngleVar()":{
"prefix":"cc.ParticleSystem:getAngleVar()",
"body":["cc.ParticleSystem:getAngleVar()"],
"description":"getAngleVar()",
"scope":"source.lua"},

"cc.ParticleSystem:setStartColor(const_Color4F_color)":{
"prefix":"cc.ParticleSystem:setStartColor(const_Color4F_color)",
"body":["cc.ParticleSystem:setStartColor(const_Color4F_color)"],
"description":"setStartColor(const_Color4F_color)",
"scope":"source.lua"},

"cc.ParticleSystem:getRotatePerSecondVar()":{
"prefix":"cc.ParticleSystem:getRotatePerSecondVar()",
"body":["cc.ParticleSystem:getRotatePerSecondVar()"],
"description":"getRotatePerSecondVar()",
"scope":"source.lua"},

"cc.ParticleSystem:getEndSize()":{
"prefix":"cc.ParticleSystem:getEndSize()",
"body":["cc.ParticleSystem:getEndSize()"],
"description":"getEndSize()",
"scope":"source.lua"},

"cc.ParticleSystem:getLife()":{
"prefix":"cc.ParticleSystem:getLife()",
"body":["cc.ParticleSystem:getLife()"],
"description":"getLife()",
"scope":"source.lua"},

"cc.ParticleSystem:isPaused()":{
"prefix":"cc.ParticleSystem:isPaused()",
"body":["cc.ParticleSystem:isPaused()"],
"description":"isPaused()",
"scope":"source.lua"},

"cc.ParticleSystem:setSpeedVar(float_speed)":{
"prefix":"cc.ParticleSystem:setSpeedVar(float_speed)",
"body":["cc.ParticleSystem:setSpeedVar(float_speed)"],
"description":"setSpeedVar(float_speed)",
"scope":"source.lua"},

"cc.ParticleSystem:setAutoRemoveOnFinish(bool_var)":{
"prefix":"cc.ParticleSystem:setAutoRemoveOnFinish(bool_var)",
"body":["cc.ParticleSystem:setAutoRemoveOnFinish(bool_var)"],
"description":"setAutoRemoveOnFinish(bool_var)",
"scope":"source.lua"},

"cc.ParticleSystem:setGravity(const_Vec2_g)":{
"prefix":"cc.ParticleSystem:setGravity(const_Vec2_g)",
"body":["cc.ParticleSystem:setGravity(const_Vec2_g)"],
"description":"setGravity(const_Vec2_g)",
"scope":"source.lua"},

"cc.ParticleSystem:postStep()":{
"prefix":"cc.ParticleSystem:postStep()",
"body":["cc.ParticleSystem:postStep()"],
"description":"postStep()",
"scope":"source.lua"},

"cc.ParticleSystem:setEmissionRate(float_rate)":{
"prefix":"cc.ParticleSystem:setEmissionRate(float_rate)",
"body":["cc.ParticleSystem:setEmissionRate(float_rate)"],
"description":"setEmissionRate(float_rate)",
"scope":"source.lua"},

"cc.ParticleSystem:getEndColorVar()":{
"prefix":"cc.ParticleSystem:getEndColorVar()",
"body":["cc.ParticleSystem:getEndColorVar()"],
"description":"getEndColorVar()",
"scope":"source.lua"},

"cc.ParticleSystem:getRotationIsDir()":{
"prefix":"cc.ParticleSystem:getRotationIsDir()",
"body":["cc.ParticleSystem:getRotationIsDir()"],
"description":"getRotationIsDir()",
"scope":"source.lua"},

"cc.ParticleSystem:getEmissionRate()":{
"prefix":"cc.ParticleSystem:getEmissionRate()",
"body":["cc.ParticleSystem:getEmissionRate()"],
"description":"getEmissionRate()",
"scope":"source.lua"},

"cc.ParticleSystem:getEndColor()":{
"prefix":"cc.ParticleSystem:getEndColor()",
"body":["cc.ParticleSystem:getEndColor()"],
"description":"getEndColor()",
"scope":"source.lua"},

"cc.ParticleSystem:getLifeVar()":{
"prefix":"cc.ParticleSystem:getLifeVar()",
"body":["cc.ParticleSystem:getLifeVar()"],
"description":"getLifeVar()",
"scope":"source.lua"},

"cc.ParticleSystem:setStartSizeVar(float_sizeVar)":{
"prefix":"cc.ParticleSystem:setStartSizeVar(float_sizeVar)",
"body":["cc.ParticleSystem:setStartSizeVar(float_sizeVar)"],
"description":"setStartSizeVar(float_sizeVar)",
"scope":"source.lua"},

"cc.ParticleSystem:getStartRadius()":{
"prefix":"cc.ParticleSystem:getStartRadius()",
"body":["cc.ParticleSystem:getStartRadius()"],
"description":"getStartRadius()",
"scope":"source.lua"},

"cc.ParticleSystem:getParticleCount()":{
"prefix":"cc.ParticleSystem:getParticleCount()",
"body":["cc.ParticleSystem:getParticleCount()"],
"description":"getParticleCount()",
"scope":"source.lua"},

"cc.ParticleSystem:getStartRadiusVar()":{
"prefix":"cc.ParticleSystem:getStartRadiusVar()",
"body":["cc.ParticleSystem:getStartRadiusVar()"],
"description":"getStartRadiusVar()",
"scope":"source.lua"},

"cc.ParticleSystem:setStartColorVar(const_Color4F_color)":{
"prefix":"cc.ParticleSystem:setStartColorVar(const_Color4F_color)",
"body":["cc.ParticleSystem:setStartColorVar(const_Color4F_color)"],
"description":"setStartColorVar(const_Color4F_color)",
"scope":"source.lua"},

"cc.ParticleSystem:setEndSpin(float_endSpin)":{
"prefix":"cc.ParticleSystem:setEndSpin(float_endSpin)",
"body":["cc.ParticleSystem:setEndSpin(float_endSpin)"],
"description":"setEndSpin(float_endSpin)",
"scope":"source.lua"},

"cc.ParticleSystem:setRadialAccel(float_t)":{
"prefix":"cc.ParticleSystem:setRadialAccel(float_t)",
"body":["cc.ParticleSystem:setRadialAccel(float_t)"],
"description":"setRadialAccel(float_t)",
"scope":"source.lua"},

"cc.ParticleSystem:initWithDictionary(ValueMap_dictionary)":{
"prefix":"cc.ParticleSystem:initWithDictionary(ValueMap_dictionary)",
"body":["cc.ParticleSystem:initWithDictionary(ValueMap_dictionary)"],
"description":"initWithDictionary(ValueMap_dictionary)",
"scope":"source.lua"},

"cc.ParticleSystem:initWithDictionary(ValueMap_dictionary,const_std_string_dirname)":{
"prefix":"cc.ParticleSystem:initWithDictionary(ValueMap_dictionary,const_std_string_dirname)",
"body":["cc.ParticleSystem:initWithDictionary(ValueMap_dictionary,const_std_string_dirname)"],
"description":"initWithDictionary(ValueMap_dictionary,const_std_string_dirname)",
"scope":"source.lua"},

"cc.ParticleSystem:isAutoRemoveOnFinish()":{
"prefix":"cc.ParticleSystem:isAutoRemoveOnFinish()",
"body":["cc.ParticleSystem:isAutoRemoveOnFinish()"],
"description":"isAutoRemoveOnFinish()",
"scope":"source.lua"},

"cc.ParticleSystem:isSourcePositionCompatible()":{
"prefix":"cc.ParticleSystem:isSourcePositionCompatible()",
"body":["cc.ParticleSystem:isSourcePositionCompatible()"],
"description":"isSourcePositionCompatible()",
"scope":"source.lua"},

"cc.ParticleSystem:getTotalParticles()":{
"prefix":"cc.ParticleSystem:getTotalParticles()",
"body":["cc.ParticleSystem:getTotalParticles()"],
"description":"getTotalParticles()",
"scope":"source.lua"},

"cc.ParticleSystem:setStartRadiusVar(float_startRadiusVar)":{
"prefix":"cc.ParticleSystem:setStartRadiusVar(float_startRadiusVar)",
"body":["cc.ParticleSystem:setStartRadiusVar(float_startRadiusVar)"],
"description":"setStartRadiusVar(float_startRadiusVar)",
"scope":"source.lua"},

"cc.ParticleSystem:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.ParticleSystem:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.ParticleSystem:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.ParticleSystem:getEndRadiusVar()":{
"prefix":"cc.ParticleSystem:getEndRadiusVar()",
"body":["cc.ParticleSystem:getEndRadiusVar()"],
"description":"getEndRadiusVar()",
"scope":"source.lua"},

"cc.ParticleSystem:getStartColorVar()":{
"prefix":"cc.ParticleSystem:getStartColorVar()",
"body":["cc.ParticleSystem:getStartColorVar()"],
"description":"getStartColorVar()",
"scope":"source.lua"},

"cc.ParticleSystem:create(const_std_string_plistFile)":{
"prefix":"cc.ParticleSystem:create(const_std_string_plistFile)",
"body":["cc.ParticleSystem:create(const_std_string_plistFile)"],
"description":"create(const_std_string_plistFile)",
"scope":"source.lua"},

"cc.ParticleSystem:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleSystem:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleSystem:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleSystem:getAllParticleSystems()":{
"prefix":"cc.ParticleSystem:getAllParticleSystems()",
"body":["cc.ParticleSystem:getAllParticleSystems()"],
"description":"getAllParticleSystems()",
"scope":"source.lua"},

"cc.ParticleSystemQuad":{
"prefix":"cc.ParticleSystemQuad",
"body":["cc.ParticleSystemQuad"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleSystemQuad:setDisplayFrame(SpriteFrame_spriteFrame)":{
"prefix":"cc.ParticleSystemQuad:setDisplayFrame(SpriteFrame_spriteFrame)",
"body":["cc.ParticleSystemQuad:setDisplayFrame(SpriteFrame_spriteFrame)"],
"description":"setDisplayFrame(SpriteFrame_spriteFrame)",
"scope":"source.lua"},

"cc.ParticleSystemQuad:setTextureWithRect(Texture2D_texture,const_Rect_rect)":{
"prefix":"cc.ParticleSystemQuad:setTextureWithRect(Texture2D_texture,const_Rect_rect)",
"body":["cc.ParticleSystemQuad:setTextureWithRect(Texture2D_texture,const_Rect_rect)"],
"description":"setTextureWithRect(Texture2D_texture,const_Rect_rect)",
"scope":"source.lua"},

"cc.ParticleSystemQuad:listenRendererRecreated(EventCustom_event)":{
"prefix":"cc.ParticleSystemQuad:listenRendererRecreated(EventCustom_event)",
"body":["cc.ParticleSystemQuad:listenRendererRecreated(EventCustom_event)"],
"description":"listenRendererRecreated(EventCustom_event)",
"scope":"source.lua"},

"cc.ParticleSystemQuad:create()":{
"prefix":"cc.ParticleSystemQuad:create()",
"body":["cc.ParticleSystemQuad:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleSystemQuad:create(const_std_string_filename)":{
"prefix":"cc.ParticleSystemQuad:create(const_std_string_filename)",
"body":["cc.ParticleSystemQuad:create(const_std_string_filename)"],
"description":"create(const_std_string_filename)",
"scope":"source.lua"},

"cc.ParticleSystemQuad:create(ValueMap_dictionary)":{
"prefix":"cc.ParticleSystemQuad:create(ValueMap_dictionary)",
"body":["cc.ParticleSystemQuad:create(ValueMap_dictionary)"],
"description":"create(ValueMap_dictionary)",
"scope":"source.lua"},

"cc.ParticleSystemQuad:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleSystemQuad:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleSystemQuad:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleFire":{
"prefix":"cc.ParticleFire",
"body":["cc.ParticleFire"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleFire:create()":{
"prefix":"cc.ParticleFire:create()",
"body":["cc.ParticleFire:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleFire:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleFire:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleFire:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleFireworks":{
"prefix":"cc.ParticleFireworks",
"body":["cc.ParticleFireworks"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleFireworks:init()":{
"prefix":"cc.ParticleFireworks:init()",
"body":["cc.ParticleFireworks:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ParticleFireworks:create()":{
"prefix":"cc.ParticleFireworks:create()",
"body":["cc.ParticleFireworks:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleFireworks:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleFireworks:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleFireworks:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleSun":{
"prefix":"cc.ParticleSun",
"body":["cc.ParticleSun"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleSun:init()":{
"prefix":"cc.ParticleSun:init()",
"body":["cc.ParticleSun:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ParticleSun:create()":{
"prefix":"cc.ParticleSun:create()",
"body":["cc.ParticleSun:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleSun:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleSun:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleSun:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleGalaxy":{
"prefix":"cc.ParticleGalaxy",
"body":["cc.ParticleGalaxy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleGalaxy:init()":{
"prefix":"cc.ParticleGalaxy:init()",
"body":["cc.ParticleGalaxy:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ParticleGalaxy:create()":{
"prefix":"cc.ParticleGalaxy:create()",
"body":["cc.ParticleGalaxy:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleGalaxy:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleGalaxy:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleGalaxy:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleFlower":{
"prefix":"cc.ParticleFlower",
"body":["cc.ParticleFlower"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleFlower:init()":{
"prefix":"cc.ParticleFlower:init()",
"body":["cc.ParticleFlower:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ParticleFlower:create()":{
"prefix":"cc.ParticleFlower:create()",
"body":["cc.ParticleFlower:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleFlower:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleFlower:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleFlower:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleMeteor":{
"prefix":"cc.ParticleMeteor",
"body":["cc.ParticleMeteor"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleMeteor:init()":{
"prefix":"cc.ParticleMeteor:init()",
"body":["cc.ParticleMeteor:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ParticleMeteor:create()":{
"prefix":"cc.ParticleMeteor:create()",
"body":["cc.ParticleMeteor:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleMeteor:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleMeteor:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleMeteor:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleSpiral":{
"prefix":"cc.ParticleSpiral",
"body":["cc.ParticleSpiral"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleSpiral:init()":{
"prefix":"cc.ParticleSpiral:init()",
"body":["cc.ParticleSpiral:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ParticleSpiral:create()":{
"prefix":"cc.ParticleSpiral:create()",
"body":["cc.ParticleSpiral:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleSpiral:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleSpiral:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleSpiral:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleExplosion":{
"prefix":"cc.ParticleExplosion",
"body":["cc.ParticleExplosion"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleExplosion:init()":{
"prefix":"cc.ParticleExplosion:init()",
"body":["cc.ParticleExplosion:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ParticleExplosion:create()":{
"prefix":"cc.ParticleExplosion:create()",
"body":["cc.ParticleExplosion:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleExplosion:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleExplosion:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleExplosion:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleSmoke":{
"prefix":"cc.ParticleSmoke",
"body":["cc.ParticleSmoke"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleSmoke:init()":{
"prefix":"cc.ParticleSmoke:init()",
"body":["cc.ParticleSmoke:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ParticleSmoke:create()":{
"prefix":"cc.ParticleSmoke:create()",
"body":["cc.ParticleSmoke:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleSmoke:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleSmoke:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleSmoke:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleSnow":{
"prefix":"cc.ParticleSnow",
"body":["cc.ParticleSnow"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleSnow:init()":{
"prefix":"cc.ParticleSnow:init()",
"body":["cc.ParticleSnow:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ParticleSnow:create()":{
"prefix":"cc.ParticleSnow:create()",
"body":["cc.ParticleSnow:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleSnow:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleSnow:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleSnow:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ParticleRain":{
"prefix":"cc.ParticleRain",
"body":["cc.ParticleRain"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleRain:init()":{
"prefix":"cc.ParticleRain:init()",
"body":["cc.ParticleRain:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.ParticleRain:create()":{
"prefix":"cc.ParticleRain:create()",
"body":["cc.ParticleRain:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ParticleRain:createWithTotalParticles(int_numberOfParticles)":{
"prefix":"cc.ParticleRain:createWithTotalParticles(int_numberOfParticles)",
"body":["cc.ParticleRain:createWithTotalParticles(int_numberOfParticles)"],
"description":"createWithTotalParticles(int_numberOfParticles)",
"scope":"source.lua"},

"cc.ProgressTimer":{
"prefix":"cc.ProgressTimer",
"body":["cc.ProgressTimer"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ProgressTimer:initWithSprite(Sprite_sp)":{
"prefix":"cc.ProgressTimer:initWithSprite(Sprite_sp)",
"body":["cc.ProgressTimer:initWithSprite(Sprite_sp)"],
"description":"initWithSprite(Sprite_sp)",
"scope":"source.lua"},

"cc.ProgressTimer:isReverseDirection()":{
"prefix":"cc.ProgressTimer:isReverseDirection()",
"body":["cc.ProgressTimer:isReverseDirection()"],
"description":"isReverseDirection()",
"scope":"source.lua"},

"cc.ProgressTimer:setBarChangeRate(const_Vec2_barChangeRate)":{
"prefix":"cc.ProgressTimer:setBarChangeRate(const_Vec2_barChangeRate)",
"body":["cc.ProgressTimer:setBarChangeRate(const_Vec2_barChangeRate)"],
"description":"setBarChangeRate(const_Vec2_barChangeRate)",
"scope":"source.lua"},

"cc.ProgressTimer:getPercentage()":{
"prefix":"cc.ProgressTimer:getPercentage()",
"body":["cc.ProgressTimer:getPercentage()"],
"description":"getPercentage()",
"scope":"source.lua"},

"cc.ProgressTimer:setSprite(Sprite_sprite)":{
"prefix":"cc.ProgressTimer:setSprite(Sprite_sprite)",
"body":["cc.ProgressTimer:setSprite(Sprite_sprite)"],
"description":"setSprite(Sprite_sprite)",
"scope":"source.lua"},

"cc.ProgressTimer:getType()":{
"prefix":"cc.ProgressTimer:getType()",
"body":["cc.ProgressTimer:getType()"],
"description":"getType()",
"scope":"source.lua"},

"cc.ProgressTimer:getSprite()":{
"prefix":"cc.ProgressTimer:getSprite()",
"body":["cc.ProgressTimer:getSprite()"],
"description":"getSprite()",
"scope":"source.lua"},

"cc.ProgressTimer:setMidpoint(const_Vec2_point)":{
"prefix":"cc.ProgressTimer:setMidpoint(const_Vec2_point)",
"body":["cc.ProgressTimer:setMidpoint(const_Vec2_point)"],
"description":"setMidpoint(const_Vec2_point)",
"scope":"source.lua"},

"cc.ProgressTimer:getBarChangeRate()":{
"prefix":"cc.ProgressTimer:getBarChangeRate()",
"body":["cc.ProgressTimer:getBarChangeRate()"],
"description":"getBarChangeRate()",
"scope":"source.lua"},

"cc.ProgressTimer:setReverseDirection(bool_value)":{
"prefix":"cc.ProgressTimer:setReverseDirection(bool_value)",
"body":["cc.ProgressTimer:setReverseDirection(bool_value)"],
"description":"setReverseDirection(bool_value)",
"scope":"source.lua"},

"cc.ProgressTimer:getMidpoint()":{
"prefix":"cc.ProgressTimer:getMidpoint()",
"body":["cc.ProgressTimer:getMidpoint()"],
"description":"getMidpoint()",
"scope":"source.lua"},

"cc.ProgressTimer:setPercentage(float_percentage)":{
"prefix":"cc.ProgressTimer:setPercentage(float_percentage)",
"body":["cc.ProgressTimer:setPercentage(float_percentage)"],
"description":"setPercentage(float_percentage)",
"scope":"source.lua"},

"cc.ProgressTimer:setType(Type_type)":{
"prefix":"cc.ProgressTimer:setType(Type_type)",
"body":["cc.ProgressTimer:setType(Type_type)"],
"description":"setType(Type_type)",
"scope":"source.lua"},

"cc.ProgressTimer:create(Sprite_sp)":{
"prefix":"cc.ProgressTimer:create(Sprite_sp)",
"body":["cc.ProgressTimer:create(Sprite_sp)"],
"description":"create(Sprite_sp)",
"scope":"source.lua"},

"cc.ProtectedNode":{
"prefix":"cc.ProtectedNode",
"body":["cc.ProtectedNode"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ProtectedNode:addProtectedChild(Node__child)":{
"prefix":"cc.ProtectedNode:addProtectedChild(Node__child)",
"body":["cc.ProtectedNode:addProtectedChild(Node__child)"],
"description":"addProtectedChild(Node__child)",
"scope":"source.lua"},

"cc.ProtectedNode:addProtectedChild(Node__child,int_localZOrder)":{
"prefix":"cc.ProtectedNode:addProtectedChild(Node__child,int_localZOrder)",
"body":["cc.ProtectedNode:addProtectedChild(Node__child,int_localZOrder)"],
"description":"addProtectedChild(Node__child,int_localZOrder)",
"scope":"source.lua"},

"cc.ProtectedNode:addProtectedChild(Node_child,int_localZOrder,int_tag)":{
"prefix":"cc.ProtectedNode:addProtectedChild(Node_child,int_localZOrder,int_tag)",
"body":["cc.ProtectedNode:addProtectedChild(Node_child,int_localZOrder,int_tag)"],
"description":"addProtectedChild(Node_child,int_localZOrder,int_tag)",
"scope":"source.lua"},

"cc.ProtectedNode:disableCascadeColor()":{
"prefix":"cc.ProtectedNode:disableCascadeColor()",
"body":["cc.ProtectedNode:disableCascadeColor()"],
"description":"disableCascadeColor()",
"scope":"source.lua"},

"cc.ProtectedNode:removeProtectedChildByTag(int_tag,bool_cleanup)":{
"prefix":"cc.ProtectedNode:removeProtectedChildByTag(int_tag,bool_cleanup)",
"body":["cc.ProtectedNode:removeProtectedChildByTag(int_tag,bool_cleanup)"],
"description":"removeProtectedChildByTag(int_tag,bool_cleanup)",
"scope":"source.lua"},

"cc.ProtectedNode:reorderProtectedChild(Node__child,int_localZOrder)":{
"prefix":"cc.ProtectedNode:reorderProtectedChild(Node__child,int_localZOrder)",
"body":["cc.ProtectedNode:reorderProtectedChild(Node__child,int_localZOrder)"],
"description":"reorderProtectedChild(Node__child,int_localZOrder)",
"scope":"source.lua"},

"cc.ProtectedNode:removeAllProtectedChildrenWithCleanup(bool_cleanup)":{
"prefix":"cc.ProtectedNode:removeAllProtectedChildrenWithCleanup(bool_cleanup)",
"body":["cc.ProtectedNode:removeAllProtectedChildrenWithCleanup(bool_cleanup)"],
"description":"removeAllProtectedChildrenWithCleanup(bool_cleanup)",
"scope":"source.lua"},

"cc.ProtectedNode:disableCascadeOpacity()":{
"prefix":"cc.ProtectedNode:disableCascadeOpacity()",
"body":["cc.ProtectedNode:disableCascadeOpacity()"],
"description":"disableCascadeOpacity()",
"scope":"source.lua"},

"cc.ProtectedNode:sortAllProtectedChildren()":{
"prefix":"cc.ProtectedNode:sortAllProtectedChildren()",
"body":["cc.ProtectedNode:sortAllProtectedChildren()"],
"description":"sortAllProtectedChildren()",
"scope":"source.lua"},

"cc.ProtectedNode:getProtectedChildByTag(int_tag)":{
"prefix":"cc.ProtectedNode:getProtectedChildByTag(int_tag)",
"body":["cc.ProtectedNode:getProtectedChildByTag(int_tag)"],
"description":"getProtectedChildByTag(int_tag)",
"scope":"source.lua"},

"cc.ProtectedNode:removeProtectedChild(Node_child,bool_cleanup)":{
"prefix":"cc.ProtectedNode:removeProtectedChild(Node_child,bool_cleanup)",
"body":["cc.ProtectedNode:removeProtectedChild(Node_child,bool_cleanup)"],
"description":"removeProtectedChild(Node_child,bool_cleanup)",
"scope":"source.lua"},

"cc.ProtectedNode:removeAllProtectedChildren()":{
"prefix":"cc.ProtectedNode:removeAllProtectedChildren()",
"body":["cc.ProtectedNode:removeAllProtectedChildren()"],
"description":"removeAllProtectedChildren()",
"scope":"source.lua"},

"cc.ProtectedNode:create()":{
"prefix":"cc.ProtectedNode:create()",
"body":["cc.ProtectedNode:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Sprite":{
"prefix":"cc.Sprite",
"body":["cc.Sprite"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Sprite:setSpriteFrame(const_std_string_spriteFrameName)":{
"prefix":"cc.Sprite:setSpriteFrame(const_std_string_spriteFrameName)",
"body":["cc.Sprite:setSpriteFrame(const_std_string_spriteFrameName)"],
"description":"setSpriteFrame(const_std_string_spriteFrameName)",
"scope":"source.lua"},

"cc.Sprite:setTexture(const_std_string_filename)":{
"prefix":"cc.Sprite:setTexture(const_std_string_filename)",
"body":["cc.Sprite:setTexture(const_std_string_filename)"],
"description":"setTexture(const_std_string_filename)",
"scope":"source.lua"},

"cc.Sprite:setTexture(Texture2D_texture)":{
"prefix":"cc.Sprite:setTexture(Texture2D_texture)",
"body":["cc.Sprite:setTexture(Texture2D_texture)"],
"description":"setTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.Sprite:getTexture()":{
"prefix":"cc.Sprite:getTexture()",
"body":["cc.Sprite:getTexture()"],
"description":"getTexture()",
"scope":"source.lua"},

"cc.Sprite:setFlippedY(bool_flippedY)":{
"prefix":"cc.Sprite:setFlippedY(bool_flippedY)",
"body":["cc.Sprite:setFlippedY(bool_flippedY)"],
"description":"setFlippedY(bool_flippedY)",
"scope":"source.lua"},

"cc.Sprite:setFlippedX(bool_flippedX)":{
"prefix":"cc.Sprite:setFlippedX(bool_flippedX)",
"body":["cc.Sprite:setFlippedX(bool_flippedX)"],
"description":"setFlippedX(bool_flippedX)",
"scope":"source.lua"},

"cc.Sprite:getResourceType()":{
"prefix":"cc.Sprite:getResourceType()",
"body":["cc.Sprite:getResourceType()"],
"description":"getResourceType()",
"scope":"source.lua"},

"cc.Sprite:setDisplayFrameWithAnimationName(const_std_string_animationName,ssize_t_frameIndex)":{
"prefix":"cc.Sprite:setDisplayFrameWithAnimationName(const_std_string_animationName,ssize_t_frameIndex)",
"body":["cc.Sprite:setDisplayFrameWithAnimationName(const_std_string_animationName,ssize_t_frameIndex)"],
"description":"setDisplayFrameWithAnimationName(const_std_string_animationName,ssize_t_frameIndex)",
"scope":"source.lua"},

"cc.Sprite:getBatchNode()":{
"prefix":"cc.Sprite:getBatchNode()",
"body":["cc.Sprite:getBatchNode()"],
"description":"getBatchNode()",
"scope":"source.lua"},

"cc.Sprite:getOffsetPosition()":{
"prefix":"cc.Sprite:getOffsetPosition()",
"body":["cc.Sprite:getOffsetPosition()"],
"description":"getOffsetPosition()",
"scope":"source.lua"},

"cc.Sprite:getCenterRect()":{
"prefix":"cc.Sprite:getCenterRect()",
"body":["cc.Sprite:getCenterRect()"],
"description":"getCenterRect()",
"scope":"source.lua"},

"cc.Sprite:removeAllChildrenWithCleanup(bool_cleanup)":{
"prefix":"cc.Sprite:removeAllChildrenWithCleanup(bool_cleanup)",
"body":["cc.Sprite:removeAllChildrenWithCleanup(bool_cleanup)"],
"description":"removeAllChildrenWithCleanup(bool_cleanup)",
"scope":"source.lua"},

"cc.Sprite:setCenterRectNormalized(const_Rect_rect)":{
"prefix":"cc.Sprite:setCenterRectNormalized(const_Rect_rect)",
"body":["cc.Sprite:setCenterRectNormalized(const_Rect_rect)"],
"description":"setCenterRectNormalized(const_Rect_rect)",
"scope":"source.lua"},

"cc.Sprite:isStretchEnabled()":{
"prefix":"cc.Sprite:isStretchEnabled()",
"body":["cc.Sprite:isStretchEnabled()"],
"description":"isStretchEnabled()",
"scope":"source.lua"},

"cc.Sprite:setTextureRect(const_Rect_rect)":{
"prefix":"cc.Sprite:setTextureRect(const_Rect_rect)",
"body":["cc.Sprite:setTextureRect(const_Rect_rect)"],
"description":"setTextureRect(const_Rect_rect)",
"scope":"source.lua"},

"cc.Sprite:setTextureRect(const_Rect_rect,bool_rotated,const_Size_untrimmedSize)":{
"prefix":"cc.Sprite:setTextureRect(const_Rect_rect,bool_rotated,const_Size_untrimmedSize)",
"body":["cc.Sprite:setTextureRect(const_Rect_rect,bool_rotated,const_Size_untrimmedSize)"],
"description":"setTextureRect(const_Rect_rect,bool_rotated,const_Size_untrimmedSize)",
"scope":"source.lua"},

"cc.Sprite:initWithSpriteFrameName(const_std_string_spriteFrameName)":{
"prefix":"cc.Sprite:initWithSpriteFrameName(const_std_string_spriteFrameName)",
"body":["cc.Sprite:initWithSpriteFrameName(const_std_string_spriteFrameName)"],
"description":"initWithSpriteFrameName(const_std_string_spriteFrameName)",
"scope":"source.lua"},

"cc.Sprite:setStretchEnabled(bool_enabled)":{
"prefix":"cc.Sprite:setStretchEnabled(bool_enabled)",
"body":["cc.Sprite:setStretchEnabled(bool_enabled)"],
"description":"setStretchEnabled(bool_enabled)",
"scope":"source.lua"},

"cc.Sprite:isFrameDisplayed(SpriteFrame_frame)":{
"prefix":"cc.Sprite:isFrameDisplayed(SpriteFrame_frame)",
"body":["cc.Sprite:isFrameDisplayed(SpriteFrame_frame)"],
"description":"isFrameDisplayed(SpriteFrame_frame)",
"scope":"source.lua"},

"cc.Sprite:getAtlasIndex()":{
"prefix":"cc.Sprite:getAtlasIndex()",
"body":["cc.Sprite:getAtlasIndex()"],
"description":"getAtlasIndex()",
"scope":"source.lua"},

"cc.Sprite:setBatchNode(SpriteBatchNode_spriteBatchNode)":{
"prefix":"cc.Sprite:setBatchNode(SpriteBatchNode_spriteBatchNode)",
"body":["cc.Sprite:setBatchNode(SpriteBatchNode_spriteBatchNode)"],
"description":"setBatchNode(SpriteBatchNode_spriteBatchNode)",
"scope":"source.lua"},

"cc.Sprite:getBlendFunc()":{
"prefix":"cc.Sprite:getBlendFunc()",
"body":["cc.Sprite:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.Sprite:setCenterRect(const_Rect_rect)":{
"prefix":"cc.Sprite:setCenterRect(const_Rect_rect)",
"body":["cc.Sprite:setCenterRect(const_Rect_rect)"],
"description":"setCenterRect(const_Rect_rect)",
"scope":"source.lua"},

"cc.Sprite:setTextureAtlas(TextureAtlas_textureAtlas)":{
"prefix":"cc.Sprite:setTextureAtlas(TextureAtlas_textureAtlas)",
"body":["cc.Sprite:setTextureAtlas(TextureAtlas_textureAtlas)"],
"description":"setTextureAtlas(TextureAtlas_textureAtlas)",
"scope":"source.lua"},

"cc.Sprite:getSpriteFrame()":{
"prefix":"cc.Sprite:getSpriteFrame()",
"body":["cc.Sprite:getSpriteFrame()"],
"description":"getSpriteFrame()",
"scope":"source.lua"},

"cc.Sprite:getResourceName()":{
"prefix":"cc.Sprite:getResourceName()",
"body":["cc.Sprite:getResourceName()"],
"description":"getResourceName()",
"scope":"source.lua"},

"cc.Sprite:isDirty()":{
"prefix":"cc.Sprite:isDirty()",
"body":["cc.Sprite:isDirty()"],
"description":"isDirty()",
"scope":"source.lua"},

"cc.Sprite:getCenterRectNormalized()":{
"prefix":"cc.Sprite:getCenterRectNormalized()",
"body":["cc.Sprite:getCenterRectNormalized()"],
"description":"getCenterRectNormalized()",
"scope":"source.lua"},

"cc.Sprite:setAtlasIndex(ssize_t_atlasIndex)":{
"prefix":"cc.Sprite:setAtlasIndex(ssize_t_atlasIndex)",
"body":["cc.Sprite:setAtlasIndex(ssize_t_atlasIndex)"],
"description":"setAtlasIndex(ssize_t_atlasIndex)",
"scope":"source.lua"},

"cc.Sprite:initWithTexture(Texture2D_texture)":{
"prefix":"cc.Sprite:initWithTexture(Texture2D_texture)",
"body":["cc.Sprite:initWithTexture(Texture2D_texture)"],
"description":"initWithTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.Sprite:initWithTexture(Texture2D_texture,const_Rect_rect)":{
"prefix":"cc.Sprite:initWithTexture(Texture2D_texture,const_Rect_rect)",
"body":["cc.Sprite:initWithTexture(Texture2D_texture,const_Rect_rect)"],
"description":"initWithTexture(Texture2D_texture,const_Rect_rect)",
"scope":"source.lua"},

"cc.Sprite:initWithTexture(Texture2D_texture,const_Rect_rect,bool_rotated)":{
"prefix":"cc.Sprite:initWithTexture(Texture2D_texture,const_Rect_rect,bool_rotated)",
"body":["cc.Sprite:initWithTexture(Texture2D_texture,const_Rect_rect,bool_rotated)"],
"description":"initWithTexture(Texture2D_texture,const_Rect_rect,bool_rotated)",
"scope":"source.lua"},

"cc.Sprite:setDirty(bool_dirty)":{
"prefix":"cc.Sprite:setDirty(bool_dirty)",
"body":["cc.Sprite:setDirty(bool_dirty)"],
"description":"setDirty(bool_dirty)",
"scope":"source.lua"},

"cc.Sprite:isTextureRectRotated()":{
"prefix":"cc.Sprite:isTextureRectRotated()",
"body":["cc.Sprite:isTextureRectRotated()"],
"description":"isTextureRectRotated()",
"scope":"source.lua"},

"cc.Sprite:getTextureRect()":{
"prefix":"cc.Sprite:getTextureRect()",
"body":["cc.Sprite:getTextureRect()"],
"description":"getTextureRect()",
"scope":"source.lua"},

"cc.Sprite:initWithFile(const_std_string_filename)":{
"prefix":"cc.Sprite:initWithFile(const_std_string_filename)",
"body":["cc.Sprite:initWithFile(const_std_string_filename)"],
"description":"initWithFile(const_std_string_filename)",
"scope":"source.lua"},

"cc.Sprite:initWithFile(const_std_string_filename,const_Rect_rect)":{
"prefix":"cc.Sprite:initWithFile(const_std_string_filename,const_Rect_rect)",
"body":["cc.Sprite:initWithFile(const_std_string_filename,const_Rect_rect)"],
"description":"initWithFile(const_std_string_filename,const_Rect_rect)",
"scope":"source.lua"},

"cc.Sprite:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.Sprite:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.Sprite:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.Sprite:getTextureAtlas()":{
"prefix":"cc.Sprite:getTextureAtlas()",
"body":["cc.Sprite:getTextureAtlas()"],
"description":"getTextureAtlas()",
"scope":"source.lua"},

"cc.Sprite:initWithSpriteFrame(SpriteFrame_spriteFrame)":{
"prefix":"cc.Sprite:initWithSpriteFrame(SpriteFrame_spriteFrame)",
"body":["cc.Sprite:initWithSpriteFrame(SpriteFrame_spriteFrame)"],
"description":"initWithSpriteFrame(SpriteFrame_spriteFrame)",
"scope":"source.lua"},

"cc.Sprite:isFlippedX()":{
"prefix":"cc.Sprite:isFlippedX()",
"body":["cc.Sprite:isFlippedX()"],
"description":"isFlippedX()",
"scope":"source.lua"},

"cc.Sprite:isFlippedY()":{
"prefix":"cc.Sprite:isFlippedY()",
"body":["cc.Sprite:isFlippedY()"],
"description":"isFlippedY()",
"scope":"source.lua"},

"cc.Sprite:setVertexRect(const_Rect_rect)":{
"prefix":"cc.Sprite:setVertexRect(const_Rect_rect)",
"body":["cc.Sprite:setVertexRect(const_Rect_rect)"],
"description":"setVertexRect(const_Rect_rect)",
"scope":"source.lua"},

"cc.Sprite:createWithTexture(Texture2D_texture)":{
"prefix":"cc.Sprite:createWithTexture(Texture2D_texture)",
"body":["cc.Sprite:createWithTexture(Texture2D_texture)"],
"description":"createWithTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.Sprite:createWithTexture(Texture2D_texture,const_Rect_rect,bool_rotated)":{
"prefix":"cc.Sprite:createWithTexture(Texture2D_texture,const_Rect_rect,bool_rotated)",
"body":["cc.Sprite:createWithTexture(Texture2D_texture,const_Rect_rect,bool_rotated)"],
"description":"createWithTexture(Texture2D_texture,const_Rect_rect,bool_rotated)",
"scope":"source.lua"},

"cc.Sprite:createWithSpriteFrameName(const_std_string_spriteFrameName)":{
"prefix":"cc.Sprite:createWithSpriteFrameName(const_std_string_spriteFrameName)",
"body":["cc.Sprite:createWithSpriteFrameName(const_std_string_spriteFrameName)"],
"description":"createWithSpriteFrameName(const_std_string_spriteFrameName)",
"scope":"source.lua"},

"cc.Sprite:createWithSpriteFrame(SpriteFrame_spriteFrame)":{
"prefix":"cc.Sprite:createWithSpriteFrame(SpriteFrame_spriteFrame)",
"body":["cc.Sprite:createWithSpriteFrame(SpriteFrame_spriteFrame)"],
"description":"createWithSpriteFrame(SpriteFrame_spriteFrame)",
"scope":"source.lua"},

"cc.RenderTexture":{
"prefix":"cc.RenderTexture",
"body":["cc.RenderTexture"],
"description":"cocos class",
"scope":"source.lua"},

"cc.RenderTexture:setVirtualViewport(const_Vec2_rtBegin,const_Rect_fullRect,const_Rect_fullViewport)":{
"prefix":"cc.RenderTexture:setVirtualViewport(const_Vec2_rtBegin,const_Rect_fullRect,const_Rect_fullViewport)",
"body":["cc.RenderTexture:setVirtualViewport(const_Vec2_rtBegin,const_Rect_fullRect,const_Rect_fullViewport)"],
"description":"setVirtualViewport(const_Vec2_rtBegin,const_Rect_fullRect,const_Rect_fullViewport)",
"scope":"source.lua"},

"cc.RenderTexture:clearStencil(int_stencilValue)":{
"prefix":"cc.RenderTexture:clearStencil(int_stencilValue)",
"body":["cc.RenderTexture:clearStencil(int_stencilValue)"],
"description":"clearStencil(int_stencilValue)",
"scope":"source.lua"},

"cc.RenderTexture:getClearDepth()":{
"prefix":"cc.RenderTexture:getClearDepth()",
"body":["cc.RenderTexture:getClearDepth()"],
"description":"getClearDepth()",
"scope":"source.lua"},

"cc.RenderTexture:getClearStencil()":{
"prefix":"cc.RenderTexture:getClearStencil()",
"body":["cc.RenderTexture:getClearStencil()"],
"description":"getClearStencil()",
"scope":"source.lua"},

"cc.RenderTexture:setClearStencil(int_clearStencil)":{
"prefix":"cc.RenderTexture:setClearStencil(int_clearStencil)",
"body":["cc.RenderTexture:setClearStencil(int_clearStencil)"],
"description":"setClearStencil(int_clearStencil)",
"scope":"source.lua"},

"cc.RenderTexture:setSprite(Sprite_sprite)":{
"prefix":"cc.RenderTexture:setSprite(Sprite_sprite)",
"body":["cc.RenderTexture:setSprite(Sprite_sprite)"],
"description":"setSprite(Sprite_sprite)",
"scope":"source.lua"},

"cc.RenderTexture:getSprite()":{
"prefix":"cc.RenderTexture:getSprite()",
"body":["cc.RenderTexture:getSprite()"],
"description":"getSprite()",
"scope":"source.lua"},

"cc.RenderTexture:isAutoDraw()":{
"prefix":"cc.RenderTexture:isAutoDraw()",
"body":["cc.RenderTexture:isAutoDraw()"],
"description":"isAutoDraw()",
"scope":"source.lua"},

"cc.RenderTexture:setKeepMatrix(bool_keepMatrix)":{
"prefix":"cc.RenderTexture:setKeepMatrix(bool_keepMatrix)",
"body":["cc.RenderTexture:setKeepMatrix(bool_keepMatrix)"],
"description":"setKeepMatrix(bool_keepMatrix)",
"scope":"source.lua"},

"cc.RenderTexture:setClearFlags(unsigned_int_clearFlags)":{
"prefix":"cc.RenderTexture:setClearFlags(unsigned_int_clearFlags)",
"body":["cc.RenderTexture:setClearFlags(unsigned_int_clearFlags)"],
"description":"setClearFlags(unsigned_int_clearFlags)",
"scope":"source.lua"},

"cc.RenderTexture:begin()":{
"prefix":"cc.RenderTexture:begin()",
"body":["cc.RenderTexture:begin()"],
"description":"begin()",
"scope":"source.lua"},

"cc.RenderTexture:saveToFile(const_std_string_filename,bool_isRGBA)":{
"prefix":"cc.RenderTexture:saveToFile(const_std_string_filename,bool_isRGBA)",
"body":["cc.RenderTexture:saveToFile(const_std_string_filename,bool_isRGBA)"],
"description":"saveToFile(const_std_string_filename,bool_isRGBA)",
"scope":"source.lua"},

"cc.RenderTexture:saveToFile(const_std_string_filename,Image_Format_format,bool_isRGBA)":{
"prefix":"cc.RenderTexture:saveToFile(const_std_string_filename,Image_Format_format,bool_isRGBA)",
"body":["cc.RenderTexture:saveToFile(const_std_string_filename,Image_Format_format,bool_isRGBA)"],
"description":"saveToFile(const_std_string_filename,Image_Format_format,bool_isRGBA)",
"scope":"source.lua"},

"cc.RenderTexture:setAutoDraw(bool_isAutoDraw)":{
"prefix":"cc.RenderTexture:setAutoDraw(bool_isAutoDraw)",
"body":["cc.RenderTexture:setAutoDraw(bool_isAutoDraw)"],
"description":"setAutoDraw(bool_isAutoDraw)",
"scope":"source.lua"},

"cc.RenderTexture:setClearColor(const_Color4F_clearColor)":{
"prefix":"cc.RenderTexture:setClearColor(const_Color4F_clearColor)",
"body":["cc.RenderTexture:setClearColor(const_Color4F_clearColor)"],
"description":"setClearColor(const_Color4F_clearColor)",
"scope":"source.lua"},

"cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a)":{
"prefix":"cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a)",
"body":["cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a)"],
"description":"beginWithClear(float_r,float_g,float_b,float_a)",
"scope":"source.lua"},

"cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a,float_depthValue)":{
"prefix":"cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a,float_depthValue)",
"body":["cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a,float_depthValue)"],
"description":"beginWithClear(float_r,float_g,float_b,float_a,float_depthValue)",
"scope":"source.lua"},

"cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a,float_depthValue,int_stencilValue)":{
"prefix":"cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a,float_depthValue,int_stencilValue)",
"body":["cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a,float_depthValue,int_stencilValue)"],
"description":"beginWithClear(float_r,float_g,float_b,float_a,float_depthValue,int_stencilValue)",
"scope":"source.lua"},

"cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a,float_depthValue,int_stencilValue,GLbitfield_flags)":{
"prefix":"cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a,float_depthValue,int_stencilValue,GLbitfield_flags)",
"body":["cc.RenderTexture:beginWithClear(float_r,float_g,float_b,float_a,float_depthValue,int_stencilValue,GLbitfield_flags)"],
"description":"beginWithClear(float_r,float_g,float_b,float_a,float_depthValue,int_stencilValue,GLbitfield_flags)",
"scope":"source.lua"},

"cc.RenderTexture:clearDepth(float_depthValue)":{
"prefix":"cc.RenderTexture:clearDepth(float_depthValue)",
"body":["cc.RenderTexture:clearDepth(float_depthValue)"],
"description":"clearDepth(float_depthValue)",
"scope":"source.lua"},

"cc.RenderTexture:getClearColor()":{
"prefix":"cc.RenderTexture:getClearColor()",
"body":["cc.RenderTexture:getClearColor()"],
"description":"getClearColor()",
"scope":"source.lua"},

"cc.RenderTexture:clear(float_r,float_g,float_b,float_a)":{
"prefix":"cc.RenderTexture:clear(float_r,float_g,float_b,float_a)",
"body":["cc.RenderTexture:clear(float_r,float_g,float_b,float_a)"],
"description":"clear(float_r,float_g,float_b,float_a)",
"scope":"source.lua"},

"cc.RenderTexture:getClearFlags()":{
"prefix":"cc.RenderTexture:getClearFlags()",
"body":["cc.RenderTexture:getClearFlags()"],
"description":"getClearFlags()",
"scope":"source.lua"},

"cc.RenderTexture:newImage(bool_flipImage)":{
"prefix":"cc.RenderTexture:newImage(bool_flipImage)",
"body":["cc.RenderTexture:newImage(bool_flipImage)"],
"description":"newImage(bool_flipImage)",
"scope":"source.lua"},

"cc.RenderTexture:setClearDepth(float_clearDepth)":{
"prefix":"cc.RenderTexture:setClearDepth(float_clearDepth)",
"body":["cc.RenderTexture:setClearDepth(float_clearDepth)"],
"description":"setClearDepth(float_clearDepth)",
"scope":"source.lua"},

"cc.RenderTexture:initWithWidthAndHeight(int_w,int_h,Texture2D_PixelFormat_format)":{
"prefix":"cc.RenderTexture:initWithWidthAndHeight(int_w,int_h,Texture2D_PixelFormat_format)",
"body":["cc.RenderTexture:initWithWidthAndHeight(int_w,int_h,Texture2D_PixelFormat_format)"],
"description":"initWithWidthAndHeight(int_w,int_h,Texture2D_PixelFormat_format)",
"scope":"source.lua"},

"cc.RenderTexture:initWithWidthAndHeight(int_w,int_h,Texture2D_PixelFormat_format,GLuint_depthStencilFormat)":{
"prefix":"cc.RenderTexture:initWithWidthAndHeight(int_w,int_h,Texture2D_PixelFormat_format,GLuint_depthStencilFormat)",
"body":["cc.RenderTexture:initWithWidthAndHeight(int_w,int_h,Texture2D_PixelFormat_format,GLuint_depthStencilFormat)"],
"description":"initWithWidthAndHeight(int_w,int_h,Texture2D_PixelFormat_format,GLuint_depthStencilFormat)",
"scope":"source.lua"},

"cc.RenderTexture:create(int_w,int_h,Texture2D_PixelFormat_format,GLuint_depthStencilFormat)":{
"prefix":"cc.RenderTexture:create(int_w,int_h,Texture2D_PixelFormat_format,GLuint_depthStencilFormat)",
"body":["cc.RenderTexture:create(int_w,int_h,Texture2D_PixelFormat_format,GLuint_depthStencilFormat)"],
"description":"create(int_w,int_h,Texture2D_PixelFormat_format,GLuint_depthStencilFormat)",
"scope":"source.lua"},

"cc.RenderTexture:create(int_w,int_h,Texture2D_PixelFormat_format)":{
"prefix":"cc.RenderTexture:create(int_w,int_h,Texture2D_PixelFormat_format)",
"body":["cc.RenderTexture:create(int_w,int_h,Texture2D_PixelFormat_format)"],
"description":"create(int_w,int_h,Texture2D_PixelFormat_format)",
"scope":"source.lua"},

"cc.RenderTexture:create(int_w,int_h)":{
"prefix":"cc.RenderTexture:create(int_w,int_h)",
"body":["cc.RenderTexture:create(int_w,int_h)"],
"description":"create(int_w,int_h)",
"scope":"source.lua"},

"cc.TransitionEaseScene":{
"prefix":"cc.TransitionEaseScene",
"body":["cc.TransitionEaseScene"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionEaseScene:easeActionWithAction(ActionInterval__action)":{
"prefix":"cc.TransitionEaseScene:easeActionWithAction(ActionInterval__action)",
"body":["cc.TransitionEaseScene:easeActionWithAction(ActionInterval__action)"],
"description":"easeActionWithAction(ActionInterval__action)",
"scope":"source.lua"},

"cc.TransitionScene":{
"prefix":"cc.TransitionScene",
"body":["cc.TransitionScene"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionScene:getInScene()":{
"prefix":"cc.TransitionScene:getInScene()",
"body":["cc.TransitionScene:getInScene()"],
"description":"getInScene()",
"scope":"source.lua"},

"cc.TransitionScene:finish()":{
"prefix":"cc.TransitionScene:finish()",
"body":["cc.TransitionScene:finish()"],
"description":"finish()",
"scope":"source.lua"},

"cc.TransitionScene:initWithDuration(float_t,Scene_scene)":{
"prefix":"cc.TransitionScene:initWithDuration(float_t,Scene_scene)",
"body":["cc.TransitionScene:initWithDuration(float_t,Scene_scene)"],
"description":"initWithDuration(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionScene:getDuration()":{
"prefix":"cc.TransitionScene:getDuration()",
"body":["cc.TransitionScene:getDuration()"],
"description":"getDuration()",
"scope":"source.lua"},

"cc.TransitionScene:hideOutShowIn()":{
"prefix":"cc.TransitionScene:hideOutShowIn()",
"body":["cc.TransitionScene:hideOutShowIn()"],
"description":"hideOutShowIn()",
"scope":"source.lua"},

"cc.TransitionScene:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionScene:create(float_t,Scene_scene)",
"body":["cc.TransitionScene:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionSceneOriented":{
"prefix":"cc.TransitionSceneOriented",
"body":["cc.TransitionSceneOriented"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionSceneOriented:initWithDuration(float_t,Scene_scene,Orientation_orientation)":{
"prefix":"cc.TransitionSceneOriented:initWithDuration(float_t,Scene_scene,Orientation_orientation)",
"body":["cc.TransitionSceneOriented:initWithDuration(float_t,Scene_scene,Orientation_orientation)"],
"description":"initWithDuration(float_t,Scene_scene,Orientation_orientation)",
"scope":"source.lua"},

"cc.TransitionSceneOriented:create(float_t,Scene_scene,Orientation_orientation)":{
"prefix":"cc.TransitionSceneOriented:create(float_t,Scene_scene,Orientation_orientation)",
"body":["cc.TransitionSceneOriented:create(float_t,Scene_scene,Orientation_orientation)"],
"description":"create(float_t,Scene_scene,Orientation_orientation)",
"scope":"source.lua"},

"cc.TransitionRotoZoom":{
"prefix":"cc.TransitionRotoZoom",
"body":["cc.TransitionRotoZoom"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionRotoZoom:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionRotoZoom:create(float_t,Scene_scene)",
"body":["cc.TransitionRotoZoom:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionJumpZoom":{
"prefix":"cc.TransitionJumpZoom",
"body":["cc.TransitionJumpZoom"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionJumpZoom:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionJumpZoom:create(float_t,Scene_scene)",
"body":["cc.TransitionJumpZoom:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionMoveInL":{
"prefix":"cc.TransitionMoveInL",
"body":["cc.TransitionMoveInL"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionMoveInL:action()":{
"prefix":"cc.TransitionMoveInL:action()",
"body":["cc.TransitionMoveInL:action()"],
"description":"action()",
"scope":"source.lua"},

"cc.TransitionMoveInL:easeActionWithAction(ActionInterval__action)":{
"prefix":"cc.TransitionMoveInL:easeActionWithAction(ActionInterval__action)",
"body":["cc.TransitionMoveInL:easeActionWithAction(ActionInterval__action)"],
"description":"easeActionWithAction(ActionInterval__action)",
"scope":"source.lua"},

"cc.TransitionMoveInL:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionMoveInL:create(float_t,Scene_scene)",
"body":["cc.TransitionMoveInL:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionMoveInR":{
"prefix":"cc.TransitionMoveInR",
"body":["cc.TransitionMoveInR"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionMoveInR:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionMoveInR:create(float_t,Scene_scene)",
"body":["cc.TransitionMoveInR:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionMoveInT":{
"prefix":"cc.TransitionMoveInT",
"body":["cc.TransitionMoveInT"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionMoveInT:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionMoveInT:create(float_t,Scene_scene)",
"body":["cc.TransitionMoveInT:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionMoveInB":{
"prefix":"cc.TransitionMoveInB",
"body":["cc.TransitionMoveInB"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionMoveInB:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionMoveInB:create(float_t,Scene_scene)",
"body":["cc.TransitionMoveInB:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionSlideInL":{
"prefix":"cc.TransitionSlideInL",
"body":["cc.TransitionSlideInL"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionSlideInL:action()":{
"prefix":"cc.TransitionSlideInL:action()",
"body":["cc.TransitionSlideInL:action()"],
"description":"action()",
"scope":"source.lua"},

"cc.TransitionSlideInL:easeActionWithAction(ActionInterval__action)":{
"prefix":"cc.TransitionSlideInL:easeActionWithAction(ActionInterval__action)",
"body":["cc.TransitionSlideInL:easeActionWithAction(ActionInterval__action)"],
"description":"easeActionWithAction(ActionInterval__action)",
"scope":"source.lua"},

"cc.TransitionSlideInL:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionSlideInL:create(float_t,Scene_scene)",
"body":["cc.TransitionSlideInL:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionSlideInR":{
"prefix":"cc.TransitionSlideInR",
"body":["cc.TransitionSlideInR"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionSlideInR:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionSlideInR:create(float_t,Scene_scene)",
"body":["cc.TransitionSlideInR:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionSlideInB":{
"prefix":"cc.TransitionSlideInB",
"body":["cc.TransitionSlideInB"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionSlideInB:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionSlideInB:create(float_t,Scene_scene)",
"body":["cc.TransitionSlideInB:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionSlideInT":{
"prefix":"cc.TransitionSlideInT",
"body":["cc.TransitionSlideInT"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionSlideInT:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionSlideInT:create(float_t,Scene_scene)",
"body":["cc.TransitionSlideInT:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionShrinkGrow":{
"prefix":"cc.TransitionShrinkGrow",
"body":["cc.TransitionShrinkGrow"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionShrinkGrow:easeActionWithAction(ActionInterval__action)":{
"prefix":"cc.TransitionShrinkGrow:easeActionWithAction(ActionInterval__action)",
"body":["cc.TransitionShrinkGrow:easeActionWithAction(ActionInterval__action)"],
"description":"easeActionWithAction(ActionInterval__action)",
"scope":"source.lua"},

"cc.TransitionShrinkGrow:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionShrinkGrow:create(float_t,Scene_scene)",
"body":["cc.TransitionShrinkGrow:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionFlipX":{
"prefix":"cc.TransitionFlipX",
"body":["cc.TransitionFlipX"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionFlipX:create(float_t,Scene_s,Orientation_o)":{
"prefix":"cc.TransitionFlipX:create(float_t,Scene_s,Orientation_o)",
"body":["cc.TransitionFlipX:create(float_t,Scene_s,Orientation_o)"],
"description":"create(float_t,Scene_s,Orientation_o)",
"scope":"source.lua"},

"cc.TransitionFlipX:create(float_t,Scene_s)":{
"prefix":"cc.TransitionFlipX:create(float_t,Scene_s)",
"body":["cc.TransitionFlipX:create(float_t,Scene_s)"],
"description":"create(float_t,Scene_s)",
"scope":"source.lua"},

"cc.TransitionFlipY":{
"prefix":"cc.TransitionFlipY",
"body":["cc.TransitionFlipY"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionFlipY:create(float_t,Scene_s,Orientation_o)":{
"prefix":"cc.TransitionFlipY:create(float_t,Scene_s,Orientation_o)",
"body":["cc.TransitionFlipY:create(float_t,Scene_s,Orientation_o)"],
"description":"create(float_t,Scene_s,Orientation_o)",
"scope":"source.lua"},

"cc.TransitionFlipY:create(float_t,Scene_s)":{
"prefix":"cc.TransitionFlipY:create(float_t,Scene_s)",
"body":["cc.TransitionFlipY:create(float_t,Scene_s)"],
"description":"create(float_t,Scene_s)",
"scope":"source.lua"},

"cc.TransitionFlipAngular":{
"prefix":"cc.TransitionFlipAngular",
"body":["cc.TransitionFlipAngular"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionFlipAngular:create(float_t,Scene_s,Orientation_o)":{
"prefix":"cc.TransitionFlipAngular:create(float_t,Scene_s,Orientation_o)",
"body":["cc.TransitionFlipAngular:create(float_t,Scene_s,Orientation_o)"],
"description":"create(float_t,Scene_s,Orientation_o)",
"scope":"source.lua"},

"cc.TransitionFlipAngular:create(float_t,Scene_s)":{
"prefix":"cc.TransitionFlipAngular:create(float_t,Scene_s)",
"body":["cc.TransitionFlipAngular:create(float_t,Scene_s)"],
"description":"create(float_t,Scene_s)",
"scope":"source.lua"},

"cc.TransitionZoomFlipX":{
"prefix":"cc.TransitionZoomFlipX",
"body":["cc.TransitionZoomFlipX"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionZoomFlipX:create(float_t,Scene_s,Orientation_o)":{
"prefix":"cc.TransitionZoomFlipX:create(float_t,Scene_s,Orientation_o)",
"body":["cc.TransitionZoomFlipX:create(float_t,Scene_s,Orientation_o)"],
"description":"create(float_t,Scene_s,Orientation_o)",
"scope":"source.lua"},

"cc.TransitionZoomFlipX:create(float_t,Scene_s)":{
"prefix":"cc.TransitionZoomFlipX:create(float_t,Scene_s)",
"body":["cc.TransitionZoomFlipX:create(float_t,Scene_s)"],
"description":"create(float_t,Scene_s)",
"scope":"source.lua"},

"cc.TransitionZoomFlipY":{
"prefix":"cc.TransitionZoomFlipY",
"body":["cc.TransitionZoomFlipY"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionZoomFlipY:create(float_t,Scene_s,Orientation_o)":{
"prefix":"cc.TransitionZoomFlipY:create(float_t,Scene_s,Orientation_o)",
"body":["cc.TransitionZoomFlipY:create(float_t,Scene_s,Orientation_o)"],
"description":"create(float_t,Scene_s,Orientation_o)",
"scope":"source.lua"},

"cc.TransitionZoomFlipY:create(float_t,Scene_s)":{
"prefix":"cc.TransitionZoomFlipY:create(float_t,Scene_s)",
"body":["cc.TransitionZoomFlipY:create(float_t,Scene_s)"],
"description":"create(float_t,Scene_s)",
"scope":"source.lua"},

"cc.TransitionZoomFlipAngular":{
"prefix":"cc.TransitionZoomFlipAngular",
"body":["cc.TransitionZoomFlipAngular"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionZoomFlipAngular:create(float_t,Scene_s,Orientation_o)":{
"prefix":"cc.TransitionZoomFlipAngular:create(float_t,Scene_s,Orientation_o)",
"body":["cc.TransitionZoomFlipAngular:create(float_t,Scene_s,Orientation_o)"],
"description":"create(float_t,Scene_s,Orientation_o)",
"scope":"source.lua"},

"cc.TransitionZoomFlipAngular:create(float_t,Scene_s)":{
"prefix":"cc.TransitionZoomFlipAngular:create(float_t,Scene_s)",
"body":["cc.TransitionZoomFlipAngular:create(float_t,Scene_s)"],
"description":"create(float_t,Scene_s)",
"scope":"source.lua"},

"cc.TransitionFade":{
"prefix":"cc.TransitionFade",
"body":["cc.TransitionFade"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionFade:initWithDuration(float_t,Scenescene,const_Color3B_color)":{
"prefix":"cc.TransitionFade:initWithDuration(float_t,Scenescene,const_Color3B_color)",
"body":["cc.TransitionFade:initWithDuration(float_t,Scenescene,const_Color3B_color)"],
"description":"initWithDuration(float_t,Scenescene,const_Color3B_color)",
"scope":"source.lua"},

"cc.TransitionFade:create(float_duration,Scene_scene,const_Color3B_color)":{
"prefix":"cc.TransitionFade:create(float_duration,Scene_scene,const_Color3B_color)",
"body":["cc.TransitionFade:create(float_duration,Scene_scene,const_Color3B_color)"],
"description":"create(float_duration,Scene_scene,const_Color3B_color)",
"scope":"source.lua"},

"cc.TransitionFade:create(float_duration,Scene_scene)":{
"prefix":"cc.TransitionFade:create(float_duration,Scene_scene)",
"body":["cc.TransitionFade:create(float_duration,Scene_scene)"],
"description":"create(float_duration,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionCrossFade":{
"prefix":"cc.TransitionCrossFade",
"body":["cc.TransitionCrossFade"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionCrossFade:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionCrossFade:create(float_t,Scene_scene)",
"body":["cc.TransitionCrossFade:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionTurnOffTiles":{
"prefix":"cc.TransitionTurnOffTiles",
"body":["cc.TransitionTurnOffTiles"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionTurnOffTiles:easeActionWithAction(ActionInterval__action)":{
"prefix":"cc.TransitionTurnOffTiles:easeActionWithAction(ActionInterval__action)",
"body":["cc.TransitionTurnOffTiles:easeActionWithAction(ActionInterval__action)"],
"description":"easeActionWithAction(ActionInterval__action)",
"scope":"source.lua"},

"cc.TransitionTurnOffTiles:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionTurnOffTiles:create(float_t,Scene_scene)",
"body":["cc.TransitionTurnOffTiles:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionSplitCols":{
"prefix":"cc.TransitionSplitCols",
"body":["cc.TransitionSplitCols"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionSplitCols:action()":{
"prefix":"cc.TransitionSplitCols:action()",
"body":["cc.TransitionSplitCols:action()"],
"description":"action()",
"scope":"source.lua"},

"cc.TransitionSplitCols:easeActionWithAction(ActionInterval__action)":{
"prefix":"cc.TransitionSplitCols:easeActionWithAction(ActionInterval__action)",
"body":["cc.TransitionSplitCols:easeActionWithAction(ActionInterval__action)"],
"description":"easeActionWithAction(ActionInterval__action)",
"scope":"source.lua"},

"cc.TransitionSplitCols:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionSplitCols:create(float_t,Scene_scene)",
"body":["cc.TransitionSplitCols:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionSplitRows":{
"prefix":"cc.TransitionSplitRows",
"body":["cc.TransitionSplitRows"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionSplitRows:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionSplitRows:create(float_t,Scene_scene)",
"body":["cc.TransitionSplitRows:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionFadeTR":{
"prefix":"cc.TransitionFadeTR",
"body":["cc.TransitionFadeTR"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionFadeTR:easeActionWithAction(ActionInterval__action)":{
"prefix":"cc.TransitionFadeTR:easeActionWithAction(ActionInterval__action)",
"body":["cc.TransitionFadeTR:easeActionWithAction(ActionInterval__action)"],
"description":"easeActionWithAction(ActionInterval__action)",
"scope":"source.lua"},

"cc.TransitionFadeTR:actionWithSize(const_Size_size)":{
"prefix":"cc.TransitionFadeTR:actionWithSize(const_Size_size)",
"body":["cc.TransitionFadeTR:actionWithSize(const_Size_size)"],
"description":"actionWithSize(const_Size_size)",
"scope":"source.lua"},

"cc.TransitionFadeTR:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionFadeTR:create(float_t,Scene_scene)",
"body":["cc.TransitionFadeTR:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionFadeBL":{
"prefix":"cc.TransitionFadeBL",
"body":["cc.TransitionFadeBL"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionFadeBL:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionFadeBL:create(float_t,Scene_scene)",
"body":["cc.TransitionFadeBL:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionFadeUp":{
"prefix":"cc.TransitionFadeUp",
"body":["cc.TransitionFadeUp"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionFadeUp:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionFadeUp:create(float_t,Scene_scene)",
"body":["cc.TransitionFadeUp:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionFadeDown":{
"prefix":"cc.TransitionFadeDown",
"body":["cc.TransitionFadeDown"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionFadeDown:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionFadeDown:create(float_t,Scene_scene)",
"body":["cc.TransitionFadeDown:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionPageTurn":{
"prefix":"cc.TransitionPageTurn",
"body":["cc.TransitionPageTurn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionPageTurn:actionWithSize(const_Size_vector)":{
"prefix":"cc.TransitionPageTurn:actionWithSize(const_Size_vector)",
"body":["cc.TransitionPageTurn:actionWithSize(const_Size_vector)"],
"description":"actionWithSize(const_Size_vector)",
"scope":"source.lua"},

"cc.TransitionPageTurn:initWithDuration(float_t,Scene_scene,bool_backwards)":{
"prefix":"cc.TransitionPageTurn:initWithDuration(float_t,Scene_scene,bool_backwards)",
"body":["cc.TransitionPageTurn:initWithDuration(float_t,Scene_scene,bool_backwards)"],
"description":"initWithDuration(float_t,Scene_scene,bool_backwards)",
"scope":"source.lua"},

"cc.TransitionPageTurn:create(float_t,Scene_scene,bool_backwards)":{
"prefix":"cc.TransitionPageTurn:create(float_t,Scene_scene,bool_backwards)",
"body":["cc.TransitionPageTurn:create(float_t,Scene_scene,bool_backwards)"],
"description":"create(float_t,Scene_scene,bool_backwards)",
"scope":"source.lua"},

"cc.TransitionProgress":{
"prefix":"cc.TransitionProgress",
"body":["cc.TransitionProgress"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionProgress:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionProgress:create(float_t,Scene_scene)",
"body":["cc.TransitionProgress:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionProgressRadialCCW":{
"prefix":"cc.TransitionProgressRadialCCW",
"body":["cc.TransitionProgressRadialCCW"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionProgressRadialCCW:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionProgressRadialCCW:create(float_t,Scene_scene)",
"body":["cc.TransitionProgressRadialCCW:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionProgressRadialCW":{
"prefix":"cc.TransitionProgressRadialCW",
"body":["cc.TransitionProgressRadialCW"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionProgressRadialCW:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionProgressRadialCW:create(float_t,Scene_scene)",
"body":["cc.TransitionProgressRadialCW:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionProgressHorizontal":{
"prefix":"cc.TransitionProgressHorizontal",
"body":["cc.TransitionProgressHorizontal"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionProgressHorizontal:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionProgressHorizontal:create(float_t,Scene_scene)",
"body":["cc.TransitionProgressHorizontal:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionProgressVertical":{
"prefix":"cc.TransitionProgressVertical",
"body":["cc.TransitionProgressVertical"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionProgressVertical:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionProgressVertical:create(float_t,Scene_scene)",
"body":["cc.TransitionProgressVertical:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionProgressInOut":{
"prefix":"cc.TransitionProgressInOut",
"body":["cc.TransitionProgressInOut"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionProgressInOut:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionProgressInOut:create(float_t,Scene_scene)",
"body":["cc.TransitionProgressInOut:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.TransitionProgressOutIn":{
"prefix":"cc.TransitionProgressOutIn",
"body":["cc.TransitionProgressOutIn"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TransitionProgressOutIn:create(float_t,Scene_scene)":{
"prefix":"cc.TransitionProgressOutIn:create(float_t,Scene_scene)",
"body":["cc.TransitionProgressOutIn:create(float_t,Scene_scene)"],
"description":"create(float_t,Scene_scene)",
"scope":"source.lua"},

"cc.Camera":{
"prefix":"cc.Camera",
"body":["cc.Camera"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Camera:restore()":{
"prefix":"cc.Camera:restore()",
"body":["cc.Camera:restore()"],
"description":"restore()",
"scope":"source.lua"},

"cc.Camera:getDepth()":{
"prefix":"cc.Camera:getDepth()",
"body":["cc.Camera:getDepth()"],
"description":"getDepth()",
"scope":"source.lua"},

"cc.Camera:getViewProjectionMatrix()":{
"prefix":"cc.Camera:getViewProjectionMatrix()",
"body":["cc.Camera:getViewProjectionMatrix()"],
"description":"getViewProjectionMatrix()",
"scope":"source.lua"},

"cc.Camera:applyViewport()":{
"prefix":"cc.Camera:applyViewport()",
"body":["cc.Camera:applyViewport()"],
"description":"applyViewport()",
"scope":"source.lua"},

"cc.Camera:setBackgroundBrush(CameraBackgroundBrush_clearBrush)":{
"prefix":"cc.Camera:setBackgroundBrush(CameraBackgroundBrush_clearBrush)",
"body":["cc.Camera:setBackgroundBrush(CameraBackgroundBrush_clearBrush)"],
"description":"setBackgroundBrush(CameraBackgroundBrush_clearBrush)",
"scope":"source.lua"},

"cc.Camera:lookAt(const_Vec3_target,const_Vec3_up)":{
"prefix":"cc.Camera:lookAt(const_Vec3_target,const_Vec3_up)",
"body":["cc.Camera:lookAt(const_Vec3_target,const_Vec3_up)"],
"description":"lookAt(const_Vec3_target,const_Vec3_up)",
"scope":"source.lua"},

"cc.Camera:apply()":{
"prefix":"cc.Camera:apply()",
"body":["cc.Camera:apply()"],
"description":"apply()",
"scope":"source.lua"},

"cc.Camera:getBackgroundBrush()":{
"prefix":"cc.Camera:getBackgroundBrush()",
"body":["cc.Camera:getBackgroundBrush()"],
"description":"getBackgroundBrush()",
"scope":"source.lua"},

"cc.Camera:getProjectionMatrix()":{
"prefix":"cc.Camera:getProjectionMatrix()",
"body":["cc.Camera:getProjectionMatrix()"],
"description":"getProjectionMatrix()",
"scope":"source.lua"},

"cc.Camera:isBrushValid()":{
"prefix":"cc.Camera:isBrushValid()",
"body":["cc.Camera:isBrushValid()"],
"description":"isBrushValid()",
"scope":"source.lua"},

"cc.Camera:getDepthInView(const_Mat4_transform)":{
"prefix":"cc.Camera:getDepthInView(const_Mat4_transform)",
"body":["cc.Camera:getDepthInView(const_Mat4_transform)"],
"description":"getDepthInView(const_Mat4_transform)",
"scope":"source.lua"},

"cc.Camera:restoreViewport()":{
"prefix":"cc.Camera:restoreViewport()",
"body":["cc.Camera:restoreViewport()"],
"description":"restoreViewport()",
"scope":"source.lua"},

"cc.Camera:clearBackground()":{
"prefix":"cc.Camera:clearBackground()",
"body":["cc.Camera:clearBackground()"],
"description":"clearBackground()",
"scope":"source.lua"},

"cc.Camera:setAdditionalProjection(const_Mat4_mat)":{
"prefix":"cc.Camera:setAdditionalProjection(const_Mat4_mat)",
"body":["cc.Camera:setAdditionalProjection(const_Mat4_mat)"],
"description":"setAdditionalProjection(const_Mat4_mat)",
"scope":"source.lua"},

"cc.Camera:setViewport(const_experimental_Viewport_vp)":{
"prefix":"cc.Camera:setViewport(const_experimental_Viewport_vp)",
"body":["cc.Camera:setViewport(const_experimental_Viewport_vp)"],
"description":"setViewport(const_experimental_Viewport_vp)",
"scope":"source.lua"},

"cc.Camera:initDefault()":{
"prefix":"cc.Camera:initDefault()",
"body":["cc.Camera:initDefault()"],
"description":"initDefault()",
"scope":"source.lua"},

"cc.Camera:getCameraFlag()":{
"prefix":"cc.Camera:getCameraFlag()",
"body":["cc.Camera:getCameraFlag()"],
"description":"getCameraFlag()",
"scope":"source.lua"},

"cc.Camera:getType()":{
"prefix":"cc.Camera:getType()",
"body":["cc.Camera:getType()"],
"description":"getType()",
"scope":"source.lua"},

"cc.Camera:initOrthographic(float_zoomX,float_zoomY,float_nearPlane,float_farPlane)":{
"prefix":"cc.Camera:initOrthographic(float_zoomX,float_zoomY,float_nearPlane,float_farPlane)",
"body":["cc.Camera:initOrthographic(float_zoomX,float_zoomY,float_nearPlane,float_farPlane)"],
"description":"initOrthographic(float_zoomX,float_zoomY,float_nearPlane,float_farPlane)",
"scope":"source.lua"},

"cc.Camera:getRenderOrder()":{
"prefix":"cc.Camera:getRenderOrder()",
"body":["cc.Camera:getRenderOrder()"],
"description":"getRenderOrder()",
"scope":"source.lua"},

"cc.Camera:isVisibleInFrustum(const_AABB_aabb)":{
"prefix":"cc.Camera:isVisibleInFrustum(const_AABB_aabb)",
"body":["cc.Camera:isVisibleInFrustum(const_AABB_aabb)"],
"description":"isVisibleInFrustum(const_AABB_aabb)",
"scope":"source.lua"},

"cc.Camera:setDepth(int8_t_depth)":{
"prefix":"cc.Camera:setDepth(int8_t_depth)",
"body":["cc.Camera:setDepth(int8_t_depth)"],
"description":"setDepth(int8_t_depth)",
"scope":"source.lua"},

"cc.Camera:setScene(Scene_scene)":{
"prefix":"cc.Camera:setScene(Scene_scene)",
"body":["cc.Camera:setScene(Scene_scene)"],
"description":"setScene(Scene_scene)",
"scope":"source.lua"},

"cc.Camera:projectGL(const_Vec3_src)":{
"prefix":"cc.Camera:projectGL(const_Vec3_src)",
"body":["cc.Camera:projectGL(const_Vec3_src)"],
"description":"projectGL(const_Vec3_src)",
"scope":"source.lua"},

"cc.Camera:restoreFrameBufferObject()":{
"prefix":"cc.Camera:restoreFrameBufferObject()",
"body":["cc.Camera:restoreFrameBufferObject()"],
"description":"restoreFrameBufferObject()",
"scope":"source.lua"},

"cc.Camera:getViewMatrix()":{
"prefix":"cc.Camera:getViewMatrix()",
"body":["cc.Camera:getViewMatrix()"],
"description":"getViewMatrix()",
"scope":"source.lua"},

"cc.Camera:getNearPlane()":{
"prefix":"cc.Camera:getNearPlane()",
"body":["cc.Camera:getNearPlane()"],
"description":"getNearPlane()",
"scope":"source.lua"},

"cc.Camera:project(const_Vec3_src)":{
"prefix":"cc.Camera:project(const_Vec3_src)",
"body":["cc.Camera:project(const_Vec3_src)"],
"description":"project(const_Vec3_src)",
"scope":"source.lua"},

"cc.Camera:setCameraFlag(CameraFlag_flag)":{
"prefix":"cc.Camera:setCameraFlag(CameraFlag_flag)",
"body":["cc.Camera:setCameraFlag(CameraFlag_flag)"],
"description":"setCameraFlag(CameraFlag_flag)",
"scope":"source.lua"},

"cc.Camera:getFarPlane()":{
"prefix":"cc.Camera:getFarPlane()",
"body":["cc.Camera:getFarPlane()"],
"description":"getFarPlane()",
"scope":"source.lua"},

"cc.Camera:applyFrameBufferObject()":{
"prefix":"cc.Camera:applyFrameBufferObject()",
"body":["cc.Camera:applyFrameBufferObject()"],
"description":"applyFrameBufferObject()",
"scope":"source.lua"},

"cc.Camera:setFrameBufferObject(experimental_FrameBuffer_fbo)":{
"prefix":"cc.Camera:setFrameBufferObject(experimental_FrameBuffer_fbo)",
"body":["cc.Camera:setFrameBufferObject(experimental_FrameBuffer_fbo)"],
"description":"setFrameBufferObject(experimental_FrameBuffer_fbo)",
"scope":"source.lua"},

"cc.Camera:isViewProjectionUpdated()":{
"prefix":"cc.Camera:isViewProjectionUpdated()",
"body":["cc.Camera:isViewProjectionUpdated()"],
"description":"isViewProjectionUpdated()",
"scope":"source.lua"},

"cc.Camera:initPerspective(float_fieldOfView,float_aspectRatio,float_nearPlane,float_farPlane)":{
"prefix":"cc.Camera:initPerspective(float_fieldOfView,float_aspectRatio,float_nearPlane,float_farPlane)",
"body":["cc.Camera:initPerspective(float_fieldOfView,float_aspectRatio,float_nearPlane,float_farPlane)"],
"description":"initPerspective(float_fieldOfView,float_aspectRatio,float_nearPlane,float_farPlane)",
"scope":"source.lua"},

"cc.Camera:createOrthographic(float_zoomX,float_zoomY,float_nearPlane,float_farPlane)":{
"prefix":"cc.Camera:createOrthographic(float_zoomX,float_zoomY,float_nearPlane,float_farPlane)",
"body":["cc.Camera:createOrthographic(float_zoomX,float_zoomY,float_nearPlane,float_farPlane)"],
"description":"createOrthographic(float_zoomX,float_zoomY,float_nearPlane,float_farPlane)",
"scope":"source.lua"},

"cc.Camera:getVisitingCamera()":{
"prefix":"cc.Camera:getVisitingCamera()",
"body":["cc.Camera:getVisitingCamera()"],
"description":"getVisitingCamera()",
"scope":"source.lua"},

"cc.Camera:create()":{
"prefix":"cc.Camera:create()",
"body":["cc.Camera:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Camera:createPerspective(float_fieldOfView,float_aspectRatio,float_nearPlane,float_farPlane)":{
"prefix":"cc.Camera:createPerspective(float_fieldOfView,float_aspectRatio,float_nearPlane,float_farPlane)",
"body":["cc.Camera:createPerspective(float_fieldOfView,float_aspectRatio,float_nearPlane,float_farPlane)"],
"description":"createPerspective(float_fieldOfView,float_aspectRatio,float_nearPlane,float_farPlane)",
"scope":"source.lua"},

"cc.Camera:getDefaultViewport()":{
"prefix":"cc.Camera:getDefaultViewport()",
"body":["cc.Camera:getDefaultViewport()"],
"description":"getDefaultViewport()",
"scope":"source.lua"},

"cc.Camera:setDefaultViewport(const_experimental_Viewport_vp)":{
"prefix":"cc.Camera:setDefaultViewport(const_experimental_Viewport_vp)",
"body":["cc.Camera:setDefaultViewport(const_experimental_Viewport_vp)"],
"description":"setDefaultViewport(const_experimental_Viewport_vp)",
"scope":"source.lua"},

"cc.Camera:getDefaultCamera()":{
"prefix":"cc.Camera:getDefaultCamera()",
"body":["cc.Camera:getDefaultCamera()"],
"description":"getDefaultCamera()",
"scope":"source.lua"},

"cc.CameraBackgroundBrush":{
"prefix":"cc.CameraBackgroundBrush",
"body":["cc.CameraBackgroundBrush"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CameraBackgroundBrush:getBrushType()":{
"prefix":"cc.CameraBackgroundBrush:getBrushType()",
"body":["cc.CameraBackgroundBrush:getBrushType()"],
"description":"getBrushType()",
"scope":"source.lua"},

"cc.CameraBackgroundBrush:drawBackground(Camera_camera)":{
"prefix":"cc.CameraBackgroundBrush:drawBackground(Camera_camera)",
"body":["cc.CameraBackgroundBrush:drawBackground(Camera_camera)"],
"description":"drawBackground(Camera_camera)",
"scope":"source.lua"},

"cc.CameraBackgroundBrush:init()":{
"prefix":"cc.CameraBackgroundBrush:init()",
"body":["cc.CameraBackgroundBrush:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.CameraBackgroundBrush:isValid()":{
"prefix":"cc.CameraBackgroundBrush:isValid()",
"body":["cc.CameraBackgroundBrush:isValid()"],
"description":"isValid()",
"scope":"source.lua"},

"cc.CameraBackgroundBrush:createColorBrush(const_Color4F_color,float_depth)":{
"prefix":"cc.CameraBackgroundBrush:createColorBrush(const_Color4F_color,float_depth)",
"body":["cc.CameraBackgroundBrush:createColorBrush(const_Color4F_color,float_depth)"],
"description":"createColorBrush(const_Color4F_color,float_depth)",
"scope":"source.lua"},

"cc.CameraBackgroundBrush:createNoneBrush()":{
"prefix":"cc.CameraBackgroundBrush:createNoneBrush()",
"body":["cc.CameraBackgroundBrush:createNoneBrush()"],
"description":"createNoneBrush()",
"scope":"source.lua"},

"cc.CameraBackgroundBrush:createDepthBrush(float_depth)":{
"prefix":"cc.CameraBackgroundBrush:createDepthBrush(float_depth)",
"body":["cc.CameraBackgroundBrush:createDepthBrush(float_depth)"],
"description":"createDepthBrush(float_depth)",
"scope":"source.lua"},

"cc.CameraBackgroundDepthBrush":{
"prefix":"cc.CameraBackgroundDepthBrush",
"body":["cc.CameraBackgroundDepthBrush"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CameraBackgroundDepthBrush:setDepth(float_depth)":{
"prefix":"cc.CameraBackgroundDepthBrush:setDepth(float_depth)",
"body":["cc.CameraBackgroundDepthBrush:setDepth(float_depth)"],
"description":"setDepth(float_depth)",
"scope":"source.lua"},

"cc.CameraBackgroundDepthBrush:create(float_depth)":{
"prefix":"cc.CameraBackgroundDepthBrush:create(float_depth)",
"body":["cc.CameraBackgroundDepthBrush:create(float_depth)"],
"description":"create(float_depth)",
"scope":"source.lua"},

"cc.CameraBackgroundColorBrush":{
"prefix":"cc.CameraBackgroundColorBrush",
"body":["cc.CameraBackgroundColorBrush"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CameraBackgroundColorBrush:setColor(const_Color4F_color)":{
"prefix":"cc.CameraBackgroundColorBrush:setColor(const_Color4F_color)",
"body":["cc.CameraBackgroundColorBrush:setColor(const_Color4F_color)"],
"description":"setColor(const_Color4F_color)",
"scope":"source.lua"},

"cc.CameraBackgroundColorBrush:create(const_Color4F_color,float_depth)":{
"prefix":"cc.CameraBackgroundColorBrush:create(const_Color4F_color,float_depth)",
"body":["cc.CameraBackgroundColorBrush:create(const_Color4F_color,float_depth)"],
"description":"create(const_Color4F_color,float_depth)",
"scope":"source.lua"},

"cc.CameraBackgroundSkyBoxBrush":{
"prefix":"cc.CameraBackgroundSkyBoxBrush",
"body":["cc.CameraBackgroundSkyBoxBrush"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CameraBackgroundSkyBoxBrush:setTextureValid(bool_valid)":{
"prefix":"cc.CameraBackgroundSkyBoxBrush:setTextureValid(bool_valid)",
"body":["cc.CameraBackgroundSkyBoxBrush:setTextureValid(bool_valid)"],
"description":"setTextureValid(bool_valid)",
"scope":"source.lua"},

"cc.CameraBackgroundSkyBoxBrush:setTexture(TextureCube__texture)":{
"prefix":"cc.CameraBackgroundSkyBoxBrush:setTexture(TextureCube__texture)",
"body":["cc.CameraBackgroundSkyBoxBrush:setTexture(TextureCube__texture)"],
"description":"setTexture(TextureCube__texture)",
"scope":"source.lua"},

"cc.CameraBackgroundSkyBoxBrush:setActived(bool_actived)":{
"prefix":"cc.CameraBackgroundSkyBoxBrush:setActived(bool_actived)",
"body":["cc.CameraBackgroundSkyBoxBrush:setActived(bool_actived)"],
"description":"setActived(bool_actived)",
"scope":"source.lua"},

"cc.CameraBackgroundSkyBoxBrush:isActived()":{
"prefix":"cc.CameraBackgroundSkyBoxBrush:isActived()",
"body":["cc.CameraBackgroundSkyBoxBrush:isActived()"],
"description":"isActived()",
"scope":"source.lua"},

"cc.CameraBackgroundSkyBoxBrush:create()":{
"prefix":"cc.CameraBackgroundSkyBoxBrush:create()",
"body":["cc.CameraBackgroundSkyBoxBrush:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.GridBase":{
"prefix":"cc.GridBase",
"body":["cc.GridBase"],
"description":"cocos class",
"scope":"source.lua"},

"cc.GridBase:setGridSize(const_Size_gridSize)":{
"prefix":"cc.GridBase:setGridSize(const_Size_gridSize)",
"body":["cc.GridBase:setGridSize(const_Size_gridSize)"],
"description":"setGridSize(const_Size_gridSize)",
"scope":"source.lua"},

"cc.GridBase:setGridRect(const_Rect_rect)":{
"prefix":"cc.GridBase:setGridRect(const_Rect_rect)",
"body":["cc.GridBase:setGridRect(const_Rect_rect)"],
"description":"setGridRect(const_Rect_rect)",
"scope":"source.lua"},

"cc.GridBase:afterBlit()":{
"prefix":"cc.GridBase:afterBlit()",
"body":["cc.GridBase:afterBlit()"],
"description":"afterBlit()",
"scope":"source.lua"},

"cc.GridBase:getGridRect()":{
"prefix":"cc.GridBase:getGridRect()",
"body":["cc.GridBase:getGridRect()"],
"description":"getGridRect()",
"scope":"source.lua"},

"cc.GridBase:afterDraw(Node_target)":{
"prefix":"cc.GridBase:afterDraw(Node_target)",
"body":["cc.GridBase:afterDraw(Node_target)"],
"description":"afterDraw(Node_target)",
"scope":"source.lua"},

"cc.GridBase:beforeDraw()":{
"prefix":"cc.GridBase:beforeDraw()",
"body":["cc.GridBase:beforeDraw()"],
"description":"beforeDraw()",
"scope":"source.lua"},

"cc.GridBase:calculateVertexPoints()":{
"prefix":"cc.GridBase:calculateVertexPoints()",
"body":["cc.GridBase:calculateVertexPoints()"],
"description":"calculateVertexPoints()",
"scope":"source.lua"},

"cc.GridBase:isTextureFlipped()":{
"prefix":"cc.GridBase:isTextureFlipped()",
"body":["cc.GridBase:isTextureFlipped()"],
"description":"isTextureFlipped()",
"scope":"source.lua"},

"cc.GridBase:getGridSize()":{
"prefix":"cc.GridBase:getGridSize()",
"body":["cc.GridBase:getGridSize()"],
"description":"getGridSize()",
"scope":"source.lua"},

"cc.GridBase:getStep()":{
"prefix":"cc.GridBase:getStep()",
"body":["cc.GridBase:getStep()"],
"description":"getStep()",
"scope":"source.lua"},

"cc.GridBase:set2DProjection()":{
"prefix":"cc.GridBase:set2DProjection()",
"body":["cc.GridBase:set2DProjection()"],
"description":"set2DProjection()",
"scope":"source.lua"},

"cc.GridBase:setStep(const_Vec2_step)":{
"prefix":"cc.GridBase:setStep(const_Vec2_step)",
"body":["cc.GridBase:setStep(const_Vec2_step)"],
"description":"setStep(const_Vec2_step)",
"scope":"source.lua"},

"cc.GridBase:setTextureFlipped(bool_flipped)":{
"prefix":"cc.GridBase:setTextureFlipped(bool_flipped)",
"body":["cc.GridBase:setTextureFlipped(bool_flipped)"],
"description":"setTextureFlipped(bool_flipped)",
"scope":"source.lua"},

"cc.GridBase:blit()":{
"prefix":"cc.GridBase:blit()",
"body":["cc.GridBase:blit()"],
"description":"blit()",
"scope":"source.lua"},

"cc.GridBase:setActive(bool_active)":{
"prefix":"cc.GridBase:setActive(bool_active)",
"body":["cc.GridBase:setActive(bool_active)"],
"description":"setActive(bool_active)",
"scope":"source.lua"},

"cc.GridBase:getReuseGrid()":{
"prefix":"cc.GridBase:getReuseGrid()",
"body":["cc.GridBase:getReuseGrid()"],
"description":"getReuseGrid()",
"scope":"source.lua"},

"cc.GridBase:initWithSize(const_Size_gridSize)":{
"prefix":"cc.GridBase:initWithSize(const_Size_gridSize)",
"body":["cc.GridBase:initWithSize(const_Size_gridSize)"],
"description":"initWithSize(const_Size_gridSize)",
"scope":"source.lua"},

"cc.GridBase:initWithSize(const_Size_gridSize,Texture2D_texture,bool_flipped)":{
"prefix":"cc.GridBase:initWithSize(const_Size_gridSize,Texture2D_texture,bool_flipped)",
"body":["cc.GridBase:initWithSize(const_Size_gridSize,Texture2D_texture,bool_flipped)"],
"description":"initWithSize(const_Size_gridSize,Texture2D_texture,bool_flipped)",
"scope":"source.lua"},

"cc.GridBase:beforeBlit()":{
"prefix":"cc.GridBase:beforeBlit()",
"body":["cc.GridBase:beforeBlit()"],
"description":"beforeBlit()",
"scope":"source.lua"},

"cc.GridBase:setReuseGrid(int_reuseGrid)":{
"prefix":"cc.GridBase:setReuseGrid(int_reuseGrid)",
"body":["cc.GridBase:setReuseGrid(int_reuseGrid)"],
"description":"setReuseGrid(int_reuseGrid)",
"scope":"source.lua"},

"cc.GridBase:isActive()":{
"prefix":"cc.GridBase:isActive()",
"body":["cc.GridBase:isActive()"],
"description":"isActive()",
"scope":"source.lua"},

"cc.GridBase:reuse()":{
"prefix":"cc.GridBase:reuse()",
"body":["cc.GridBase:reuse()"],
"description":"reuse()",
"scope":"source.lua"},

"cc.GridBase:create(const_Size_gridSize,Texture2D_texture,bool_flipped)":{
"prefix":"cc.GridBase:create(const_Size_gridSize,Texture2D_texture,bool_flipped)",
"body":["cc.GridBase:create(const_Size_gridSize,Texture2D_texture,bool_flipped)"],
"description":"create(const_Size_gridSize,Texture2D_texture,bool_flipped)",
"scope":"source.lua"},

"cc.GridBase:create(const_Size_gridSize)":{
"prefix":"cc.GridBase:create(const_Size_gridSize)",
"body":["cc.GridBase:create(const_Size_gridSize)"],
"description":"create(const_Size_gridSize)",
"scope":"source.lua"},

"cc.Grid3D":{
"prefix":"cc.Grid3D",
"body":["cc.Grid3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Grid3D:getNeedDepthTestForBlit()":{
"prefix":"cc.Grid3D:getNeedDepthTestForBlit()",
"body":["cc.Grid3D:getNeedDepthTestForBlit()"],
"description":"getNeedDepthTestForBlit()",
"scope":"source.lua"},

"cc.Grid3D:setNeedDepthTestForBlit(bool_neededDepthTest)":{
"prefix":"cc.Grid3D:setNeedDepthTestForBlit(bool_neededDepthTest)",
"body":["cc.Grid3D:setNeedDepthTestForBlit(bool_neededDepthTest)"],
"description":"setNeedDepthTestForBlit(bool_neededDepthTest)",
"scope":"source.lua"},

"cc.Grid3D:create(const_Size_gridSize)":{
"prefix":"cc.Grid3D:create(const_Size_gridSize)",
"body":["cc.Grid3D:create(const_Size_gridSize)"],
"description":"create(const_Size_gridSize)",
"scope":"source.lua"},

"cc.Grid3D:create(const_Size_gridSize,const_Rect_rect)":{
"prefix":"cc.Grid3D:create(const_Size_gridSize,const_Rect_rect)",
"body":["cc.Grid3D:create(const_Size_gridSize,const_Rect_rect)"],
"description":"create(const_Size_gridSize,const_Rect_rect)",
"scope":"source.lua"},

"cc.Grid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped)":{
"prefix":"cc.Grid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped)",
"body":["cc.Grid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped)"],
"description":"create(const_Size_gridSize,Texture2D_texture,bool_flipped)",
"scope":"source.lua"},

"cc.Grid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped,const_Rect_rect)":{
"prefix":"cc.Grid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped,const_Rect_rect)",
"body":["cc.Grid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped,const_Rect_rect)"],
"description":"create(const_Size_gridSize,Texture2D_texture,bool_flipped,const_Rect_rect)",
"scope":"source.lua"},

"cc.TiledGrid3D":{
"prefix":"cc.TiledGrid3D",
"body":["cc.TiledGrid3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TiledGrid3D:create(const_Size_gridSize)":{
"prefix":"cc.TiledGrid3D:create(const_Size_gridSize)",
"body":["cc.TiledGrid3D:create(const_Size_gridSize)"],
"description":"create(const_Size_gridSize)",
"scope":"source.lua"},

"cc.TiledGrid3D:create(const_Size_gridSize,const_Rect_rect)":{
"prefix":"cc.TiledGrid3D:create(const_Size_gridSize,const_Rect_rect)",
"body":["cc.TiledGrid3D:create(const_Size_gridSize,const_Rect_rect)"],
"description":"create(const_Size_gridSize,const_Rect_rect)",
"scope":"source.lua"},

"cc.TiledGrid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped)":{
"prefix":"cc.TiledGrid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped)",
"body":["cc.TiledGrid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped)"],
"description":"create(const_Size_gridSize,Texture2D_texture,bool_flipped)",
"scope":"source.lua"},

"cc.TiledGrid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped,const_Rect_rect)":{
"prefix":"cc.TiledGrid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped,const_Rect_rect)",
"body":["cc.TiledGrid3D:create(const_Size_gridSize,Texture2D_texture,bool_flipped,const_Rect_rect)"],
"description":"create(const_Size_gridSize,Texture2D_texture,bool_flipped,const_Rect_rect)",
"scope":"source.lua"},

"cc.BaseLight":{
"prefix":"cc.BaseLight",
"body":["cc.BaseLight"],
"description":"cocos class",
"scope":"source.lua"},

"cc.BaseLight:setEnabled(bool_enabled)":{
"prefix":"cc.BaseLight:setEnabled(bool_enabled)",
"body":["cc.BaseLight:setEnabled(bool_enabled)"],
"description":"setEnabled(bool_enabled)",
"scope":"source.lua"},

"cc.BaseLight:getIntensity()":{
"prefix":"cc.BaseLight:getIntensity()",
"body":["cc.BaseLight:getIntensity()"],
"description":"getIntensity()",
"scope":"source.lua"},

"cc.BaseLight:isEnabled()":{
"prefix":"cc.BaseLight:isEnabled()",
"body":["cc.BaseLight:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"cc.BaseLight:getLightType()":{
"prefix":"cc.BaseLight:getLightType()",
"body":["cc.BaseLight:getLightType()"],
"description":"getLightType()",
"scope":"source.lua"},

"cc.BaseLight:setLightFlag(LightFlag_flag)":{
"prefix":"cc.BaseLight:setLightFlag(LightFlag_flag)",
"body":["cc.BaseLight:setLightFlag(LightFlag_flag)"],
"description":"setLightFlag(LightFlag_flag)",
"scope":"source.lua"},

"cc.BaseLight:setIntensity(float_intensity)":{
"prefix":"cc.BaseLight:setIntensity(float_intensity)",
"body":["cc.BaseLight:setIntensity(float_intensity)"],
"description":"setIntensity(float_intensity)",
"scope":"source.lua"},

"cc.BaseLight:getLightFlag()":{
"prefix":"cc.BaseLight:getLightFlag()",
"body":["cc.BaseLight:getLightFlag()"],
"description":"getLightFlag()",
"scope":"source.lua"},

"cc.DirectionLight":{
"prefix":"cc.DirectionLight",
"body":["cc.DirectionLight"],
"description":"cocos class",
"scope":"source.lua"},

"cc.DirectionLight:getDirection()":{
"prefix":"cc.DirectionLight:getDirection()",
"body":["cc.DirectionLight:getDirection()"],
"description":"getDirection()",
"scope":"source.lua"},

"cc.DirectionLight:getDirectionInWorld()":{
"prefix":"cc.DirectionLight:getDirectionInWorld()",
"body":["cc.DirectionLight:getDirectionInWorld()"],
"description":"getDirectionInWorld()",
"scope":"source.lua"},

"cc.DirectionLight:setDirection(const_Vec3_dir)":{
"prefix":"cc.DirectionLight:setDirection(const_Vec3_dir)",
"body":["cc.DirectionLight:setDirection(const_Vec3_dir)"],
"description":"setDirection(const_Vec3_dir)",
"scope":"source.lua"},

"cc.DirectionLight:create(const_Vec3_direction,const_Color3B_color)":{
"prefix":"cc.DirectionLight:create(const_Vec3_direction,const_Color3B_color)",
"body":["cc.DirectionLight:create(const_Vec3_direction,const_Color3B_color)"],
"description":"create(const_Vec3_direction,const_Color3B_color)",
"scope":"source.lua"},

"cc.PointLight":{
"prefix":"cc.PointLight",
"body":["cc.PointLight"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PointLight:getRange()":{
"prefix":"cc.PointLight:getRange()",
"body":["cc.PointLight:getRange()"],
"description":"getRange()",
"scope":"source.lua"},

"cc.PointLight:setRange(float_range)":{
"prefix":"cc.PointLight:setRange(float_range)",
"body":["cc.PointLight:setRange(float_range)"],
"description":"setRange(float_range)",
"scope":"source.lua"},

"cc.PointLight:create(const_Vec3_position,const_Color3B_color,float_range)":{
"prefix":"cc.PointLight:create(const_Vec3_position,const_Color3B_color,float_range)",
"body":["cc.PointLight:create(const_Vec3_position,const_Color3B_color,float_range)"],
"description":"create(const_Vec3_position,const_Color3B_color,float_range)",
"scope":"source.lua"},

"cc.SpotLight":{
"prefix":"cc.SpotLight",
"body":["cc.SpotLight"],
"description":"cocos class",
"scope":"source.lua"},

"cc.SpotLight:getRange()":{
"prefix":"cc.SpotLight:getRange()",
"body":["cc.SpotLight:getRange()"],
"description":"getRange()",
"scope":"source.lua"},

"cc.SpotLight:setDirection(const_Vec3_dir)":{
"prefix":"cc.SpotLight:setDirection(const_Vec3_dir)",
"body":["cc.SpotLight:setDirection(const_Vec3_dir)"],
"description":"setDirection(const_Vec3_dir)",
"scope":"source.lua"},

"cc.SpotLight:getCosInnerAngle()":{
"prefix":"cc.SpotLight:getCosInnerAngle()",
"body":["cc.SpotLight:getCosInnerAngle()"],
"description":"getCosInnerAngle()",
"scope":"source.lua"},

"cc.SpotLight:getOuterAngle()":{
"prefix":"cc.SpotLight:getOuterAngle()",
"body":["cc.SpotLight:getOuterAngle()"],
"description":"getOuterAngle()",
"scope":"source.lua"},

"cc.SpotLight:getInnerAngle()":{
"prefix":"cc.SpotLight:getInnerAngle()",
"body":["cc.SpotLight:getInnerAngle()"],
"description":"getInnerAngle()",
"scope":"source.lua"},

"cc.SpotLight:getDirection()":{
"prefix":"cc.SpotLight:getDirection()",
"body":["cc.SpotLight:getDirection()"],
"description":"getDirection()",
"scope":"source.lua"},

"cc.SpotLight:getCosOuterAngle()":{
"prefix":"cc.SpotLight:getCosOuterAngle()",
"body":["cc.SpotLight:getCosOuterAngle()"],
"description":"getCosOuterAngle()",
"scope":"source.lua"},

"cc.SpotLight:setOuterAngle(float_outerAngle)":{
"prefix":"cc.SpotLight:setOuterAngle(float_outerAngle)",
"body":["cc.SpotLight:setOuterAngle(float_outerAngle)"],
"description":"setOuterAngle(float_outerAngle)",
"scope":"source.lua"},

"cc.SpotLight:setInnerAngle(float_angle)":{
"prefix":"cc.SpotLight:setInnerAngle(float_angle)",
"body":["cc.SpotLight:setInnerAngle(float_angle)"],
"description":"setInnerAngle(float_angle)",
"scope":"source.lua"},

"cc.SpotLight:getDirectionInWorld()":{
"prefix":"cc.SpotLight:getDirectionInWorld()",
"body":["cc.SpotLight:getDirectionInWorld()"],
"description":"getDirectionInWorld()",
"scope":"source.lua"},

"cc.SpotLight:setRange(float_range)":{
"prefix":"cc.SpotLight:setRange(float_range)",
"body":["cc.SpotLight:setRange(float_range)"],
"description":"setRange(float_range)",
"scope":"source.lua"},

"cc.SpotLight:create(const_Vec3_direction,const_Vec3_position,const_Color3B_color,float_innerAngle,float_outerAngle,float_range)":{
"prefix":"cc.SpotLight:create(const_Vec3_direction,const_Vec3_position,const_Color3B_color,float_innerAngle,float_outerAngle,float_range)",
"body":["cc.SpotLight:create(const_Vec3_direction,const_Vec3_position,const_Color3B_color,float_innerAngle,float_outerAngle,float_range)"],
"description":"create(const_Vec3_direction,const_Vec3_position,const_Color3B_color,float_innerAngle,float_outerAngle,float_range)",
"scope":"source.lua"},

"cc.AmbientLight":{
"prefix":"cc.AmbientLight",
"body":["cc.AmbientLight"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AmbientLight:create(const_Color3B_color)":{
"prefix":"cc.AmbientLight:create(const_Color3B_color)",
"body":["cc.AmbientLight:create(const_Color3B_color)"],
"description":"create(const_Color3B_color)",
"scope":"source.lua"},

"cc.GLProgram":{
"prefix":"cc.GLProgram",
"body":["cc.GLProgram"],
"description":"cocos class",
"scope":"source.lua"},

"cc.GLProgram:getFragmentShaderLog()":{
"prefix":"cc.GLProgram:getFragmentShaderLog()",
"body":["cc.GLProgram:getFragmentShaderLog()"],
"description":"getFragmentShaderLog()",
"scope":"source.lua"},

"cc.GLProgram:initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray)":{
"prefix":"cc.GLProgram:initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray)",
"body":["cc.GLProgram:initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray)"],
"description":"initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray)",
"scope":"source.lua"},

"cc.GLProgram:initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeDefines)":{
"prefix":"cc.GLProgram:initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeDefines)",
"body":["cc.GLProgram:initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeDefines)"],
"description":"initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeDefines)",
"scope":"source.lua"},

"cc.GLProgram:initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)":{
"prefix":"cc.GLProgram:initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)",
"body":["cc.GLProgram:initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)"],
"description":"initWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)",
"scope":"source.lua"},

"cc.GLProgram:initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename)":{
"prefix":"cc.GLProgram:initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename)",
"body":["cc.GLProgram:initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename)"],
"description":"initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename)",
"scope":"source.lua"},

"cc.GLProgram:initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeDefines)":{
"prefix":"cc.GLProgram:initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeDefines)",
"body":["cc.GLProgram:initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeDefines)"],
"description":"initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeDefines)",
"scope":"source.lua"},

"cc.GLProgram:initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)":{
"prefix":"cc.GLProgram:initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)",
"body":["cc.GLProgram:initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)"],
"description":"initWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)",
"scope":"source.lua"},

"cc.GLProgram:use()":{
"prefix":"cc.GLProgram:use()",
"body":["cc.GLProgram:use()"],
"description":"use()",
"scope":"source.lua"},

"cc.GLProgram:getVertexShaderLog()":{
"prefix":"cc.GLProgram:getVertexShaderLog()",
"body":["cc.GLProgram:getVertexShaderLog()"],
"description":"getVertexShaderLog()",
"scope":"source.lua"},

"cc.GLProgram:setUniformsForBuiltins(const_Mat4_modelView)":{
"prefix":"cc.GLProgram:setUniformsForBuiltins(const_Mat4_modelView)",
"body":["cc.GLProgram:setUniformsForBuiltins(const_Mat4_modelView)"],
"description":"setUniformsForBuiltins(const_Mat4_modelView)",
"scope":"source.lua"},

"cc.GLProgram:setUniformsForBuiltins()":{
"prefix":"cc.GLProgram:setUniformsForBuiltins()",
"body":["cc.GLProgram:setUniformsForBuiltins()"],
"description":"setUniformsForBuiltins()",
"scope":"source.lua"},

"cc.GLProgram:updateUniforms()":{
"prefix":"cc.GLProgram:updateUniforms()",
"body":["cc.GLProgram:updateUniforms()"],
"description":"updateUniforms()",
"scope":"source.lua"},

"cc.GLProgram:reset()":{
"prefix":"cc.GLProgram:reset()",
"body":["cc.GLProgram:reset()"],
"description":"reset()",
"scope":"source.lua"},

"cc.GLProgram:bindAttribLocation(const_std_string_attributeName,GLuint_index)":{
"prefix":"cc.GLProgram:bindAttribLocation(const_std_string_attributeName,GLuint_index)",
"body":["cc.GLProgram:bindAttribLocation(const_std_string_attributeName,GLuint_index)"],
"description":"bindAttribLocation(const_std_string_attributeName,GLuint_index)",
"scope":"source.lua"},

"cc.GLProgram:getAttribLocation(const_std_string_attributeName)":{
"prefix":"cc.GLProgram:getAttribLocation(const_std_string_attributeName)",
"body":["cc.GLProgram:getAttribLocation(const_std_string_attributeName)"],
"description":"getAttribLocation(const_std_string_attributeName)",
"scope":"source.lua"},

"cc.GLProgram:link()":{
"prefix":"cc.GLProgram:link()",
"body":["cc.GLProgram:link()"],
"description":"link()",
"scope":"source.lua"},

"cc.GLProgram:createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray)":{
"prefix":"cc.GLProgram:createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray)",
"body":["cc.GLProgram:createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray)"],
"description":"createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray)",
"scope":"source.lua"},

"cc.GLProgram:createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeDefines)":{
"prefix":"cc.GLProgram:createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeDefines)",
"body":["cc.GLProgram:createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeDefines)"],
"description":"createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeDefines)",
"scope":"source.lua"},

"cc.GLProgram:createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)":{
"prefix":"cc.GLProgram:createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)",
"body":["cc.GLProgram:createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)"],
"description":"createWithByteArrays(const_GLchar_vShaderByteArray,const_GLchar_fShaderByteArray,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)",
"scope":"source.lua"},

"cc.GLProgram:createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename)":{
"prefix":"cc.GLProgram:createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename)",
"body":["cc.GLProgram:createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename)"],
"description":"createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename)",
"scope":"source.lua"},

"cc.GLProgram:createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeDefines)":{
"prefix":"cc.GLProgram:createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeDefines)",
"body":["cc.GLProgram:createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeDefines)"],
"description":"createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeDefines)",
"scope":"source.lua"},

"cc.GLProgram:createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)":{
"prefix":"cc.GLProgram:createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)",
"body":["cc.GLProgram:createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)"],
"description":"createWithFilenames(const_std_string_vShaderFilename,const_std_string_fShaderFilename,const_std_string_compileTimeHeaders,const_std_string_compileTimeDefines)",
"scope":"source.lua"},

"cc.GLProgramCache":{
"prefix":"cc.GLProgramCache",
"body":["cc.GLProgramCache"],
"description":"cocos class",
"scope":"source.lua"},

"cc.GLProgramCache:reloadDefaultGLProgramsRelativeToLights()":{
"prefix":"cc.GLProgramCache:reloadDefaultGLProgramsRelativeToLights()",
"body":["cc.GLProgramCache:reloadDefaultGLProgramsRelativeToLights()"],
"description":"reloadDefaultGLProgramsRelativeToLights()",
"scope":"source.lua"},

"cc.GLProgramCache:addGLProgram(GLProgram_program,const_std_string_key)":{
"prefix":"cc.GLProgramCache:addGLProgram(GLProgram_program,const_std_string_key)",
"body":["cc.GLProgramCache:addGLProgram(GLProgram_program,const_std_string_key)"],
"description":"addGLProgram(GLProgram_program,const_std_string_key)",
"scope":"source.lua"},

"cc.GLProgramCache:reloadDefaultGLPrograms()":{
"prefix":"cc.GLProgramCache:reloadDefaultGLPrograms()",
"body":["cc.GLProgramCache:reloadDefaultGLPrograms()"],
"description":"reloadDefaultGLPrograms()",
"scope":"source.lua"},

"cc.GLProgramCache:loadDefaultGLPrograms()":{
"prefix":"cc.GLProgramCache:loadDefaultGLPrograms()",
"body":["cc.GLProgramCache:loadDefaultGLPrograms()"],
"description":"loadDefaultGLPrograms()",
"scope":"source.lua"},

"cc.GLProgramCache:getGLProgram(const_std_string_key)":{
"prefix":"cc.GLProgramCache:getGLProgram(const_std_string_key)",
"body":["cc.GLProgramCache:getGLProgram(const_std_string_key)"],
"description":"getGLProgram(const_std_string_key)",
"scope":"source.lua"},

"cc.GLProgramCache:destroyInstance()":{
"prefix":"cc.GLProgramCache:destroyInstance()",
"body":["cc.GLProgramCache:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"cc.GLProgramCache:getInstance()":{
"prefix":"cc.GLProgramCache:getInstance()",
"body":["cc.GLProgramCache:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"cc.RenderState":{
"prefix":"cc.RenderState",
"body":["cc.RenderState"],
"description":"cocos class",
"scope":"source.lua"},

"cc.RenderState:setTexture(Texture2D_texture)":{
"prefix":"cc.RenderState:setTexture(Texture2D_texture)",
"body":["cc.RenderState:setTexture(Texture2D_texture)"],
"description":"setTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.RenderState:getTopmost(RenderState_below)":{
"prefix":"cc.RenderState:getTopmost(RenderState_below)",
"body":["cc.RenderState:getTopmost(RenderState_below)"],
"description":"getTopmost(RenderState_below)",
"scope":"source.lua"},

"cc.RenderState:getTexture()":{
"prefix":"cc.RenderState:getTexture()",
"body":["cc.RenderState:getTexture()"],
"description":"getTexture()",
"scope":"source.lua"},

"cc.RenderState:bind(Pass_pass)":{
"prefix":"cc.RenderState:bind(Pass_pass)",
"body":["cc.RenderState:bind(Pass_pass)"],
"description":"bind(Pass_pass)",
"scope":"source.lua"},

"cc.RenderState:bind()":{
"prefix":"cc.RenderState:bind()",
"body":["cc.RenderState:bind()"],
"description":"bind()",
"scope":"source.lua"},

"cc.RenderState:getName()":{
"prefix":"cc.RenderState:getName()",
"body":["cc.RenderState:getName()"],
"description":"getName()",
"scope":"source.lua"},

"cc.RenderState:getStateBlock()":{
"prefix":"cc.RenderState:getStateBlock()",
"body":["cc.RenderState:getStateBlock()"],
"description":"getStateBlock()",
"scope":"source.lua"},

"cc.RenderState:setParent(RenderState_parent)":{
"prefix":"cc.RenderState:setParent(RenderState_parent)",
"body":["cc.RenderState:setParent(RenderState_parent)"],
"description":"setParent(RenderState_parent)",
"scope":"source.lua"},

"cc.RenderState:initialize()":{
"prefix":"cc.RenderState:initialize()",
"body":["cc.RenderState:initialize()"],
"description":"initialize()",
"scope":"source.lua"},

"cc.Pass":{
"prefix":"cc.Pass",
"body":["cc.Pass"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Pass:unbind()":{
"prefix":"cc.Pass:unbind()",
"body":["cc.Pass:unbind()"],
"description":"unbind()",
"scope":"source.lua"},

"cc.Pass:bind(const_Mat4_modelView)":{
"prefix":"cc.Pass:bind(const_Mat4_modelView)",
"body":["cc.Pass:bind(const_Mat4_modelView)"],
"description":"bind(const_Mat4_modelView)",
"scope":"source.lua"},

"cc.Pass:clone()":{
"prefix":"cc.Pass:clone()",
"body":["cc.Pass:clone()"],
"description":"clone()",
"scope":"source.lua"},

"cc.Pass:getGLProgramState()":{
"prefix":"cc.Pass:getGLProgramState()",
"body":["cc.Pass:getGLProgramState()"],
"description":"getGLProgramState()",
"scope":"source.lua"},

"cc.Pass:getVertexAttributeBinding()":{
"prefix":"cc.Pass:getVertexAttributeBinding()",
"body":["cc.Pass:getVertexAttributeBinding()"],
"description":"getVertexAttributeBinding()",
"scope":"source.lua"},

"cc.Pass:getHash()":{
"prefix":"cc.Pass:getHash()",
"body":["cc.Pass:getHash()"],
"description":"getHash()",
"scope":"source.lua"},

"cc.Pass:setVertexAttribBinding(VertexAttribBinding_binding)":{
"prefix":"cc.Pass:setVertexAttribBinding(VertexAttribBinding_binding)",
"body":["cc.Pass:setVertexAttribBinding(VertexAttribBinding_binding)"],
"description":"setVertexAttribBinding(VertexAttribBinding_binding)",
"scope":"source.lua"},

"cc.Pass:create(Technique_parent)":{
"prefix":"cc.Pass:create(Technique_parent)",
"body":["cc.Pass:create(Technique_parent)"],
"description":"create(Technique_parent)",
"scope":"source.lua"},

"cc.Pass:createWithGLProgramState(Technique_parent,GLProgramState_programState)":{
"prefix":"cc.Pass:createWithGLProgramState(Technique_parent,GLProgramState_programState)",
"body":["cc.Pass:createWithGLProgramState(Technique_parent,GLProgramState_programState)"],
"description":"createWithGLProgramState(Technique_parent,GLProgramState_programState)",
"scope":"source.lua"},

"cc.Technique":{
"prefix":"cc.Technique",
"body":["cc.Technique"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Technique:getPassCount()":{
"prefix":"cc.Technique:getPassCount()",
"body":["cc.Technique:getPassCount()"],
"description":"getPassCount()",
"scope":"source.lua"},

"cc.Technique:clone()":{
"prefix":"cc.Technique:clone()",
"body":["cc.Technique:clone()"],
"description":"clone()",
"scope":"source.lua"},

"cc.Technique:addPass(Pass_pass)":{
"prefix":"cc.Technique:addPass(Pass_pass)",
"body":["cc.Technique:addPass(Pass_pass)"],
"description":"addPass(Pass_pass)",
"scope":"source.lua"},

"cc.Technique:getPasses()":{
"prefix":"cc.Technique:getPasses()",
"body":["cc.Technique:getPasses()"],
"description":"getPasses()",
"scope":"source.lua"},

"cc.Technique:getName()":{
"prefix":"cc.Technique:getName()",
"body":["cc.Technique:getName()"],
"description":"getName()",
"scope":"source.lua"},

"cc.Technique:getPassByIndex(ssize_t_index)":{
"prefix":"cc.Technique:getPassByIndex(ssize_t_index)",
"body":["cc.Technique:getPassByIndex(ssize_t_index)"],
"description":"getPassByIndex(ssize_t_index)",
"scope":"source.lua"},

"cc.Technique:create(Material_parent)":{
"prefix":"cc.Technique:create(Material_parent)",
"body":["cc.Technique:create(Material_parent)"],
"description":"create(Material_parent)",
"scope":"source.lua"},

"cc.Technique:createWithGLProgramState(Material_parent,GLProgramState_state)":{
"prefix":"cc.Technique:createWithGLProgramState(Material_parent,GLProgramState_state)",
"body":["cc.Technique:createWithGLProgramState(Material_parent,GLProgramState_state)"],
"description":"createWithGLProgramState(Material_parent,GLProgramState_state)",
"scope":"source.lua"},

"cc.Material":{
"prefix":"cc.Material",
"body":["cc.Material"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Material:clone()":{
"prefix":"cc.Material:clone()",
"body":["cc.Material:clone()"],
"description":"clone()",
"scope":"source.lua"},

"cc.Material:getTechniqueCount()":{
"prefix":"cc.Material:getTechniqueCount()",
"body":["cc.Material:getTechniqueCount()"],
"description":"getTechniqueCount()",
"scope":"source.lua"},

"cc.Material:setName(const_std_string_name)":{
"prefix":"cc.Material:setName(const_std_string_name)",
"body":["cc.Material:setName(const_std_string_name)"],
"description":"setName(const_std_string_name)",
"scope":"source.lua"},

"cc.Material:getTechniqueByIndex(ssize_t_index)":{
"prefix":"cc.Material:getTechniqueByIndex(ssize_t_index)",
"body":["cc.Material:getTechniqueByIndex(ssize_t_index)"],
"description":"getTechniqueByIndex(ssize_t_index)",
"scope":"source.lua"},

"cc.Material:getName()":{
"prefix":"cc.Material:getName()",
"body":["cc.Material:getName()"],
"description":"getName()",
"scope":"source.lua"},

"cc.Material:getTechniques()":{
"prefix":"cc.Material:getTechniques()",
"body":["cc.Material:getTechniques()"],
"description":"getTechniques()",
"scope":"source.lua"},

"cc.Material:setTechnique(const_std_string_techniqueName)":{
"prefix":"cc.Material:setTechnique(const_std_string_techniqueName)",
"body":["cc.Material:setTechnique(const_std_string_techniqueName)"],
"description":"setTechnique(const_std_string_techniqueName)",
"scope":"source.lua"},

"cc.Material:getTechniqueByName(const_std_string_name)":{
"prefix":"cc.Material:getTechniqueByName(const_std_string_name)",
"body":["cc.Material:getTechniqueByName(const_std_string_name)"],
"description":"getTechniqueByName(const_std_string_name)",
"scope":"source.lua"},

"cc.Material:addTechnique(Technique_technique)":{
"prefix":"cc.Material:addTechnique(Technique_technique)",
"body":["cc.Material:addTechnique(Technique_technique)"],
"description":"addTechnique(Technique_technique)",
"scope":"source.lua"},

"cc.Material:getTechnique()":{
"prefix":"cc.Material:getTechnique()",
"body":["cc.Material:getTechnique()"],
"description":"getTechnique()",
"scope":"source.lua"},

"cc.Material:createWithFilename(const_std_string_path)":{
"prefix":"cc.Material:createWithFilename(const_std_string_path)",
"body":["cc.Material:createWithFilename(const_std_string_path)"],
"description":"createWithFilename(const_std_string_path)",
"scope":"source.lua"},

"cc.Material:createWithGLStateProgram(GLProgramState_programState)":{
"prefix":"cc.Material:createWithGLStateProgram(GLProgramState_programState)",
"body":["cc.Material:createWithGLStateProgram(GLProgramState_programState)"],
"description":"createWithGLStateProgram(GLProgramState_programState)",
"scope":"source.lua"},

"cc.Material:createWithProperties(Properties_materialProperties)":{
"prefix":"cc.Material:createWithProperties(Properties_materialProperties)",
"body":["cc.Material:createWithProperties(Properties_materialProperties)"],
"description":"createWithProperties(Properties_materialProperties)",
"scope":"source.lua"},

"cc.TextureCache":{
"prefix":"cc.TextureCache",
"body":["cc.TextureCache"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TextureCache:reloadTexture(const_std_string_fileName)":{
"prefix":"cc.TextureCache:reloadTexture(const_std_string_fileName)",
"body":["cc.TextureCache:reloadTexture(const_std_string_fileName)"],
"description":"reloadTexture(const_std_string_fileName)",
"scope":"source.lua"},

"cc.TextureCache:unbindAllImageAsync()":{
"prefix":"cc.TextureCache:unbindAllImageAsync()",
"body":["cc.TextureCache:unbindAllImageAsync()"],
"description":"unbindAllImageAsync()",
"scope":"source.lua"},

"cc.TextureCache:removeTextureForKey(const_std_string_key)":{
"prefix":"cc.TextureCache:removeTextureForKey(const_std_string_key)",
"body":["cc.TextureCache:removeTextureForKey(const_std_string_key)"],
"description":"removeTextureForKey(const_std_string_key)",
"scope":"source.lua"},

"cc.TextureCache:removeAllTextures()":{
"prefix":"cc.TextureCache:removeAllTextures()",
"body":["cc.TextureCache:removeAllTextures()"],
"description":"removeAllTextures()",
"scope":"source.lua"},

"cc.TextureCache:getDescription()":{
"prefix":"cc.TextureCache:getDescription()",
"body":["cc.TextureCache:getDescription()"],
"description":"getDescription()",
"scope":"source.lua"},

"cc.TextureCache:getCachedTextureInfo()":{
"prefix":"cc.TextureCache:getCachedTextureInfo()",
"body":["cc.TextureCache:getCachedTextureInfo()"],
"description":"getCachedTextureInfo()",
"scope":"source.lua"},

"cc.TextureCache:addImage(const_std_string_filepath)":{
"prefix":"cc.TextureCache:addImage(const_std_string_filepath)",
"body":["cc.TextureCache:addImage(const_std_string_filepath)"],
"description":"addImage(const_std_string_filepath)",
"scope":"source.lua"},

"cc.TextureCache:addImage(Image_image,const_std_string_key)":{
"prefix":"cc.TextureCache:addImage(Image_image,const_std_string_key)",
"body":["cc.TextureCache:addImage(Image_image,const_std_string_key)"],
"description":"addImage(Image_image,const_std_string_key)",
"scope":"source.lua"},

"cc.TextureCache:unbindImageAsync(const_std_string_filename)":{
"prefix":"cc.TextureCache:unbindImageAsync(const_std_string_filename)",
"body":["cc.TextureCache:unbindImageAsync(const_std_string_filename)"],
"description":"unbindImageAsync(const_std_string_filename)",
"scope":"source.lua"},

"cc.TextureCache:getTextureForKey(const_std_string_key)":{
"prefix":"cc.TextureCache:getTextureForKey(const_std_string_key)",
"body":["cc.TextureCache:getTextureForKey(const_std_string_key)"],
"description":"getTextureForKey(const_std_string_key)",
"scope":"source.lua"},

"cc.TextureCache:getTextureFilePath(Texture2D_texture)":{
"prefix":"cc.TextureCache:getTextureFilePath(Texture2D_texture)",
"body":["cc.TextureCache:getTextureFilePath(Texture2D_texture)"],
"description":"getTextureFilePath(Texture2D_texture)",
"scope":"source.lua"},

"cc.TextureCache:renameTextureWithKey(const_std_string_srcName,const_std_string_dstName)":{
"prefix":"cc.TextureCache:renameTextureWithKey(const_std_string_srcName,const_std_string_dstName)",
"body":["cc.TextureCache:renameTextureWithKey(const_std_string_srcName,const_std_string_dstName)"],
"description":"renameTextureWithKey(const_std_string_srcName,const_std_string_dstName)",
"scope":"source.lua"},

"cc.TextureCache:removeUnusedTextures()":{
"prefix":"cc.TextureCache:removeUnusedTextures()",
"body":["cc.TextureCache:removeUnusedTextures()"],
"description":"removeUnusedTextures()",
"scope":"source.lua"},

"cc.TextureCache:removeTexture(Texture2D_texture)":{
"prefix":"cc.TextureCache:removeTexture(Texture2D_texture)",
"body":["cc.TextureCache:removeTexture(Texture2D_texture)"],
"description":"removeTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.TextureCache:waitForQuit()":{
"prefix":"cc.TextureCache:waitForQuit()",
"body":["cc.TextureCache:waitForQuit()"],
"description":"waitForQuit()",
"scope":"source.lua"},

"cc.TextureCache:setETC1AlphaFileSuffix(const_std_string_suffix)":{
"prefix":"cc.TextureCache:setETC1AlphaFileSuffix(const_std_string_suffix)",
"body":["cc.TextureCache:setETC1AlphaFileSuffix(const_std_string_suffix)"],
"description":"setETC1AlphaFileSuffix(const_std_string_suffix)",
"scope":"source.lua"},

"cc.TextureCache:getETC1AlphaFileSuffix()":{
"prefix":"cc.TextureCache:getETC1AlphaFileSuffix()",
"body":["cc.TextureCache:getETC1AlphaFileSuffix()"],
"description":"getETC1AlphaFileSuffix()",
"scope":"source.lua"},

"cc.Device":{
"prefix":"cc.Device",
"body":["cc.Device"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Device:setAccelerometerEnabled(bool_isEnabled)":{
"prefix":"cc.Device:setAccelerometerEnabled(bool_isEnabled)",
"body":["cc.Device:setAccelerometerEnabled(bool_isEnabled)"],
"description":"setAccelerometerEnabled(bool_isEnabled)",
"scope":"source.lua"},

"cc.Device:setAccelerometerInterval(float_interval)":{
"prefix":"cc.Device:setAccelerometerInterval(float_interval)",
"body":["cc.Device:setAccelerometerInterval(float_interval)"],
"description":"setAccelerometerInterval(float_interval)",
"scope":"source.lua"},

"cc.Device:setKeepScreenOn(bool_keepScreenOn)":{
"prefix":"cc.Device:setKeepScreenOn(bool_keepScreenOn)",
"body":["cc.Device:setKeepScreenOn(bool_keepScreenOn)"],
"description":"setKeepScreenOn(bool_keepScreenOn)",
"scope":"source.lua"},

"cc.Device:vibrate(float_duration)":{
"prefix":"cc.Device:vibrate(float_duration)",
"body":["cc.Device:vibrate(float_duration)"],
"description":"vibrate(float_duration)",
"scope":"source.lua"},

"cc.Device:getDPI()":{
"prefix":"cc.Device:getDPI()",
"body":["cc.Device:getDPI()"],
"description":"getDPI()",
"scope":"source.lua"},

"cc.Application":{
"prefix":"cc.Application",
"body":["cc.Application"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Application:getTargetPlatform()":{
"prefix":"cc.Application:getTargetPlatform()",
"body":["cc.Application:getTargetPlatform()"],
"description":"getTargetPlatform()",
"scope":"source.lua"},

"cc.Application:getCurrentLanguage()":{
"prefix":"cc.Application:getCurrentLanguage()",
"body":["cc.Application:getCurrentLanguage()"],
"description":"getCurrentLanguage()",
"scope":"source.lua"},

"cc.Application:getCurrentLanguageCode()":{
"prefix":"cc.Application:getCurrentLanguageCode()",
"body":["cc.Application:getCurrentLanguageCode()"],
"description":"getCurrentLanguageCode()",
"scope":"source.lua"},

"cc.Application:openURL(const_std_string_url)":{
"prefix":"cc.Application:openURL(const_std_string_url)",
"body":["cc.Application:openURL(const_std_string_url)"],
"description":"openURL(const_std_string_url)",
"scope":"source.lua"},

"cc.Application:getVersion()":{
"prefix":"cc.Application:getVersion()",
"body":["cc.Application:getVersion()"],
"description":"getVersion()",
"scope":"source.lua"},

"cc.Application:setAnimationInterval(float_interval)":{
"prefix":"cc.Application:setAnimationInterval(float_interval)",
"body":["cc.Application:setAnimationInterval(float_interval)"],
"description":"setAnimationInterval(float_interval)",
"scope":"source.lua"},

"cc.Application:getInstance()":{
"prefix":"cc.Application:getInstance()",
"body":["cc.Application:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"cc.GLViewImpl":{
"prefix":"cc.GLViewImpl",
"body":["cc.GLViewImpl"],
"description":"cocos class",
"scope":"source.lua"},

"cc.GLViewImpl:createWithRect(const_std_string_viewName,Rect_rect,float_frameZoomFactor)":{
"prefix":"cc.GLViewImpl:createWithRect(const_std_string_viewName,Rect_rect,float_frameZoomFactor)",
"body":["cc.GLViewImpl:createWithRect(const_std_string_viewName,Rect_rect,float_frameZoomFactor)"],
"description":"createWithRect(const_std_string_viewName,Rect_rect,float_frameZoomFactor)",
"scope":"source.lua"},

"cc.GLViewImpl:create(const_std_string_viewname)":{
"prefix":"cc.GLViewImpl:create(const_std_string_viewname)",
"body":["cc.GLViewImpl:create(const_std_string_viewname)"],
"description":"create(const_std_string_viewname)",
"scope":"source.lua"},

"cc.GLViewImpl:createWithFullScreen(const_std_string_viewName)":{
"prefix":"cc.GLViewImpl:createWithFullScreen(const_std_string_viewName)",
"body":["cc.GLViewImpl:createWithFullScreen(const_std_string_viewName)"],
"description":"createWithFullScreen(const_std_string_viewName)",
"scope":"source.lua"},

"cc.AnimationCache":{
"prefix":"cc.AnimationCache",
"body":["cc.AnimationCache"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AnimationCache:getAnimation(const_std_string_name)":{
"prefix":"cc.AnimationCache:getAnimation(const_std_string_name)",
"body":["cc.AnimationCache:getAnimation(const_std_string_name)"],
"description":"getAnimation(const_std_string_name)",
"scope":"source.lua"},

"cc.AnimationCache:addAnimation(Animation_animation,const_std_string_name)":{
"prefix":"cc.AnimationCache:addAnimation(Animation_animation,const_std_string_name)",
"body":["cc.AnimationCache:addAnimation(Animation_animation,const_std_string_name)"],
"description":"addAnimation(Animation_animation,const_std_string_name)",
"scope":"source.lua"},

"cc.AnimationCache:init()":{
"prefix":"cc.AnimationCache:init()",
"body":["cc.AnimationCache:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.AnimationCache:addAnimationsWithDictionary(const_ValueMap_dictionary,const_std_string_plist)":{
"prefix":"cc.AnimationCache:addAnimationsWithDictionary(const_ValueMap_dictionary,const_std_string_plist)",
"body":["cc.AnimationCache:addAnimationsWithDictionary(const_ValueMap_dictionary,const_std_string_plist)"],
"description":"addAnimationsWithDictionary(const_ValueMap_dictionary,const_std_string_plist)",
"scope":"source.lua"},

"cc.AnimationCache:removeAnimation(const_std_string_name)":{
"prefix":"cc.AnimationCache:removeAnimation(const_std_string_name)",
"body":["cc.AnimationCache:removeAnimation(const_std_string_name)"],
"description":"removeAnimation(const_std_string_name)",
"scope":"source.lua"},

"cc.AnimationCache:destroyInstance()":{
"prefix":"cc.AnimationCache:destroyInstance()",
"body":["cc.AnimationCache:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"cc.AnimationCache:getInstance()":{
"prefix":"cc.AnimationCache:getInstance()",
"body":["cc.AnimationCache:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"cc.SpriteBatchNode":{
"prefix":"cc.SpriteBatchNode",
"body":["cc.SpriteBatchNode"],
"description":"cocos class",
"scope":"source.lua"},

"cc.SpriteBatchNode:appendChild(Sprite_sprite)":{
"prefix":"cc.SpriteBatchNode:appendChild(Sprite_sprite)",
"body":["cc.SpriteBatchNode:appendChild(Sprite_sprite)"],
"description":"appendChild(Sprite_sprite)",
"scope":"source.lua"},

"cc.SpriteBatchNode:reorderBatch(bool_reorder)":{
"prefix":"cc.SpriteBatchNode:reorderBatch(bool_reorder)",
"body":["cc.SpriteBatchNode:reorderBatch(bool_reorder)"],
"description":"reorderBatch(bool_reorder)",
"scope":"source.lua"},

"cc.SpriteBatchNode:getTexture()":{
"prefix":"cc.SpriteBatchNode:getTexture()",
"body":["cc.SpriteBatchNode:getTexture()"],
"description":"getTexture()",
"scope":"source.lua"},

"cc.SpriteBatchNode:setTexture(Texture2D_texture)":{
"prefix":"cc.SpriteBatchNode:setTexture(Texture2D_texture)",
"body":["cc.SpriteBatchNode:setTexture(Texture2D_texture)"],
"description":"setTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.SpriteBatchNode:removeChildAtIndex(ssize_t_index,bool_doCleanup)":{
"prefix":"cc.SpriteBatchNode:removeChildAtIndex(ssize_t_index,bool_doCleanup)",
"body":["cc.SpriteBatchNode:removeChildAtIndex(ssize_t_index,bool_doCleanup)"],
"description":"removeChildAtIndex(ssize_t_index,bool_doCleanup)",
"scope":"source.lua"},

"cc.SpriteBatchNode:removeSpriteFromAtlas(Sprite_sprite)":{
"prefix":"cc.SpriteBatchNode:removeSpriteFromAtlas(Sprite_sprite)",
"body":["cc.SpriteBatchNode:removeSpriteFromAtlas(Sprite_sprite)"],
"description":"removeSpriteFromAtlas(Sprite_sprite)",
"scope":"source.lua"},

"cc.SpriteBatchNode:addSpriteWithoutQuad(Sprite_child,int_z,int_aTag)":{
"prefix":"cc.SpriteBatchNode:addSpriteWithoutQuad(Sprite_child,int_z,int_aTag)",
"body":["cc.SpriteBatchNode:addSpriteWithoutQuad(Sprite_child,int_z,int_aTag)"],
"description":"addSpriteWithoutQuad(Sprite_child,int_z,int_aTag)",
"scope":"source.lua"},

"cc.SpriteBatchNode:atlasIndexForChild(Sprite_sprite,int_z)":{
"prefix":"cc.SpriteBatchNode:atlasIndexForChild(Sprite_sprite,int_z)",
"body":["cc.SpriteBatchNode:atlasIndexForChild(Sprite_sprite,int_z)"],
"description":"atlasIndexForChild(Sprite_sprite,int_z)",
"scope":"source.lua"},

"cc.SpriteBatchNode:increaseAtlasCapacity()":{
"prefix":"cc.SpriteBatchNode:increaseAtlasCapacity()",
"body":["cc.SpriteBatchNode:increaseAtlasCapacity()"],
"description":"increaseAtlasCapacity()",
"scope":"source.lua"},

"cc.SpriteBatchNode:lowestAtlasIndexInChild(Sprite_sprite)":{
"prefix":"cc.SpriteBatchNode:lowestAtlasIndexInChild(Sprite_sprite)",
"body":["cc.SpriteBatchNode:lowestAtlasIndexInChild(Sprite_sprite)"],
"description":"lowestAtlasIndexInChild(Sprite_sprite)",
"scope":"source.lua"},

"cc.SpriteBatchNode:getBlendFunc()":{
"prefix":"cc.SpriteBatchNode:getBlendFunc()",
"body":["cc.SpriteBatchNode:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.SpriteBatchNode:initWithTexture(Texture2D_tex,ssize_t_capacity)":{
"prefix":"cc.SpriteBatchNode:initWithTexture(Texture2D_tex,ssize_t_capacity)",
"body":["cc.SpriteBatchNode:initWithTexture(Texture2D_tex,ssize_t_capacity)"],
"description":"initWithTexture(Texture2D_tex,ssize_t_capacity)",
"scope":"source.lua"},

"cc.SpriteBatchNode:setTextureAtlas(TextureAtlas_textureAtlas)":{
"prefix":"cc.SpriteBatchNode:setTextureAtlas(TextureAtlas_textureAtlas)",
"body":["cc.SpriteBatchNode:setTextureAtlas(TextureAtlas_textureAtlas)"],
"description":"setTextureAtlas(TextureAtlas_textureAtlas)",
"scope":"source.lua"},

"cc.SpriteBatchNode:reserveCapacity(ssize_t_newCapacity)":{
"prefix":"cc.SpriteBatchNode:reserveCapacity(ssize_t_newCapacity)",
"body":["cc.SpriteBatchNode:reserveCapacity(ssize_t_newCapacity)"],
"description":"reserveCapacity(ssize_t_newCapacity)",
"scope":"source.lua"},

"cc.SpriteBatchNode:removeAllChildrenWithCleanup(bool_cleanup)":{
"prefix":"cc.SpriteBatchNode:removeAllChildrenWithCleanup(bool_cleanup)",
"body":["cc.SpriteBatchNode:removeAllChildrenWithCleanup(bool_cleanup)"],
"description":"removeAllChildrenWithCleanup(bool_cleanup)",
"scope":"source.lua"},

"cc.SpriteBatchNode:insertQuadFromSprite(Sprite_sprite,ssize_t_index)":{
"prefix":"cc.SpriteBatchNode:insertQuadFromSprite(Sprite_sprite,ssize_t_index)",
"body":["cc.SpriteBatchNode:insertQuadFromSprite(Sprite_sprite,ssize_t_index)"],
"description":"insertQuadFromSprite(Sprite_sprite,ssize_t_index)",
"scope":"source.lua"},

"cc.SpriteBatchNode:initWithFile(const_std_string_fileImage,ssize_t_capacity)":{
"prefix":"cc.SpriteBatchNode:initWithFile(const_std_string_fileImage,ssize_t_capacity)",
"body":["cc.SpriteBatchNode:initWithFile(const_std_string_fileImage,ssize_t_capacity)"],
"description":"initWithFile(const_std_string_fileImage,ssize_t_capacity)",
"scope":"source.lua"},

"cc.SpriteBatchNode:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.SpriteBatchNode:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.SpriteBatchNode:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.SpriteBatchNode:rebuildIndexInOrder(Sprite_parent,ssize_t_index)":{
"prefix":"cc.SpriteBatchNode:rebuildIndexInOrder(Sprite_parent,ssize_t_index)",
"body":["cc.SpriteBatchNode:rebuildIndexInOrder(Sprite_parent,ssize_t_index)"],
"description":"rebuildIndexInOrder(Sprite_parent,ssize_t_index)",
"scope":"source.lua"},

"cc.SpriteBatchNode:getTextureAtlas()":{
"prefix":"cc.SpriteBatchNode:getTextureAtlas()",
"body":["cc.SpriteBatchNode:getTextureAtlas()"],
"description":"getTextureAtlas()",
"scope":"source.lua"},

"cc.SpriteBatchNode:highestAtlasIndexInChild(Sprite_sprite)":{
"prefix":"cc.SpriteBatchNode:highestAtlasIndexInChild(Sprite_sprite)",
"body":["cc.SpriteBatchNode:highestAtlasIndexInChild(Sprite_sprite)"],
"description":"highestAtlasIndexInChild(Sprite_sprite)",
"scope":"source.lua"},

"cc.SpriteBatchNode:create(const_std_string_fileImage,ssize_t_capacity)":{
"prefix":"cc.SpriteBatchNode:create(const_std_string_fileImage,ssize_t_capacity)",
"body":["cc.SpriteBatchNode:create(const_std_string_fileImage,ssize_t_capacity)"],
"description":"create(const_std_string_fileImage,ssize_t_capacity)",
"scope":"source.lua"},

"cc.SpriteBatchNode:createWithTexture(Texture2D_tex,ssize_t_capacity)":{
"prefix":"cc.SpriteBatchNode:createWithTexture(Texture2D_tex,ssize_t_capacity)",
"body":["cc.SpriteBatchNode:createWithTexture(Texture2D_tex,ssize_t_capacity)"],
"description":"createWithTexture(Texture2D_tex,ssize_t_capacity)",
"scope":"source.lua"},

"cc.SpriteFrameCache":{
"prefix":"cc.SpriteFrameCache",
"body":["cc.SpriteFrameCache"],
"description":"cocos class",
"scope":"source.lua"},

"cc.SpriteFrameCache:reloadTexture(const_std_string_plist)":{
"prefix":"cc.SpriteFrameCache:reloadTexture(const_std_string_plist)",
"body":["cc.SpriteFrameCache:reloadTexture(const_std_string_plist)"],
"description":"reloadTexture(const_std_string_plist)",
"scope":"source.lua"},

"cc.SpriteFrameCache:addSpriteFramesWithFileContent(const_std_string_plist_content,Texture2D_texture)":{
"prefix":"cc.SpriteFrameCache:addSpriteFramesWithFileContent(const_std_string_plist_content,Texture2D_texture)",
"body":["cc.SpriteFrameCache:addSpriteFramesWithFileContent(const_std_string_plist_content,Texture2D_texture)"],
"description":"addSpriteFramesWithFileContent(const_std_string_plist_content,Texture2D_texture)",
"scope":"source.lua"},

"cc.SpriteFrameCache:addSpriteFrame(SpriteFrame_frame,const_std_string_frameName)":{
"prefix":"cc.SpriteFrameCache:addSpriteFrame(SpriteFrame_frame,const_std_string_frameName)",
"body":["cc.SpriteFrameCache:addSpriteFrame(SpriteFrame_frame,const_std_string_frameName)"],
"description":"addSpriteFrame(SpriteFrame_frame,const_std_string_frameName)",
"scope":"source.lua"},

"cc.SpriteFrameCache:removeSpriteFramesFromFile(const_std_string_plist)":{
"prefix":"cc.SpriteFrameCache:removeSpriteFramesFromFile(const_std_string_plist)",
"body":["cc.SpriteFrameCache:removeSpriteFramesFromFile(const_std_string_plist)"],
"description":"removeSpriteFramesFromFile(const_std_string_plist)",
"scope":"source.lua"},

"cc.SpriteFrameCache:init()":{
"prefix":"cc.SpriteFrameCache:init()",
"body":["cc.SpriteFrameCache:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.SpriteFrameCache:removeSpriteFrames()":{
"prefix":"cc.SpriteFrameCache:removeSpriteFrames()",
"body":["cc.SpriteFrameCache:removeSpriteFrames()"],
"description":"removeSpriteFrames()",
"scope":"source.lua"},

"cc.SpriteFrameCache:removeUnusedSpriteFrames()":{
"prefix":"cc.SpriteFrameCache:removeUnusedSpriteFrames()",
"body":["cc.SpriteFrameCache:removeUnusedSpriteFrames()"],
"description":"removeUnusedSpriteFrames()",
"scope":"source.lua"},

"cc.SpriteFrameCache:removeSpriteFramesFromFileContent(const_std_string_plist_content)":{
"prefix":"cc.SpriteFrameCache:removeSpriteFramesFromFileContent(const_std_string_plist_content)",
"body":["cc.SpriteFrameCache:removeSpriteFramesFromFileContent(const_std_string_plist_content)"],
"description":"removeSpriteFramesFromFileContent(const_std_string_plist_content)",
"scope":"source.lua"},

"cc.SpriteFrameCache:removeSpriteFrameByName(const_std_string_name)":{
"prefix":"cc.SpriteFrameCache:removeSpriteFrameByName(const_std_string_name)",
"body":["cc.SpriteFrameCache:removeSpriteFrameByName(const_std_string_name)"],
"description":"removeSpriteFrameByName(const_std_string_name)",
"scope":"source.lua"},

"cc.SpriteFrameCache:isSpriteFramesWithFileLoaded(const_std_string_plist)":{
"prefix":"cc.SpriteFrameCache:isSpriteFramesWithFileLoaded(const_std_string_plist)",
"body":["cc.SpriteFrameCache:isSpriteFramesWithFileLoaded(const_std_string_plist)"],
"description":"isSpriteFramesWithFileLoaded(const_std_string_plist)",
"scope":"source.lua"},

"cc.SpriteFrameCache:removeSpriteFramesFromTexture(Texture2D_texture)":{
"prefix":"cc.SpriteFrameCache:removeSpriteFramesFromTexture(Texture2D_texture)",
"body":["cc.SpriteFrameCache:removeSpriteFramesFromTexture(Texture2D_texture)"],
"description":"removeSpriteFramesFromTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.SpriteFrameCache:destroyInstance()":{
"prefix":"cc.SpriteFrameCache:destroyInstance()",
"body":["cc.SpriteFrameCache:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"cc.SpriteFrameCache:getInstance()":{
"prefix":"cc.SpriteFrameCache:getInstance()",
"body":["cc.SpriteFrameCache:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"cc.ParallaxNode":{
"prefix":"cc.ParallaxNode",
"body":["cc.ParallaxNode"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParallaxNode:addChild(Node__child,int_z,const_Vec2_parallaxRatio,const_Vec2_positionOffset)":{
"prefix":"cc.ParallaxNode:addChild(Node__child,int_z,const_Vec2_parallaxRatio,const_Vec2_positionOffset)",
"body":["cc.ParallaxNode:addChild(Node__child,int_z,const_Vec2_parallaxRatio,const_Vec2_positionOffset)"],
"description":"addChild(Node__child,int_z,const_Vec2_parallaxRatio,const_Vec2_positionOffset)",
"scope":"source.lua"},

"cc.ParallaxNode:addChild(Node__child,int_zOrder,int_tag)":{
"prefix":"cc.ParallaxNode:addChild(Node__child,int_zOrder,int_tag)",
"body":["cc.ParallaxNode:addChild(Node__child,int_zOrder,int_tag)"],
"description":"addChild(Node__child,int_zOrder,int_tag)",
"scope":"source.lua"},

"cc.ParallaxNode:removeAllChildrenWithCleanup(bool_cleanup)":{
"prefix":"cc.ParallaxNode:removeAllChildrenWithCleanup(bool_cleanup)",
"body":["cc.ParallaxNode:removeAllChildrenWithCleanup(bool_cleanup)"],
"description":"removeAllChildrenWithCleanup(bool_cleanup)",
"scope":"source.lua"},

"cc.ParallaxNode:create()":{
"prefix":"cc.ParallaxNode:create()",
"body":["cc.ParallaxNode:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.TMXObjectGroup":{
"prefix":"cc.TMXObjectGroup",
"body":["cc.TMXObjectGroup"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TMXObjectGroup:setPositionOffset(const_Vec2_offset)":{
"prefix":"cc.TMXObjectGroup:setPositionOffset(const_Vec2_offset)",
"body":["cc.TMXObjectGroup:setPositionOffset(const_Vec2_offset)"],
"description":"setPositionOffset(const_Vec2_offset)",
"scope":"source.lua"},

"cc.TMXObjectGroup:getProperty(const_std_string_propertyName)":{
"prefix":"cc.TMXObjectGroup:getProperty(const_std_string_propertyName)",
"body":["cc.TMXObjectGroup:getProperty(const_std_string_propertyName)"],
"description":"getProperty(const_std_string_propertyName)",
"scope":"source.lua"},

"cc.TMXObjectGroup:getPositionOffset()":{
"prefix":"cc.TMXObjectGroup:getPositionOffset()",
"body":["cc.TMXObjectGroup:getPositionOffset()"],
"description":"getPositionOffset()",
"scope":"source.lua"},

"cc.TMXObjectGroup:getObject(const_std_string_objectName)":{
"prefix":"cc.TMXObjectGroup:getObject(const_std_string_objectName)",
"body":["cc.TMXObjectGroup:getObject(const_std_string_objectName)"],
"description":"getObject(const_std_string_objectName)",
"scope":"source.lua"},

"cc.TMXObjectGroup:getObjects()":{
"prefix":"cc.TMXObjectGroup:getObjects()",
"body":["cc.TMXObjectGroup:getObjects()"],
"description":"getObjects()",
"scope":"source.lua"},

"cc.TMXObjectGroup:setGroupName(const_std_string_groupName)":{
"prefix":"cc.TMXObjectGroup:setGroupName(const_std_string_groupName)",
"body":["cc.TMXObjectGroup:setGroupName(const_std_string_groupName)"],
"description":"setGroupName(const_std_string_groupName)",
"scope":"source.lua"},

"cc.TMXObjectGroup:getProperties()":{
"prefix":"cc.TMXObjectGroup:getProperties()",
"body":["cc.TMXObjectGroup:getProperties()"],
"description":"getProperties()",
"scope":"source.lua"},

"cc.TMXObjectGroup:getGroupName()":{
"prefix":"cc.TMXObjectGroup:getGroupName()",
"body":["cc.TMXObjectGroup:getGroupName()"],
"description":"getGroupName()",
"scope":"source.lua"},

"cc.TMXObjectGroup:setProperties(const_ValueMap_properties)":{
"prefix":"cc.TMXObjectGroup:setProperties(const_ValueMap_properties)",
"body":["cc.TMXObjectGroup:setProperties(const_ValueMap_properties)"],
"description":"setProperties(const_ValueMap_properties)",
"scope":"source.lua"},

"cc.TMXObjectGroup:setObjects(const_ValueVector_objects)":{
"prefix":"cc.TMXObjectGroup:setObjects(const_ValueVector_objects)",
"body":["cc.TMXObjectGroup:setObjects(const_ValueVector_objects)"],
"description":"setObjects(const_ValueVector_objects)",
"scope":"source.lua"},

"cc.TMXLayerInfo":{
"prefix":"cc.TMXLayerInfo",
"body":["cc.TMXLayerInfo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TMXLayerInfo:setProperties(ValueMap_properties)":{
"prefix":"cc.TMXLayerInfo:setProperties(ValueMap_properties)",
"body":["cc.TMXLayerInfo:setProperties(ValueMap_properties)"],
"description":"setProperties(ValueMap_properties)",
"scope":"source.lua"},

"cc.TMXLayerInfo:getProperties()":{
"prefix":"cc.TMXLayerInfo:getProperties()",
"body":["cc.TMXLayerInfo:getProperties()"],
"description":"getProperties()",
"scope":"source.lua"},

"cc.TMXTilesetInfo":{
"prefix":"cc.TMXTilesetInfo",
"body":["cc.TMXTilesetInfo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TMXTilesetInfo:getRectForGID(uint32_t_gid)":{
"prefix":"cc.TMXTilesetInfo:getRectForGID(uint32_t_gid)",
"body":["cc.TMXTilesetInfo:getRectForGID(uint32_t_gid)"],
"description":"getRectForGID(uint32_t_gid)",
"scope":"source.lua"},

"cc.TMXMapInfo":{
"prefix":"cc.TMXMapInfo",
"body":["cc.TMXMapInfo"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TMXMapInfo:setCurrentString(const_std_string_currentString)":{
"prefix":"cc.TMXMapInfo:setCurrentString(const_std_string_currentString)",
"body":["cc.TMXMapInfo:setCurrentString(const_std_string_currentString)"],
"description":"setCurrentString(const_std_string_currentString)",
"scope":"source.lua"},

"cc.TMXMapInfo:getHexSideLength()":{
"prefix":"cc.TMXMapInfo:getHexSideLength()",
"body":["cc.TMXMapInfo:getHexSideLength()"],
"description":"getHexSideLength()",
"scope":"source.lua"},

"cc.TMXMapInfo:setTileSize(const_Size_tileSize)":{
"prefix":"cc.TMXMapInfo:setTileSize(const_Size_tileSize)",
"body":["cc.TMXMapInfo:setTileSize(const_Size_tileSize)"],
"description":"setTileSize(const_Size_tileSize)",
"scope":"source.lua"},

"cc.TMXMapInfo:initWithTMXFile(const_std_string_tmxFile)":{
"prefix":"cc.TMXMapInfo:initWithTMXFile(const_std_string_tmxFile)",
"body":["cc.TMXMapInfo:initWithTMXFile(const_std_string_tmxFile)"],
"description":"initWithTMXFile(const_std_string_tmxFile)",
"scope":"source.lua"},

"cc.TMXMapInfo:getOrientation()":{
"prefix":"cc.TMXMapInfo:getOrientation()",
"body":["cc.TMXMapInfo:getOrientation()"],
"description":"getOrientation()",
"scope":"source.lua"},

"cc.TMXMapInfo:setObjectGroups()":{
"prefix":"cc.TMXMapInfo:setObjectGroups()",
"body":["cc.TMXMapInfo:setObjectGroups()"],
"description":"setObjectGroups()",
"scope":"source.lua"},

"cc.TMXMapInfo:setLayers()":{
"prefix":"cc.TMXMapInfo:setLayers()",
"body":["cc.TMXMapInfo:setLayers()"],
"description":"setLayers()",
"scope":"source.lua"},

"cc.TMXMapInfo:parseXMLFile(const_std_string_xmlFilename)":{
"prefix":"cc.TMXMapInfo:parseXMLFile(const_std_string_xmlFilename)",
"body":["cc.TMXMapInfo:parseXMLFile(const_std_string_xmlFilename)"],
"description":"parseXMLFile(const_std_string_xmlFilename)",
"scope":"source.lua"},

"cc.TMXMapInfo:getParentElement()":{
"prefix":"cc.TMXMapInfo:getParentElement()",
"body":["cc.TMXMapInfo:getParentElement()"],
"description":"getParentElement()",
"scope":"source.lua"},

"cc.TMXMapInfo:setTMXFileName(const_std_string_fileName)":{
"prefix":"cc.TMXMapInfo:setTMXFileName(const_std_string_fileName)",
"body":["cc.TMXMapInfo:setTMXFileName(const_std_string_fileName)"],
"description":"setTMXFileName(const_std_string_fileName)",
"scope":"source.lua"},

"cc.TMXMapInfo:parseXMLString(const_std_string_xmlString)":{
"prefix":"cc.TMXMapInfo:parseXMLString(const_std_string_xmlString)",
"body":["cc.TMXMapInfo:parseXMLString(const_std_string_xmlString)"],
"description":"parseXMLString(const_std_string_xmlString)",
"scope":"source.lua"},

"cc.TMXMapInfo:getLayers()":{
"prefix":"cc.TMXMapInfo:getLayers()",
"body":["cc.TMXMapInfo:getLayers()"],
"description":"getLayers()",
"scope":"source.lua"},

"cc.TMXMapInfo:getStaggerAxis()":{
"prefix":"cc.TMXMapInfo:getStaggerAxis()",
"body":["cc.TMXMapInfo:getStaggerAxis()"],
"description":"getStaggerAxis()",
"scope":"source.lua"},

"cc.TMXMapInfo:setHexSideLength(int_hexSideLength)":{
"prefix":"cc.TMXMapInfo:setHexSideLength(int_hexSideLength)",
"body":["cc.TMXMapInfo:setHexSideLength(int_hexSideLength)"],
"description":"setHexSideLength(int_hexSideLength)",
"scope":"source.lua"},

"cc.TMXMapInfo:getTilesets()":{
"prefix":"cc.TMXMapInfo:getTilesets()",
"body":["cc.TMXMapInfo:getTilesets()"],
"description":"getTilesets()",
"scope":"source.lua"},

"cc.TMXMapInfo:getParentGID()":{
"prefix":"cc.TMXMapInfo:getParentGID()",
"body":["cc.TMXMapInfo:getParentGID()"],
"description":"getParentGID()",
"scope":"source.lua"},

"cc.TMXMapInfo:setParentElement(int_element)":{
"prefix":"cc.TMXMapInfo:setParentElement(int_element)",
"body":["cc.TMXMapInfo:setParentElement(int_element)"],
"description":"setParentElement(int_element)",
"scope":"source.lua"},

"cc.TMXMapInfo:initWithXML(const_std_string_tmxString,const_std_string_resourcePath)":{
"prefix":"cc.TMXMapInfo:initWithXML(const_std_string_tmxString,const_std_string_resourcePath)",
"body":["cc.TMXMapInfo:initWithXML(const_std_string_tmxString,const_std_string_resourcePath)"],
"description":"initWithXML(const_std_string_tmxString,const_std_string_resourcePath)",
"scope":"source.lua"},

"cc.TMXMapInfo:setParentGID(int_gid)":{
"prefix":"cc.TMXMapInfo:setParentGID(int_gid)",
"body":["cc.TMXMapInfo:setParentGID(int_gid)"],
"description":"setParentGID(int_gid)",
"scope":"source.lua"},

"cc.TMXMapInfo:getLayerAttribs()":{
"prefix":"cc.TMXMapInfo:getLayerAttribs()",
"body":["cc.TMXMapInfo:getLayerAttribs()"],
"description":"getLayerAttribs()",
"scope":"source.lua"},

"cc.TMXMapInfo:getTileSize()":{
"prefix":"cc.TMXMapInfo:getTileSize()",
"body":["cc.TMXMapInfo:getTileSize()"],
"description":"getTileSize()",
"scope":"source.lua"},

"cc.TMXMapInfo:getTileProperties()":{
"prefix":"cc.TMXMapInfo:getTileProperties()",
"body":["cc.TMXMapInfo:getTileProperties()"],
"description":"getTileProperties()",
"scope":"source.lua"},

"cc.TMXMapInfo:isStoringCharacters()":{
"prefix":"cc.TMXMapInfo:isStoringCharacters()",
"body":["cc.TMXMapInfo:isStoringCharacters()"],
"description":"isStoringCharacters()",
"scope":"source.lua"},

"cc.TMXMapInfo:getExternalTilesetFileName()":{
"prefix":"cc.TMXMapInfo:getExternalTilesetFileName()",
"body":["cc.TMXMapInfo:getExternalTilesetFileName()"],
"description":"getExternalTilesetFileName()",
"scope":"source.lua"},

"cc.TMXMapInfo:getObjectGroups()":{
"prefix":"cc.TMXMapInfo:getObjectGroups()",
"body":["cc.TMXMapInfo:getObjectGroups()"],
"description":"getObjectGroups()",
"scope":"source.lua"},

"cc.TMXMapInfo:getTMXFileName()":{
"prefix":"cc.TMXMapInfo:getTMXFileName()",
"body":["cc.TMXMapInfo:getTMXFileName()"],
"description":"getTMXFileName()",
"scope":"source.lua"},

"cc.TMXMapInfo:setStaggerIndex(int_staggerIndex)":{
"prefix":"cc.TMXMapInfo:setStaggerIndex(int_staggerIndex)",
"body":["cc.TMXMapInfo:setStaggerIndex(int_staggerIndex)"],
"description":"setStaggerIndex(int_staggerIndex)",
"scope":"source.lua"},

"cc.TMXMapInfo:setProperties(const_ValueMap_properties)":{
"prefix":"cc.TMXMapInfo:setProperties(const_ValueMap_properties)",
"body":["cc.TMXMapInfo:setProperties(const_ValueMap_properties)"],
"description":"setProperties(const_ValueMap_properties)",
"scope":"source.lua"},

"cc.TMXMapInfo:setOrientation(int_orientation)":{
"prefix":"cc.TMXMapInfo:setOrientation(int_orientation)",
"body":["cc.TMXMapInfo:setOrientation(int_orientation)"],
"description":"setOrientation(int_orientation)",
"scope":"source.lua"},

"cc.TMXMapInfo:setTileProperties(const_ValueMapIntKey_tileProperties)":{
"prefix":"cc.TMXMapInfo:setTileProperties(const_ValueMapIntKey_tileProperties)",
"body":["cc.TMXMapInfo:setTileProperties(const_ValueMapIntKey_tileProperties)"],
"description":"setTileProperties(const_ValueMapIntKey_tileProperties)",
"scope":"source.lua"},

"cc.TMXMapInfo:setMapSize(const_Size_mapSize)":{
"prefix":"cc.TMXMapInfo:setMapSize(const_Size_mapSize)",
"body":["cc.TMXMapInfo:setMapSize(const_Size_mapSize)"],
"description":"setMapSize(const_Size_mapSize)",
"scope":"source.lua"},

"cc.TMXMapInfo:getCurrentString()":{
"prefix":"cc.TMXMapInfo:getCurrentString()",
"body":["cc.TMXMapInfo:getCurrentString()"],
"description":"getCurrentString()",
"scope":"source.lua"},

"cc.TMXMapInfo:setStoringCharacters(bool_storingCharacters)":{
"prefix":"cc.TMXMapInfo:setStoringCharacters(bool_storingCharacters)",
"body":["cc.TMXMapInfo:setStoringCharacters(bool_storingCharacters)"],
"description":"setStoringCharacters(bool_storingCharacters)",
"scope":"source.lua"},

"cc.TMXMapInfo:setStaggerAxis(int_staggerAxis)":{
"prefix":"cc.TMXMapInfo:setStaggerAxis(int_staggerAxis)",
"body":["cc.TMXMapInfo:setStaggerAxis(int_staggerAxis)"],
"description":"setStaggerAxis(int_staggerAxis)",
"scope":"source.lua"},

"cc.TMXMapInfo:getMapSize()":{
"prefix":"cc.TMXMapInfo:getMapSize()",
"body":["cc.TMXMapInfo:getMapSize()"],
"description":"getMapSize()",
"scope":"source.lua"},

"cc.TMXMapInfo:setTilesets()":{
"prefix":"cc.TMXMapInfo:setTilesets()",
"body":["cc.TMXMapInfo:setTilesets()"],
"description":"setTilesets()",
"scope":"source.lua"},

"cc.TMXMapInfo:getProperties()":{
"prefix":"cc.TMXMapInfo:getProperties()",
"body":["cc.TMXMapInfo:getProperties()"],
"description":"getProperties()",
"scope":"source.lua"},

"cc.TMXMapInfo:getStaggerIndex()":{
"prefix":"cc.TMXMapInfo:getStaggerIndex()",
"body":["cc.TMXMapInfo:getStaggerIndex()"],
"description":"getStaggerIndex()",
"scope":"source.lua"},

"cc.TMXMapInfo:setLayerAttribs(int_layerAttribs)":{
"prefix":"cc.TMXMapInfo:setLayerAttribs(int_layerAttribs)",
"body":["cc.TMXMapInfo:setLayerAttribs(int_layerAttribs)"],
"description":"setLayerAttribs(int_layerAttribs)",
"scope":"source.lua"},

"cc.TMXMapInfo:create(const_std_string_tmxFile)":{
"prefix":"cc.TMXMapInfo:create(const_std_string_tmxFile)",
"body":["cc.TMXMapInfo:create(const_std_string_tmxFile)"],
"description":"create(const_std_string_tmxFile)",
"scope":"source.lua"},

"cc.TMXMapInfo:createWithXML(const_std_string_tmxString,const_std_string_resourcePath)":{
"prefix":"cc.TMXMapInfo:createWithXML(const_std_string_tmxString,const_std_string_resourcePath)",
"body":["cc.TMXMapInfo:createWithXML(const_std_string_tmxString,const_std_string_resourcePath)"],
"description":"createWithXML(const_std_string_tmxString,const_std_string_resourcePath)",
"scope":"source.lua"},

"cc.TMXLayer":{
"prefix":"cc.TMXLayer",
"body":["cc.TMXLayer"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TMXLayer:getPositionAt(const_Vec2_tileCoordinate)":{
"prefix":"cc.TMXLayer:getPositionAt(const_Vec2_tileCoordinate)",
"body":["cc.TMXLayer:getPositionAt(const_Vec2_tileCoordinate)"],
"description":"getPositionAt(const_Vec2_tileCoordinate)",
"scope":"source.lua"},

"cc.TMXLayer:setLayerOrientation(int_orientation)":{
"prefix":"cc.TMXLayer:setLayerOrientation(int_orientation)",
"body":["cc.TMXLayer:setLayerOrientation(int_orientation)"],
"description":"setLayerOrientation(int_orientation)",
"scope":"source.lua"},

"cc.TMXLayer:getLayerSize()":{
"prefix":"cc.TMXLayer:getLayerSize()",
"body":["cc.TMXLayer:getLayerSize()"],
"description":"getLayerSize()",
"scope":"source.lua"},

"cc.TMXLayer:setMapTileSize(const_Size_size)":{
"prefix":"cc.TMXLayer:setMapTileSize(const_Size_size)",
"body":["cc.TMXLayer:setMapTileSize(const_Size_size)"],
"description":"setMapTileSize(const_Size_size)",
"scope":"source.lua"},

"cc.TMXLayer:getLayerOrientation()":{
"prefix":"cc.TMXLayer:getLayerOrientation()",
"body":["cc.TMXLayer:getLayerOrientation()"],
"description":"getLayerOrientation()",
"scope":"source.lua"},

"cc.TMXLayer:setProperties(const_ValueMap_properties)":{
"prefix":"cc.TMXLayer:setProperties(const_ValueMap_properties)",
"body":["cc.TMXLayer:setProperties(const_ValueMap_properties)"],
"description":"setProperties(const_ValueMap_properties)",
"scope":"source.lua"},

"cc.TMXLayer:setLayerName(const_std_string_layerName)":{
"prefix":"cc.TMXLayer:setLayerName(const_std_string_layerName)",
"body":["cc.TMXLayer:setLayerName(const_std_string_layerName)"],
"description":"setLayerName(const_std_string_layerName)",
"scope":"source.lua"},

"cc.TMXLayer:removeTileAt(const_Vec2_tileCoordinate)":{
"prefix":"cc.TMXLayer:removeTileAt(const_Vec2_tileCoordinate)",
"body":["cc.TMXLayer:removeTileAt(const_Vec2_tileCoordinate)"],
"description":"removeTileAt(const_Vec2_tileCoordinate)",
"scope":"source.lua"},

"cc.TMXLayer:initWithTilesetInfo(TMXTilesetInfo_tilesetInfo,TMXLayerInfo_layerInfo,TMXMapInfo_mapInfo)":{
"prefix":"cc.TMXLayer:initWithTilesetInfo(TMXTilesetInfo_tilesetInfo,TMXLayerInfo_layerInfo,TMXMapInfo_mapInfo)",
"body":["cc.TMXLayer:initWithTilesetInfo(TMXTilesetInfo_tilesetInfo,TMXLayerInfo_layerInfo,TMXMapInfo_mapInfo)"],
"description":"initWithTilesetInfo(TMXTilesetInfo_tilesetInfo,TMXLayerInfo_layerInfo,TMXMapInfo_mapInfo)",
"scope":"source.lua"},

"cc.TMXLayer:setupTiles()":{
"prefix":"cc.TMXLayer:setupTiles()",
"body":["cc.TMXLayer:setupTiles()"],
"description":"setupTiles()",
"scope":"source.lua"},

"cc.TMXLayer:setTileGID(int_gid,const_Vec2_tileCoordinate)":{
"prefix":"cc.TMXLayer:setTileGID(int_gid,const_Vec2_tileCoordinate)",
"body":["cc.TMXLayer:setTileGID(int_gid,const_Vec2_tileCoordinate)"],
"description":"setTileGID(int_gid,const_Vec2_tileCoordinate)",
"scope":"source.lua"},

"cc.TMXLayer:setTileGID(int_gid,const_Vec2_tileCoordinate,TMXTileFlags_flags)":{
"prefix":"cc.TMXLayer:setTileGID(int_gid,const_Vec2_tileCoordinate,TMXTileFlags_flags)",
"body":["cc.TMXLayer:setTileGID(int_gid,const_Vec2_tileCoordinate,TMXTileFlags_flags)"],
"description":"setTileGID(int_gid,const_Vec2_tileCoordinate,TMXTileFlags_flags)",
"scope":"source.lua"},

"cc.TMXLayer:getMapTileSize()":{
"prefix":"cc.TMXLayer:getMapTileSize()",
"body":["cc.TMXLayer:getMapTileSize()"],
"description":"getMapTileSize()",
"scope":"source.lua"},

"cc.TMXLayer:getProperty(const_std_string_propertyName)":{
"prefix":"cc.TMXLayer:getProperty(const_std_string_propertyName)",
"body":["cc.TMXLayer:getProperty(const_std_string_propertyName)"],
"description":"getProperty(const_std_string_propertyName)",
"scope":"source.lua"},

"cc.TMXLayer:setLayerSize(const_Size_size)":{
"prefix":"cc.TMXLayer:setLayerSize(const_Size_size)",
"body":["cc.TMXLayer:setLayerSize(const_Size_size)"],
"description":"setLayerSize(const_Size_size)",
"scope":"source.lua"},

"cc.TMXLayer:getLayerName()":{
"prefix":"cc.TMXLayer:getLayerName()",
"body":["cc.TMXLayer:getLayerName()"],
"description":"getLayerName()",
"scope":"source.lua"},

"cc.TMXLayer:setTileSet(TMXTilesetInfo_info)":{
"prefix":"cc.TMXLayer:setTileSet(TMXTilesetInfo_info)",
"body":["cc.TMXLayer:setTileSet(TMXTilesetInfo_info)"],
"description":"setTileSet(TMXTilesetInfo_info)",
"scope":"source.lua"},

"cc.TMXLayer:getTileSet()":{
"prefix":"cc.TMXLayer:getTileSet()",
"body":["cc.TMXLayer:getTileSet()"],
"description":"getTileSet()",
"scope":"source.lua"},

"cc.TMXLayer:getProperties()":{
"prefix":"cc.TMXLayer:getProperties()",
"body":["cc.TMXLayer:getProperties()"],
"description":"getProperties()",
"scope":"source.lua"},

"cc.TMXLayer:getTileAt(const_Vec2_tileCoordinate)":{
"prefix":"cc.TMXLayer:getTileAt(const_Vec2_tileCoordinate)",
"body":["cc.TMXLayer:getTileAt(const_Vec2_tileCoordinate)"],
"description":"getTileAt(const_Vec2_tileCoordinate)",
"scope":"source.lua"},

"cc.TMXLayer:create(TMXTilesetInfo_tilesetInfo,TMXLayerInfo_layerInfo,TMXMapInfo_mapInfo)":{
"prefix":"cc.TMXLayer:create(TMXTilesetInfo_tilesetInfo,TMXLayerInfo_layerInfo,TMXMapInfo_mapInfo)",
"body":["cc.TMXLayer:create(TMXTilesetInfo_tilesetInfo,TMXLayerInfo_layerInfo,TMXMapInfo_mapInfo)"],
"description":"create(TMXTilesetInfo_tilesetInfo,TMXLayerInfo_layerInfo,TMXMapInfo_mapInfo)",
"scope":"source.lua"},

"cc.TMXLayer:setupTileSprite(Sprite_sprite,const_Vec2_pos,uint32_t_gid)":{
"prefix":"cc.TMXLayer:setupTileSprite(Sprite_sprite,const_Vec2_pos,uint32_t_gid)",
"body":["cc.TMXLayer:setupTileSprite(Sprite_sprite,const_Vec2_pos,uint32_t_gid)"],
"description":"setupTileSprite(Sprite_sprite,const_Vec2_pos,uint32_t_gid)",
"scope":"source.lua"},

"cc.TMXTiledMap":{
"prefix":"cc.TMXTiledMap",
"body":["cc.TMXTiledMap"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TMXTiledMap:setObjectGroups()":{
"prefix":"cc.TMXTiledMap:setObjectGroups()",
"body":["cc.TMXTiledMap:setObjectGroups()"],
"description":"setObjectGroups()",
"scope":"source.lua"},

"cc.TMXTiledMap:getProperty(const_std_string_propertyName)":{
"prefix":"cc.TMXTiledMap:getProperty(const_std_string_propertyName)",
"body":["cc.TMXTiledMap:getProperty(const_std_string_propertyName)"],
"description":"getProperty(const_std_string_propertyName)",
"scope":"source.lua"},

"cc.TMXTiledMap:setMapSize(const_Size_mapSize)":{
"prefix":"cc.TMXTiledMap:setMapSize(const_Size_mapSize)",
"body":["cc.TMXTiledMap:setMapSize(const_Size_mapSize)"],
"description":"setMapSize(const_Size_mapSize)",
"scope":"source.lua"},

"cc.TMXTiledMap:getObjectGroup(const_std_string_groupName)":{
"prefix":"cc.TMXTiledMap:getObjectGroup(const_std_string_groupName)",
"body":["cc.TMXTiledMap:getObjectGroup(const_std_string_groupName)"],
"description":"getObjectGroup(const_std_string_groupName)",
"scope":"source.lua"},

"cc.TMXTiledMap:getObjectGroups()":{
"prefix":"cc.TMXTiledMap:getObjectGroups()",
"body":["cc.TMXTiledMap:getObjectGroups()"],
"description":"getObjectGroups()",
"scope":"source.lua"},

"cc.TMXTiledMap:initWithTMXFile(const_std_string_tmxFile)":{
"prefix":"cc.TMXTiledMap:initWithTMXFile(const_std_string_tmxFile)",
"body":["cc.TMXTiledMap:initWithTMXFile(const_std_string_tmxFile)"],
"description":"initWithTMXFile(const_std_string_tmxFile)",
"scope":"source.lua"},

"cc.TMXTiledMap:getTileSize()":{
"prefix":"cc.TMXTiledMap:getTileSize()",
"body":["cc.TMXTiledMap:getTileSize()"],
"description":"getTileSize()",
"scope":"source.lua"},

"cc.TMXTiledMap:getMapSize()":{
"prefix":"cc.TMXTiledMap:getMapSize()",
"body":["cc.TMXTiledMap:getMapSize()"],
"description":"getMapSize()",
"scope":"source.lua"},

"cc.TMXTiledMap:initWithXML(const_std_string_tmxString,const_std_string_resourcePath)":{
"prefix":"cc.TMXTiledMap:initWithXML(const_std_string_tmxString,const_std_string_resourcePath)",
"body":["cc.TMXTiledMap:initWithXML(const_std_string_tmxString,const_std_string_resourcePath)"],
"description":"initWithXML(const_std_string_tmxString,const_std_string_resourcePath)",
"scope":"source.lua"},

"cc.TMXTiledMap:getProperties()":{
"prefix":"cc.TMXTiledMap:getProperties()",
"body":["cc.TMXTiledMap:getProperties()"],
"description":"getProperties()",
"scope":"source.lua"},

"cc.TMXTiledMap:setTileSize(const_Size_tileSize)":{
"prefix":"cc.TMXTiledMap:setTileSize(const_Size_tileSize)",
"body":["cc.TMXTiledMap:setTileSize(const_Size_tileSize)"],
"description":"setTileSize(const_Size_tileSize)",
"scope":"source.lua"},

"cc.TMXTiledMap:setProperties(const_ValueMap_properties)":{
"prefix":"cc.TMXTiledMap:setProperties(const_ValueMap_properties)",
"body":["cc.TMXTiledMap:setProperties(const_ValueMap_properties)"],
"description":"setProperties(const_ValueMap_properties)",
"scope":"source.lua"},

"cc.TMXTiledMap:getLayer(const_std_string_layerName)":{
"prefix":"cc.TMXTiledMap:getLayer(const_std_string_layerName)",
"body":["cc.TMXTiledMap:getLayer(const_std_string_layerName)"],
"description":"getLayer(const_std_string_layerName)",
"scope":"source.lua"},

"cc.TMXTiledMap:getMapOrientation()":{
"prefix":"cc.TMXTiledMap:getMapOrientation()",
"body":["cc.TMXTiledMap:getMapOrientation()"],
"description":"getMapOrientation()",
"scope":"source.lua"},

"cc.TMXTiledMap:setMapOrientation(int_mapOrientation)":{
"prefix":"cc.TMXTiledMap:setMapOrientation(int_mapOrientation)",
"body":["cc.TMXTiledMap:setMapOrientation(int_mapOrientation)"],
"description":"setMapOrientation(int_mapOrientation)",
"scope":"source.lua"},

"cc.TMXTiledMap:create(const_std_string_tmxFile)":{
"prefix":"cc.TMXTiledMap:create(const_std_string_tmxFile)",
"body":["cc.TMXTiledMap:create(const_std_string_tmxFile)"],
"description":"create(const_std_string_tmxFile)",
"scope":"source.lua"},

"cc.TMXTiledMap:createWithXML(const_std_string_tmxString,const_std_string_resourcePath)":{
"prefix":"cc.TMXTiledMap:createWithXML(const_std_string_tmxString,const_std_string_resourcePath)",
"body":["cc.TMXTiledMap:createWithXML(const_std_string_tmxString,const_std_string_resourcePath)"],
"description":"createWithXML(const_std_string_tmxString,const_std_string_resourcePath)",
"scope":"source.lua"},

"cc.TMXTiledMap:getPropertiesForGID(int_GID)":{
"prefix":"cc.TMXTiledMap:getPropertiesForGID(int_GID)",
"body":["cc.TMXTiledMap:getPropertiesForGID(int_GID)"],
"description":"getPropertiesForGID(int_GID)",
"scope":"source.lua"},

"cc.TileMapAtlas":{
"prefix":"cc.TileMapAtlas",
"body":["cc.TileMapAtlas"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TileMapAtlas:initWithTileFile(const_std_string_tile,const_std_string_mapFile,int_tileWidth,int_tileHeight)":{
"prefix":"cc.TileMapAtlas:initWithTileFile(const_std_string_tile,const_std_string_mapFile,int_tileWidth,int_tileHeight)",
"body":["cc.TileMapAtlas:initWithTileFile(const_std_string_tile,const_std_string_mapFile,int_tileWidth,int_tileHeight)"],
"description":"initWithTileFile(const_std_string_tile,const_std_string_mapFile,int_tileWidth,int_tileHeight)",
"scope":"source.lua"},

"cc.TileMapAtlas:releaseMap()":{
"prefix":"cc.TileMapAtlas:releaseMap()",
"body":["cc.TileMapAtlas:releaseMap()"],
"description":"releaseMap()",
"scope":"source.lua"},

"cc.TileMapAtlas:getTileAt(const_Vec2_position)":{
"prefix":"cc.TileMapAtlas:getTileAt(const_Vec2_position)",
"body":["cc.TileMapAtlas:getTileAt(const_Vec2_position)"],
"description":"getTileAt(const_Vec2_position)",
"scope":"source.lua"},

"cc.TileMapAtlas:setTile(const_Color3B_tile,const_Vec2_position)":{
"prefix":"cc.TileMapAtlas:setTile(const_Color3B_tile,const_Vec2_position)",
"body":["cc.TileMapAtlas:setTile(const_Color3B_tile,const_Vec2_position)"],
"description":"setTile(const_Color3B_tile,const_Vec2_position)",
"scope":"source.lua"},

"cc.TileMapAtlas:create(const_std_string_tile,const_std_string_mapFile,int_tileWidth,int_tileHeight)":{
"prefix":"cc.TileMapAtlas:create(const_std_string_tile,const_std_string_mapFile,int_tileWidth,int_tileHeight)",
"body":["cc.TileMapAtlas:create(const_std_string_tile,const_std_string_mapFile,int_tileWidth,int_tileHeight)"],
"description":"create(const_std_string_tile,const_std_string_mapFile,int_tileWidth,int_tileHeight)",
"scope":"source.lua"},

"cc.MotionStreak3D":{
"prefix":"cc.MotionStreak3D",
"body":["cc.MotionStreak3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MotionStreak3D:reset()":{
"prefix":"cc.MotionStreak3D:reset()",
"body":["cc.MotionStreak3D:reset()"],
"description":"reset()",
"scope":"source.lua"},

"cc.MotionStreak3D:setTexture(Texture2D_texture)":{
"prefix":"cc.MotionStreak3D:setTexture(Texture2D_texture)",
"body":["cc.MotionStreak3D:setTexture(Texture2D_texture)"],
"description":"setTexture(Texture2D_texture)",
"scope":"source.lua"},

"cc.MotionStreak3D:getTexture()":{
"prefix":"cc.MotionStreak3D:getTexture()",
"body":["cc.MotionStreak3D:getTexture()"],
"description":"getTexture()",
"scope":"source.lua"},

"cc.MotionStreak3D:tintWithColor(const_Color3B_colors)":{
"prefix":"cc.MotionStreak3D:tintWithColor(const_Color3B_colors)",
"body":["cc.MotionStreak3D:tintWithColor(const_Color3B_colors)"],
"description":"tintWithColor(const_Color3B_colors)",
"scope":"source.lua"},

"cc.MotionStreak3D:getSweepAxis()":{
"prefix":"cc.MotionStreak3D:getSweepAxis()",
"body":["cc.MotionStreak3D:getSweepAxis()"],
"description":"getSweepAxis()",
"scope":"source.lua"},

"cc.MotionStreak3D:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.MotionStreak3D:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.MotionStreak3D:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.MotionStreak3D:setStartingPositionInitialized(bool_bStartingPositionInitialized)":{
"prefix":"cc.MotionStreak3D:setStartingPositionInitialized(bool_bStartingPositionInitialized)",
"body":["cc.MotionStreak3D:setStartingPositionInitialized(bool_bStartingPositionInitialized)"],
"description":"setStartingPositionInitialized(bool_bStartingPositionInitialized)",
"scope":"source.lua"},

"cc.MotionStreak3D:getBlendFunc()":{
"prefix":"cc.MotionStreak3D:getBlendFunc()",
"body":["cc.MotionStreak3D:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.MotionStreak3D:isStartingPositionInitialized()":{
"prefix":"cc.MotionStreak3D:isStartingPositionInitialized()",
"body":["cc.MotionStreak3D:isStartingPositionInitialized()"],
"description":"isStartingPositionInitialized()",
"scope":"source.lua"},

"cc.MotionStreak3D:getStroke()":{
"prefix":"cc.MotionStreak3D:getStroke()",
"body":["cc.MotionStreak3D:getStroke()"],
"description":"getStroke()",
"scope":"source.lua"},

"cc.MotionStreak3D:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)":{
"prefix":"cc.MotionStreak3D:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)",
"body":["cc.MotionStreak3D:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)"],
"description":"initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)",
"scope":"source.lua"},

"cc.MotionStreak3D:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)":{
"prefix":"cc.MotionStreak3D:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)",
"body":["cc.MotionStreak3D:initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)"],
"description":"initWithFade(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)",
"scope":"source.lua"},

"cc.MotionStreak3D:setSweepAxis(const_Vec3_sweepAxis)":{
"prefix":"cc.MotionStreak3D:setSweepAxis(const_Vec3_sweepAxis)",
"body":["cc.MotionStreak3D:setSweepAxis(const_Vec3_sweepAxis)"],
"description":"setSweepAxis(const_Vec3_sweepAxis)",
"scope":"source.lua"},

"cc.MotionStreak3D:setStroke(float_stroke)":{
"prefix":"cc.MotionStreak3D:setStroke(float_stroke)",
"body":["cc.MotionStreak3D:setStroke(float_stroke)"],
"description":"setStroke(float_stroke)",
"scope":"source.lua"},

"cc.MotionStreak3D:create(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)":{
"prefix":"cc.MotionStreak3D:create(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)",
"body":["cc.MotionStreak3D:create(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)"],
"description":"create(float_fade,float_minSeg,float_stroke,const_Color3B_color,const_std_string_path)",
"scope":"source.lua"},

"cc.MotionStreak3D:create(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)":{
"prefix":"cc.MotionStreak3D:create(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)",
"body":["cc.MotionStreak3D:create(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)"],
"description":"create(float_fade,float_minSeg,float_stroke,const_Color3B_color,Texture2D_texture)",
"scope":"source.lua"},

"cc.ComponentLua":{
"prefix":"cc.ComponentLua",
"body":["cc.ComponentLua"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ComponentLua:getScriptObject()":{
"prefix":"cc.ComponentLua:getScriptObject()",
"body":["cc.ComponentLua:getScriptObject()"],
"description":"getScriptObject()",
"scope":"source.lua"},

"cc.ComponentLua:update(float_dt)":{
"prefix":"cc.ComponentLua:update(float_dt)",
"body":["cc.ComponentLua:update(float_dt)"],
"description":"update(float_dt)",
"scope":"source.lua"},

"cc.ComponentLua:create(const_std_string_scriptFileName)":{
"prefix":"cc.ComponentLua:create(const_std_string_scriptFileName)",
"body":["cc.ComponentLua:create(const_std_string_scriptFileName)"],
"description":"create(const_std_string_scriptFileName)",
"scope":"source.lua"},

"cc.CCBAnimationManager":{
"prefix":"cc.CCBAnimationManager",
"body":["cc.CCBAnimationManager"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CCBAnimationManager:moveAnimationsFromNode(cocos2d_Node_fromNode,cocos2d_Node_toNode)":{
"prefix":"cc.CCBAnimationManager:moveAnimationsFromNode(cocos2d_Node_fromNode,cocos2d_Node_toNode)",
"body":["cc.CCBAnimationManager:moveAnimationsFromNode(cocos2d_Node_fromNode,cocos2d_Node_toNode)"],
"description":"moveAnimationsFromNode(cocos2d_Node_fromNode,cocos2d_Node_toNode)",
"scope":"source.lua"},

"cc.CCBAnimationManager:setAutoPlaySequenceId(int_autoPlaySequenceId)":{
"prefix":"cc.CCBAnimationManager:setAutoPlaySequenceId(int_autoPlaySequenceId)",
"body":["cc.CCBAnimationManager:setAutoPlaySequenceId(int_autoPlaySequenceId)"],
"description":"setAutoPlaySequenceId(int_autoPlaySequenceId)",
"scope":"source.lua"},

"cc.CCBAnimationManager:getDocumentCallbackNames()":{
"prefix":"cc.CCBAnimationManager:getDocumentCallbackNames()",
"body":["cc.CCBAnimationManager:getDocumentCallbackNames()"],
"description":"getDocumentCallbackNames()",
"scope":"source.lua"},

"cc.CCBAnimationManager:actionForSoundChannel(CCBSequenceProperty_channel)":{
"prefix":"cc.CCBAnimationManager:actionForSoundChannel(CCBSequenceProperty_channel)",
"body":["cc.CCBAnimationManager:actionForSoundChannel(CCBSequenceProperty_channel)"],
"description":"actionForSoundChannel(CCBSequenceProperty_channel)",
"scope":"source.lua"},

"cc.CCBAnimationManager:setBaseValue(const_cocos2d_Value_value,cocos2d_Node_pNode,const_std_string_propName)":{
"prefix":"cc.CCBAnimationManager:setBaseValue(const_cocos2d_Value_value,cocos2d_Node_pNode,const_std_string_propName)",
"body":["cc.CCBAnimationManager:setBaseValue(const_cocos2d_Value_value,cocos2d_Node_pNode,const_std_string_propName)"],
"description":"setBaseValue(const_cocos2d_Value_value,cocos2d_Node_pNode,const_std_string_propName)",
"scope":"source.lua"},

"cc.CCBAnimationManager:getDocumentOutletNodes()":{
"prefix":"cc.CCBAnimationManager:getDocumentOutletNodes()",
"body":["cc.CCBAnimationManager:getDocumentOutletNodes()"],
"description":"getDocumentOutletNodes()",
"scope":"source.lua"},

"cc.CCBAnimationManager:getLastCompletedSequenceName()":{
"prefix":"cc.CCBAnimationManager:getLastCompletedSequenceName()",
"body":["cc.CCBAnimationManager:getLastCompletedSequenceName()"],
"description":"getLastCompletedSequenceName()",
"scope":"source.lua"},

"cc.CCBAnimationManager:setRootNode(cocos2d_Node_pRootNode)":{
"prefix":"cc.CCBAnimationManager:setRootNode(cocos2d_Node_pRootNode)",
"body":["cc.CCBAnimationManager:setRootNode(cocos2d_Node_pRootNode)"],
"description":"setRootNode(cocos2d_Node_pRootNode)",
"scope":"source.lua"},

"cc.CCBAnimationManager:runAnimationsForSequenceNamedTweenDuration(const_char_pName,float_fTweenDuration)":{
"prefix":"cc.CCBAnimationManager:runAnimationsForSequenceNamedTweenDuration(const_char_pName,float_fTweenDuration)",
"body":["cc.CCBAnimationManager:runAnimationsForSequenceNamedTweenDuration(const_char_pName,float_fTweenDuration)"],
"description":"runAnimationsForSequenceNamedTweenDuration(const_char_pName,float_fTweenDuration)",
"scope":"source.lua"},

"cc.CCBAnimationManager:addDocumentOutletName(std_string_name)":{
"prefix":"cc.CCBAnimationManager:addDocumentOutletName(std_string_name)",
"body":["cc.CCBAnimationManager:addDocumentOutletName(std_string_name)"],
"description":"addDocumentOutletName(std_string_name)",
"scope":"source.lua"},

"cc.CCBAnimationManager:getSequences()":{
"prefix":"cc.CCBAnimationManager:getSequences()",
"body":["cc.CCBAnimationManager:getSequences()"],
"description":"getSequences()",
"scope":"source.lua"},

"cc.CCBAnimationManager:getRootContainerSize()":{
"prefix":"cc.CCBAnimationManager:getRootContainerSize()",
"body":["cc.CCBAnimationManager:getRootContainerSize()"],
"description":"getRootContainerSize()",
"scope":"source.lua"},

"cc.CCBAnimationManager:setDocumentControllerName(const_std_string_name)":{
"prefix":"cc.CCBAnimationManager:setDocumentControllerName(const_std_string_name)",
"body":["cc.CCBAnimationManager:setDocumentControllerName(const_std_string_name)"],
"description":"setDocumentControllerName(const_std_string_name)",
"scope":"source.lua"},

"cc.CCBAnimationManager:setObject(cocos2d_Ref_obj,cocos2d_Node_pNode,const_std_string_propName)":{
"prefix":"cc.CCBAnimationManager:setObject(cocos2d_Ref_obj,cocos2d_Node_pNode,const_std_string_propName)",
"body":["cc.CCBAnimationManager:setObject(cocos2d_Ref_obj,cocos2d_Node_pNode,const_std_string_propName)"],
"description":"setObject(cocos2d_Ref_obj,cocos2d_Node_pNode,const_std_string_propName)",
"scope":"source.lua"},

"cc.CCBAnimationManager:getContainerSize(cocos2d_Node_pNode)":{
"prefix":"cc.CCBAnimationManager:getContainerSize(cocos2d_Node_pNode)",
"body":["cc.CCBAnimationManager:getContainerSize(cocos2d_Node_pNode)"],
"description":"getContainerSize(cocos2d_Node_pNode)",
"scope":"source.lua"},

"cc.CCBAnimationManager:actionForCallbackChannel(CCBSequenceProperty_channel)":{
"prefix":"cc.CCBAnimationManager:actionForCallbackChannel(CCBSequenceProperty_channel)",
"body":["cc.CCBAnimationManager:actionForCallbackChannel(CCBSequenceProperty_channel)"],
"description":"actionForCallbackChannel(CCBSequenceProperty_channel)",
"scope":"source.lua"},

"cc.CCBAnimationManager:getDocumentOutletNames()":{
"prefix":"cc.CCBAnimationManager:getDocumentOutletNames()",
"body":["cc.CCBAnimationManager:getDocumentOutletNames()"],
"description":"getDocumentOutletNames()",
"scope":"source.lua"},

"cc.CCBAnimationManager:addDocumentCallbackControlEvents(cocos2d_extension_Control_EventType_eventType)":{
"prefix":"cc.CCBAnimationManager:addDocumentCallbackControlEvents(cocos2d_extension_Control_EventType_eventType)",
"body":["cc.CCBAnimationManager:addDocumentCallbackControlEvents(cocos2d_extension_Control_EventType_eventType)"],
"description":"addDocumentCallbackControlEvents(cocos2d_extension_Control_EventType_eventType)",
"scope":"source.lua"},

"cc.CCBAnimationManager:init()":{
"prefix":"cc.CCBAnimationManager:init()",
"body":["cc.CCBAnimationManager:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.CCBAnimationManager:getKeyframeCallbacks()":{
"prefix":"cc.CCBAnimationManager:getKeyframeCallbacks()",
"body":["cc.CCBAnimationManager:getKeyframeCallbacks()"],
"description":"getKeyframeCallbacks()",
"scope":"source.lua"},

"cc.CCBAnimationManager:getDocumentCallbackControlEvents()":{
"prefix":"cc.CCBAnimationManager:getDocumentCallbackControlEvents()",
"body":["cc.CCBAnimationManager:getDocumentCallbackControlEvents()"],
"description":"getDocumentCallbackControlEvents()",
"scope":"source.lua"},

"cc.CCBAnimationManager:setRootContainerSize(const_cocos2d_Size_rootContainerSize)":{
"prefix":"cc.CCBAnimationManager:setRootContainerSize(const_cocos2d_Size_rootContainerSize)",
"body":["cc.CCBAnimationManager:setRootContainerSize(const_cocos2d_Size_rootContainerSize)"],
"description":"setRootContainerSize(const_cocos2d_Size_rootContainerSize)",
"scope":"source.lua"},

"cc.CCBAnimationManager:runAnimationsForSequenceIdTweenDuration(int_nSeqId,float_fTweenDuraiton)":{
"prefix":"cc.CCBAnimationManager:runAnimationsForSequenceIdTweenDuration(int_nSeqId,float_fTweenDuraiton)",
"body":["cc.CCBAnimationManager:runAnimationsForSequenceIdTweenDuration(int_nSeqId,float_fTweenDuraiton)"],
"description":"runAnimationsForSequenceIdTweenDuration(int_nSeqId,float_fTweenDuraiton)",
"scope":"source.lua"},

"cc.CCBAnimationManager:getRunningSequenceName()":{
"prefix":"cc.CCBAnimationManager:getRunningSequenceName()",
"body":["cc.CCBAnimationManager:getRunningSequenceName()"],
"description":"getRunningSequenceName()",
"scope":"source.lua"},

"cc.CCBAnimationManager:getAutoPlaySequenceId()":{
"prefix":"cc.CCBAnimationManager:getAutoPlaySequenceId()",
"body":["cc.CCBAnimationManager:getAutoPlaySequenceId()"],
"description":"getAutoPlaySequenceId()",
"scope":"source.lua"},

"cc.CCBAnimationManager:addDocumentCallbackName(std_string_name)":{
"prefix":"cc.CCBAnimationManager:addDocumentCallbackName(std_string_name)",
"body":["cc.CCBAnimationManager:addDocumentCallbackName(std_string_name)"],
"description":"addDocumentCallbackName(std_string_name)",
"scope":"source.lua"},

"cc.CCBAnimationManager:getRootNode()":{
"prefix":"cc.CCBAnimationManager:getRootNode()",
"body":["cc.CCBAnimationManager:getRootNode()"],
"description":"getRootNode()",
"scope":"source.lua"},

"cc.CCBAnimationManager:addDocumentOutletNode(cocos2d_Node_node)":{
"prefix":"cc.CCBAnimationManager:addDocumentOutletNode(cocos2d_Node_node)",
"body":["cc.CCBAnimationManager:addDocumentOutletNode(cocos2d_Node_node)"],
"description":"addDocumentOutletNode(cocos2d_Node_node)",
"scope":"source.lua"},

"cc.CCBAnimationManager:getSequenceDuration(const_char_pSequenceName)":{
"prefix":"cc.CCBAnimationManager:getSequenceDuration(const_char_pSequenceName)",
"body":["cc.CCBAnimationManager:getSequenceDuration(const_char_pSequenceName)"],
"description":"getSequenceDuration(const_char_pSequenceName)",
"scope":"source.lua"},

"cc.CCBAnimationManager:addDocumentCallbackNode(cocos2d_Node_node)":{
"prefix":"cc.CCBAnimationManager:addDocumentCallbackNode(cocos2d_Node_node)",
"body":["cc.CCBAnimationManager:addDocumentCallbackNode(cocos2d_Node_node)"],
"description":"addDocumentCallbackNode(cocos2d_Node_node)",
"scope":"source.lua"},

"cc.CCBAnimationManager:runAnimationsForSequenceNamed(const_char_pName)":{
"prefix":"cc.CCBAnimationManager:runAnimationsForSequenceNamed(const_char_pName)",
"body":["cc.CCBAnimationManager:runAnimationsForSequenceNamed(const_char_pName)"],
"description":"runAnimationsForSequenceNamed(const_char_pName)",
"scope":"source.lua"},

"cc.CCBAnimationManager:getSequenceId(const_char_pSequenceName)":{
"prefix":"cc.CCBAnimationManager:getSequenceId(const_char_pSequenceName)",
"body":["cc.CCBAnimationManager:getSequenceId(const_char_pSequenceName)"],
"description":"getSequenceId(const_char_pSequenceName)",
"scope":"source.lua"},

"cc.CCBAnimationManager:getDocumentCallbackNodes()":{
"prefix":"cc.CCBAnimationManager:getDocumentCallbackNodes()",
"body":["cc.CCBAnimationManager:getDocumentCallbackNodes()"],
"description":"getDocumentCallbackNodes()",
"scope":"source.lua"},

"cc.CCBAnimationManager:setSequences()":{
"prefix":"cc.CCBAnimationManager:setSequences()",
"body":["cc.CCBAnimationManager:setSequences()"],
"description":"setSequences()",
"scope":"source.lua"},

"cc.CCBAnimationManager:debug()":{
"prefix":"cc.CCBAnimationManager:debug()",
"body":["cc.CCBAnimationManager:debug()"],
"description":"debug()",
"scope":"source.lua"},

"cc.CCBAnimationManager:getDocumentControllerName()":{
"prefix":"cc.CCBAnimationManager:getDocumentControllerName()",
"body":["cc.CCBAnimationManager:getDocumentControllerName()"],
"description":"getDocumentControllerName()",
"scope":"source.lua"},

"cc.CCBReader":{
"prefix":"cc.CCBReader",
"body":["cc.CCBReader"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CCBReader:addOwnerOutletName(std_string_name)":{
"prefix":"cc.CCBReader:addOwnerOutletName(std_string_name)",
"body":["cc.CCBReader:addOwnerOutletName(std_string_name)"],
"description":"addOwnerOutletName(std_string_name)",
"scope":"source.lua"},

"cc.CCBReader:getOwnerCallbackNames()":{
"prefix":"cc.CCBReader:getOwnerCallbackNames()",
"body":["cc.CCBReader:getOwnerCallbackNames()"],
"description":"getOwnerCallbackNames()",
"scope":"source.lua"},

"cc.CCBReader:addDocumentCallbackControlEvents(cocos2d_extension_Control_EventType_eventType)":{
"prefix":"cc.CCBReader:addDocumentCallbackControlEvents(cocos2d_extension_Control_EventType_eventType)",
"body":["cc.CCBReader:addDocumentCallbackControlEvents(cocos2d_extension_Control_EventType_eventType)"],
"description":"addDocumentCallbackControlEvents(cocos2d_extension_Control_EventType_eventType)",
"scope":"source.lua"},

"cc.CCBReader:setCCBRootPath(const_char_ccbRootPath)":{
"prefix":"cc.CCBReader:setCCBRootPath(const_char_ccbRootPath)",
"body":["cc.CCBReader:setCCBRootPath(const_char_ccbRootPath)"],
"description":"setCCBRootPath(const_char_ccbRootPath)",
"scope":"source.lua"},

"cc.CCBReader:addOwnerOutletNode(cocos2d_Node_node)":{
"prefix":"cc.CCBReader:addOwnerOutletNode(cocos2d_Node_node)",
"body":["cc.CCBReader:addOwnerOutletNode(cocos2d_Node_node)"],
"description":"addOwnerOutletNode(cocos2d_Node_node)",
"scope":"source.lua"},

"cc.CCBReader:getOwnerCallbackNodes()":{
"prefix":"cc.CCBReader:getOwnerCallbackNodes()",
"body":["cc.CCBReader:getOwnerCallbackNodes()"],
"description":"getOwnerCallbackNodes()",
"scope":"source.lua"},

"cc.CCBReader:readSoundKeyframesForSeq(CCBSequence_seq)":{
"prefix":"cc.CCBReader:readSoundKeyframesForSeq(CCBSequence_seq)",
"body":["cc.CCBReader:readSoundKeyframesForSeq(CCBSequence_seq)"],
"description":"readSoundKeyframesForSeq(CCBSequence_seq)",
"scope":"source.lua"},

"cc.CCBReader:getCCBRootPath()":{
"prefix":"cc.CCBReader:getCCBRootPath()",
"body":["cc.CCBReader:getCCBRootPath()"],
"description":"getCCBRootPath()",
"scope":"source.lua"},

"cc.CCBReader:getOwnerCallbackControlEvents()":{
"prefix":"cc.CCBReader:getOwnerCallbackControlEvents()",
"body":["cc.CCBReader:getOwnerCallbackControlEvents()"],
"description":"getOwnerCallbackControlEvents()",
"scope":"source.lua"},

"cc.CCBReader:getOwnerOutletNodes()":{
"prefix":"cc.CCBReader:getOwnerOutletNodes()",
"body":["cc.CCBReader:getOwnerOutletNodes()"],
"description":"getOwnerOutletNodes()",
"scope":"source.lua"},

"cc.CCBReader:readUTF8()":{
"prefix":"cc.CCBReader:readUTF8()",
"body":["cc.CCBReader:readUTF8()"],
"description":"readUTF8()",
"scope":"source.lua"},

"cc.CCBReader:addOwnerCallbackControlEvents(cocos2d_extension_Control_EventType_type)":{
"prefix":"cc.CCBReader:addOwnerCallbackControlEvents(cocos2d_extension_Control_EventType_type)",
"body":["cc.CCBReader:addOwnerCallbackControlEvents(cocos2d_extension_Control_EventType_type)"],
"description":"addOwnerCallbackControlEvents(cocos2d_extension_Control_EventType_type)",
"scope":"source.lua"},

"cc.CCBReader:getOwnerOutletNames()":{
"prefix":"cc.CCBReader:getOwnerOutletNames()",
"body":["cc.CCBReader:getOwnerOutletNames()"],
"description":"getOwnerOutletNames()",
"scope":"source.lua"},

"cc.CCBReader:readCallbackKeyframesForSeq(CCBSequence_seq)":{
"prefix":"cc.CCBReader:readCallbackKeyframesForSeq(CCBSequence_seq)",
"body":["cc.CCBReader:readCallbackKeyframesForSeq(CCBSequence_seq)"],
"description":"readCallbackKeyframesForSeq(CCBSequence_seq)",
"scope":"source.lua"},

"cc.CCBReader:getAnimationManagersForNodes()":{
"prefix":"cc.CCBReader:getAnimationManagersForNodes()",
"body":["cc.CCBReader:getAnimationManagersForNodes()"],
"description":"getAnimationManagersForNodes()",
"scope":"source.lua"},

"cc.CCBReader:getNodesWithAnimationManagers()":{
"prefix":"cc.CCBReader:getNodesWithAnimationManagers()",
"body":["cc.CCBReader:getNodesWithAnimationManagers()"],
"description":"getNodesWithAnimationManagers()",
"scope":"source.lua"},

"cc.CCBReader:setResolutionScale(float_scale)":{
"prefix":"cc.CCBReader:setResolutionScale(float_scale)",
"body":["cc.CCBReader:setResolutionScale(float_scale)"],
"description":"setResolutionScale(float_scale)",
"scope":"source.lua"},

"cc.SimpleAudioEngine":{
"prefix":"cc.SimpleAudioEngine",
"body":["cc.SimpleAudioEngine"],
"description":"cocos class",
"scope":"source.lua"},

"cc.SimpleAudioEngine:stopAllEffects()":{
"prefix":"cc.SimpleAudioEngine:stopAllEffects()",
"body":["cc.SimpleAudioEngine:stopAllEffects()"],
"description":"stopAllEffects()",
"scope":"source.lua"},

"cc.SimpleAudioEngine:preloadEffect(const_char_filePath)":{
"prefix":"cc.SimpleAudioEngine:preloadEffect(const_char_filePath)",
"body":["cc.SimpleAudioEngine:preloadEffect(const_char_filePath)"],
"description":"preloadEffect(const_char_filePath)",
"scope":"source.lua"},

"cc.SimpleAudioEngine:getEffectsVolume()":{
"prefix":"cc.SimpleAudioEngine:getEffectsVolume()",
"body":["cc.SimpleAudioEngine:getEffectsVolume()"],
"description":"getEffectsVolume()",
"scope":"source.lua"},

"cc.SimpleAudioEngine:pauseEffect(unsigned_int_soundId)":{
"prefix":"cc.SimpleAudioEngine:pauseEffect(unsigned_int_soundId)",
"body":["cc.SimpleAudioEngine:pauseEffect(unsigned_int_soundId)"],
"description":"pauseEffect(unsigned_int_soundId)",
"scope":"source.lua"},

"cc.SimpleAudioEngine:playEffect(const_char_filePath,bool_loop,float_pitch,float_pan,float_gain)":{
"prefix":"cc.SimpleAudioEngine:playEffect(const_char_filePath,bool_loop,float_pitch,float_pan,float_gain)",
"body":["cc.SimpleAudioEngine:playEffect(const_char_filePath,bool_loop,float_pitch,float_pan,float_gain)"],
"description":"playEffect(const_char_filePath,bool_loop,float_pitch,float_pan,float_gain)",
"scope":"source.lua"},

"cc.SimpleAudioEngine:resumeAllEffects()":{
"prefix":"cc.SimpleAudioEngine:resumeAllEffects()",
"body":["cc.SimpleAudioEngine:resumeAllEffects()"],
"description":"resumeAllEffects()",
"scope":"source.lua"},

"cc.SimpleAudioEngine:setEffectsVolume(float_volume)":{
"prefix":"cc.SimpleAudioEngine:setEffectsVolume(float_volume)",
"body":["cc.SimpleAudioEngine:setEffectsVolume(float_volume)"],
"description":"setEffectsVolume(float_volume)",
"scope":"source.lua"},

"cc.SimpleAudioEngine:stopEffect(unsigned_int_soundId)":{
"prefix":"cc.SimpleAudioEngine:stopEffect(unsigned_int_soundId)",
"body":["cc.SimpleAudioEngine:stopEffect(unsigned_int_soundId)"],
"description":"stopEffect(unsigned_int_soundId)",
"scope":"source.lua"},

"cc.SimpleAudioEngine:pauseAllEffects()":{
"prefix":"cc.SimpleAudioEngine:pauseAllEffects()",
"body":["cc.SimpleAudioEngine:pauseAllEffects()"],
"description":"pauseAllEffects()",
"scope":"source.lua"},

"cc.SimpleAudioEngine:unloadEffect(const_char_filePath)":{
"prefix":"cc.SimpleAudioEngine:unloadEffect(const_char_filePath)",
"body":["cc.SimpleAudioEngine:unloadEffect(const_char_filePath)"],
"description":"unloadEffect(const_char_filePath)",
"scope":"source.lua"},

"cc.SimpleAudioEngine:resumeEffect(unsigned_int_soundId)":{
"prefix":"cc.SimpleAudioEngine:resumeEffect(unsigned_int_soundId)",
"body":["cc.SimpleAudioEngine:resumeEffect(unsigned_int_soundId)"],
"description":"resumeEffect(unsigned_int_soundId)",
"scope":"source.lua"},

"cc.SimpleAudioEngine:getInstance()":{
"prefix":"cc.SimpleAudioEngine:getInstance()",
"body":["cc.SimpleAudioEngine:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"cc.Controller":{
"prefix":"cc.Controller",
"body":["cc.Controller"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Controller:receiveExternalKeyEvent(int_externalKeyCode,bool_receive)":{
"prefix":"cc.Controller:receiveExternalKeyEvent(int_externalKeyCode,bool_receive)",
"body":["cc.Controller:receiveExternalKeyEvent(int_externalKeyCode,bool_receive)"],
"description":"receiveExternalKeyEvent(int_externalKeyCode,bool_receive)",
"scope":"source.lua"},

"cc.Controller:getDeviceName()":{
"prefix":"cc.Controller:getDeviceName()",
"body":["cc.Controller:getDeviceName()"],
"description":"getDeviceName()",
"scope":"source.lua"},

"cc.Controller:isConnected()":{
"prefix":"cc.Controller:isConnected()",
"body":["cc.Controller:isConnected()"],
"description":"isConnected()",
"scope":"source.lua"},

"cc.Controller:getDeviceId()":{
"prefix":"cc.Controller:getDeviceId()",
"body":["cc.Controller:getDeviceId()"],
"description":"getDeviceId()",
"scope":"source.lua"},

"cc.Controller:setTag(int_tag)":{
"prefix":"cc.Controller:setTag(int_tag)",
"body":["cc.Controller:setTag(int_tag)"],
"description":"setTag(int_tag)",
"scope":"source.lua"},

"cc.Controller:getTag()":{
"prefix":"cc.Controller:getTag()",
"body":["cc.Controller:getTag()"],
"description":"getTag()",
"scope":"source.lua"},

"cc.Controller:startDiscoveryController()":{
"prefix":"cc.Controller:startDiscoveryController()",
"body":["cc.Controller:startDiscoveryController()"],
"description":"startDiscoveryController()",
"scope":"source.lua"},

"cc.Controller:stopDiscoveryController()":{
"prefix":"cc.Controller:stopDiscoveryController()",
"body":["cc.Controller:stopDiscoveryController()"],
"description":"stopDiscoveryController()",
"scope":"source.lua"},

"cc.Controller:getControllerByDeviceId(int_deviceId)":{
"prefix":"cc.Controller:getControllerByDeviceId(int_deviceId)",
"body":["cc.Controller:getControllerByDeviceId(int_deviceId)"],
"description":"getControllerByDeviceId(int_deviceId)",
"scope":"source.lua"},

"cc.Controller:getControllerByTag(int_tag)":{
"prefix":"cc.Controller:getControllerByTag(int_tag)",
"body":["cc.Controller:getControllerByTag(int_tag)"],
"description":"getControllerByTag(int_tag)",
"scope":"source.lua"},

"cc.CSLoader":{
"prefix":"cc.CSLoader",
"body":["cc.CSLoader"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CSLoader:createNodeFromJson(const_std_string_filename)":{
"prefix":"cc.CSLoader:createNodeFromJson(const_std_string_filename)",
"body":["cc.CSLoader:createNodeFromJson(const_std_string_filename)"],
"description":"createNodeFromJson(const_std_string_filename)",
"scope":"source.lua"},

"cc.CSLoader:createNodeWithFlatBuffersFile(const_std_string_filename)":{
"prefix":"cc.CSLoader:createNodeWithFlatBuffersFile(const_std_string_filename)",
"body":["cc.CSLoader:createNodeWithFlatBuffersFile(const_std_string_filename)"],
"description":"createNodeWithFlatBuffersFile(const_std_string_filename)",
"scope":"source.lua"},

"cc.CSLoader:createNodeWithFlatBuffersFile(const_std_string_filename,const_ccNodeLoadCallback_callback)":{
"prefix":"cc.CSLoader:createNodeWithFlatBuffersFile(const_std_string_filename,const_ccNodeLoadCallback_callback)",
"body":["cc.CSLoader:createNodeWithFlatBuffersFile(const_std_string_filename,const_ccNodeLoadCallback_callback)"],
"description":"createNodeWithFlatBuffersFile(const_std_string_filename,const_ccNodeLoadCallback_callback)",
"scope":"source.lua"},

"cc.CSLoader:loadNodeWithFile(const_std_string_fileName)":{
"prefix":"cc.CSLoader:loadNodeWithFile(const_std_string_fileName)",
"body":["cc.CSLoader:loadNodeWithFile(const_std_string_fileName)"],
"description":"loadNodeWithFile(const_std_string_fileName)",
"scope":"source.lua"},

"cc.CSLoader:setJsonPath(std_string_jsonPath)":{
"prefix":"cc.CSLoader:setJsonPath(std_string_jsonPath)",
"body":["cc.CSLoader:setJsonPath(std_string_jsonPath)"],
"description":"setJsonPath(std_string_jsonPath)",
"scope":"source.lua"},

"cc.CSLoader:init()":{
"prefix":"cc.CSLoader:init()",
"body":["cc.CSLoader:init()"],
"description":"init()",
"scope":"source.lua"},

"cc.CSLoader:loadNodeWithContent(const_std_string_content)":{
"prefix":"cc.CSLoader:loadNodeWithContent(const_std_string_content)",
"body":["cc.CSLoader:loadNodeWithContent(const_std_string_content)"],
"description":"loadNodeWithContent(const_std_string_content)",
"scope":"source.lua"},

"cc.CSLoader:isRecordJsonPath()":{
"prefix":"cc.CSLoader:isRecordJsonPath()",
"body":["cc.CSLoader:isRecordJsonPath()"],
"description":"isRecordJsonPath()",
"scope":"source.lua"},

"cc.CSLoader:getJsonPath()":{
"prefix":"cc.CSLoader:getJsonPath()",
"body":["cc.CSLoader:getJsonPath()"],
"description":"getJsonPath()",
"scope":"source.lua"},

"cc.CSLoader:setRecordJsonPath(bool_record)":{
"prefix":"cc.CSLoader:setRecordJsonPath(bool_record)",
"body":["cc.CSLoader:setRecordJsonPath(bool_record)"],
"description":"setRecordJsonPath(bool_record)",
"scope":"source.lua"},

"cc.CSLoader:createNodeWithFlatBuffersForSimulator(const_std_string_filename)":{
"prefix":"cc.CSLoader:createNodeWithFlatBuffersForSimulator(const_std_string_filename)",
"body":["cc.CSLoader:createNodeWithFlatBuffersForSimulator(const_std_string_filename)"],
"description":"createNodeWithFlatBuffersForSimulator(const_std_string_filename)",
"scope":"source.lua"},

"cc.CSLoader:destroyInstance()":{
"prefix":"cc.CSLoader:destroyInstance()",
"body":["cc.CSLoader:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"cc.CSLoader:createNodeWithVisibleSize(const_std_string_filename)":{
"prefix":"cc.CSLoader:createNodeWithVisibleSize(const_std_string_filename)",
"body":["cc.CSLoader:createNodeWithVisibleSize(const_std_string_filename)"],
"description":"createNodeWithVisibleSize(const_std_string_filename)",
"scope":"source.lua"},

"cc.CSLoader:getInstance()":{
"prefix":"cc.CSLoader:getInstance()",
"body":["cc.CSLoader:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"ccexp.VideoPlayer":{
"prefix":"ccexp.VideoPlayer",
"body":["ccexp.VideoPlayer"],
"description":"cocos class",
"scope":"source.lua"},

"ccexp.VideoPlayer:getFileName()":{
"prefix":"ccexp.VideoPlayer:getFileName()",
"body":["ccexp.VideoPlayer:getFileName()"],
"description":"getFileName()",
"scope":"source.lua"},

"ccexp.VideoPlayer:getURL()":{
"prefix":"ccexp.VideoPlayer:getURL()",
"body":["ccexp.VideoPlayer:getURL()"],
"description":"getURL()",
"scope":"source.lua"},

"ccexp.VideoPlayer:play()":{
"prefix":"ccexp.VideoPlayer:play()",
"body":["ccexp.VideoPlayer:play()"],
"description":"play()",
"scope":"source.lua"},

"ccexp.VideoPlayer:setKeepAspectRatioEnabled(bool_enable)":{
"prefix":"ccexp.VideoPlayer:setKeepAspectRatioEnabled(bool_enable)",
"body":["ccexp.VideoPlayer:setKeepAspectRatioEnabled(bool_enable)"],
"description":"setKeepAspectRatioEnabled(bool_enable)",
"scope":"source.lua"},

"ccexp.VideoPlayer:stop()":{
"prefix":"ccexp.VideoPlayer:stop()",
"body":["ccexp.VideoPlayer:stop()"],
"description":"stop()",
"scope":"source.lua"},

"ccexp.VideoPlayer:setFullScreenEnabled(bool_fullscreen)":{
"prefix":"ccexp.VideoPlayer:setFullScreenEnabled(bool_fullscreen)",
"body":["ccexp.VideoPlayer:setFullScreenEnabled(bool_fullscreen)"],
"description":"setFullScreenEnabled(bool_fullscreen)",
"scope":"source.lua"},

"ccexp.VideoPlayer:setFileName(const_std_string_videoPath)":{
"prefix":"ccexp.VideoPlayer:setFileName(const_std_string_videoPath)",
"body":["ccexp.VideoPlayer:setFileName(const_std_string_videoPath)"],
"description":"setFileName(const_std_string_videoPath)",
"scope":"source.lua"},

"ccexp.VideoPlayer:setURL(const_std_string__videoURL)":{
"prefix":"ccexp.VideoPlayer:setURL(const_std_string__videoURL)",
"body":["ccexp.VideoPlayer:setURL(const_std_string__videoURL)"],
"description":"setURL(const_std_string__videoURL)",
"scope":"source.lua"},

"ccexp.VideoPlayer:isKeepAspectRatioEnabled()":{
"prefix":"ccexp.VideoPlayer:isKeepAspectRatioEnabled()",
"body":["ccexp.VideoPlayer:isKeepAspectRatioEnabled()"],
"description":"isKeepAspectRatioEnabled()",
"scope":"source.lua"},

"ccexp.VideoPlayer:onPlayEvent(int_event)":{
"prefix":"ccexp.VideoPlayer:onPlayEvent(int_event)",
"body":["ccexp.VideoPlayer:onPlayEvent(int_event)"],
"description":"onPlayEvent(int_event)",
"scope":"source.lua"},

"ccexp.VideoPlayer:isFullScreenEnabled()":{
"prefix":"ccexp.VideoPlayer:isFullScreenEnabled()",
"body":["ccexp.VideoPlayer:isFullScreenEnabled()"],
"description":"isFullScreenEnabled()",
"scope":"source.lua"},

"ccexp.VideoPlayer:isPlaying()":{
"prefix":"ccexp.VideoPlayer:isPlaying()",
"body":["ccexp.VideoPlayer:isPlaying()"],
"description":"isPlaying()",
"scope":"source.lua"},

"ccexp.VideoPlayer:seekTo(float_sec)":{
"prefix":"ccexp.VideoPlayer:seekTo(float_sec)",
"body":["ccexp.VideoPlayer:seekTo(float_sec)"],
"description":"seekTo(float_sec)",
"scope":"source.lua"},

"ccexp.WebView":{
"prefix":"ccexp.WebView",
"body":["ccexp.WebView"],
"description":"cocos class",
"scope":"source.lua"},

"ccexp.WebView:setOpacityWebView(float_opacity)":{
"prefix":"ccexp.WebView:setOpacityWebView(float_opacity)",
"body":["ccexp.WebView:setOpacityWebView(float_opacity)"],
"description":"setOpacityWebView(float_opacity)",
"scope":"source.lua"},

"ccexp.WebView:canGoBack()":{
"prefix":"ccexp.WebView:canGoBack()",
"body":["ccexp.WebView:canGoBack()"],
"description":"canGoBack()",
"scope":"source.lua"},

"ccexp.WebView:loadHTMLString(const_std_string_string,const_std_string_baseURL)":{
"prefix":"ccexp.WebView:loadHTMLString(const_std_string_string,const_std_string_baseURL)",
"body":["ccexp.WebView:loadHTMLString(const_std_string_string,const_std_string_baseURL)"],
"description":"loadHTMLString(const_std_string_string,const_std_string_baseURL)",
"scope":"source.lua"},

"ccexp.WebView:goForward()":{
"prefix":"ccexp.WebView:goForward()",
"body":["ccexp.WebView:goForward()"],
"description":"goForward()",
"scope":"source.lua"},

"ccexp.WebView:goBack()":{
"prefix":"ccexp.WebView:goBack()",
"body":["ccexp.WebView:goBack()"],
"description":"goBack()",
"scope":"source.lua"},

"ccexp.WebView:setScalesPageToFit(const_bool_scalesPageToFit)":{
"prefix":"ccexp.WebView:setScalesPageToFit(const_bool_scalesPageToFit)",
"body":["ccexp.WebView:setScalesPageToFit(const_bool_scalesPageToFit)"],
"description":"setScalesPageToFit(const_bool_scalesPageToFit)",
"scope":"source.lua"},

"ccexp.WebView:loadFile(const_std_string_fileName)":{
"prefix":"ccexp.WebView:loadFile(const_std_string_fileName)",
"body":["ccexp.WebView:loadFile(const_std_string_fileName)"],
"description":"loadFile(const_std_string_fileName)",
"scope":"source.lua"},

"ccexp.WebView:loadURL(const_std_string_url)":{
"prefix":"ccexp.WebView:loadURL(const_std_string_url)",
"body":["ccexp.WebView:loadURL(const_std_string_url)"],
"description":"loadURL(const_std_string_url)",
"scope":"source.lua"},

"ccexp.WebView:loadURL(const_std_string_url,bool_cleanCachedData)":{
"prefix":"ccexp.WebView:loadURL(const_std_string_url,bool_cleanCachedData)",
"body":["ccexp.WebView:loadURL(const_std_string_url,bool_cleanCachedData)"],
"description":"loadURL(const_std_string_url,bool_cleanCachedData)",
"scope":"source.lua"},

"ccexp.WebView:setBounces(bool_bounce)":{
"prefix":"ccexp.WebView:setBounces(bool_bounce)",
"body":["ccexp.WebView:setBounces(bool_bounce)"],
"description":"setBounces(bool_bounce)",
"scope":"source.lua"},

"ccexp.WebView:evaluateJS(const_std_string_js)":{
"prefix":"ccexp.WebView:evaluateJS(const_std_string_js)",
"body":["ccexp.WebView:evaluateJS(const_std_string_js)"],
"description":"evaluateJS(const_std_string_js)",
"scope":"source.lua"},

"ccexp.WebView:setBackgroundTransparent()":{
"prefix":"ccexp.WebView:setBackgroundTransparent()",
"body":["ccexp.WebView:setBackgroundTransparent()"],
"description":"setBackgroundTransparent()",
"scope":"source.lua"},

"ccexp.WebView:getOnJSCallback()":{
"prefix":"ccexp.WebView:getOnJSCallback()",
"body":["ccexp.WebView:getOnJSCallback()"],
"description":"getOnJSCallback()",
"scope":"source.lua"},

"ccexp.WebView:canGoForward()":{
"prefix":"ccexp.WebView:canGoForward()",
"body":["ccexp.WebView:canGoForward()"],
"description":"canGoForward()",
"scope":"source.lua"},

"ccexp.WebView:stopLoading()":{
"prefix":"ccexp.WebView:stopLoading()",
"body":["ccexp.WebView:stopLoading()"],
"description":"stopLoading()",
"scope":"source.lua"},

"ccexp.WebView:getOpacityWebView()":{
"prefix":"ccexp.WebView:getOpacityWebView()",
"body":["ccexp.WebView:getOpacityWebView()"],
"description":"getOpacityWebView()",
"scope":"source.lua"},

"ccexp.WebView:reload()":{
"prefix":"ccexp.WebView:reload()",
"body":["ccexp.WebView:reload()"],
"description":"reload()",
"scope":"source.lua"},

"ccexp.WebView:setJavascriptInterfaceScheme(const_std_string_scheme)":{
"prefix":"ccexp.WebView:setJavascriptInterfaceScheme(const_std_string_scheme)",
"body":["ccexp.WebView:setJavascriptInterfaceScheme(const_std_string_scheme)"],
"description":"setJavascriptInterfaceScheme(const_std_string_scheme)",
"scope":"source.lua"},

"ccexp.WebView:create()":{
"prefix":"ccexp.WebView:create()",
"body":["ccexp.WebView:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Control":{
"prefix":"cc.Control",
"body":["cc.Control"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Control:setEnabled(bool_bEnabled)":{
"prefix":"cc.Control:setEnabled(bool_bEnabled)",
"body":["cc.Control:setEnabled(bool_bEnabled)"],
"description":"setEnabled(bool_bEnabled)",
"scope":"source.lua"},

"cc.Control:sendActionsForControlEvents(EventType_controlEvents)":{
"prefix":"cc.Control:sendActionsForControlEvents(EventType_controlEvents)",
"body":["cc.Control:sendActionsForControlEvents(EventType_controlEvents)"],
"description":"sendActionsForControlEvents(EventType_controlEvents)",
"scope":"source.lua"},

"cc.Control:setSelected(bool_bSelected)":{
"prefix":"cc.Control:setSelected(bool_bSelected)",
"body":["cc.Control:setSelected(bool_bSelected)"],
"description":"setSelected(bool_bSelected)",
"scope":"source.lua"},

"cc.Control:isEnabled()":{
"prefix":"cc.Control:isEnabled()",
"body":["cc.Control:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"cc.Control:needsLayout()":{
"prefix":"cc.Control:needsLayout()",
"body":["cc.Control:needsLayout()"],
"description":"needsLayout()",
"scope":"source.lua"},

"cc.Control:hasVisibleParents()":{
"prefix":"cc.Control:hasVisibleParents()",
"body":["cc.Control:hasVisibleParents()"],
"description":"hasVisibleParents()",
"scope":"source.lua"},

"cc.Control:isSelected()":{
"prefix":"cc.Control:isSelected()",
"body":["cc.Control:isSelected()"],
"description":"isSelected()",
"scope":"source.lua"},

"cc.Control:isTouchInside(Touch__touch)":{
"prefix":"cc.Control:isTouchInside(Touch__touch)",
"body":["cc.Control:isTouchInside(Touch__touch)"],
"description":"isTouchInside(Touch__touch)",
"scope":"source.lua"},

"cc.Control:setHighlighted(bool_bHighlighted)":{
"prefix":"cc.Control:setHighlighted(bool_bHighlighted)",
"body":["cc.Control:setHighlighted(bool_bHighlighted)"],
"description":"setHighlighted(bool_bHighlighted)",
"scope":"source.lua"},

"cc.Control:getTouchLocation(Touch_touch)":{
"prefix":"cc.Control:getTouchLocation(Touch_touch)",
"body":["cc.Control:getTouchLocation(Touch_touch)"],
"description":"getTouchLocation(Touch_touch)",
"scope":"source.lua"},

"cc.Control:isHighlighted()":{
"prefix":"cc.Control:isHighlighted()",
"body":["cc.Control:isHighlighted()"],
"description":"isHighlighted()",
"scope":"source.lua"},

"cc.Control:create()":{
"prefix":"cc.Control:create()",
"body":["cc.Control:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ControlButton":{
"prefix":"cc.ControlButton",
"body":["cc.ControlButton"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ControlButton:isPushed()":{
"prefix":"cc.ControlButton:isPushed()",
"body":["cc.ControlButton:isPushed()"],
"description":"isPushed()",
"scope":"source.lua"},

"cc.ControlButton:setTitleLabelForState(Node_label,State_state)":{
"prefix":"cc.ControlButton:setTitleLabelForState(Node_label,State_state)",
"body":["cc.ControlButton:setTitleLabelForState(Node_label,State_state)"],
"description":"setTitleLabelForState(Node_label,State_state)",
"scope":"source.lua"},

"cc.ControlButton:setAdjustBackgroundImage(bool_adjustBackgroundImage)":{
"prefix":"cc.ControlButton:setAdjustBackgroundImage(bool_adjustBackgroundImage)",
"body":["cc.ControlButton:setAdjustBackgroundImage(bool_adjustBackgroundImage)"],
"description":"setAdjustBackgroundImage(bool_adjustBackgroundImage)",
"scope":"source.lua"},

"cc.ControlButton:setTitleForState(const_std_string_title,State_state)":{
"prefix":"cc.ControlButton:setTitleForState(const_std_string_title,State_state)",
"body":["cc.ControlButton:setTitleForState(const_std_string_title,State_state)"],
"description":"setTitleForState(const_std_string_title,State_state)",
"scope":"source.lua"},

"cc.ControlButton:initWithBackgroundSprite(cocos2d_ui_Scale9Sprite_sprite)":{
"prefix":"cc.ControlButton:initWithBackgroundSprite(cocos2d_ui_Scale9Sprite_sprite)",
"body":["cc.ControlButton:initWithBackgroundSprite(cocos2d_ui_Scale9Sprite_sprite)"],
"description":"initWithBackgroundSprite(cocos2d_ui_Scale9Sprite_sprite)",
"scope":"source.lua"},

"cc.ControlButton:getTitleTTFSizeForState(State_state)":{
"prefix":"cc.ControlButton:getTitleTTFSizeForState(State_state)",
"body":["cc.ControlButton:getTitleTTFSizeForState(State_state)"],
"description":"getTitleTTFSizeForState(State_state)",
"scope":"source.lua"},

"cc.ControlButton:setTitleTTFForState(const_std_string_fntFile,State_state)":{
"prefix":"cc.ControlButton:setTitleTTFForState(const_std_string_fntFile,State_state)",
"body":["cc.ControlButton:setTitleTTFForState(const_std_string_fntFile,State_state)"],
"description":"setTitleTTFForState(const_std_string_fntFile,State_state)",
"scope":"source.lua"},

"cc.ControlButton:setTitleTTFSizeForState(float_size,State_state)":{
"prefix":"cc.ControlButton:setTitleTTFSizeForState(float_size,State_state)",
"body":["cc.ControlButton:setTitleTTFSizeForState(float_size,State_state)"],
"description":"setTitleTTFSizeForState(float_size,State_state)",
"scope":"source.lua"},

"cc.ControlButton:getBackgroundSpriteForState(State_state)":{
"prefix":"cc.ControlButton:getBackgroundSpriteForState(State_state)",
"body":["cc.ControlButton:getBackgroundSpriteForState(State_state)"],
"description":"getBackgroundSpriteForState(State_state)",
"scope":"source.lua"},

"cc.ControlButton:initWithTitleAndFontNameAndFontSize(const_std_string_title,const_std_string_fontName,float_fontSize)":{
"prefix":"cc.ControlButton:initWithTitleAndFontNameAndFontSize(const_std_string_title,const_std_string_fontName,float_fontSize)",
"body":["cc.ControlButton:initWithTitleAndFontNameAndFontSize(const_std_string_title,const_std_string_fontName,float_fontSize)"],
"description":"initWithTitleAndFontNameAndFontSize(const_std_string_title,const_std_string_fontName,float_fontSize)",
"scope":"source.lua"},

"cc.ControlButton:setTitleBMFontForState(const_std_string_fntFile,State_state)":{
"prefix":"cc.ControlButton:setTitleBMFontForState(const_std_string_fntFile,State_state)",
"body":["cc.ControlButton:setTitleBMFontForState(const_std_string_fntFile,State_state)"],
"description":"setTitleBMFontForState(const_std_string_fntFile,State_state)",
"scope":"source.lua"},

"cc.ControlButton:getTitleTTFForState(State_state)":{
"prefix":"cc.ControlButton:getTitleTTFForState(State_state)",
"body":["cc.ControlButton:getTitleTTFForState(State_state)"],
"description":"getTitleTTFForState(State_state)",
"scope":"source.lua"},

"cc.ControlButton:getTitleColorForState(State_state)":{
"prefix":"cc.ControlButton:getTitleColorForState(State_state)",
"body":["cc.ControlButton:getTitleColorForState(State_state)"],
"description":"getTitleColorForState(State_state)",
"scope":"source.lua"},

"cc.ControlButton:setTitleColorForState(const_Color3B_color,State_state)":{
"prefix":"cc.ControlButton:setTitleColorForState(const_Color3B_color,State_state)",
"body":["cc.ControlButton:setTitleColorForState(const_Color3B_color,State_state)"],
"description":"setTitleColorForState(const_Color3B_color,State_state)",
"scope":"source.lua"},

"cc.ControlButton:doesAdjustBackgroundImage()":{
"prefix":"cc.ControlButton:doesAdjustBackgroundImage()",
"body":["cc.ControlButton:doesAdjustBackgroundImage()"],
"description":"doesAdjustBackgroundImage()",
"scope":"source.lua"},

"cc.ControlButton:setBackgroundSpriteFrameForState(SpriteFrame__spriteFrame,State_state)":{
"prefix":"cc.ControlButton:setBackgroundSpriteFrameForState(SpriteFrame__spriteFrame,State_state)",
"body":["cc.ControlButton:setBackgroundSpriteFrameForState(SpriteFrame__spriteFrame,State_state)"],
"description":"setBackgroundSpriteFrameForState(SpriteFrame__spriteFrame,State_state)",
"scope":"source.lua"},

"cc.ControlButton:setBackgroundSpriteForState(cocos2d_ui_Scale9Sprite_sprite,State_state)":{
"prefix":"cc.ControlButton:setBackgroundSpriteForState(cocos2d_ui_Scale9Sprite_sprite,State_state)",
"body":["cc.ControlButton:setBackgroundSpriteForState(cocos2d_ui_Scale9Sprite_sprite,State_state)"],
"description":"setBackgroundSpriteForState(cocos2d_ui_Scale9Sprite_sprite,State_state)",
"scope":"source.lua"},

"cc.ControlButton:getTitleBMFontForState(State_state)":{
"prefix":"cc.ControlButton:getTitleBMFontForState(State_state)",
"body":["cc.ControlButton:getTitleBMFontForState(State_state)"],
"description":"getTitleBMFontForState(State_state)",
"scope":"source.lua"},

"cc.ControlButton:getTitleLabelForState(State_state)":{
"prefix":"cc.ControlButton:getTitleLabelForState(State_state)",
"body":["cc.ControlButton:getTitleLabelForState(State_state)"],
"description":"getTitleLabelForState(State_state)",
"scope":"source.lua"},

"cc.ControlButton:setMargins(int_marginH,int_marginV)":{
"prefix":"cc.ControlButton:setMargins(int_marginH,int_marginV)",
"body":["cc.ControlButton:setMargins(int_marginH,int_marginV)"],
"description":"setMargins(int_marginH,int_marginV)",
"scope":"source.lua"},

"cc.ControlButton:getCurrentTitle()":{
"prefix":"cc.ControlButton:getCurrentTitle()",
"body":["cc.ControlButton:getCurrentTitle()"],
"description":"getCurrentTitle()",
"scope":"source.lua"},

"cc.ControlButton:initWithLabelAndBackgroundSprite(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite,bool_adjustBackGroundSize)":{
"prefix":"cc.ControlButton:initWithLabelAndBackgroundSprite(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite,bool_adjustBackGroundSize)",
"body":["cc.ControlButton:initWithLabelAndBackgroundSprite(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite,bool_adjustBackGroundSize)"],
"description":"initWithLabelAndBackgroundSprite(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite,bool_adjustBackGroundSize)",
"scope":"source.lua"},

"cc.ControlButton:getTitleForState(State_state)":{
"prefix":"cc.ControlButton:getTitleForState(State_state)",
"body":["cc.ControlButton:getTitleForState(State_state)"],
"description":"getTitleForState(State_state)",
"scope":"source.lua"},

"cc.ControlButton:create()":{
"prefix":"cc.ControlButton:create()",
"body":["cc.ControlButton:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ControlButton:create(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite)":{
"prefix":"cc.ControlButton:create(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite)",
"body":["cc.ControlButton:create(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite)"],
"description":"create(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite)",
"scope":"source.lua"},

"cc.ControlButton:create(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite,bool_adjustBackGroundSize)":{
"prefix":"cc.ControlButton:create(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite,bool_adjustBackGroundSize)",
"body":["cc.ControlButton:create(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite,bool_adjustBackGroundSize)"],
"description":"create(Node_label,cocos2d_ui_Scale9Sprite_backgroundSprite,bool_adjustBackGroundSize)",
"scope":"source.lua"},

"cc.ControlHuePicker":{
"prefix":"cc.ControlHuePicker",
"body":["cc.ControlHuePicker"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ControlHuePicker:initWithTargetAndPos(Node_target,Vec2_pos)":{
"prefix":"cc.ControlHuePicker:initWithTargetAndPos(Node_target,Vec2_pos)",
"body":["cc.ControlHuePicker:initWithTargetAndPos(Node_target,Vec2_pos)"],
"description":"initWithTargetAndPos(Node_target,Vec2_pos)",
"scope":"source.lua"},

"cc.ControlHuePicker:setHue(float_val)":{
"prefix":"cc.ControlHuePicker:setHue(float_val)",
"body":["cc.ControlHuePicker:setHue(float_val)"],
"description":"setHue(float_val)",
"scope":"source.lua"},

"cc.ControlHuePicker:setHuePercentage(float_val)":{
"prefix":"cc.ControlHuePicker:setHuePercentage(float_val)",
"body":["cc.ControlHuePicker:setHuePercentage(float_val)"],
"description":"setHuePercentage(float_val)",
"scope":"source.lua"},

"cc.ControlHuePicker:create(Node_target,Vec2_pos)":{
"prefix":"cc.ControlHuePicker:create(Node_target,Vec2_pos)",
"body":["cc.ControlHuePicker:create(Node_target,Vec2_pos)"],
"description":"create(Node_target,Vec2_pos)",
"scope":"source.lua"},

"cc.ControlSaturationBrightnessPicker":{
"prefix":"cc.ControlSaturationBrightnessPicker",
"body":["cc.ControlSaturationBrightnessPicker"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ControlSaturationBrightnessPicker:initWithTargetAndPos(Node_target,Vec2_pos)":{
"prefix":"cc.ControlSaturationBrightnessPicker:initWithTargetAndPos(Node_target,Vec2_pos)",
"body":["cc.ControlSaturationBrightnessPicker:initWithTargetAndPos(Node_target,Vec2_pos)"],
"description":"initWithTargetAndPos(Node_target,Vec2_pos)",
"scope":"source.lua"},

"cc.ControlSaturationBrightnessPicker:create(Node_target,Vec2_pos)":{
"prefix":"cc.ControlSaturationBrightnessPicker:create(Node_target,Vec2_pos)",
"body":["cc.ControlSaturationBrightnessPicker:create(Node_target,Vec2_pos)"],
"description":"create(Node_target,Vec2_pos)",
"scope":"source.lua"},

"cc.ControlColourPicker":{
"prefix":"cc.ControlColourPicker",
"body":["cc.ControlColourPicker"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ControlColourPicker:hueSliderValueChanged(Ref__sender,Control_EventType_controlEvent)":{
"prefix":"cc.ControlColourPicker:hueSliderValueChanged(Ref__sender,Control_EventType_controlEvent)",
"body":["cc.ControlColourPicker:hueSliderValueChanged(Ref__sender,Control_EventType_controlEvent)"],
"description":"hueSliderValueChanged(Ref__sender,Control_EventType_controlEvent)",
"scope":"source.lua"},

"cc.ControlColourPicker:colourSliderValueChanged(Ref__sender,Control_EventType_controlEvent)":{
"prefix":"cc.ControlColourPicker:colourSliderValueChanged(Ref__sender,Control_EventType_controlEvent)",
"body":["cc.ControlColourPicker:colourSliderValueChanged(Ref__sender,Control_EventType_controlEvent)"],
"description":"colourSliderValueChanged(Ref__sender,Control_EventType_controlEvent)",
"scope":"source.lua"},

"cc.ControlColourPicker:create()":{
"prefix":"cc.ControlColourPicker:create()",
"body":["cc.ControlColourPicker:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ControlPotentiometer":{
"prefix":"cc.ControlPotentiometer",
"body":["cc.ControlPotentiometer"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ControlPotentiometer:setValue(float_value)":{
"prefix":"cc.ControlPotentiometer:setValue(float_value)",
"body":["cc.ControlPotentiometer:setValue(float_value)"],
"description":"setValue(float_value)",
"scope":"source.lua"},

"cc.ControlPotentiometer:getMaximumValue()":{
"prefix":"cc.ControlPotentiometer:getMaximumValue()",
"body":["cc.ControlPotentiometer:getMaximumValue()"],
"description":"getMaximumValue()",
"scope":"source.lua"},

"cc.ControlPotentiometer:potentiometerBegan(Vec2_location)":{
"prefix":"cc.ControlPotentiometer:potentiometerBegan(Vec2_location)",
"body":["cc.ControlPotentiometer:potentiometerBegan(Vec2_location)"],
"description":"potentiometerBegan(Vec2_location)",
"scope":"source.lua"},

"cc.ControlPotentiometer:setMaximumValue(float_maximumValue)":{
"prefix":"cc.ControlPotentiometer:setMaximumValue(float_maximumValue)",
"body":["cc.ControlPotentiometer:setMaximumValue(float_maximumValue)"],
"description":"setMaximumValue(float_maximumValue)",
"scope":"source.lua"},

"cc.ControlPotentiometer:getMinimumValue()":{
"prefix":"cc.ControlPotentiometer:getMinimumValue()",
"body":["cc.ControlPotentiometer:getMinimumValue()"],
"description":"getMinimumValue()",
"scope":"source.lua"},

"cc.ControlPotentiometer:getValue()":{
"prefix":"cc.ControlPotentiometer:getValue()",
"body":["cc.ControlPotentiometer:getValue()"],
"description":"getValue()",
"scope":"source.lua"},

"cc.ControlPotentiometer:distanceBetweenPointAndPoint(Vec2_point1,Vec2_point2)":{
"prefix":"cc.ControlPotentiometer:distanceBetweenPointAndPoint(Vec2_point1,Vec2_point2)",
"body":["cc.ControlPotentiometer:distanceBetweenPointAndPoint(Vec2_point1,Vec2_point2)"],
"description":"distanceBetweenPointAndPoint(Vec2_point1,Vec2_point2)",
"scope":"source.lua"},

"cc.ControlPotentiometer:potentiometerEnded(Vec2_location)":{
"prefix":"cc.ControlPotentiometer:potentiometerEnded(Vec2_location)",
"body":["cc.ControlPotentiometer:potentiometerEnded(Vec2_location)"],
"description":"potentiometerEnded(Vec2_location)",
"scope":"source.lua"},

"cc.ControlPotentiometer:setMinimumValue(float_minimumValue)":{
"prefix":"cc.ControlPotentiometer:setMinimumValue(float_minimumValue)",
"body":["cc.ControlPotentiometer:setMinimumValue(float_minimumValue)"],
"description":"setMinimumValue(float_minimumValue)",
"scope":"source.lua"},

"cc.ControlPotentiometer:initWithTrackSprite_ProgressTimer_ThumbSprite(Sprite_trackSprite,ProgressTimer_progressTimer,Sprite_thumbSprite)":{
"prefix":"cc.ControlPotentiometer:initWithTrackSprite_ProgressTimer_ThumbSprite(Sprite_trackSprite,ProgressTimer_progressTimer,Sprite_thumbSprite)",
"body":["cc.ControlPotentiometer:initWithTrackSprite_ProgressTimer_ThumbSprite(Sprite_trackSprite,ProgressTimer_progressTimer,Sprite_thumbSprite)"],
"description":"initWithTrackSprite_ProgressTimer_ThumbSprite(Sprite_trackSprite,ProgressTimer_progressTimer,Sprite_thumbSprite)",
"scope":"source.lua"},

"cc.ControlPotentiometer:potentiometerMoved(Vec2_location)":{
"prefix":"cc.ControlPotentiometer:potentiometerMoved(Vec2_location)",
"body":["cc.ControlPotentiometer:potentiometerMoved(Vec2_location)"],
"description":"potentiometerMoved(Vec2_location)",
"scope":"source.lua"},

"cc.ControlPotentiometer:create(const_char_backgroundFile,const_char_progressFile,const_char_thumbFile)":{
"prefix":"cc.ControlPotentiometer:create(const_char_backgroundFile,const_char_progressFile,const_char_thumbFile)",
"body":["cc.ControlPotentiometer:create(const_char_backgroundFile,const_char_progressFile,const_char_thumbFile)"],
"description":"create(const_char_backgroundFile,const_char_progressFile,const_char_thumbFile)",
"scope":"source.lua"},

"cc.ControlSlider":{
"prefix":"cc.ControlSlider",
"body":["cc.ControlSlider"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ControlSlider:initWithSprites(Sprite__backgroundSprite,Sprite_progressSprite,Sprite_thumbSprite)":{
"prefix":"cc.ControlSlider:initWithSprites(Sprite__backgroundSprite,Sprite_progressSprite,Sprite_thumbSprite)",
"body":["cc.ControlSlider:initWithSprites(Sprite__backgroundSprite,Sprite_progressSprite,Sprite_thumbSprite)"],
"description":"initWithSprites(Sprite__backgroundSprite,Sprite_progressSprite,Sprite_thumbSprite)",
"scope":"source.lua"},

"cc.ControlSlider:initWithSprites(Sprite__backgroundSprite,Sprite_progressSprite,Sprite_thumbSprite,Sprite_selectedThumbSprite)":{
"prefix":"cc.ControlSlider:initWithSprites(Sprite__backgroundSprite,Sprite_progressSprite,Sprite_thumbSprite,Sprite_selectedThumbSprite)",
"body":["cc.ControlSlider:initWithSprites(Sprite__backgroundSprite,Sprite_progressSprite,Sprite_thumbSprite,Sprite_selectedThumbSprite)"],
"description":"initWithSprites(Sprite__backgroundSprite,Sprite_progressSprite,Sprite_thumbSprite,Sprite_selectedThumbSprite)",
"scope":"source.lua"},

"cc.ControlSlider:setMaximumValue(float_val)":{
"prefix":"cc.ControlSlider:setMaximumValue(float_val)",
"body":["cc.ControlSlider:setMaximumValue(float_val)"],
"description":"setMaximumValue(float_val)",
"scope":"source.lua"},

"cc.ControlSlider:setValue(float_val)":{
"prefix":"cc.ControlSlider:setValue(float_val)",
"body":["cc.ControlSlider:setValue(float_val)"],
"description":"setValue(float_val)",
"scope":"source.lua"},

"cc.ControlSlider:locationFromTouch(Touch_touch)":{
"prefix":"cc.ControlSlider:locationFromTouch(Touch_touch)",
"body":["cc.ControlSlider:locationFromTouch(Touch_touch)"],
"description":"locationFromTouch(Touch_touch)",
"scope":"source.lua"},

"cc.ControlSlider:setMinimumValue(float_val)":{
"prefix":"cc.ControlSlider:setMinimumValue(float_val)",
"body":["cc.ControlSlider:setMinimumValue(float_val)"],
"description":"setMinimumValue(float_val)",
"scope":"source.lua"},

"cc.ControlSlider:create(const_char_bgFile,const_char_progressFile,const_char_thumbFile)":{
"prefix":"cc.ControlSlider:create(const_char_bgFile,const_char_progressFile,const_char_thumbFile)",
"body":["cc.ControlSlider:create(const_char_bgFile,const_char_progressFile,const_char_thumbFile)"],
"description":"create(const_char_bgFile,const_char_progressFile,const_char_thumbFile)",
"scope":"source.lua"},

"cc.ControlSlider:create(Sprite__backgroundSprite,Sprite_pogressSprite,Sprite_thumbSprite)":{
"prefix":"cc.ControlSlider:create(Sprite__backgroundSprite,Sprite_pogressSprite,Sprite_thumbSprite)",
"body":["cc.ControlSlider:create(Sprite__backgroundSprite,Sprite_pogressSprite,Sprite_thumbSprite)"],
"description":"create(Sprite__backgroundSprite,Sprite_pogressSprite,Sprite_thumbSprite)",
"scope":"source.lua"},

"cc.ControlSlider:create(const_char_bgFile,const_char_progressFile,const_char_thumbFile,const_char_selectedThumbSpriteFile)":{
"prefix":"cc.ControlSlider:create(const_char_bgFile,const_char_progressFile,const_char_thumbFile,const_char_selectedThumbSpriteFile)",
"body":["cc.ControlSlider:create(const_char_bgFile,const_char_progressFile,const_char_thumbFile,const_char_selectedThumbSpriteFile)"],
"description":"create(const_char_bgFile,const_char_progressFile,const_char_thumbFile,const_char_selectedThumbSpriteFile)",
"scope":"source.lua"},

"cc.ControlSlider:create(Sprite__backgroundSprite,Sprite_pogressSprite,Sprite_thumbSprite,Sprite_selectedThumbSprite)":{
"prefix":"cc.ControlSlider:create(Sprite__backgroundSprite,Sprite_pogressSprite,Sprite_thumbSprite,Sprite_selectedThumbSprite)",
"body":["cc.ControlSlider:create(Sprite__backgroundSprite,Sprite_pogressSprite,Sprite_thumbSprite,Sprite_selectedThumbSprite)"],
"description":"create(Sprite__backgroundSprite,Sprite_pogressSprite,Sprite_thumbSprite,Sprite_selectedThumbSprite)",
"scope":"source.lua"},

"cc.ControlStepper":{
"prefix":"cc.ControlStepper",
"body":["cc.ControlStepper"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ControlStepper:setValue(double_value)":{
"prefix":"cc.ControlStepper:setValue(double_value)",
"body":["cc.ControlStepper:setValue(double_value)"],
"description":"setValue(double_value)",
"scope":"source.lua"},

"cc.ControlStepper:setStepValue(double_stepValue)":{
"prefix":"cc.ControlStepper:setStepValue(double_stepValue)",
"body":["cc.ControlStepper:setStepValue(double_stepValue)"],
"description":"setStepValue(double_stepValue)",
"scope":"source.lua"},

"cc.ControlStepper:initWithMinusSpriteAndPlusSprite(Sprite_minusSprite,Sprite_plusSprite)":{
"prefix":"cc.ControlStepper:initWithMinusSpriteAndPlusSprite(Sprite_minusSprite,Sprite_plusSprite)",
"body":["cc.ControlStepper:initWithMinusSpriteAndPlusSprite(Sprite_minusSprite,Sprite_plusSprite)"],
"description":"initWithMinusSpriteAndPlusSprite(Sprite_minusSprite,Sprite_plusSprite)",
"scope":"source.lua"},

"cc.ControlStepper:setValueWithSendingEvent(double_value,bool_send)":{
"prefix":"cc.ControlStepper:setValueWithSendingEvent(double_value,bool_send)",
"body":["cc.ControlStepper:setValueWithSendingEvent(double_value,bool_send)"],
"description":"setValueWithSendingEvent(double_value,bool_send)",
"scope":"source.lua"},

"cc.ControlStepper:setMaximumValue(double_maximumValue)":{
"prefix":"cc.ControlStepper:setMaximumValue(double_maximumValue)",
"body":["cc.ControlStepper:setMaximumValue(double_maximumValue)"],
"description":"setMaximumValue(double_maximumValue)",
"scope":"source.lua"},

"cc.ControlStepper:setWraps(bool_wraps)":{
"prefix":"cc.ControlStepper:setWraps(bool_wraps)",
"body":["cc.ControlStepper:setWraps(bool_wraps)"],
"description":"setWraps(bool_wraps)",
"scope":"source.lua"},

"cc.ControlStepper:startAutorepeat()":{
"prefix":"cc.ControlStepper:startAutorepeat()",
"body":["cc.ControlStepper:startAutorepeat()"],
"description":"startAutorepeat()",
"scope":"source.lua"},

"cc.ControlStepper:updateLayoutUsingTouchLocation(Vec2_location)":{
"prefix":"cc.ControlStepper:updateLayoutUsingTouchLocation(Vec2_location)",
"body":["cc.ControlStepper:updateLayoutUsingTouchLocation(Vec2_location)"],
"description":"updateLayoutUsingTouchLocation(Vec2_location)",
"scope":"source.lua"},

"cc.ControlStepper:isContinuous()":{
"prefix":"cc.ControlStepper:isContinuous()",
"body":["cc.ControlStepper:isContinuous()"],
"description":"isContinuous()",
"scope":"source.lua"},

"cc.ControlStepper:stopAutorepeat()":{
"prefix":"cc.ControlStepper:stopAutorepeat()",
"body":["cc.ControlStepper:stopAutorepeat()"],
"description":"stopAutorepeat()",
"scope":"source.lua"},

"cc.ControlStepper:setMinimumValue(double_minimumValue)":{
"prefix":"cc.ControlStepper:setMinimumValue(double_minimumValue)",
"body":["cc.ControlStepper:setMinimumValue(double_minimumValue)"],
"description":"setMinimumValue(double_minimumValue)",
"scope":"source.lua"},

"cc.ControlStepper:getValue()":{
"prefix":"cc.ControlStepper:getValue()",
"body":["cc.ControlStepper:getValue()"],
"description":"getValue()",
"scope":"source.lua"},

"cc.ControlStepper:create(Sprite_minusSprite,Sprite_plusSprite)":{
"prefix":"cc.ControlStepper:create(Sprite_minusSprite,Sprite_plusSprite)",
"body":["cc.ControlStepper:create(Sprite_minusSprite,Sprite_plusSprite)"],
"description":"create(Sprite_minusSprite,Sprite_plusSprite)",
"scope":"source.lua"},

"cc.ControlSwitch":{
"prefix":"cc.ControlSwitch",
"body":["cc.ControlSwitch"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ControlSwitch:setOn(bool_isOn,bool_animated)":{
"prefix":"cc.ControlSwitch:setOn(bool_isOn,bool_animated)",
"body":["cc.ControlSwitch:setOn(bool_isOn,bool_animated)"],
"description":"setOn(bool_isOn,bool_animated)",
"scope":"source.lua"},

"cc.ControlSwitch:locationFromTouch(Touch_touch)":{
"prefix":"cc.ControlSwitch:locationFromTouch(Touch_touch)",
"body":["cc.ControlSwitch:locationFromTouch(Touch_touch)"],
"description":"locationFromTouch(Touch_touch)",
"scope":"source.lua"},

"cc.ControlSwitch:isOn()":{
"prefix":"cc.ControlSwitch:isOn()",
"body":["cc.ControlSwitch:isOn()"],
"description":"isOn()",
"scope":"source.lua"},

"cc.ControlSwitch:initWithMaskSprite(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite)":{
"prefix":"cc.ControlSwitch:initWithMaskSprite(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite)",
"body":["cc.ControlSwitch:initWithMaskSprite(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite)"],
"description":"initWithMaskSprite(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite)",
"scope":"source.lua"},

"cc.ControlSwitch:initWithMaskSprite(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite,Label_onLabel,Label_offLabel)":{
"prefix":"cc.ControlSwitch:initWithMaskSprite(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite,Label_onLabel,Label_offLabel)",
"body":["cc.ControlSwitch:initWithMaskSprite(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite,Label_onLabel,Label_offLabel)"],
"description":"initWithMaskSprite(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite,Label_onLabel,Label_offLabel)",
"scope":"source.lua"},

"cc.ControlSwitch:hasMoved()":{
"prefix":"cc.ControlSwitch:hasMoved()",
"body":["cc.ControlSwitch:hasMoved()"],
"description":"hasMoved()",
"scope":"source.lua"},

"cc.ControlSwitch:create(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite,Label_onLabel,Label_offLabel)":{
"prefix":"cc.ControlSwitch:create(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite,Label_onLabel,Label_offLabel)",
"body":["cc.ControlSwitch:create(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite,Label_onLabel,Label_offLabel)"],
"description":"create(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite,Label_onLabel,Label_offLabel)",
"scope":"source.lua"},

"cc.ControlSwitch:create(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite)":{
"prefix":"cc.ControlSwitch:create(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite)",
"body":["cc.ControlSwitch:create(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite)"],
"description":"create(Sprite_maskSprite,Sprite__onSprite,Sprite__offSprite,Sprite__thumbSprite)",
"scope":"source.lua"},

"cc.ScrollView":{
"prefix":"cc.ScrollView",
"body":["cc.ScrollView"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ScrollView:setDirection(Direction_dir)":{
"prefix":"cc.ScrollView:setDirection(Direction_dir)",
"body":["cc.ScrollView:setDirection(Direction_dir)"],
"description":"setDirection(Direction_dir)",
"scope":"source.lua"},

"cc.ScrollView:getDirection()":{
"prefix":"cc.ScrollView:getDirection()",
"body":["cc.ScrollView:getDirection()"],
"description":"getDirection()",
"scope":"source.lua"},

"cc.ScrollView:create()":{
"prefix":"cc.ScrollView:create()",
"body":["cc.ScrollView:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ScrollView:scrollToTop(float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToTop(float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToTop(float_timeInSec,bool_attenuated)"],
"description":"scrollToTop(float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:scrollToPercentHorizontal(float_percent,float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToPercentHorizontal(float_percent,float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToPercentHorizontal(float_percent,float_timeInSec,bool_attenuated)"],
"description":"scrollToPercentHorizontal(float_percent,float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:setScrollBarOpacity(GLubyte_opacity)":{
"prefix":"cc.ScrollView:setScrollBarOpacity(GLubyte_opacity)",
"body":["cc.ScrollView:setScrollBarOpacity(GLubyte_opacity)"],
"description":"setScrollBarOpacity(GLubyte_opacity)",
"scope":"source.lua"},

"cc.ScrollView:setScrollBarEnabled(bool_enabled)":{
"prefix":"cc.ScrollView:setScrollBarEnabled(bool_enabled)",
"body":["cc.ScrollView:setScrollBarEnabled(bool_enabled)"],
"description":"setScrollBarEnabled(bool_enabled)",
"scope":"source.lua"},

"cc.ScrollView:isInertiaScrollEnabled()":{
"prefix":"cc.ScrollView:isInertiaScrollEnabled()",
"body":["cc.ScrollView:isInertiaScrollEnabled()"],
"description":"isInertiaScrollEnabled()",
"scope":"source.lua"},

"cc.ScrollView:scrollToPercentBothDirection(const_Vec2_percent,float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToPercentBothDirection(const_Vec2_percent,float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToPercentBothDirection(const_Vec2_percent,float_timeInSec,bool_attenuated)"],
"description":"scrollToPercentBothDirection(const_Vec2_percent,float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:getScrolledPercentBothDirection()":{
"prefix":"cc.ScrollView:getScrolledPercentBothDirection()",
"body":["cc.ScrollView:getScrolledPercentBothDirection()"],
"description":"getScrolledPercentBothDirection()",
"scope":"source.lua"},

"cc.ScrollView:setScrollBarColor(const_Color3B_color)":{
"prefix":"cc.ScrollView:setScrollBarColor(const_Color3B_color)",
"body":["cc.ScrollView:setScrollBarColor(const_Color3B_color)"],
"description":"setScrollBarColor(const_Color3B_color)",
"scope":"source.lua"},

"cc.ScrollView:scrollToBottomLeft(float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToBottomLeft(float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToBottomLeft(float_timeInSec,bool_attenuated)"],
"description":"scrollToBottomLeft(float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:getInnerContainer()":{
"prefix":"cc.ScrollView:getInnerContainer()",
"body":["cc.ScrollView:getInnerContainer()"],
"description":"getInnerContainer()",
"scope":"source.lua"},

"cc.ScrollView:jumpToBottom()":{
"prefix":"cc.ScrollView:jumpToBottom()",
"body":["cc.ScrollView:jumpToBottom()"],
"description":"jumpToBottom()",
"scope":"source.lua"},

"cc.ScrollView:setInnerContainerPosition(const_Vec2_pos)":{
"prefix":"cc.ScrollView:setInnerContainerPosition(const_Vec2_pos)",
"body":["cc.ScrollView:setInnerContainerPosition(const_Vec2_pos)"],
"description":"setInnerContainerPosition(const_Vec2_pos)",
"scope":"source.lua"},

"cc.ScrollView:scrollToTopLeft(float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToTopLeft(float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToTopLeft(float_timeInSec,bool_attenuated)"],
"description":"scrollToTopLeft(float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:jumpToTopRight()":{
"prefix":"cc.ScrollView:jumpToTopRight()",
"body":["cc.ScrollView:jumpToTopRight()"],
"description":"jumpToTopRight()",
"scope":"source.lua"},

"cc.ScrollView:jumpToTop()":{
"prefix":"cc.ScrollView:jumpToTop()",
"body":["cc.ScrollView:jumpToTop()"],
"description":"jumpToTop()",
"scope":"source.lua"},

"cc.ScrollView:setInnerContainerSize(const_Size_size)":{
"prefix":"cc.ScrollView:setInnerContainerSize(const_Size_size)",
"body":["cc.ScrollView:setInnerContainerSize(const_Size_size)"],
"description":"setInnerContainerSize(const_Size_size)",
"scope":"source.lua"},

"cc.ScrollView:getInnerContainerPosition()":{
"prefix":"cc.ScrollView:getInnerContainerPosition()",
"body":["cc.ScrollView:getInnerContainerPosition()"],
"description":"getInnerContainerPosition()",
"scope":"source.lua"},

"cc.ScrollView:getScrolledPercentVertical()":{
"prefix":"cc.ScrollView:getScrolledPercentVertical()",
"body":["cc.ScrollView:getScrolledPercentVertical()"],
"description":"getScrolledPercentVertical()",
"scope":"source.lua"},

"cc.ScrollView:isBounceEnabled()":{
"prefix":"cc.ScrollView:isBounceEnabled()",
"body":["cc.ScrollView:isBounceEnabled()"],
"description":"isBounceEnabled()",
"scope":"source.lua"},

"cc.ScrollView:jumpToPercentVertical(float_percent)":{
"prefix":"cc.ScrollView:jumpToPercentVertical(float_percent)",
"body":["cc.ScrollView:jumpToPercentVertical(float_percent)"],
"description":"jumpToPercentVertical(float_percent)",
"scope":"source.lua"},

"cc.ScrollView:addEventListener(const_ccScrollViewCallback_callback)":{
"prefix":"cc.ScrollView:addEventListener(const_ccScrollViewCallback_callback)",
"body":["cc.ScrollView:addEventListener(const_ccScrollViewCallback_callback)"],
"description":"addEventListener(const_ccScrollViewCallback_callback)",
"scope":"source.lua"},

"cc.ScrollView:setScrollBarAutoHideTime(float_autoHideTime)":{
"prefix":"cc.ScrollView:setScrollBarAutoHideTime(float_autoHideTime)",
"body":["cc.ScrollView:setScrollBarAutoHideTime(float_autoHideTime)"],
"description":"setScrollBarAutoHideTime(float_autoHideTime)",
"scope":"source.lua"},

"cc.ScrollView:isAutoScrolling()":{
"prefix":"cc.ScrollView:isAutoScrolling()",
"body":["cc.ScrollView:isAutoScrolling()"],
"description":"isAutoScrolling()",
"scope":"source.lua"},

"cc.ScrollView:setScrollBarPositionFromCornerForHorizontal(const_Vec2_positionFromCorner)":{
"prefix":"cc.ScrollView:setScrollBarPositionFromCornerForHorizontal(const_Vec2_positionFromCorner)",
"body":["cc.ScrollView:setScrollBarPositionFromCornerForHorizontal(const_Vec2_positionFromCorner)"],
"description":"setScrollBarPositionFromCornerForHorizontal(const_Vec2_positionFromCorner)",
"scope":"source.lua"},

"cc.ScrollView:setInertiaScrollEnabled(bool_enabled)":{
"prefix":"cc.ScrollView:setInertiaScrollEnabled(bool_enabled)",
"body":["cc.ScrollView:setInertiaScrollEnabled(bool_enabled)"],
"description":"setInertiaScrollEnabled(bool_enabled)",
"scope":"source.lua"},

"cc.ScrollView:setScrollBarAutoHideEnabled(bool_autoHideEnabled)":{
"prefix":"cc.ScrollView:setScrollBarAutoHideEnabled(bool_autoHideEnabled)",
"body":["cc.ScrollView:setScrollBarAutoHideEnabled(bool_autoHideEnabled)"],
"description":"setScrollBarAutoHideEnabled(bool_autoHideEnabled)",
"scope":"source.lua"},

"cc.ScrollView:getScrollBarColor()":{
"prefix":"cc.ScrollView:getScrollBarColor()",
"body":["cc.ScrollView:getScrollBarColor()"],
"description":"getScrollBarColor()",
"scope":"source.lua"},

"cc.ScrollView:setScrollBarWidth(float_width)":{
"prefix":"cc.ScrollView:setScrollBarWidth(float_width)",
"body":["cc.ScrollView:setScrollBarWidth(float_width)"],
"description":"setScrollBarWidth(float_width)",
"scope":"source.lua"},

"cc.ScrollView:jumpToTopLeft()":{
"prefix":"cc.ScrollView:jumpToTopLeft()",
"body":["cc.ScrollView:jumpToTopLeft()"],
"description":"jumpToTopLeft()",
"scope":"source.lua"},

"cc.ScrollView:isScrollBarEnabled()":{
"prefix":"cc.ScrollView:isScrollBarEnabled()",
"body":["cc.ScrollView:isScrollBarEnabled()"],
"description":"isScrollBarEnabled()",
"scope":"source.lua"},

"cc.ScrollView:jumpToBottomRight()":{
"prefix":"cc.ScrollView:jumpToBottomRight()",
"body":["cc.ScrollView:jumpToBottomRight()"],
"description":"jumpToBottomRight()",
"scope":"source.lua"},

"cc.ScrollView:setTouchTotalTimeThreshold(float_touchTotalTimeThreshold)":{
"prefix":"cc.ScrollView:setTouchTotalTimeThreshold(float_touchTotalTimeThreshold)",
"body":["cc.ScrollView:setTouchTotalTimeThreshold(float_touchTotalTimeThreshold)"],
"description":"setTouchTotalTimeThreshold(float_touchTotalTimeThreshold)",
"scope":"source.lua"},

"cc.ScrollView:getTouchTotalTimeThreshold()":{
"prefix":"cc.ScrollView:getTouchTotalTimeThreshold()",
"body":["cc.ScrollView:getTouchTotalTimeThreshold()"],
"description":"getTouchTotalTimeThreshold()",
"scope":"source.lua"},

"cc.ScrollView:getScrollBarPositionFromCornerForHorizontal()":{
"prefix":"cc.ScrollView:getScrollBarPositionFromCornerForHorizontal()",
"body":["cc.ScrollView:getScrollBarPositionFromCornerForHorizontal()"],
"description":"getScrollBarPositionFromCornerForHorizontal()",
"scope":"source.lua"},

"cc.ScrollView:getScrolledPercentHorizontal()":{
"prefix":"cc.ScrollView:getScrolledPercentHorizontal()",
"body":["cc.ScrollView:getScrolledPercentHorizontal()"],
"description":"getScrolledPercentHorizontal()",
"scope":"source.lua"},

"cc.ScrollView:setBounceEnabled(bool_enabled)":{
"prefix":"cc.ScrollView:setBounceEnabled(bool_enabled)",
"body":["cc.ScrollView:setBounceEnabled(bool_enabled)"],
"description":"setBounceEnabled(bool_enabled)",
"scope":"source.lua"},

"cc.ScrollView:stopAutoScroll()":{
"prefix":"cc.ScrollView:stopAutoScroll()",
"body":["cc.ScrollView:stopAutoScroll()"],
"description":"stopAutoScroll()",
"scope":"source.lua"},

"cc.ScrollView:scrollToTopRight(float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToTopRight(float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToTopRight(float_timeInSec,bool_attenuated)"],
"description":"scrollToTopRight(float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:isScrolling()":{
"prefix":"cc.ScrollView:isScrolling()",
"body":["cc.ScrollView:isScrolling()"],
"description":"isScrolling()",
"scope":"source.lua"},

"cc.ScrollView:scrollToLeft(float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToLeft(float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToLeft(float_timeInSec,bool_attenuated)"],
"description":"scrollToLeft(float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:jumpToPercentBothDirection(const_Vec2_percent)":{
"prefix":"cc.ScrollView:jumpToPercentBothDirection(const_Vec2_percent)",
"body":["cc.ScrollView:jumpToPercentBothDirection(const_Vec2_percent)"],
"description":"jumpToPercentBothDirection(const_Vec2_percent)",
"scope":"source.lua"},

"cc.ScrollView:scrollToPercentVertical(float_percent,float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToPercentVertical(float_percent,float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToPercentVertical(float_percent,float_timeInSec,bool_attenuated)"],
"description":"scrollToPercentVertical(float_percent,float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:scrollToBottom(float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToBottom(float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToBottom(float_timeInSec,bool_attenuated)"],
"description":"scrollToBottom(float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:getScrollBarOpacity()":{
"prefix":"cc.ScrollView:getScrollBarOpacity()",
"body":["cc.ScrollView:getScrollBarOpacity()"],
"description":"getScrollBarOpacity()",
"scope":"source.lua"},

"cc.ScrollView:scrollToBottomRight(float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToBottomRight(float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToBottomRight(float_timeInSec,bool_attenuated)"],
"description":"scrollToBottomRight(float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:setScrollBarPositionFromCorner(const_Vec2_positionFromCorner)":{
"prefix":"cc.ScrollView:setScrollBarPositionFromCorner(const_Vec2_positionFromCorner)",
"body":["cc.ScrollView:setScrollBarPositionFromCorner(const_Vec2_positionFromCorner)"],
"description":"setScrollBarPositionFromCorner(const_Vec2_positionFromCorner)",
"scope":"source.lua"},

"cc.ScrollView:setScrollBarPositionFromCornerForVertical(const_Vec2_positionFromCorner)":{
"prefix":"cc.ScrollView:setScrollBarPositionFromCornerForVertical(const_Vec2_positionFromCorner)",
"body":["cc.ScrollView:setScrollBarPositionFromCornerForVertical(const_Vec2_positionFromCorner)"],
"description":"setScrollBarPositionFromCornerForVertical(const_Vec2_positionFromCorner)",
"scope":"source.lua"},

"cc.ScrollView:getScrollBarAutoHideTime()":{
"prefix":"cc.ScrollView:getScrollBarAutoHideTime()",
"body":["cc.ScrollView:getScrollBarAutoHideTime()"],
"description":"getScrollBarAutoHideTime()",
"scope":"source.lua"},

"cc.ScrollView:jumpToLeft()":{
"prefix":"cc.ScrollView:jumpToLeft()",
"body":["cc.ScrollView:jumpToLeft()"],
"description":"jumpToLeft()",
"scope":"source.lua"},

"cc.ScrollView:scrollToRight(float_timeInSec,bool_attenuated)":{
"prefix":"cc.ScrollView:scrollToRight(float_timeInSec,bool_attenuated)",
"body":["cc.ScrollView:scrollToRight(float_timeInSec,bool_attenuated)"],
"description":"scrollToRight(float_timeInSec,bool_attenuated)",
"scope":"source.lua"},

"cc.ScrollView:getScrollBarPositionFromCornerForVertical()":{
"prefix":"cc.ScrollView:getScrollBarPositionFromCornerForVertical()",
"body":["cc.ScrollView:getScrollBarPositionFromCornerForVertical()"],
"description":"getScrollBarPositionFromCornerForVertical()",
"scope":"source.lua"},

"cc.ScrollView:getScrollBarWidth()":{
"prefix":"cc.ScrollView:getScrollBarWidth()",
"body":["cc.ScrollView:getScrollBarWidth()"],
"description":"getScrollBarWidth()",
"scope":"source.lua"},

"cc.ScrollView:isScrollBarAutoHideEnabled()":{
"prefix":"cc.ScrollView:isScrollBarAutoHideEnabled()",
"body":["cc.ScrollView:isScrollBarAutoHideEnabled()"],
"description":"isScrollBarAutoHideEnabled()",
"scope":"source.lua"},

"cc.ScrollView:jumpToBottomLeft()":{
"prefix":"cc.ScrollView:jumpToBottomLeft()",
"body":["cc.ScrollView:jumpToBottomLeft()"],
"description":"jumpToBottomLeft()",
"scope":"source.lua"},

"cc.ScrollView:jumpToRight()":{
"prefix":"cc.ScrollView:jumpToRight()",
"body":["cc.ScrollView:jumpToRight()"],
"description":"jumpToRight()",
"scope":"source.lua"},

"cc.ScrollView:getInnerContainerSize()":{
"prefix":"cc.ScrollView:getInnerContainerSize()",
"body":["cc.ScrollView:getInnerContainerSize()"],
"description":"getInnerContainerSize()",
"scope":"source.lua"},

"cc.ScrollView:jumpToPercentHorizontal(float_percent)":{
"prefix":"cc.ScrollView:jumpToPercentHorizontal(float_percent)",
"body":["cc.ScrollView:jumpToPercentHorizontal(float_percent)"],
"description":"jumpToPercentHorizontal(float_percent)",
"scope":"source.lua"},

"cc.TableViewCell":{
"prefix":"cc.TableViewCell",
"body":["cc.TableViewCell"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TableViewCell:reset()":{
"prefix":"cc.TableViewCell:reset()",
"body":["cc.TableViewCell:reset()"],
"description":"reset()",
"scope":"source.lua"},

"cc.TableViewCell:getIdx()":{
"prefix":"cc.TableViewCell:getIdx()",
"body":["cc.TableViewCell:getIdx()"],
"description":"getIdx()",
"scope":"source.lua"},

"cc.TableViewCell:setIdx(ssize_t_uIdx)":{
"prefix":"cc.TableViewCell:setIdx(ssize_t_uIdx)",
"body":["cc.TableViewCell:setIdx(ssize_t_uIdx)"],
"description":"setIdx(ssize_t_uIdx)",
"scope":"source.lua"},

"cc.TableView":{
"prefix":"cc.TableView",
"body":["cc.TableView"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TableView:updateCellAtIndex(ssize_t_idx)":{
"prefix":"cc.TableView:updateCellAtIndex(ssize_t_idx)",
"body":["cc.TableView:updateCellAtIndex(ssize_t_idx)"],
"description":"updateCellAtIndex(ssize_t_idx)",
"scope":"source.lua"},

"cc.TableView:setVerticalFillOrder(VerticalFillOrder_order)":{
"prefix":"cc.TableView:setVerticalFillOrder(VerticalFillOrder_order)",
"body":["cc.TableView:setVerticalFillOrder(VerticalFillOrder_order)"],
"description":"setVerticalFillOrder(VerticalFillOrder_order)",
"scope":"source.lua"},

"cc.TableView:scrollViewDidZoom(ScrollView_view)":{
"prefix":"cc.TableView:scrollViewDidZoom(ScrollView_view)",
"body":["cc.TableView:scrollViewDidZoom(ScrollView_view)"],
"description":"scrollViewDidZoom(ScrollView_view)",
"scope":"source.lua"},

"cc.TableView:_updateContentSize()":{
"prefix":"cc.TableView:_updateContentSize()",
"body":["cc.TableView:_updateContentSize()"],
"description":"_updateContentSize()",
"scope":"source.lua"},

"cc.TableView:getVerticalFillOrder()":{
"prefix":"cc.TableView:getVerticalFillOrder()",
"body":["cc.TableView:getVerticalFillOrder()"],
"description":"getVerticalFillOrder()",
"scope":"source.lua"},

"cc.TableView:removeCellAtIndex(ssize_t_idx)":{
"prefix":"cc.TableView:removeCellAtIndex(ssize_t_idx)",
"body":["cc.TableView:removeCellAtIndex(ssize_t_idx)"],
"description":"removeCellAtIndex(ssize_t_idx)",
"scope":"source.lua"},

"cc.TableView:initWithViewSize(Size_size,Node_container)":{
"prefix":"cc.TableView:initWithViewSize(Size_size,Node_container)",
"body":["cc.TableView:initWithViewSize(Size_size,Node_container)"],
"description":"initWithViewSize(Size_size,Node_container)",
"scope":"source.lua"},

"cc.TableView:scrollViewDidScroll(ScrollView_view)":{
"prefix":"cc.TableView:scrollViewDidScroll(ScrollView_view)",
"body":["cc.TableView:scrollViewDidScroll(ScrollView_view)"],
"description":"scrollViewDidScroll(ScrollView_view)",
"scope":"source.lua"},

"cc.TableView:reloadData()":{
"prefix":"cc.TableView:reloadData()",
"body":["cc.TableView:reloadData()"],
"description":"reloadData()",
"scope":"source.lua"},

"cc.TableView:insertCellAtIndex(ssize_t_idx)":{
"prefix":"cc.TableView:insertCellAtIndex(ssize_t_idx)",
"body":["cc.TableView:insertCellAtIndex(ssize_t_idx)"],
"description":"insertCellAtIndex(ssize_t_idx)",
"scope":"source.lua"},

"cc.TableView:cellAtIndex(ssize_t_idx)":{
"prefix":"cc.TableView:cellAtIndex(ssize_t_idx)",
"body":["cc.TableView:cellAtIndex(ssize_t_idx)"],
"description":"cellAtIndex(ssize_t_idx)",
"scope":"source.lua"},

"cc.TableView:dequeueCell()":{
"prefix":"cc.TableView:dequeueCell()",
"body":["cc.TableView:dequeueCell()"],
"description":"dequeueCell()",
"scope":"source.lua"},

"cc.AssetsManager":{
"prefix":"cc.AssetsManager",
"body":["cc.AssetsManager"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AssetsManager:setStoragePath(const_char_storagePath)":{
"prefix":"cc.AssetsManager:setStoragePath(const_char_storagePath)",
"body":["cc.AssetsManager:setStoragePath(const_char_storagePath)"],
"description":"setStoragePath(const_char_storagePath)",
"scope":"source.lua"},

"cc.AssetsManager:setPackageUrl(const_char_packageUrl)":{
"prefix":"cc.AssetsManager:setPackageUrl(const_char_packageUrl)",
"body":["cc.AssetsManager:setPackageUrl(const_char_packageUrl)"],
"description":"setPackageUrl(const_char_packageUrl)",
"scope":"source.lua"},

"cc.AssetsManager:checkUpdate()":{
"prefix":"cc.AssetsManager:checkUpdate()",
"body":["cc.AssetsManager:checkUpdate()"],
"description":"checkUpdate()",
"scope":"source.lua"},

"cc.AssetsManager:getStoragePath()":{
"prefix":"cc.AssetsManager:getStoragePath()",
"body":["cc.AssetsManager:getStoragePath()"],
"description":"getStoragePath()",
"scope":"source.lua"},

"cc.AssetsManager:update()":{
"prefix":"cc.AssetsManager:update()",
"body":["cc.AssetsManager:update()"],
"description":"update()",
"scope":"source.lua"},

"cc.AssetsManager:setConnectionTimeout(unsigned_int_timeout)":{
"prefix":"cc.AssetsManager:setConnectionTimeout(unsigned_int_timeout)",
"body":["cc.AssetsManager:setConnectionTimeout(unsigned_int_timeout)"],
"description":"setConnectionTimeout(unsigned_int_timeout)",
"scope":"source.lua"},

"cc.AssetsManager:setVersionFileUrl(const_char_versionFileUrl)":{
"prefix":"cc.AssetsManager:setVersionFileUrl(const_char_versionFileUrl)",
"body":["cc.AssetsManager:setVersionFileUrl(const_char_versionFileUrl)"],
"description":"setVersionFileUrl(const_char_versionFileUrl)",
"scope":"source.lua"},

"cc.AssetsManager:getPackageUrl()":{
"prefix":"cc.AssetsManager:getPackageUrl()",
"body":["cc.AssetsManager:getPackageUrl()"],
"description":"getPackageUrl()",
"scope":"source.lua"},

"cc.AssetsManager:getConnectionTimeout()":{
"prefix":"cc.AssetsManager:getConnectionTimeout()",
"body":["cc.AssetsManager:getConnectionTimeout()"],
"description":"getConnectionTimeout()",
"scope":"source.lua"},

"cc.AssetsManager:getVersion()":{
"prefix":"cc.AssetsManager:getVersion()",
"body":["cc.AssetsManager:getVersion()"],
"description":"getVersion()",
"scope":"source.lua"},

"cc.AssetsManager:getVersionFileUrl()":{
"prefix":"cc.AssetsManager:getVersionFileUrl()",
"body":["cc.AssetsManager:getVersionFileUrl()"],
"description":"getVersionFileUrl()",
"scope":"source.lua"},

"cc.AssetsManager:deleteVersion()":{
"prefix":"cc.AssetsManager:deleteVersion()",
"body":["cc.AssetsManager:deleteVersion()"],
"description":"deleteVersion()",
"scope":"source.lua"},

"cc.AssetsManager:create(const_char_packageUrl,const_char_versionFileUrl,const_char_storagePath,ErrorCallback_errorCallback,ProgressCallback_progressCallback,SuccessCallback_successCallback)":{
"prefix":"cc.AssetsManager:create(const_char_packageUrl,const_char_versionFileUrl,const_char_storagePath,ErrorCallback_errorCallback,ProgressCallback_progressCallback,SuccessCallback_successCallback)",
"body":["cc.AssetsManager:create(const_char_packageUrl,const_char_versionFileUrl,const_char_storagePath,ErrorCallback_errorCallback,ProgressCallback_progressCallback,SuccessCallback_successCallback)"],
"description":"create(const_char_packageUrl,const_char_versionFileUrl,const_char_storagePath,ErrorCallback_errorCallback,ProgressCallback_progressCallback,SuccessCallback_successCallback)",
"scope":"source.lua"},

"cc.EventAssetsManagerEx":{
"prefix":"cc.EventAssetsManagerEx",
"body":["cc.EventAssetsManagerEx"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventAssetsManagerEx:getAssetsManagerEx()":{
"prefix":"cc.EventAssetsManagerEx:getAssetsManagerEx()",
"body":["cc.EventAssetsManagerEx:getAssetsManagerEx()"],
"description":"getAssetsManagerEx()",
"scope":"source.lua"},

"cc.EventAssetsManagerEx:getAssetId()":{
"prefix":"cc.EventAssetsManagerEx:getAssetId()",
"body":["cc.EventAssetsManagerEx:getAssetId()"],
"description":"getAssetId()",
"scope":"source.lua"},

"cc.EventAssetsManagerEx:getCURLECode()":{
"prefix":"cc.EventAssetsManagerEx:getCURLECode()",
"body":["cc.EventAssetsManagerEx:getCURLECode()"],
"description":"getCURLECode()",
"scope":"source.lua"},

"cc.EventAssetsManagerEx:getMessage()":{
"prefix":"cc.EventAssetsManagerEx:getMessage()",
"body":["cc.EventAssetsManagerEx:getMessage()"],
"description":"getMessage()",
"scope":"source.lua"},

"cc.EventAssetsManagerEx:getCURLMCode()":{
"prefix":"cc.EventAssetsManagerEx:getCURLMCode()",
"body":["cc.EventAssetsManagerEx:getCURLMCode()"],
"description":"getCURLMCode()",
"scope":"source.lua"},

"cc.EventAssetsManagerEx:getPercentByFile()":{
"prefix":"cc.EventAssetsManagerEx:getPercentByFile()",
"body":["cc.EventAssetsManagerEx:getPercentByFile()"],
"description":"getPercentByFile()",
"scope":"source.lua"},

"cc.EventAssetsManagerEx:getEventCode()":{
"prefix":"cc.EventAssetsManagerEx:getEventCode()",
"body":["cc.EventAssetsManagerEx:getEventCode()"],
"description":"getEventCode()",
"scope":"source.lua"},

"cc.EventAssetsManagerEx:getPercent()":{
"prefix":"cc.EventAssetsManagerEx:getPercent()",
"body":["cc.EventAssetsManagerEx:getPercent()"],
"description":"getPercent()",
"scope":"source.lua"},

"cc.Manifest":{
"prefix":"cc.Manifest",
"body":["cc.Manifest"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Manifest:getManifestFileUrl()":{
"prefix":"cc.Manifest:getManifestFileUrl()",
"body":["cc.Manifest:getManifestFileUrl()"],
"description":"getManifestFileUrl()",
"scope":"source.lua"},

"cc.Manifest:isVersionLoaded()":{
"prefix":"cc.Manifest:isVersionLoaded()",
"body":["cc.Manifest:isVersionLoaded()"],
"description":"isVersionLoaded()",
"scope":"source.lua"},

"cc.Manifest:isLoaded()":{
"prefix":"cc.Manifest:isLoaded()",
"body":["cc.Manifest:isLoaded()"],
"description":"isLoaded()",
"scope":"source.lua"},

"cc.Manifest:getPackageUrl()":{
"prefix":"cc.Manifest:getPackageUrl()",
"body":["cc.Manifest:getPackageUrl()"],
"description":"getPackageUrl()",
"scope":"source.lua"},

"cc.Manifest:getVersion()":{
"prefix":"cc.Manifest:getVersion()",
"body":["cc.Manifest:getVersion()"],
"description":"getVersion()",
"scope":"source.lua"},

"cc.Manifest:getVersionFileUrl()":{
"prefix":"cc.Manifest:getVersionFileUrl()",
"body":["cc.Manifest:getVersionFileUrl()"],
"description":"getVersionFileUrl()",
"scope":"source.lua"},

"cc.Manifest:getSearchPaths()":{
"prefix":"cc.Manifest:getSearchPaths()",
"body":["cc.Manifest:getSearchPaths()"],
"description":"getSearchPaths()",
"scope":"source.lua"},

"cc.AssetsManagerEx":{
"prefix":"cc.AssetsManagerEx",
"body":["cc.AssetsManagerEx"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AssetsManagerEx:getState()":{
"prefix":"cc.AssetsManagerEx:getState()",
"body":["cc.AssetsManagerEx:getState()"],
"description":"getState()",
"scope":"source.lua"},

"cc.AssetsManagerEx:getMaxConcurrentTask()":{
"prefix":"cc.AssetsManagerEx:getMaxConcurrentTask()",
"body":["cc.AssetsManagerEx:getMaxConcurrentTask()"],
"description":"getMaxConcurrentTask()",
"scope":"source.lua"},

"cc.AssetsManagerEx:checkUpdate()":{
"prefix":"cc.AssetsManagerEx:checkUpdate()",
"body":["cc.AssetsManagerEx:checkUpdate()"],
"description":"checkUpdate()",
"scope":"source.lua"},

"cc.AssetsManagerEx:setVerifyCallback()":{
"prefix":"cc.AssetsManagerEx:setVerifyCallback()",
"body":["cc.AssetsManagerEx:setVerifyCallback()"],
"description":"setVerifyCallback()",
"scope":"source.lua"},

"cc.AssetsManagerEx:getStoragePath()":{
"prefix":"cc.AssetsManagerEx:getStoragePath()",
"body":["cc.AssetsManagerEx:getStoragePath()"],
"description":"getStoragePath()",
"scope":"source.lua"},

"cc.AssetsManagerEx:update()":{
"prefix":"cc.AssetsManagerEx:update()",
"body":["cc.AssetsManagerEx:update()"],
"description":"update()",
"scope":"source.lua"},

"cc.AssetsManagerEx:setVersionCompareHandle()":{
"prefix":"cc.AssetsManagerEx:setVersionCompareHandle()",
"body":["cc.AssetsManagerEx:setVersionCompareHandle()"],
"description":"setVersionCompareHandle()",
"scope":"source.lua"},

"cc.AssetsManagerEx:setMaxConcurrentTask(const_int_max)":{
"prefix":"cc.AssetsManagerEx:setMaxConcurrentTask(const_int_max)",
"body":["cc.AssetsManagerEx:setMaxConcurrentTask(const_int_max)"],
"description":"setMaxConcurrentTask(const_int_max)",
"scope":"source.lua"},

"cc.AssetsManagerEx:getLocalManifest()":{
"prefix":"cc.AssetsManagerEx:getLocalManifest()",
"body":["cc.AssetsManagerEx:getLocalManifest()"],
"description":"getLocalManifest()",
"scope":"source.lua"},

"cc.AssetsManagerEx:getRemoteManifest()":{
"prefix":"cc.AssetsManagerEx:getRemoteManifest()",
"body":["cc.AssetsManagerEx:getRemoteManifest()"],
"description":"getRemoteManifest()",
"scope":"source.lua"},

"cc.AssetsManagerEx:downloadFailedAssets()":{
"prefix":"cc.AssetsManagerEx:downloadFailedAssets()",
"body":["cc.AssetsManagerEx:downloadFailedAssets()"],
"description":"downloadFailedAssets()",
"scope":"source.lua"},

"cc.AssetsManagerEx:create(const_std_string_manifestUrl,const_std_string_storagePath)":{
"prefix":"cc.AssetsManagerEx:create(const_std_string_manifestUrl,const_std_string_storagePath)",
"body":["cc.AssetsManagerEx:create(const_std_string_manifestUrl,const_std_string_storagePath)"],
"description":"create(const_std_string_manifestUrl,const_std_string_storagePath)",
"scope":"source.lua"},

"cc.EventListenerAssetsManagerEx":{
"prefix":"cc.EventListenerAssetsManagerEx",
"body":["cc.EventListenerAssetsManagerEx"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerAssetsManagerEx:init(const_AssetsManagerEx_AssetsManagerEx)":{
"prefix":"cc.EventListenerAssetsManagerEx:init(const_AssetsManagerEx_AssetsManagerEx)",
"body":["cc.EventListenerAssetsManagerEx:init(const_AssetsManagerEx_AssetsManagerEx)"],
"description":"init(const_AssetsManagerEx_AssetsManagerEx)",
"scope":"source.lua"},

"cc.ParticleSystem3D":{
"prefix":"cc.ParticleSystem3D",
"body":["cc.ParticleSystem3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ParticleSystem3D:removeAffector(int_index)":{
"prefix":"cc.ParticleSystem3D:removeAffector(int_index)",
"body":["cc.ParticleSystem3D:removeAffector(int_index)"],
"description":"removeAffector(int_index)",
"scope":"source.lua"},

"cc.ParticleSystem3D:resumeParticleSystem()":{
"prefix":"cc.ParticleSystem3D:resumeParticleSystem()",
"body":["cc.ParticleSystem3D:resumeParticleSystem()"],
"description":"resumeParticleSystem()",
"scope":"source.lua"},

"cc.ParticleSystem3D:removeAllAffector()":{
"prefix":"cc.ParticleSystem3D:removeAllAffector()",
"body":["cc.ParticleSystem3D:removeAllAffector()"],
"description":"removeAllAffector()",
"scope":"source.lua"},

"cc.ParticleSystem3D:addAffector(Particle3DAffector_affector)":{
"prefix":"cc.ParticleSystem3D:addAffector(Particle3DAffector_affector)",
"body":["cc.ParticleSystem3D:addAffector(Particle3DAffector_affector)"],
"description":"addAffector(Particle3DAffector_affector)",
"scope":"source.lua"},

"cc.ParticleSystem3D:startParticleSystem()":{
"prefix":"cc.ParticleSystem3D:startParticleSystem()",
"body":["cc.ParticleSystem3D:startParticleSystem()"],
"description":"startParticleSystem()",
"scope":"source.lua"},

"cc.ParticleSystem3D:isEnabled()":{
"prefix":"cc.ParticleSystem3D:isEnabled()",
"body":["cc.ParticleSystem3D:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"cc.ParticleSystem3D:getRender()":{
"prefix":"cc.ParticleSystem3D:getRender()",
"body":["cc.ParticleSystem3D:getRender()"],
"description":"getRender()",
"scope":"source.lua"},

"cc.ParticleSystem3D:setEmitter(Particle3DEmitter_emitter)":{
"prefix":"cc.ParticleSystem3D:setEmitter(Particle3DEmitter_emitter)",
"body":["cc.ParticleSystem3D:setEmitter(Particle3DEmitter_emitter)"],
"description":"setEmitter(Particle3DEmitter_emitter)",
"scope":"source.lua"},

"cc.ParticleSystem3D:isKeepLocal()":{
"prefix":"cc.ParticleSystem3D:isKeepLocal()",
"body":["cc.ParticleSystem3D:isKeepLocal()"],
"description":"isKeepLocal()",
"scope":"source.lua"},

"cc.ParticleSystem3D:getParticleQuota()":{
"prefix":"cc.ParticleSystem3D:getParticleQuota()",
"body":["cc.ParticleSystem3D:getParticleQuota()"],
"description":"getParticleQuota()",
"scope":"source.lua"},

"cc.ParticleSystem3D:pauseParticleSystem()":{
"prefix":"cc.ParticleSystem3D:pauseParticleSystem()",
"body":["cc.ParticleSystem3D:pauseParticleSystem()"],
"description":"pauseParticleSystem()",
"scope":"source.lua"},

"cc.ParticleSystem3D:getState()":{
"prefix":"cc.ParticleSystem3D:getState()",
"body":["cc.ParticleSystem3D:getState()"],
"description":"getState()",
"scope":"source.lua"},

"cc.ParticleSystem3D:getAliveParticleCount()":{
"prefix":"cc.ParticleSystem3D:getAliveParticleCount()",
"body":["cc.ParticleSystem3D:getAliveParticleCount()"],
"description":"getAliveParticleCount()",
"scope":"source.lua"},

"cc.ParticleSystem3D:setParticleQuota(unsigned_int_quota)":{
"prefix":"cc.ParticleSystem3D:setParticleQuota(unsigned_int_quota)",
"body":["cc.ParticleSystem3D:setParticleQuota(unsigned_int_quota)"],
"description":"setParticleQuota(unsigned_int_quota)",
"scope":"source.lua"},

"cc.ParticleSystem3D:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.ParticleSystem3D:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.ParticleSystem3D:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.ParticleSystem3D:setRender(Particle3DRender_render)":{
"prefix":"cc.ParticleSystem3D:setRender(Particle3DRender_render)",
"body":["cc.ParticleSystem3D:setRender(Particle3DRender_render)"],
"description":"setRender(Particle3DRender_render)",
"scope":"source.lua"},

"cc.ParticleSystem3D:stopParticleSystem()":{
"prefix":"cc.ParticleSystem3D:stopParticleSystem()",
"body":["cc.ParticleSystem3D:stopParticleSystem()"],
"description":"stopParticleSystem()",
"scope":"source.lua"},

"cc.ParticleSystem3D:setKeepLocal(bool_keepLocal)":{
"prefix":"cc.ParticleSystem3D:setKeepLocal(bool_keepLocal)",
"body":["cc.ParticleSystem3D:setKeepLocal(bool_keepLocal)"],
"description":"setKeepLocal(bool_keepLocal)",
"scope":"source.lua"},

"cc.PUParticleSystem3D":{
"prefix":"cc.PUParticleSystem3D",
"body":["cc.PUParticleSystem3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PUParticleSystem3D:initWithFilePath(const_std_string_filePath)":{
"prefix":"cc.PUParticleSystem3D:initWithFilePath(const_std_string_filePath)",
"body":["cc.PUParticleSystem3D:initWithFilePath(const_std_string_filePath)"],
"description":"initWithFilePath(const_std_string_filePath)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getParticleSystemScaleVelocity()":{
"prefix":"cc.PUParticleSystem3D:getParticleSystemScaleVelocity()",
"body":["cc.PUParticleSystem3D:getParticleSystemScaleVelocity()"],
"description":"getParticleSystemScaleVelocity()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:setEmittedSystemQuota(unsigned_int_quota)":{
"prefix":"cc.PUParticleSystem3D:setEmittedSystemQuota(unsigned_int_quota)",
"body":["cc.PUParticleSystem3D:setEmittedSystemQuota(unsigned_int_quota)"],
"description":"setEmittedSystemQuota(unsigned_int_quota)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getDefaultDepth()":{
"prefix":"cc.PUParticleSystem3D:getDefaultDepth()",
"body":["cc.PUParticleSystem3D:getDefaultDepth()"],
"description":"getDefaultDepth()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getEmittedSystemQuota()":{
"prefix":"cc.PUParticleSystem3D:getEmittedSystemQuota()",
"body":["cc.PUParticleSystem3D:getEmittedSystemQuota()"],
"description":"getEmittedSystemQuota()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:clearAllParticles()":{
"prefix":"cc.PUParticleSystem3D:clearAllParticles()",
"body":["cc.PUParticleSystem3D:clearAllParticles()"],
"description":"clearAllParticles()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getMaterialName()":{
"prefix":"cc.PUParticleSystem3D:getMaterialName()",
"body":["cc.PUParticleSystem3D:getMaterialName()"],
"description":"getMaterialName()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:calulateRotationOffset()":{
"prefix":"cc.PUParticleSystem3D:calulateRotationOffset()",
"body":["cc.PUParticleSystem3D:calulateRotationOffset()"],
"description":"calulateRotationOffset()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getMaxVelocity()":{
"prefix":"cc.PUParticleSystem3D:getMaxVelocity()",
"body":["cc.PUParticleSystem3D:getMaxVelocity()"],
"description":"getMaxVelocity()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:forceUpdate(float_delta)":{
"prefix":"cc.PUParticleSystem3D:forceUpdate(float_delta)",
"body":["cc.PUParticleSystem3D:forceUpdate(float_delta)"],
"description":"forceUpdate(float_delta)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getTimeElapsedSinceStart()":{
"prefix":"cc.PUParticleSystem3D:getTimeElapsedSinceStart()",
"body":["cc.PUParticleSystem3D:getTimeElapsedSinceStart()"],
"description":"getTimeElapsedSinceStart()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:removeAllBehaviourTemplate()":{
"prefix":"cc.PUParticleSystem3D:removeAllBehaviourTemplate()",
"body":["cc.PUParticleSystem3D:removeAllBehaviourTemplate()"],
"description":"removeAllBehaviourTemplate()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getEmittedEmitterQuota()":{
"prefix":"cc.PUParticleSystem3D:getEmittedEmitterQuota()",
"body":["cc.PUParticleSystem3D:getEmittedEmitterQuota()"],
"description":"getEmittedEmitterQuota()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:forceEmission(PUEmitter_emitter,unsigned_requested)":{
"prefix":"cc.PUParticleSystem3D:forceEmission(PUEmitter_emitter,unsigned_requested)",
"body":["cc.PUParticleSystem3D:forceEmission(PUEmitter_emitter,unsigned_requested)"],
"description":"forceEmission(PUEmitter_emitter,unsigned_requested)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:addListener(PUListener_listener)":{
"prefix":"cc.PUParticleSystem3D:addListener(PUListener_listener)",
"body":["cc.PUParticleSystem3D:addListener(PUListener_listener)"],
"description":"addListener(PUListener_listener)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:isMarkedForEmission()":{
"prefix":"cc.PUParticleSystem3D:isMarkedForEmission()",
"body":["cc.PUParticleSystem3D:isMarkedForEmission()"],
"description":"isMarkedForEmission()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getDefaultWidth()":{
"prefix":"cc.PUParticleSystem3D:getDefaultWidth()",
"body":["cc.PUParticleSystem3D:getDefaultWidth()"],
"description":"getDefaultWidth()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:setEmittedEmitterQuota(unsigned_int_quota)":{
"prefix":"cc.PUParticleSystem3D:setEmittedEmitterQuota(unsigned_int_quota)",
"body":["cc.PUParticleSystem3D:setEmittedEmitterQuota(unsigned_int_quota)"],
"description":"setEmittedEmitterQuota(unsigned_int_quota)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:setMarkedForEmission(bool_isMarked)":{
"prefix":"cc.PUParticleSystem3D:setMarkedForEmission(bool_isMarked)",
"body":["cc.PUParticleSystem3D:setMarkedForEmission(bool_isMarked)"],
"description":"setMarkedForEmission(bool_isMarked)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:clone()":{
"prefix":"cc.PUParticleSystem3D:clone()",
"body":["cc.PUParticleSystem3D:clone()"],
"description":"clone()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:addEmitter(PUEmitter_emitter)":{
"prefix":"cc.PUParticleSystem3D:addEmitter(PUEmitter_emitter)",
"body":["cc.PUParticleSystem3D:addEmitter(PUEmitter_emitter)"],
"description":"addEmitter(PUEmitter_emitter)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:addBehaviourTemplate(PUBehaviour_behaviour)":{
"prefix":"cc.PUParticleSystem3D:addBehaviourTemplate(PUBehaviour_behaviour)",
"body":["cc.PUParticleSystem3D:addBehaviourTemplate(PUBehaviour_behaviour)"],
"description":"addBehaviourTemplate(PUBehaviour_behaviour)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:setDefaultWidth(const_float_width)":{
"prefix":"cc.PUParticleSystem3D:setDefaultWidth(const_float_width)",
"body":["cc.PUParticleSystem3D:setDefaultWidth(const_float_width)"],
"description":"setDefaultWidth(const_float_width)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:copyAttributesTo(PUParticleSystem3D_system)":{
"prefix":"cc.PUParticleSystem3D:copyAttributesTo(PUParticleSystem3D_system)",
"body":["cc.PUParticleSystem3D:copyAttributesTo(PUParticleSystem3D_system)"],
"description":"copyAttributesTo(PUParticleSystem3D_system)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:setMaterialName(const_std_string_name)":{
"prefix":"cc.PUParticleSystem3D:setMaterialName(const_std_string_name)",
"body":["cc.PUParticleSystem3D:setMaterialName(const_std_string_name)"],
"description":"setMaterialName(const_std_string_name)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getParentParticleSystem()":{
"prefix":"cc.PUParticleSystem3D:getParentParticleSystem()",
"body":["cc.PUParticleSystem3D:getParentParticleSystem()"],
"description":"getParentParticleSystem()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:removeListener(PUListener_listener)":{
"prefix":"cc.PUParticleSystem3D:removeListener(PUListener_listener)",
"body":["cc.PUParticleSystem3D:removeListener(PUListener_listener)"],
"description":"removeListener(PUListener_listener)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:setMaxVelocity(float_maxVelocity)":{
"prefix":"cc.PUParticleSystem3D:setMaxVelocity(float_maxVelocity)",
"body":["cc.PUParticleSystem3D:setMaxVelocity(float_maxVelocity)"],
"description":"setMaxVelocity(float_maxVelocity)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getDefaultHeight()":{
"prefix":"cc.PUParticleSystem3D:getDefaultHeight()",
"body":["cc.PUParticleSystem3D:getDefaultHeight()"],
"description":"getDefaultHeight()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getDerivedPosition()":{
"prefix":"cc.PUParticleSystem3D:getDerivedPosition()",
"body":["cc.PUParticleSystem3D:getDerivedPosition()"],
"description":"getDerivedPosition()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:rotationOffset(Vec3_pos)":{
"prefix":"cc.PUParticleSystem3D:rotationOffset(Vec3_pos)",
"body":["cc.PUParticleSystem3D:rotationOffset(Vec3_pos)"],
"description":"rotationOffset(Vec3_pos)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:removeAllEmitter()":{
"prefix":"cc.PUParticleSystem3D:removeAllEmitter()",
"body":["cc.PUParticleSystem3D:removeAllEmitter()"],
"description":"removeAllEmitter()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:setParticleSystemScaleVelocity(float_scaleVelocity)":{
"prefix":"cc.PUParticleSystem3D:setParticleSystemScaleVelocity(float_scaleVelocity)",
"body":["cc.PUParticleSystem3D:setParticleSystemScaleVelocity(float_scaleVelocity)"],
"description":"setParticleSystemScaleVelocity(float_scaleVelocity)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:getDerivedScale()":{
"prefix":"cc.PUParticleSystem3D:getDerivedScale()",
"body":["cc.PUParticleSystem3D:getDerivedScale()"],
"description":"getDerivedScale()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:setDefaultHeight(const_float_height)":{
"prefix":"cc.PUParticleSystem3D:setDefaultHeight(const_float_height)",
"body":["cc.PUParticleSystem3D:setDefaultHeight(const_float_height)"],
"description":"setDefaultHeight(const_float_height)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:removeAllListener()":{
"prefix":"cc.PUParticleSystem3D:removeAllListener()",
"body":["cc.PUParticleSystem3D:removeAllListener()"],
"description":"removeAllListener()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:initSystem(const_std_string_filePath)":{
"prefix":"cc.PUParticleSystem3D:initSystem(const_std_string_filePath)",
"body":["cc.PUParticleSystem3D:initSystem(const_std_string_filePath)"],
"description":"initSystem(const_std_string_filePath)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:makeParticleLocal(PUParticle3D_particle)":{
"prefix":"cc.PUParticleSystem3D:makeParticleLocal(PUParticle3D_particle)",
"body":["cc.PUParticleSystem3D:makeParticleLocal(PUParticle3D_particle)"],
"description":"makeParticleLocal(PUParticle3D_particle)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:removerAllObserver()":{
"prefix":"cc.PUParticleSystem3D:removerAllObserver()",
"body":["cc.PUParticleSystem3D:removerAllObserver()"],
"description":"removerAllObserver()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:setDefaultDepth(const_float_depth)":{
"prefix":"cc.PUParticleSystem3D:setDefaultDepth(const_float_depth)",
"body":["cc.PUParticleSystem3D:setDefaultDepth(const_float_depth)"],
"description":"setDefaultDepth(const_float_depth)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:addObserver(PUObserver_observer)":{
"prefix":"cc.PUParticleSystem3D:addObserver(PUObserver_observer)",
"body":["cc.PUParticleSystem3D:addObserver(PUObserver_observer)"],
"description":"addObserver(PUObserver_observer)",
"scope":"source.lua"},

"cc.PUParticleSystem3D:create()":{
"prefix":"cc.PUParticleSystem3D:create()",
"body":["cc.PUParticleSystem3D:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.PUParticleSystem3D:create(const_std_string_filePath,const_std_string_materialPath)":{
"prefix":"cc.PUParticleSystem3D:create(const_std_string_filePath,const_std_string_materialPath)",
"body":["cc.PUParticleSystem3D:create(const_std_string_filePath,const_std_string_materialPath)"],
"description":"create(const_std_string_filePath,const_std_string_materialPath)",
"scope":"source.lua"},

"cc.NavMeshAgent":{
"prefix":"cc.NavMeshAgent",
"body":["cc.NavMeshAgent"],
"description":"cocos class",
"scope":"source.lua"},

"cc.NavMeshAgent:setMaxSpeed(float_maxSpeed)":{
"prefix":"cc.NavMeshAgent:setMaxSpeed(float_maxSpeed)",
"body":["cc.NavMeshAgent:setMaxSpeed(float_maxSpeed)"],
"description":"setMaxSpeed(float_maxSpeed)",
"scope":"source.lua"},

"cc.NavMeshAgent:syncToNode()":{
"prefix":"cc.NavMeshAgent:syncToNode()",
"body":["cc.NavMeshAgent:syncToNode()"],
"description":"syncToNode()",
"scope":"source.lua"},

"cc.NavMeshAgent:completeOffMeshLink()":{
"prefix":"cc.NavMeshAgent:completeOffMeshLink()",
"body":["cc.NavMeshAgent:completeOffMeshLink()"],
"description":"completeOffMeshLink()",
"scope":"source.lua"},

"cc.NavMeshAgent:getSeparationWeight()":{
"prefix":"cc.NavMeshAgent:getSeparationWeight()",
"body":["cc.NavMeshAgent:getSeparationWeight()"],
"description":"getSeparationWeight()",
"scope":"source.lua"},

"cc.NavMeshAgent:setAutoTraverseOffMeshLink(bool_isAuto)":{
"prefix":"cc.NavMeshAgent:setAutoTraverseOffMeshLink(bool_isAuto)",
"body":["cc.NavMeshAgent:setAutoTraverseOffMeshLink(bool_isAuto)"],
"description":"setAutoTraverseOffMeshLink(bool_isAuto)",
"scope":"source.lua"},

"cc.NavMeshAgent:getCurrentVelocity()":{
"prefix":"cc.NavMeshAgent:getCurrentVelocity()",
"body":["cc.NavMeshAgent:getCurrentVelocity()"],
"description":"getCurrentVelocity()",
"scope":"source.lua"},

"cc.NavMeshAgent:syncToAgent()":{
"prefix":"cc.NavMeshAgent:syncToAgent()",
"body":["cc.NavMeshAgent:syncToAgent()"],
"description":"syncToAgent()",
"scope":"source.lua"},

"cc.NavMeshAgent:isOnOffMeshLink()":{
"prefix":"cc.NavMeshAgent:isOnOffMeshLink()",
"body":["cc.NavMeshAgent:isOnOffMeshLink()"],
"description":"isOnOffMeshLink()",
"scope":"source.lua"},

"cc.NavMeshAgent:setSeparationWeight(float_weight)":{
"prefix":"cc.NavMeshAgent:setSeparationWeight(float_weight)",
"body":["cc.NavMeshAgent:setSeparationWeight(float_weight)"],
"description":"setSeparationWeight(float_weight)",
"scope":"source.lua"},

"cc.NavMeshAgent:pause()":{
"prefix":"cc.NavMeshAgent:pause()",
"body":["cc.NavMeshAgent:pause()"],
"description":"pause()",
"scope":"source.lua"},

"cc.NavMeshAgent:getUserData()":{
"prefix":"cc.NavMeshAgent:getUserData()",
"body":["cc.NavMeshAgent:getUserData()"],
"description":"getUserData()",
"scope":"source.lua"},

"cc.NavMeshAgent:setAutoOrientation(bool_isAuto)":{
"prefix":"cc.NavMeshAgent:setAutoOrientation(bool_isAuto)",
"body":["cc.NavMeshAgent:setAutoOrientation(bool_isAuto)"],
"description":"setAutoOrientation(bool_isAuto)",
"scope":"source.lua"},

"cc.NavMeshAgent:getHeight()":{
"prefix":"cc.NavMeshAgent:getHeight()",
"body":["cc.NavMeshAgent:getHeight()"],
"description":"getHeight()",
"scope":"source.lua"},

"cc.NavMeshAgent:getMaxSpeed()":{
"prefix":"cc.NavMeshAgent:getMaxSpeed()",
"body":["cc.NavMeshAgent:getMaxSpeed()"],
"description":"getMaxSpeed()",
"scope":"source.lua"},

"cc.NavMeshAgent:getCurrentOffMeshLinkData()":{
"prefix":"cc.NavMeshAgent:getCurrentOffMeshLinkData()",
"body":["cc.NavMeshAgent:getCurrentOffMeshLinkData()"],
"description":"getCurrentOffMeshLinkData()",
"scope":"source.lua"},

"cc.NavMeshAgent:getRadius()":{
"prefix":"cc.NavMeshAgent:getRadius()",
"body":["cc.NavMeshAgent:getRadius()"],
"description":"getRadius()",
"scope":"source.lua"},

"cc.NavMeshAgent:setSyncFlag(const_NavMeshAgentSyncFlag_flag)":{
"prefix":"cc.NavMeshAgent:setSyncFlag(const_NavMeshAgentSyncFlag_flag)",
"body":["cc.NavMeshAgent:setSyncFlag(const_NavMeshAgentSyncFlag_flag)"],
"description":"setSyncFlag(const_NavMeshAgentSyncFlag_flag)",
"scope":"source.lua"},

"cc.NavMeshAgent:getSyncFlag()":{
"prefix":"cc.NavMeshAgent:getSyncFlag()",
"body":["cc.NavMeshAgent:getSyncFlag()"],
"description":"getSyncFlag()",
"scope":"source.lua"},

"cc.NavMeshAgent:resume()":{
"prefix":"cc.NavMeshAgent:resume()",
"body":["cc.NavMeshAgent:resume()"],
"description":"resume()",
"scope":"source.lua"},

"cc.NavMeshAgent:stop()":{
"prefix":"cc.NavMeshAgent:stop()",
"body":["cc.NavMeshAgent:stop()"],
"description":"stop()",
"scope":"source.lua"},

"cc.NavMeshAgent:setMaxAcceleration(float_maxAcceleration)":{
"prefix":"cc.NavMeshAgent:setMaxAcceleration(float_maxAcceleration)",
"body":["cc.NavMeshAgent:setMaxAcceleration(float_maxAcceleration)"],
"description":"setMaxAcceleration(float_maxAcceleration)",
"scope":"source.lua"},

"cc.NavMeshAgent:setOrientationRefAxes(const_Vec3_rotRefAxes)":{
"prefix":"cc.NavMeshAgent:setOrientationRefAxes(const_Vec3_rotRefAxes)",
"body":["cc.NavMeshAgent:setOrientationRefAxes(const_Vec3_rotRefAxes)"],
"description":"setOrientationRefAxes(const_Vec3_rotRefAxes)",
"scope":"source.lua"},

"cc.NavMeshAgent:getMaxAcceleration()":{
"prefix":"cc.NavMeshAgent:getMaxAcceleration()",
"body":["cc.NavMeshAgent:getMaxAcceleration()"],
"description":"getMaxAcceleration()",
"scope":"source.lua"},

"cc.NavMeshAgent:setHeight(float_height)":{
"prefix":"cc.NavMeshAgent:setHeight(float_height)",
"body":["cc.NavMeshAgent:setHeight(float_height)"],
"description":"setHeight(float_height)",
"scope":"source.lua"},

"cc.NavMeshAgent:setUserData(void_data)":{
"prefix":"cc.NavMeshAgent:setUserData(void_data)",
"body":["cc.NavMeshAgent:setUserData(void_data)"],
"description":"setUserData(void_data)",
"scope":"source.lua"},

"cc.NavMeshAgent:getObstacleAvoidanceType()":{
"prefix":"cc.NavMeshAgent:getObstacleAvoidanceType()",
"body":["cc.NavMeshAgent:getObstacleAvoidanceType()"],
"description":"getObstacleAvoidanceType()",
"scope":"source.lua"},

"cc.NavMeshAgent:getVelocity()":{
"prefix":"cc.NavMeshAgent:getVelocity()",
"body":["cc.NavMeshAgent:getVelocity()"],
"description":"getVelocity()",
"scope":"source.lua"},

"cc.NavMeshAgent:setRadius(float_radius)":{
"prefix":"cc.NavMeshAgent:setRadius(float_radius)",
"body":["cc.NavMeshAgent:setRadius(float_radius)"],
"description":"setRadius(float_radius)",
"scope":"source.lua"},

"cc.NavMeshAgent:setObstacleAvoidanceType(unsigned_char_type)":{
"prefix":"cc.NavMeshAgent:setObstacleAvoidanceType(unsigned_char_type)",
"body":["cc.NavMeshAgent:setObstacleAvoidanceType(unsigned_char_type)"],
"description":"setObstacleAvoidanceType(unsigned_char_type)",
"scope":"source.lua"},

"cc.NavMeshAgent:getNavMeshAgentComponentName()":{
"prefix":"cc.NavMeshAgent:getNavMeshAgentComponentName()",
"body":["cc.NavMeshAgent:getNavMeshAgentComponentName()"],
"description":"getNavMeshAgentComponentName()",
"scope":"source.lua"},

"cc.NavMeshAgent:create(const_NavMeshAgentParam_param)":{
"prefix":"cc.NavMeshAgent:create(const_NavMeshAgentParam_param)",
"body":["cc.NavMeshAgent:create(const_NavMeshAgentParam_param)"],
"description":"create(const_NavMeshAgentParam_param)",
"scope":"source.lua"},

"cc.NavMeshObstacle":{
"prefix":"cc.NavMeshObstacle",
"body":["cc.NavMeshObstacle"],
"description":"cocos class",
"scope":"source.lua"},

"cc.NavMeshObstacle:getSyncFlag()":{
"prefix":"cc.NavMeshObstacle:getSyncFlag()",
"body":["cc.NavMeshObstacle:getSyncFlag()"],
"description":"getSyncFlag()",
"scope":"source.lua"},

"cc.NavMeshObstacle:initWith(float_radius,float_height)":{
"prefix":"cc.NavMeshObstacle:initWith(float_radius,float_height)",
"body":["cc.NavMeshObstacle:initWith(float_radius,float_height)"],
"description":"initWith(float_radius,float_height)",
"scope":"source.lua"},

"cc.NavMeshObstacle:syncToObstacle()":{
"prefix":"cc.NavMeshObstacle:syncToObstacle()",
"body":["cc.NavMeshObstacle:syncToObstacle()"],
"description":"syncToObstacle()",
"scope":"source.lua"},

"cc.NavMeshObstacle:syncToNode()":{
"prefix":"cc.NavMeshObstacle:syncToNode()",
"body":["cc.NavMeshObstacle:syncToNode()"],
"description":"syncToNode()",
"scope":"source.lua"},

"cc.NavMeshObstacle:getHeight()":{
"prefix":"cc.NavMeshObstacle:getHeight()",
"body":["cc.NavMeshObstacle:getHeight()"],
"description":"getHeight()",
"scope":"source.lua"},

"cc.NavMeshObstacle:setSyncFlag(const_NavMeshObstacleSyncFlag_flag)":{
"prefix":"cc.NavMeshObstacle:setSyncFlag(const_NavMeshObstacleSyncFlag_flag)",
"body":["cc.NavMeshObstacle:setSyncFlag(const_NavMeshObstacleSyncFlag_flag)"],
"description":"setSyncFlag(const_NavMeshObstacleSyncFlag_flag)",
"scope":"source.lua"},

"cc.NavMeshObstacle:getRadius()":{
"prefix":"cc.NavMeshObstacle:getRadius()",
"body":["cc.NavMeshObstacle:getRadius()"],
"description":"getRadius()",
"scope":"source.lua"},

"cc.NavMeshObstacle:create(float_radius,float_height)":{
"prefix":"cc.NavMeshObstacle:create(float_radius,float_height)",
"body":["cc.NavMeshObstacle:create(float_radius,float_height)"],
"description":"create(float_radius,float_height)",
"scope":"source.lua"},

"cc.NavMeshObstacle:getNavMeshObstacleComponentName()":{
"prefix":"cc.NavMeshObstacle:getNavMeshObstacleComponentName()",
"body":["cc.NavMeshObstacle:getNavMeshObstacleComponentName()"],
"description":"getNavMeshObstacleComponentName()",
"scope":"source.lua"},

"cc.NavMesh":{
"prefix":"cc.NavMesh",
"body":["cc.NavMesh"],
"description":"cocos class",
"scope":"source.lua"},

"cc.NavMesh:removeNavMeshObstacle(NavMeshObstacle_obstacle)":{
"prefix":"cc.NavMesh:removeNavMeshObstacle(NavMeshObstacle_obstacle)",
"body":["cc.NavMesh:removeNavMeshObstacle(NavMeshObstacle_obstacle)"],
"description":"removeNavMeshObstacle(NavMeshObstacle_obstacle)",
"scope":"source.lua"},

"cc.NavMesh:removeNavMeshAgent(NavMeshAgent_agent)":{
"prefix":"cc.NavMesh:removeNavMeshAgent(NavMeshAgent_agent)",
"body":["cc.NavMesh:removeNavMeshAgent(NavMeshAgent_agent)"],
"description":"removeNavMeshAgent(NavMeshAgent_agent)",
"scope":"source.lua"},

"cc.NavMesh:update(float_dt)":{
"prefix":"cc.NavMesh:update(float_dt)",
"body":["cc.NavMesh:update(float_dt)"],
"description":"update(float_dt)",
"scope":"source.lua"},

"cc.NavMesh:isDebugDrawEnabled()":{
"prefix":"cc.NavMesh:isDebugDrawEnabled()",
"body":["cc.NavMesh:isDebugDrawEnabled()"],
"description":"isDebugDrawEnabled()",
"scope":"source.lua"},

"cc.NavMesh:addNavMeshAgent(NavMeshAgent_agent)":{
"prefix":"cc.NavMesh:addNavMeshAgent(NavMeshAgent_agent)",
"body":["cc.NavMesh:addNavMeshAgent(NavMeshAgent_agent)"],
"description":"addNavMeshAgent(NavMeshAgent_agent)",
"scope":"source.lua"},

"cc.NavMesh:addNavMeshObstacle(NavMeshObstacle_obstacle)":{
"prefix":"cc.NavMesh:addNavMeshObstacle(NavMeshObstacle_obstacle)",
"body":["cc.NavMesh:addNavMeshObstacle(NavMeshObstacle_obstacle)"],
"description":"addNavMeshObstacle(NavMeshObstacle_obstacle)",
"scope":"source.lua"},

"cc.NavMesh:setDebugDrawEnable(bool_enable)":{
"prefix":"cc.NavMesh:setDebugDrawEnable(bool_enable)",
"body":["cc.NavMesh:setDebugDrawEnable(bool_enable)"],
"description":"setDebugDrawEnable(bool_enable)",
"scope":"source.lua"},

"cc.NavMesh:debugDraw(Renderer_renderer)":{
"prefix":"cc.NavMesh:debugDraw(Renderer_renderer)",
"body":["cc.NavMesh:debugDraw(Renderer_renderer)"],
"description":"debugDraw(Renderer_renderer)",
"scope":"source.lua"},

"cc.NavMesh:create(const_std_string_navFilePath,const_std_string_geomFilePath)":{
"prefix":"cc.NavMesh:create(const_std_string_navFilePath,const_std_string_geomFilePath)",
"body":["cc.NavMesh:create(const_std_string_navFilePath,const_std_string_geomFilePath)"],
"description":"create(const_std_string_navFilePath,const_std_string_geomFilePath)",
"scope":"source.lua"},

"cc.Physics3DShape":{
"prefix":"cc.Physics3DShape",
"body":["cc.Physics3DShape"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3DShape:getbtShape()":{
"prefix":"cc.Physics3DShape:getbtShape()",
"body":["cc.Physics3DShape:getbtShape()"],
"description":"getbtShape()",
"scope":"source.lua"},

"cc.Physics3DShape:initSphere(float_radius)":{
"prefix":"cc.Physics3DShape:initSphere(float_radius)",
"body":["cc.Physics3DShape:initSphere(float_radius)"],
"description":"initSphere(float_radius)",
"scope":"source.lua"},

"cc.Physics3DShape:initBox(const_cocos2d_Vec3_ext)":{
"prefix":"cc.Physics3DShape:initBox(const_cocos2d_Vec3_ext)",
"body":["cc.Physics3DShape:initBox(const_cocos2d_Vec3_ext)"],
"description":"initBox(const_cocos2d_Vec3_ext)",
"scope":"source.lua"},

"cc.Physics3DShape:initCapsule(float_radius,float_height)":{
"prefix":"cc.Physics3DShape:initCapsule(float_radius,float_height)",
"body":["cc.Physics3DShape:initCapsule(float_radius,float_height)"],
"description":"initCapsule(float_radius,float_height)",
"scope":"source.lua"},

"cc.Physics3DShape:initCylinder(float_radius,float_height)":{
"prefix":"cc.Physics3DShape:initCylinder(float_radius,float_height)",
"body":["cc.Physics3DShape:initCylinder(float_radius,float_height)"],
"description":"initCylinder(float_radius,float_height)",
"scope":"source.lua"},

"cc.Physics3DShape:getShapeType()":{
"prefix":"cc.Physics3DShape:getShapeType()",
"body":["cc.Physics3DShape:getShapeType()"],
"description":"getShapeType()",
"scope":"source.lua"},

"cc.Physics3DShape:createBox(const_cocos2d_Vec3_extent)":{
"prefix":"cc.Physics3DShape:createBox(const_cocos2d_Vec3_extent)",
"body":["cc.Physics3DShape:createBox(const_cocos2d_Vec3_extent)"],
"description":"createBox(const_cocos2d_Vec3_extent)",
"scope":"source.lua"},

"cc.Physics3DShape:createCylinder(float_radius,float_height)":{
"prefix":"cc.Physics3DShape:createCylinder(float_radius,float_height)",
"body":["cc.Physics3DShape:createCylinder(float_radius,float_height)"],
"description":"createCylinder(float_radius,float_height)",
"scope":"source.lua"},

"cc.Physics3DShape:createConvexHull(const_cocos2d_Vec3_points,int_numPoints)":{
"prefix":"cc.Physics3DShape:createConvexHull(const_cocos2d_Vec3_points,int_numPoints)",
"body":["cc.Physics3DShape:createConvexHull(const_cocos2d_Vec3_points,int_numPoints)"],
"description":"createConvexHull(const_cocos2d_Vec3_points,int_numPoints)",
"scope":"source.lua"},

"cc.Physics3DShape:createCapsule(float_radius,float_height)":{
"prefix":"cc.Physics3DShape:createCapsule(float_radius,float_height)",
"body":["cc.Physics3DShape:createCapsule(float_radius,float_height)"],
"description":"createCapsule(float_radius,float_height)",
"scope":"source.lua"},

"cc.Physics3DShape:createSphere(float_radius)":{
"prefix":"cc.Physics3DShape:createSphere(float_radius)",
"body":["cc.Physics3DShape:createSphere(float_radius)"],
"description":"createSphere(float_radius)",
"scope":"source.lua"},

"cc.Physics3DObject":{
"prefix":"cc.Physics3DObject",
"body":["cc.Physics3DObject"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3DObject:setUserData(void_userData)":{
"prefix":"cc.Physics3DObject:setUserData(void_userData)",
"body":["cc.Physics3DObject:setUserData(void_userData)"],
"description":"setUserData(void_userData)",
"scope":"source.lua"},

"cc.Physics3DObject:getUserData()":{
"prefix":"cc.Physics3DObject:getUserData()",
"body":["cc.Physics3DObject:getUserData()"],
"description":"getUserData()",
"scope":"source.lua"},

"cc.Physics3DObject:getObjType()":{
"prefix":"cc.Physics3DObject:getObjType()",
"body":["cc.Physics3DObject:getObjType()"],
"description":"getObjType()",
"scope":"source.lua"},

"cc.Physics3DObject:setPhysicsWorld(Physics3DWorld_world)":{
"prefix":"cc.Physics3DObject:setPhysicsWorld(Physics3DWorld_world)",
"body":["cc.Physics3DObject:setPhysicsWorld(Physics3DWorld_world)"],
"description":"setPhysicsWorld(Physics3DWorld_world)",
"scope":"source.lua"},

"cc.Physics3DObject:getWorldTransform()":{
"prefix":"cc.Physics3DObject:getWorldTransform()",
"body":["cc.Physics3DObject:getWorldTransform()"],
"description":"getWorldTransform()",
"scope":"source.lua"},

"cc.Physics3DObject:getPhysicsWorld()":{
"prefix":"cc.Physics3DObject:getPhysicsWorld()",
"body":["cc.Physics3DObject:getPhysicsWorld()"],
"description":"getPhysicsWorld()",
"scope":"source.lua"},

"cc.Physics3DObject:setMask(unsigned_int_mask)":{
"prefix":"cc.Physics3DObject:setMask(unsigned_int_mask)",
"body":["cc.Physics3DObject:setMask(unsigned_int_mask)"],
"description":"setMask(unsigned_int_mask)",
"scope":"source.lua"},

"cc.Physics3DObject:getCollisionCallback()":{
"prefix":"cc.Physics3DObject:getCollisionCallback()",
"body":["cc.Physics3DObject:getCollisionCallback()"],
"description":"getCollisionCallback()",
"scope":"source.lua"},

"cc.Physics3DObject:getMask()":{
"prefix":"cc.Physics3DObject:getMask()",
"body":["cc.Physics3DObject:getMask()"],
"description":"getMask()",
"scope":"source.lua"},

"cc.Physics3DObject:needCollisionCallback()":{
"prefix":"cc.Physics3DObject:needCollisionCallback()",
"body":["cc.Physics3DObject:needCollisionCallback()"],
"description":"needCollisionCallback()",
"scope":"source.lua"},

"cc.Physics3DRigidBody":{
"prefix":"cc.Physics3DRigidBody",
"body":["cc.Physics3DRigidBody"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setGravity(const_cocos2d_Vec3_acceleration)":{
"prefix":"cc.Physics3DRigidBody:setGravity(const_cocos2d_Vec3_acceleration)",
"body":["cc.Physics3DRigidBody:setGravity(const_cocos2d_Vec3_acceleration)"],
"description":"setGravity(const_cocos2d_Vec3_acceleration)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getFriction()":{
"prefix":"cc.Physics3DRigidBody:getFriction()",
"body":["cc.Physics3DRigidBody:getFriction()"],
"description":"getFriction()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setAngularFactor(const_cocos2d_Vec3_angFac)":{
"prefix":"cc.Physics3DRigidBody:setAngularFactor(const_cocos2d_Vec3_angFac)",
"body":["cc.Physics3DRigidBody:setAngularFactor(const_cocos2d_Vec3_angFac)"],
"description":"setAngularFactor(const_cocos2d_Vec3_angFac)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setAngularFactor(float_angFac)":{
"prefix":"cc.Physics3DRigidBody:setAngularFactor(float_angFac)",
"body":["cc.Physics3DRigidBody:setAngularFactor(float_angFac)"],
"description":"setAngularFactor(float_angFac)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:addConstraint(Physics3DConstraint_constraint)":{
"prefix":"cc.Physics3DRigidBody:addConstraint(Physics3DConstraint_constraint)",
"body":["cc.Physics3DRigidBody:addConstraint(Physics3DConstraint_constraint)"],
"description":"addConstraint(Physics3DConstraint_constraint)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getRigidBody()":{
"prefix":"cc.Physics3DRigidBody:getRigidBody()",
"body":["cc.Physics3DRigidBody:getRigidBody()"],
"description":"getRigidBody()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getTotalForce()":{
"prefix":"cc.Physics3DRigidBody:getTotalForce()",
"body":["cc.Physics3DRigidBody:getTotalForce()"],
"description":"getTotalForce()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getConstraintCount()":{
"prefix":"cc.Physics3DRigidBody:getConstraintCount()",
"body":["cc.Physics3DRigidBody:getConstraintCount()"],
"description":"getConstraintCount()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:applyCentralForce(const_cocos2d_Vec3_force)":{
"prefix":"cc.Physics3DRigidBody:applyCentralForce(const_cocos2d_Vec3_force)",
"body":["cc.Physics3DRigidBody:applyCentralForce(const_cocos2d_Vec3_force)"],
"description":"applyCentralForce(const_cocos2d_Vec3_force)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setMassProps(float_mass,const_cocos2d_Vec3_inertia)":{
"prefix":"cc.Physics3DRigidBody:setMassProps(float_mass,const_cocos2d_Vec3_inertia)",
"body":["cc.Physics3DRigidBody:setMassProps(float_mass,const_cocos2d_Vec3_inertia)"],
"description":"setMassProps(float_mass,const_cocos2d_Vec3_inertia)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setFriction(float_frict)":{
"prefix":"cc.Physics3DRigidBody:setFriction(float_frict)",
"body":["cc.Physics3DRigidBody:setFriction(float_frict)"],
"description":"setFriction(float_frict)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setKinematic(bool_kinematic)":{
"prefix":"cc.Physics3DRigidBody:setKinematic(bool_kinematic)",
"body":["cc.Physics3DRigidBody:setKinematic(bool_kinematic)"],
"description":"setKinematic(bool_kinematic)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setDamping(float_lin_damping,float_ang_damping)":{
"prefix":"cc.Physics3DRigidBody:setDamping(float_lin_damping,float_ang_damping)",
"body":["cc.Physics3DRigidBody:setDamping(float_lin_damping,float_ang_damping)"],
"description":"setDamping(float_lin_damping,float_ang_damping)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:applyImpulse(const_cocos2d_Vec3_impulse,const_cocos2d_Vec3_rel_pos)":{
"prefix":"cc.Physics3DRigidBody:applyImpulse(const_cocos2d_Vec3_impulse,const_cocos2d_Vec3_rel_pos)",
"body":["cc.Physics3DRigidBody:applyImpulse(const_cocos2d_Vec3_impulse,const_cocos2d_Vec3_rel_pos)"],
"description":"applyImpulse(const_cocos2d_Vec3_impulse,const_cocos2d_Vec3_rel_pos)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:isKinematic()":{
"prefix":"cc.Physics3DRigidBody:isKinematic()",
"body":["cc.Physics3DRigidBody:isKinematic()"],
"description":"isKinematic()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:applyTorque(const_cocos2d_Vec3_torque)":{
"prefix":"cc.Physics3DRigidBody:applyTorque(const_cocos2d_Vec3_torque)",
"body":["cc.Physics3DRigidBody:applyTorque(const_cocos2d_Vec3_torque)"],
"description":"applyTorque(const_cocos2d_Vec3_torque)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setCcdMotionThreshold(float_ccdMotionThreshold)":{
"prefix":"cc.Physics3DRigidBody:setCcdMotionThreshold(float_ccdMotionThreshold)",
"body":["cc.Physics3DRigidBody:setCcdMotionThreshold(float_ccdMotionThreshold)"],
"description":"setCcdMotionThreshold(float_ccdMotionThreshold)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setRollingFriction(float_frict)":{
"prefix":"cc.Physics3DRigidBody:setRollingFriction(float_frict)",
"body":["cc.Physics3DRigidBody:setRollingFriction(float_frict)"],
"description":"setRollingFriction(float_frict)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getCcdMotionThreshold()":{
"prefix":"cc.Physics3DRigidBody:getCcdMotionThreshold()",
"body":["cc.Physics3DRigidBody:getCcdMotionThreshold()"],
"description":"getCcdMotionThreshold()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getLinearFactor()":{
"prefix":"cc.Physics3DRigidBody:getLinearFactor()",
"body":["cc.Physics3DRigidBody:getLinearFactor()"],
"description":"getLinearFactor()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:applyDamping(float_timeStep)":{
"prefix":"cc.Physics3DRigidBody:applyDamping(float_timeStep)",
"body":["cc.Physics3DRigidBody:applyDamping(float_timeStep)"],
"description":"applyDamping(float_timeStep)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getAngularVelocity()":{
"prefix":"cc.Physics3DRigidBody:getAngularVelocity()",
"body":["cc.Physics3DRigidBody:getAngularVelocity()"],
"description":"getAngularVelocity()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:init(Physics3DRigidBodyDes_info)":{
"prefix":"cc.Physics3DRigidBody:init(Physics3DRigidBodyDes_info)",
"body":["cc.Physics3DRigidBody:init(Physics3DRigidBodyDes_info)"],
"description":"init(Physics3DRigidBodyDes_info)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:applyTorqueImpulse(const_cocos2d_Vec3_torque)":{
"prefix":"cc.Physics3DRigidBody:applyTorqueImpulse(const_cocos2d_Vec3_torque)",
"body":["cc.Physics3DRigidBody:applyTorqueImpulse(const_cocos2d_Vec3_torque)"],
"description":"applyTorqueImpulse(const_cocos2d_Vec3_torque)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setActive(bool_active)":{
"prefix":"cc.Physics3DRigidBody:setActive(bool_active)",
"body":["cc.Physics3DRigidBody:setActive(bool_active)"],
"description":"setActive(bool_active)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setLinearFactor(const_cocos2d_Vec3_linearFactor)":{
"prefix":"cc.Physics3DRigidBody:setLinearFactor(const_cocos2d_Vec3_linearFactor)",
"body":["cc.Physics3DRigidBody:setLinearFactor(const_cocos2d_Vec3_linearFactor)"],
"description":"setLinearFactor(const_cocos2d_Vec3_linearFactor)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setLinearVelocity(const_cocos2d_Vec3_lin_vel)":{
"prefix":"cc.Physics3DRigidBody:setLinearVelocity(const_cocos2d_Vec3_lin_vel)",
"body":["cc.Physics3DRigidBody:setLinearVelocity(const_cocos2d_Vec3_lin_vel)"],
"description":"setLinearVelocity(const_cocos2d_Vec3_lin_vel)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getLinearVelocity()":{
"prefix":"cc.Physics3DRigidBody:getLinearVelocity()",
"body":["cc.Physics3DRigidBody:getLinearVelocity()"],
"description":"getLinearVelocity()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setCcdSweptSphereRadius(float_radius)":{
"prefix":"cc.Physics3DRigidBody:setCcdSweptSphereRadius(float_radius)",
"body":["cc.Physics3DRigidBody:setCcdSweptSphereRadius(float_radius)"],
"description":"setCcdSweptSphereRadius(float_radius)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:applyForce(const_cocos2d_Vec3_force,const_cocos2d_Vec3_rel_pos)":{
"prefix":"cc.Physics3DRigidBody:applyForce(const_cocos2d_Vec3_force,const_cocos2d_Vec3_rel_pos)",
"body":["cc.Physics3DRigidBody:applyForce(const_cocos2d_Vec3_force,const_cocos2d_Vec3_rel_pos)"],
"description":"applyForce(const_cocos2d_Vec3_force,const_cocos2d_Vec3_rel_pos)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setAngularVelocity(const_cocos2d_Vec3_ang_vel)":{
"prefix":"cc.Physics3DRigidBody:setAngularVelocity(const_cocos2d_Vec3_ang_vel)",
"body":["cc.Physics3DRigidBody:setAngularVelocity(const_cocos2d_Vec3_ang_vel)"],
"description":"setAngularVelocity(const_cocos2d_Vec3_ang_vel)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:applyCentralImpulse(const_cocos2d_Vec3_impulse)":{
"prefix":"cc.Physics3DRigidBody:applyCentralImpulse(const_cocos2d_Vec3_impulse)",
"body":["cc.Physics3DRigidBody:applyCentralImpulse(const_cocos2d_Vec3_impulse)"],
"description":"applyCentralImpulse(const_cocos2d_Vec3_impulse)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getGravity()":{
"prefix":"cc.Physics3DRigidBody:getGravity()",
"body":["cc.Physics3DRigidBody:getGravity()"],
"description":"getGravity()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getRollingFriction()":{
"prefix":"cc.Physics3DRigidBody:getRollingFriction()",
"body":["cc.Physics3DRigidBody:getRollingFriction()"],
"description":"getRollingFriction()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setCenterOfMassTransform(const_cocos2d_Mat4_xform)":{
"prefix":"cc.Physics3DRigidBody:setCenterOfMassTransform(const_cocos2d_Mat4_xform)",
"body":["cc.Physics3DRigidBody:setCenterOfMassTransform(const_cocos2d_Mat4_xform)"],
"description":"setCenterOfMassTransform(const_cocos2d_Mat4_xform)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setInvInertiaDiagLocal(const_cocos2d_Vec3_diagInvInertia)":{
"prefix":"cc.Physics3DRigidBody:setInvInertiaDiagLocal(const_cocos2d_Vec3_diagInvInertia)",
"body":["cc.Physics3DRigidBody:setInvInertiaDiagLocal(const_cocos2d_Vec3_diagInvInertia)"],
"description":"setInvInertiaDiagLocal(const_cocos2d_Vec3_diagInvInertia)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:removeConstraint(Physics3DConstraint_constraint)":{
"prefix":"cc.Physics3DRigidBody:removeConstraint(Physics3DConstraint_constraint)",
"body":["cc.Physics3DRigidBody:removeConstraint(Physics3DConstraint_constraint)"],
"description":"removeConstraint(Physics3DConstraint_constraint)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getTotalTorque()":{
"prefix":"cc.Physics3DRigidBody:getTotalTorque()",
"body":["cc.Physics3DRigidBody:getTotalTorque()"],
"description":"getTotalTorque()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getInvMass()":{
"prefix":"cc.Physics3DRigidBody:getInvMass()",
"body":["cc.Physics3DRigidBody:getInvMass()"],
"description":"getInvMass()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getConstraint(unsigned_int_idx)":{
"prefix":"cc.Physics3DRigidBody:getConstraint(unsigned_int_idx)",
"body":["cc.Physics3DRigidBody:getConstraint(unsigned_int_idx)"],
"description":"getConstraint(unsigned_int_idx)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getRestitution()":{
"prefix":"cc.Physics3DRigidBody:getRestitution()",
"body":["cc.Physics3DRigidBody:getRestitution()"],
"description":"getRestitution()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getCcdSweptSphereRadius()":{
"prefix":"cc.Physics3DRigidBody:getCcdSweptSphereRadius()",
"body":["cc.Physics3DRigidBody:getCcdSweptSphereRadius()"],
"description":"getCcdSweptSphereRadius()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getHitFraction()":{
"prefix":"cc.Physics3DRigidBody:getHitFraction()",
"body":["cc.Physics3DRigidBody:getHitFraction()"],
"description":"getHitFraction()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getAngularDamping()":{
"prefix":"cc.Physics3DRigidBody:getAngularDamping()",
"body":["cc.Physics3DRigidBody:getAngularDamping()"],
"description":"getAngularDamping()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getInvInertiaDiagLocal()":{
"prefix":"cc.Physics3DRigidBody:getInvInertiaDiagLocal()",
"body":["cc.Physics3DRigidBody:getInvInertiaDiagLocal()"],
"description":"getInvInertiaDiagLocal()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getCenterOfMassTransform()":{
"prefix":"cc.Physics3DRigidBody:getCenterOfMassTransform()",
"body":["cc.Physics3DRigidBody:getCenterOfMassTransform()"],
"description":"getCenterOfMassTransform()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getAngularFactor()":{
"prefix":"cc.Physics3DRigidBody:getAngularFactor()",
"body":["cc.Physics3DRigidBody:getAngularFactor()"],
"description":"getAngularFactor()",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setRestitution(float_rest)":{
"prefix":"cc.Physics3DRigidBody:setRestitution(float_rest)",
"body":["cc.Physics3DRigidBody:setRestitution(float_rest)"],
"description":"setRestitution(float_rest)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:setHitFraction(float_hitFraction)":{
"prefix":"cc.Physics3DRigidBody:setHitFraction(float_hitFraction)",
"body":["cc.Physics3DRigidBody:setHitFraction(float_hitFraction)"],
"description":"setHitFraction(float_hitFraction)",
"scope":"source.lua"},

"cc.Physics3DRigidBody:getLinearDamping()":{
"prefix":"cc.Physics3DRigidBody:getLinearDamping()",
"body":["cc.Physics3DRigidBody:getLinearDamping()"],
"description":"getLinearDamping()",
"scope":"source.lua"},

"cc.Physics3DComponent":{
"prefix":"cc.Physics3DComponent",
"body":["cc.Physics3DComponent"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3DComponent:syncNodeToPhysics()":{
"prefix":"cc.Physics3DComponent:syncNodeToPhysics()",
"body":["cc.Physics3DComponent:syncNodeToPhysics()"],
"description":"syncNodeToPhysics()",
"scope":"source.lua"},

"cc.Physics3DComponent:addToPhysicsWorld(Physics3DWorld_world)":{
"prefix":"cc.Physics3DComponent:addToPhysicsWorld(Physics3DWorld_world)",
"body":["cc.Physics3DComponent:addToPhysicsWorld(Physics3DWorld_world)"],
"description":"addToPhysicsWorld(Physics3DWorld_world)",
"scope":"source.lua"},

"cc.Physics3DComponent:syncPhysicsToNode()":{
"prefix":"cc.Physics3DComponent:syncPhysicsToNode()",
"body":["cc.Physics3DComponent:syncPhysicsToNode()"],
"description":"syncPhysicsToNode()",
"scope":"source.lua"},

"cc.Physics3DComponent:getPhysics3DObject()":{
"prefix":"cc.Physics3DComponent:getPhysics3DObject()",
"body":["cc.Physics3DComponent:getPhysics3DObject()"],
"description":"getPhysics3DObject()",
"scope":"source.lua"},

"cc.Physics3DComponent:setPhysics3DObject(Physics3DObject_physicsObj)":{
"prefix":"cc.Physics3DComponent:setPhysics3DObject(Physics3DObject_physicsObj)",
"body":["cc.Physics3DComponent:setPhysics3DObject(Physics3DObject_physicsObj)"],
"description":"setPhysics3DObject(Physics3DObject_physicsObj)",
"scope":"source.lua"},

"cc.Physics3DComponent:setSyncFlag(PhysicsSyncFlag_syncFlag)":{
"prefix":"cc.Physics3DComponent:setSyncFlag(PhysicsSyncFlag_syncFlag)",
"body":["cc.Physics3DComponent:setSyncFlag(PhysicsSyncFlag_syncFlag)"],
"description":"setSyncFlag(PhysicsSyncFlag_syncFlag)",
"scope":"source.lua"},

"cc.Physics3DComponent:getPhysics3DComponentName()":{
"prefix":"cc.Physics3DComponent:getPhysics3DComponentName()",
"body":["cc.Physics3DComponent:getPhysics3DComponentName()"],
"description":"getPhysics3DComponentName()",
"scope":"source.lua"},

"cc.PhysicsSprite3D":{
"prefix":"cc.PhysicsSprite3D",
"body":["cc.PhysicsSprite3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsSprite3D:syncNodeToPhysics()":{
"prefix":"cc.PhysicsSprite3D:syncNodeToPhysics()",
"body":["cc.PhysicsSprite3D:syncNodeToPhysics()"],
"description":"syncNodeToPhysics()",
"scope":"source.lua"},

"cc.PhysicsSprite3D:syncPhysicsToNode()":{
"prefix":"cc.PhysicsSprite3D:syncPhysicsToNode()",
"body":["cc.PhysicsSprite3D:syncPhysicsToNode()"],
"description":"syncPhysicsToNode()",
"scope":"source.lua"},

"cc.PhysicsSprite3D:getPhysicsObj()":{
"prefix":"cc.PhysicsSprite3D:getPhysicsObj()",
"body":["cc.PhysicsSprite3D:getPhysicsObj()"],
"description":"getPhysicsObj()",
"scope":"source.lua"},

"cc.PhysicsSprite3D:setSyncFlag(Physics3DComponent_PhysicsSyncFlag_syncFlag)":{
"prefix":"cc.PhysicsSprite3D:setSyncFlag(Physics3DComponent_PhysicsSyncFlag_syncFlag)",
"body":["cc.PhysicsSprite3D:setSyncFlag(Physics3DComponent_PhysicsSyncFlag_syncFlag)"],
"description":"setSyncFlag(Physics3DComponent_PhysicsSyncFlag_syncFlag)",
"scope":"source.lua"},

"cc.Physics3DWorld":{
"prefix":"cc.Physics3DWorld",
"body":["cc.Physics3DWorld"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3DWorld:setGravity(const_Vec3_gravity)":{
"prefix":"cc.Physics3DWorld:setGravity(const_Vec3_gravity)",
"body":["cc.Physics3DWorld:setGravity(const_Vec3_gravity)"],
"description":"setGravity(const_Vec3_gravity)",
"scope":"source.lua"},

"cc.Physics3DWorld:stepSimulate(float_dt)":{
"prefix":"cc.Physics3DWorld:stepSimulate(float_dt)",
"body":["cc.Physics3DWorld:stepSimulate(float_dt)"],
"description":"stepSimulate(float_dt)",
"scope":"source.lua"},

"cc.Physics3DWorld:needCollisionChecking()":{
"prefix":"cc.Physics3DWorld:needCollisionChecking()",
"body":["cc.Physics3DWorld:needCollisionChecking()"],
"description":"needCollisionChecking()",
"scope":"source.lua"},

"cc.Physics3DWorld:collisionChecking()":{
"prefix":"cc.Physics3DWorld:collisionChecking()",
"body":["cc.Physics3DWorld:collisionChecking()"],
"description":"collisionChecking()",
"scope":"source.lua"},

"cc.Physics3DWorld:setGhostPairCallback()":{
"prefix":"cc.Physics3DWorld:setGhostPairCallback()",
"body":["cc.Physics3DWorld:setGhostPairCallback()"],
"description":"setGhostPairCallback()",
"scope":"source.lua"},

"cc.Physics3DWorld:removeAllPhysics3DObjects()":{
"prefix":"cc.Physics3DWorld:removeAllPhysics3DObjects()",
"body":["cc.Physics3DWorld:removeAllPhysics3DObjects()"],
"description":"removeAllPhysics3DObjects()",
"scope":"source.lua"},

"cc.Physics3DWorld:isDebugDrawEnabled()":{
"prefix":"cc.Physics3DWorld:isDebugDrawEnabled()",
"body":["cc.Physics3DWorld:isDebugDrawEnabled()"],
"description":"isDebugDrawEnabled()",
"scope":"source.lua"},

"cc.Physics3DWorld:removeAllPhysics3DConstraints()":{
"prefix":"cc.Physics3DWorld:removeAllPhysics3DConstraints()",
"body":["cc.Physics3DWorld:removeAllPhysics3DConstraints()"],
"description":"removeAllPhysics3DConstraints()",
"scope":"source.lua"},

"cc.Physics3DWorld:getGravity()":{
"prefix":"cc.Physics3DWorld:getGravity()",
"body":["cc.Physics3DWorld:getGravity()"],
"description":"getGravity()",
"scope":"source.lua"},

"cc.Physics3DWorld:removePhysics3DConstraint(Physics3DConstraint_constraint)":{
"prefix":"cc.Physics3DWorld:removePhysics3DConstraint(Physics3DConstraint_constraint)",
"body":["cc.Physics3DWorld:removePhysics3DConstraint(Physics3DConstraint_constraint)"],
"description":"removePhysics3DConstraint(Physics3DConstraint_constraint)",
"scope":"source.lua"},

"cc.Physics3DWorld:addPhysics3DObject(Physics3DObject_physicsObj)":{
"prefix":"cc.Physics3DWorld:addPhysics3DObject(Physics3DObject_physicsObj)",
"body":["cc.Physics3DWorld:addPhysics3DObject(Physics3DObject_physicsObj)"],
"description":"addPhysics3DObject(Physics3DObject_physicsObj)",
"scope":"source.lua"},

"cc.Physics3DWorld:setDebugDrawEnable(bool_enableDebugDraw)":{
"prefix":"cc.Physics3DWorld:setDebugDrawEnable(bool_enableDebugDraw)",
"body":["cc.Physics3DWorld:setDebugDrawEnable(bool_enableDebugDraw)"],
"description":"setDebugDrawEnable(bool_enableDebugDraw)",
"scope":"source.lua"},

"cc.Physics3DWorld:removePhysics3DObject(Physics3DObject_physicsObj)":{
"prefix":"cc.Physics3DWorld:removePhysics3DObject(Physics3DObject_physicsObj)",
"body":["cc.Physics3DWorld:removePhysics3DObject(Physics3DObject_physicsObj)"],
"description":"removePhysics3DObject(Physics3DObject_physicsObj)",
"scope":"source.lua"},

"cc.Physics3DWorld:addPhysics3DConstraint(Physics3DConstraint_constraint,bool_disableCollisionsBetweenLinkedObjs)":{
"prefix":"cc.Physics3DWorld:addPhysics3DConstraint(Physics3DConstraint_constraint,bool_disableCollisionsBetweenLinkedObjs)",
"body":["cc.Physics3DWorld:addPhysics3DConstraint(Physics3DConstraint_constraint,bool_disableCollisionsBetweenLinkedObjs)"],
"description":"addPhysics3DConstraint(Physics3DConstraint_constraint,bool_disableCollisionsBetweenLinkedObjs)",
"scope":"source.lua"},

"cc.Physics3DWorld:debugDraw(cocos2d_Renderer_renderer)":{
"prefix":"cc.Physics3DWorld:debugDraw(cocos2d_Renderer_renderer)",
"body":["cc.Physics3DWorld:debugDraw(cocos2d_Renderer_renderer)"],
"description":"debugDraw(cocos2d_Renderer_renderer)",
"scope":"source.lua"},

"cc.Physics3DConstraint":{
"prefix":"cc.Physics3DConstraint",
"body":["cc.Physics3DConstraint"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3DConstraint:setEnabled(bool_enabled)":{
"prefix":"cc.Physics3DConstraint:setEnabled(bool_enabled)",
"body":["cc.Physics3DConstraint:setEnabled(bool_enabled)"],
"description":"setEnabled(bool_enabled)",
"scope":"source.lua"},

"cc.Physics3DConstraint:setBreakingImpulse(float_impulse)":{
"prefix":"cc.Physics3DConstraint:setBreakingImpulse(float_impulse)",
"body":["cc.Physics3DConstraint:setBreakingImpulse(float_impulse)"],
"description":"setBreakingImpulse(float_impulse)",
"scope":"source.lua"},

"cc.Physics3DConstraint:getUserData()":{
"prefix":"cc.Physics3DConstraint:getUserData()",
"body":["cc.Physics3DConstraint:getUserData()"],
"description":"getUserData()",
"scope":"source.lua"},

"cc.Physics3DConstraint:getBreakingImpulse()":{
"prefix":"cc.Physics3DConstraint:getBreakingImpulse()",
"body":["cc.Physics3DConstraint:getBreakingImpulse()"],
"description":"getBreakingImpulse()",
"scope":"source.lua"},

"cc.Physics3DConstraint:getBodyA()":{
"prefix":"cc.Physics3DConstraint:getBodyA()",
"body":["cc.Physics3DConstraint:getBodyA()"],
"description":"getBodyA()",
"scope":"source.lua"},

"cc.Physics3DConstraint:isEnabled()":{
"prefix":"cc.Physics3DConstraint:isEnabled()",
"body":["cc.Physics3DConstraint:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"cc.Physics3DConstraint:getOverrideNumSolverIterations()":{
"prefix":"cc.Physics3DConstraint:getOverrideNumSolverIterations()",
"body":["cc.Physics3DConstraint:getOverrideNumSolverIterations()"],
"description":"getOverrideNumSolverIterations()",
"scope":"source.lua"},

"cc.Physics3DConstraint:getBodyB()":{
"prefix":"cc.Physics3DConstraint:getBodyB()",
"body":["cc.Physics3DConstraint:getBodyB()"],
"description":"getBodyB()",
"scope":"source.lua"},

"cc.Physics3DConstraint:setOverrideNumSolverIterations(int_overrideNumIterations)":{
"prefix":"cc.Physics3DConstraint:setOverrideNumSolverIterations(int_overrideNumIterations)",
"body":["cc.Physics3DConstraint:setOverrideNumSolverIterations(int_overrideNumIterations)"],
"description":"setOverrideNumSolverIterations(int_overrideNumIterations)",
"scope":"source.lua"},

"cc.Physics3DConstraint:getConstraintType()":{
"prefix":"cc.Physics3DConstraint:getConstraintType()",
"body":["cc.Physics3DConstraint:getConstraintType()"],
"description":"getConstraintType()",
"scope":"source.lua"},

"cc.Physics3DConstraint:setUserData(void_userData)":{
"prefix":"cc.Physics3DConstraint:setUserData(void_userData)",
"body":["cc.Physics3DConstraint:setUserData(void_userData)"],
"description":"setUserData(void_userData)",
"scope":"source.lua"},

"cc.Physics3DConstraint:getbtContraint()":{
"prefix":"cc.Physics3DConstraint:getbtContraint()",
"body":["cc.Physics3DConstraint:getbtContraint()"],
"description":"getbtContraint()",
"scope":"source.lua"},

"cc.Physics3DPointToPointConstraint":{
"prefix":"cc.Physics3DPointToPointConstraint",
"body":["cc.Physics3DPointToPointConstraint"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3DPointToPointConstraint:getPivotPointInA()":{
"prefix":"cc.Physics3DPointToPointConstraint:getPivotPointInA()",
"body":["cc.Physics3DPointToPointConstraint:getPivotPointInA()"],
"description":"getPivotPointInA()",
"scope":"source.lua"},

"cc.Physics3DPointToPointConstraint:getPivotPointInB()":{
"prefix":"cc.Physics3DPointToPointConstraint:getPivotPointInB()",
"body":["cc.Physics3DPointToPointConstraint:getPivotPointInB()"],
"description":"getPivotPointInB()",
"scope":"source.lua"},

"cc.Physics3DPointToPointConstraint:init(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotPointInA)":{
"prefix":"cc.Physics3DPointToPointConstraint:init(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotPointInA)",
"body":["cc.Physics3DPointToPointConstraint:init(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotPointInA)"],
"description":"init(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotPointInA)",
"scope":"source.lua"},

"cc.Physics3DPointToPointConstraint:setPivotPointInA(const_cocos2d_Vec3_pivotA)":{
"prefix":"cc.Physics3DPointToPointConstraint:setPivotPointInA(const_cocos2d_Vec3_pivotA)",
"body":["cc.Physics3DPointToPointConstraint:setPivotPointInA(const_cocos2d_Vec3_pivotA)"],
"description":"setPivotPointInA(const_cocos2d_Vec3_pivotA)",
"scope":"source.lua"},

"cc.Physics3DPointToPointConstraint:setPivotPointInB(const_cocos2d_Vec3_pivotB)":{
"prefix":"cc.Physics3DPointToPointConstraint:setPivotPointInB(const_cocos2d_Vec3_pivotB)",
"body":["cc.Physics3DPointToPointConstraint:setPivotPointInB(const_cocos2d_Vec3_pivotB)"],
"description":"setPivotPointInB(const_cocos2d_Vec3_pivotB)",
"scope":"source.lua"},

"cc.Physics3DPointToPointConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotPointInA)":{
"prefix":"cc.Physics3DPointToPointConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotPointInA)",
"body":["cc.Physics3DPointToPointConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotPointInA)"],
"description":"create(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotPointInA)",
"scope":"source.lua"},

"cc.Physics3DPointToPointConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Vec3_pivotPointInA,const_cocos2d_Vec3_pivotPointInB)":{
"prefix":"cc.Physics3DPointToPointConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Vec3_pivotPointInA,const_cocos2d_Vec3_pivotPointInB)",
"body":["cc.Physics3DPointToPointConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Vec3_pivotPointInA,const_cocos2d_Vec3_pivotPointInB)"],
"description":"create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Vec3_pivotPointInA,const_cocos2d_Vec3_pivotPointInB)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint":{
"prefix":"cc.Physics3DHingeConstraint",
"body":["cc.Physics3DHingeConstraint"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getHingeAngle()":{
"prefix":"cc.Physics3DHingeConstraint:getHingeAngle()",
"body":["cc.Physics3DHingeConstraint:getHingeAngle()"],
"description":"getHingeAngle()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getHingeAngle(const_cocos2d_Mat4_transA,const_cocos2d_Mat4_transB)":{
"prefix":"cc.Physics3DHingeConstraint:getHingeAngle(const_cocos2d_Mat4_transA,const_cocos2d_Mat4_transB)",
"body":["cc.Physics3DHingeConstraint:getHingeAngle(const_cocos2d_Mat4_transA,const_cocos2d_Mat4_transB)"],
"description":"getHingeAngle(const_cocos2d_Mat4_transA,const_cocos2d_Mat4_transB)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getMotorTargetVelosity()":{
"prefix":"cc.Physics3DHingeConstraint:getMotorTargetVelosity()",
"body":["cc.Physics3DHingeConstraint:getMotorTargetVelosity()"],
"description":"getMotorTargetVelosity()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getFrameOffsetA()":{
"prefix":"cc.Physics3DHingeConstraint:getFrameOffsetA()",
"body":["cc.Physics3DHingeConstraint:getFrameOffsetA()"],
"description":"getFrameOffsetA()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getFrameOffsetB()":{
"prefix":"cc.Physics3DHingeConstraint:getFrameOffsetB()",
"body":["cc.Physics3DHingeConstraint:getFrameOffsetB()"],
"description":"getFrameOffsetB()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:setMaxMotorImpulse(float_maxMotorImpulse)":{
"prefix":"cc.Physics3DHingeConstraint:setMaxMotorImpulse(float_maxMotorImpulse)",
"body":["cc.Physics3DHingeConstraint:setMaxMotorImpulse(float_maxMotorImpulse)"],
"description":"setMaxMotorImpulse(float_maxMotorImpulse)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:enableAngularMotor(bool_enableMotor,float_targetVelocity,float_maxMotorImpulse)":{
"prefix":"cc.Physics3DHingeConstraint:enableAngularMotor(bool_enableMotor,float_targetVelocity,float_maxMotorImpulse)",
"body":["cc.Physics3DHingeConstraint:enableAngularMotor(bool_enableMotor,float_targetVelocity,float_maxMotorImpulse)"],
"description":"enableAngularMotor(bool_enableMotor,float_targetVelocity,float_maxMotorImpulse)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getUpperLimit()":{
"prefix":"cc.Physics3DHingeConstraint:getUpperLimit()",
"body":["cc.Physics3DHingeConstraint:getUpperLimit()"],
"description":"getUpperLimit()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getMaxMotorImpulse()":{
"prefix":"cc.Physics3DHingeConstraint:getMaxMotorImpulse()",
"body":["cc.Physics3DHingeConstraint:getMaxMotorImpulse()"],
"description":"getMaxMotorImpulse()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getLowerLimit()":{
"prefix":"cc.Physics3DHingeConstraint:getLowerLimit()",
"body":["cc.Physics3DHingeConstraint:getLowerLimit()"],
"description":"getLowerLimit()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:setUseFrameOffset(bool_frameOffsetOnOff)":{
"prefix":"cc.Physics3DHingeConstraint:setUseFrameOffset(bool_frameOffsetOnOff)",
"body":["cc.Physics3DHingeConstraint:setUseFrameOffset(bool_frameOffsetOnOff)"],
"description":"setUseFrameOffset(bool_frameOffsetOnOff)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getEnableAngularMotor()":{
"prefix":"cc.Physics3DHingeConstraint:getEnableAngularMotor()",
"body":["cc.Physics3DHingeConstraint:getEnableAngularMotor()"],
"description":"getEnableAngularMotor()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:enableMotor(bool_enableMotor)":{
"prefix":"cc.Physics3DHingeConstraint:enableMotor(bool_enableMotor)",
"body":["cc.Physics3DHingeConstraint:enableMotor(bool_enableMotor)"],
"description":"enableMotor(bool_enableMotor)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getBFrame()":{
"prefix":"cc.Physics3DHingeConstraint:getBFrame()",
"body":["cc.Physics3DHingeConstraint:getBFrame()"],
"description":"getBFrame()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)":{
"prefix":"cc.Physics3DHingeConstraint:setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)",
"body":["cc.Physics3DHingeConstraint:setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)"],
"description":"setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getUseFrameOffset()":{
"prefix":"cc.Physics3DHingeConstraint:getUseFrameOffset()",
"body":["cc.Physics3DHingeConstraint:getUseFrameOffset()"],
"description":"getUseFrameOffset()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:setAngularOnly(bool_angularOnly)":{
"prefix":"cc.Physics3DHingeConstraint:setAngularOnly(bool_angularOnly)",
"body":["cc.Physics3DHingeConstraint:setAngularOnly(bool_angularOnly)"],
"description":"setAngularOnly(bool_angularOnly)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:setLimit(float_low,float_high,float__softness,float__biasFactor,float__relaxationFactor)":{
"prefix":"cc.Physics3DHingeConstraint:setLimit(float_low,float_high,float__softness,float__biasFactor,float__relaxationFactor)",
"body":["cc.Physics3DHingeConstraint:setLimit(float_low,float_high,float__softness,float__biasFactor,float__relaxationFactor)"],
"description":"setLimit(float_low,float_high,float__softness,float__biasFactor,float__relaxationFactor)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getAngularOnly()":{
"prefix":"cc.Physics3DHingeConstraint:getAngularOnly()",
"body":["cc.Physics3DHingeConstraint:getAngularOnly()"],
"description":"getAngularOnly()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:setAxis(const_cocos2d_Vec3_axisInA)":{
"prefix":"cc.Physics3DHingeConstraint:setAxis(const_cocos2d_Vec3_axisInA)",
"body":["cc.Physics3DHingeConstraint:setAxis(const_cocos2d_Vec3_axisInA)"],
"description":"setAxis(const_cocos2d_Vec3_axisInA)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:getAFrame()":{
"prefix":"cc.Physics3DHingeConstraint:getAFrame()",
"body":["cc.Physics3DHingeConstraint:getAFrame()"],
"description":"getAFrame()",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Mat4_rbAFrame,bool_useReferenceFrameA)":{
"prefix":"cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Mat4_rbAFrame,bool_useReferenceFrameA)",
"body":["cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Mat4_rbAFrame,bool_useReferenceFrameA)"],
"description":"create(Physics3DRigidBody_rbA,const_cocos2d_Mat4_rbAFrame,bool_useReferenceFrameA)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotInA,const_cocos2d_Vec3_axisInA,bool_useReferenceFrameA)":{
"prefix":"cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotInA,const_cocos2d_Vec3_axisInA,bool_useReferenceFrameA)",
"body":["cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotInA,const_cocos2d_Vec3_axisInA,bool_useReferenceFrameA)"],
"description":"create(Physics3DRigidBody_rbA,const_cocos2d_Vec3_pivotInA,const_cocos2d_Vec3_axisInA,bool_useReferenceFrameA)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Vec3_pivotInA,const_cocos2d_Vec3_pivotInB,cocos2d_Vec3_axisInA,cocos2d_Vec3_axisInB,bool_useReferenceFrameA)":{
"prefix":"cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Vec3_pivotInA,const_cocos2d_Vec3_pivotInB,cocos2d_Vec3_axisInA,cocos2d_Vec3_axisInB,bool_useReferenceFrameA)",
"body":["cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Vec3_pivotInA,const_cocos2d_Vec3_pivotInB,cocos2d_Vec3_axisInA,cocos2d_Vec3_axisInB,bool_useReferenceFrameA)"],
"description":"create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Vec3_pivotInA,const_cocos2d_Vec3_pivotInB,cocos2d_Vec3_axisInA,cocos2d_Vec3_axisInB,bool_useReferenceFrameA)",
"scope":"source.lua"},

"cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_rbAFrame,const_cocos2d_Mat4_rbBFrame,bool_useReferenceFrameA)":{
"prefix":"cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_rbAFrame,const_cocos2d_Mat4_rbBFrame,bool_useReferenceFrameA)",
"body":["cc.Physics3DHingeConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_rbAFrame,const_cocos2d_Mat4_rbBFrame,bool_useReferenceFrameA)"],
"description":"create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_rbAFrame,const_cocos2d_Mat4_rbBFrame,bool_useReferenceFrameA)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint":{
"prefix":"cc.Physics3DSliderConstraint",
"body":["cc.Physics3DSliderConstraint"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setPoweredAngMotor(bool_onOff)":{
"prefix":"cc.Physics3DSliderConstraint:setPoweredAngMotor(bool_onOff)",
"body":["cc.Physics3DSliderConstraint:setPoweredAngMotor(bool_onOff)"],
"description":"setPoweredAngMotor(bool_onOff)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getDampingLimAng()":{
"prefix":"cc.Physics3DSliderConstraint:getDampingLimAng()",
"body":["cc.Physics3DSliderConstraint:getDampingLimAng()"],
"description":"getDampingLimAng()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setRestitutionOrthoLin(float_restitutionOrthoLin)":{
"prefix":"cc.Physics3DSliderConstraint:setRestitutionOrthoLin(float_restitutionOrthoLin)",
"body":["cc.Physics3DSliderConstraint:setRestitutionOrthoLin(float_restitutionOrthoLin)"],
"description":"setRestitutionOrthoLin(float_restitutionOrthoLin)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setRestitutionDirLin(float_restitutionDirLin)":{
"prefix":"cc.Physics3DSliderConstraint:setRestitutionDirLin(float_restitutionDirLin)",
"body":["cc.Physics3DSliderConstraint:setRestitutionDirLin(float_restitutionDirLin)"],
"description":"setRestitutionDirLin(float_restitutionDirLin)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getLinearPos()":{
"prefix":"cc.Physics3DSliderConstraint:getLinearPos()",
"body":["cc.Physics3DSliderConstraint:getLinearPos()"],
"description":"getLinearPos()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getFrameOffsetA()":{
"prefix":"cc.Physics3DSliderConstraint:getFrameOffsetA()",
"body":["cc.Physics3DSliderConstraint:getFrameOffsetA()"],
"description":"getFrameOffsetA()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getFrameOffsetB()":{
"prefix":"cc.Physics3DSliderConstraint:getFrameOffsetB()",
"body":["cc.Physics3DSliderConstraint:getFrameOffsetB()"],
"description":"getFrameOffsetB()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setPoweredLinMotor(bool_onOff)":{
"prefix":"cc.Physics3DSliderConstraint:setPoweredLinMotor(bool_onOff)",
"body":["cc.Physics3DSliderConstraint:setPoweredLinMotor(bool_onOff)"],
"description":"setPoweredLinMotor(bool_onOff)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getDampingDirAng()":{
"prefix":"cc.Physics3DSliderConstraint:getDampingDirAng()",
"body":["cc.Physics3DSliderConstraint:getDampingDirAng()"],
"description":"getDampingDirAng()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getRestitutionLimLin()":{
"prefix":"cc.Physics3DSliderConstraint:getRestitutionLimLin()",
"body":["cc.Physics3DSliderConstraint:getRestitutionLimLin()"],
"description":"getRestitutionLimLin()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getSoftnessOrthoAng()":{
"prefix":"cc.Physics3DSliderConstraint:getSoftnessOrthoAng()",
"body":["cc.Physics3DSliderConstraint:getSoftnessOrthoAng()"],
"description":"getSoftnessOrthoAng()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setSoftnessOrthoLin(float_softnessOrthoLin)":{
"prefix":"cc.Physics3DSliderConstraint:setSoftnessOrthoLin(float_softnessOrthoLin)",
"body":["cc.Physics3DSliderConstraint:setSoftnessOrthoLin(float_softnessOrthoLin)"],
"description":"setSoftnessOrthoLin(float_softnessOrthoLin)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setSoftnessLimLin(float_softnessLimLin)":{
"prefix":"cc.Physics3DSliderConstraint:setSoftnessLimLin(float_softnessLimLin)",
"body":["cc.Physics3DSliderConstraint:setSoftnessLimLin(float_softnessLimLin)"],
"description":"setSoftnessLimLin(float_softnessLimLin)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getAngularPos()":{
"prefix":"cc.Physics3DSliderConstraint:getAngularPos()",
"body":["cc.Physics3DSliderConstraint:getAngularPos()"],
"description":"getAngularPos()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setRestitutionLimAng(float_restitutionLimAng)":{
"prefix":"cc.Physics3DSliderConstraint:setRestitutionLimAng(float_restitutionLimAng)",
"body":["cc.Physics3DSliderConstraint:setRestitutionLimAng(float_restitutionLimAng)"],
"description":"setRestitutionLimAng(float_restitutionLimAng)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setUpperLinLimit(float_upperLimit)":{
"prefix":"cc.Physics3DSliderConstraint:setUpperLinLimit(float_upperLimit)",
"body":["cc.Physics3DSliderConstraint:setUpperLinLimit(float_upperLimit)"],
"description":"setUpperLinLimit(float_upperLimit)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setDampingDirLin(float_dampingDirLin)":{
"prefix":"cc.Physics3DSliderConstraint:setDampingDirLin(float_dampingDirLin)",
"body":["cc.Physics3DSliderConstraint:setDampingDirLin(float_dampingDirLin)"],
"description":"setDampingDirLin(float_dampingDirLin)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getUpperAngLimit()":{
"prefix":"cc.Physics3DSliderConstraint:getUpperAngLimit()",
"body":["cc.Physics3DSliderConstraint:getUpperAngLimit()"],
"description":"getUpperAngLimit()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getDampingDirLin()":{
"prefix":"cc.Physics3DSliderConstraint:getDampingDirLin()",
"body":["cc.Physics3DSliderConstraint:getDampingDirLin()"],
"description":"getDampingDirLin()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getSoftnessDirAng()":{
"prefix":"cc.Physics3DSliderConstraint:getSoftnessDirAng()",
"body":["cc.Physics3DSliderConstraint:getSoftnessDirAng()"],
"description":"getSoftnessDirAng()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getPoweredAngMotor()":{
"prefix":"cc.Physics3DSliderConstraint:getPoweredAngMotor()",
"body":["cc.Physics3DSliderConstraint:getPoweredAngMotor()"],
"description":"getPoweredAngMotor()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setLowerAngLimit(float_lowerLimit)":{
"prefix":"cc.Physics3DSliderConstraint:setLowerAngLimit(float_lowerLimit)",
"body":["cc.Physics3DSliderConstraint:setLowerAngLimit(float_lowerLimit)"],
"description":"setLowerAngLimit(float_lowerLimit)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setUpperAngLimit(float_upperLimit)":{
"prefix":"cc.Physics3DSliderConstraint:setUpperAngLimit(float_upperLimit)",
"body":["cc.Physics3DSliderConstraint:setUpperAngLimit(float_upperLimit)"],
"description":"setUpperAngLimit(float_upperLimit)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setTargetLinMotorVelocity(float_targetLinMotorVelocity)":{
"prefix":"cc.Physics3DSliderConstraint:setTargetLinMotorVelocity(float_targetLinMotorVelocity)",
"body":["cc.Physics3DSliderConstraint:setTargetLinMotorVelocity(float_targetLinMotorVelocity)"],
"description":"setTargetLinMotorVelocity(float_targetLinMotorVelocity)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setDampingLimAng(float_dampingLimAng)":{
"prefix":"cc.Physics3DSliderConstraint:setDampingLimAng(float_dampingLimAng)",
"body":["cc.Physics3DSliderConstraint:setDampingLimAng(float_dampingLimAng)"],
"description":"setDampingLimAng(float_dampingLimAng)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getRestitutionLimAng()":{
"prefix":"cc.Physics3DSliderConstraint:getRestitutionLimAng()",
"body":["cc.Physics3DSliderConstraint:getRestitutionLimAng()"],
"description":"getRestitutionLimAng()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getUseFrameOffset()":{
"prefix":"cc.Physics3DSliderConstraint:getUseFrameOffset()",
"body":["cc.Physics3DSliderConstraint:getUseFrameOffset()"],
"description":"getUseFrameOffset()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getSoftnessOrthoLin()":{
"prefix":"cc.Physics3DSliderConstraint:getSoftnessOrthoLin()",
"body":["cc.Physics3DSliderConstraint:getSoftnessOrthoLin()"],
"description":"getSoftnessOrthoLin()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getDampingOrthoAng()":{
"prefix":"cc.Physics3DSliderConstraint:getDampingOrthoAng()",
"body":["cc.Physics3DSliderConstraint:getDampingOrthoAng()"],
"description":"getDampingOrthoAng()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setUseFrameOffset(bool_frameOffsetOnOff)":{
"prefix":"cc.Physics3DSliderConstraint:setUseFrameOffset(bool_frameOffsetOnOff)",
"body":["cc.Physics3DSliderConstraint:setUseFrameOffset(bool_frameOffsetOnOff)"],
"description":"setUseFrameOffset(bool_frameOffsetOnOff)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setLowerLinLimit(float_lowerLimit)":{
"prefix":"cc.Physics3DSliderConstraint:setLowerLinLimit(float_lowerLimit)",
"body":["cc.Physics3DSliderConstraint:setLowerLinLimit(float_lowerLimit)"],
"description":"setLowerLinLimit(float_lowerLimit)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getRestitutionDirLin()":{
"prefix":"cc.Physics3DSliderConstraint:getRestitutionDirLin()",
"body":["cc.Physics3DSliderConstraint:getRestitutionDirLin()"],
"description":"getRestitutionDirLin()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getTargetLinMotorVelocity()":{
"prefix":"cc.Physics3DSliderConstraint:getTargetLinMotorVelocity()",
"body":["cc.Physics3DSliderConstraint:getTargetLinMotorVelocity()"],
"description":"getTargetLinMotorVelocity()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getLowerLinLimit()":{
"prefix":"cc.Physics3DSliderConstraint:getLowerLinLimit()",
"body":["cc.Physics3DSliderConstraint:getLowerLinLimit()"],
"description":"getLowerLinLimit()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getSoftnessLimLin()":{
"prefix":"cc.Physics3DSliderConstraint:getSoftnessLimLin()",
"body":["cc.Physics3DSliderConstraint:getSoftnessLimLin()"],
"description":"getSoftnessLimLin()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setDampingOrthoAng(float_dampingOrthoAng)":{
"prefix":"cc.Physics3DSliderConstraint:setDampingOrthoAng(float_dampingOrthoAng)",
"body":["cc.Physics3DSliderConstraint:setDampingOrthoAng(float_dampingOrthoAng)"],
"description":"setDampingOrthoAng(float_dampingOrthoAng)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setSoftnessDirAng(float_softnessDirAng)":{
"prefix":"cc.Physics3DSliderConstraint:setSoftnessDirAng(float_softnessDirAng)",
"body":["cc.Physics3DSliderConstraint:setSoftnessDirAng(float_softnessDirAng)"],
"description":"setSoftnessDirAng(float_softnessDirAng)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getPoweredLinMotor()":{
"prefix":"cc.Physics3DSliderConstraint:getPoweredLinMotor()",
"body":["cc.Physics3DSliderConstraint:getPoweredLinMotor()"],
"description":"getPoweredLinMotor()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setRestitutionOrthoAng(float_restitutionOrthoAng)":{
"prefix":"cc.Physics3DSliderConstraint:setRestitutionOrthoAng(float_restitutionOrthoAng)",
"body":["cc.Physics3DSliderConstraint:setRestitutionOrthoAng(float_restitutionOrthoAng)"],
"description":"setRestitutionOrthoAng(float_restitutionOrthoAng)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setDampingDirAng(float_dampingDirAng)":{
"prefix":"cc.Physics3DSliderConstraint:setDampingDirAng(float_dampingDirAng)",
"body":["cc.Physics3DSliderConstraint:setDampingDirAng(float_dampingDirAng)"],
"description":"setDampingDirAng(float_dampingDirAng)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)":{
"prefix":"cc.Physics3DSliderConstraint:setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)",
"body":["cc.Physics3DSliderConstraint:setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)"],
"description":"setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getRestitutionOrthoAng()":{
"prefix":"cc.Physics3DSliderConstraint:getRestitutionOrthoAng()",
"body":["cc.Physics3DSliderConstraint:getRestitutionOrthoAng()"],
"description":"getRestitutionOrthoAng()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getMaxAngMotorForce()":{
"prefix":"cc.Physics3DSliderConstraint:getMaxAngMotorForce()",
"body":["cc.Physics3DSliderConstraint:getMaxAngMotorForce()"],
"description":"getMaxAngMotorForce()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getDampingOrthoLin()":{
"prefix":"cc.Physics3DSliderConstraint:getDampingOrthoLin()",
"body":["cc.Physics3DSliderConstraint:getDampingOrthoLin()"],
"description":"getDampingOrthoLin()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getUpperLinLimit()":{
"prefix":"cc.Physics3DSliderConstraint:getUpperLinLimit()",
"body":["cc.Physics3DSliderConstraint:getUpperLinLimit()"],
"description":"getUpperLinLimit()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setMaxLinMotorForce(float_maxLinMotorForce)":{
"prefix":"cc.Physics3DSliderConstraint:setMaxLinMotorForce(float_maxLinMotorForce)",
"body":["cc.Physics3DSliderConstraint:setMaxLinMotorForce(float_maxLinMotorForce)"],
"description":"setMaxLinMotorForce(float_maxLinMotorForce)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getRestitutionOrthoLin()":{
"prefix":"cc.Physics3DSliderConstraint:getRestitutionOrthoLin()",
"body":["cc.Physics3DSliderConstraint:getRestitutionOrthoLin()"],
"description":"getRestitutionOrthoLin()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setTargetAngMotorVelocity(float_targetAngMotorVelocity)":{
"prefix":"cc.Physics3DSliderConstraint:setTargetAngMotorVelocity(float_targetAngMotorVelocity)",
"body":["cc.Physics3DSliderConstraint:setTargetAngMotorVelocity(float_targetAngMotorVelocity)"],
"description":"setTargetAngMotorVelocity(float_targetAngMotorVelocity)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getSoftnessLimAng()":{
"prefix":"cc.Physics3DSliderConstraint:getSoftnessLimAng()",
"body":["cc.Physics3DSliderConstraint:getSoftnessLimAng()"],
"description":"getSoftnessLimAng()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setRestitutionDirAng(float_restitutionDirAng)":{
"prefix":"cc.Physics3DSliderConstraint:setRestitutionDirAng(float_restitutionDirAng)",
"body":["cc.Physics3DSliderConstraint:setRestitutionDirAng(float_restitutionDirAng)"],
"description":"setRestitutionDirAng(float_restitutionDirAng)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getDampingLimLin()":{
"prefix":"cc.Physics3DSliderConstraint:getDampingLimLin()",
"body":["cc.Physics3DSliderConstraint:getDampingLimLin()"],
"description":"getDampingLimLin()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getLowerAngLimit()":{
"prefix":"cc.Physics3DSliderConstraint:getLowerAngLimit()",
"body":["cc.Physics3DSliderConstraint:getLowerAngLimit()"],
"description":"getLowerAngLimit()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getRestitutionDirAng()":{
"prefix":"cc.Physics3DSliderConstraint:getRestitutionDirAng()",
"body":["cc.Physics3DSliderConstraint:getRestitutionDirAng()"],
"description":"getRestitutionDirAng()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getTargetAngMotorVelocity()":{
"prefix":"cc.Physics3DSliderConstraint:getTargetAngMotorVelocity()",
"body":["cc.Physics3DSliderConstraint:getTargetAngMotorVelocity()"],
"description":"getTargetAngMotorVelocity()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setRestitutionLimLin(float_restitutionLimLin)":{
"prefix":"cc.Physics3DSliderConstraint:setRestitutionLimLin(float_restitutionLimLin)",
"body":["cc.Physics3DSliderConstraint:setRestitutionLimLin(float_restitutionLimLin)"],
"description":"setRestitutionLimLin(float_restitutionLimLin)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getMaxLinMotorForce()":{
"prefix":"cc.Physics3DSliderConstraint:getMaxLinMotorForce()",
"body":["cc.Physics3DSliderConstraint:getMaxLinMotorForce()"],
"description":"getMaxLinMotorForce()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setDampingOrthoLin(float_dampingOrthoLin)":{
"prefix":"cc.Physics3DSliderConstraint:setDampingOrthoLin(float_dampingOrthoLin)",
"body":["cc.Physics3DSliderConstraint:setDampingOrthoLin(float_dampingOrthoLin)"],
"description":"setDampingOrthoLin(float_dampingOrthoLin)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setSoftnessOrthoAng(float_softnessOrthoAng)":{
"prefix":"cc.Physics3DSliderConstraint:setSoftnessOrthoAng(float_softnessOrthoAng)",
"body":["cc.Physics3DSliderConstraint:setSoftnessOrthoAng(float_softnessOrthoAng)"],
"description":"setSoftnessOrthoAng(float_softnessOrthoAng)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setDampingLimLin(float_dampingLimLin)":{
"prefix":"cc.Physics3DSliderConstraint:setDampingLimLin(float_dampingLimLin)",
"body":["cc.Physics3DSliderConstraint:setDampingLimLin(float_dampingLimLin)"],
"description":"setDampingLimLin(float_dampingLimLin)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setSoftnessDirLin(float_softnessDirLin)":{
"prefix":"cc.Physics3DSliderConstraint:setSoftnessDirLin(float_softnessDirLin)",
"body":["cc.Physics3DSliderConstraint:setSoftnessDirLin(float_softnessDirLin)"],
"description":"setSoftnessDirLin(float_softnessDirLin)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setMaxAngMotorForce(float_maxAngMotorForce)":{
"prefix":"cc.Physics3DSliderConstraint:setMaxAngMotorForce(float_maxAngMotorForce)",
"body":["cc.Physics3DSliderConstraint:setMaxAngMotorForce(float_maxAngMotorForce)"],
"description":"setMaxAngMotorForce(float_maxAngMotorForce)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getSoftnessDirLin()":{
"prefix":"cc.Physics3DSliderConstraint:getSoftnessDirLin()",
"body":["cc.Physics3DSliderConstraint:getSoftnessDirLin()"],
"description":"getSoftnessDirLin()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:setSoftnessLimAng(float_softnessLimAng)":{
"prefix":"cc.Physics3DSliderConstraint:setSoftnessLimAng(float_softnessLimAng)",
"body":["cc.Physics3DSliderConstraint:setSoftnessLimAng(float_softnessLimAng)"],
"description":"setSoftnessLimAng(float_softnessLimAng)",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:getUseLinearReferenceFrameA()":{
"prefix":"cc.Physics3DSliderConstraint:getUseLinearReferenceFrameA()",
"body":["cc.Physics3DSliderConstraint:getUseLinearReferenceFrameA()"],
"description":"getUseLinearReferenceFrameA()",
"scope":"source.lua"},

"cc.Physics3DSliderConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInA,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameA)":{
"prefix":"cc.Physics3DSliderConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInA,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameA)",
"body":["cc.Physics3DSliderConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInA,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameA)"],
"description":"create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInA,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameA)",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint":{
"prefix":"cc.Physics3DConeTwistConstraint",
"body":["cc.Physics3DConeTwistConstraint"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:getBFrame()":{
"prefix":"cc.Physics3DConeTwistConstraint:getBFrame()",
"body":["cc.Physics3DConeTwistConstraint:getBFrame()"],
"description":"getBFrame()",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:setFixThresh(float_fixThresh)":{
"prefix":"cc.Physics3DConeTwistConstraint:setFixThresh(float_fixThresh)",
"body":["cc.Physics3DConeTwistConstraint:setFixThresh(float_fixThresh)"],
"description":"setFixThresh(float_fixThresh)",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:getFrameOffsetB()":{
"prefix":"cc.Physics3DConeTwistConstraint:getFrameOffsetB()",
"body":["cc.Physics3DConeTwistConstraint:getFrameOffsetB()"],
"description":"getFrameOffsetB()",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:getFrameOffsetA()":{
"prefix":"cc.Physics3DConeTwistConstraint:getFrameOffsetA()",
"body":["cc.Physics3DConeTwistConstraint:getFrameOffsetA()"],
"description":"getFrameOffsetA()",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:getFixThresh()":{
"prefix":"cc.Physics3DConeTwistConstraint:getFixThresh()",
"body":["cc.Physics3DConeTwistConstraint:getFixThresh()"],
"description":"getFixThresh()",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:getSwingSpan2()":{
"prefix":"cc.Physics3DConeTwistConstraint:getSwingSpan2()",
"body":["cc.Physics3DConeTwistConstraint:getSwingSpan2()"],
"description":"getSwingSpan2()",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:getSwingSpan1()":{
"prefix":"cc.Physics3DConeTwistConstraint:getSwingSpan1()",
"body":["cc.Physics3DConeTwistConstraint:getSwingSpan1()"],
"description":"getSwingSpan1()",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:setMaxMotorImpulse(float_maxMotorImpulse)":{
"prefix":"cc.Physics3DConeTwistConstraint:setMaxMotorImpulse(float_maxMotorImpulse)",
"body":["cc.Physics3DConeTwistConstraint:setMaxMotorImpulse(float_maxMotorImpulse)"],
"description":"setMaxMotorImpulse(float_maxMotorImpulse)",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)":{
"prefix":"cc.Physics3DConeTwistConstraint:setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)",
"body":["cc.Physics3DConeTwistConstraint:setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)"],
"description":"setFrames(const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:getTwistAngle()":{
"prefix":"cc.Physics3DConeTwistConstraint:getTwistAngle()",
"body":["cc.Physics3DConeTwistConstraint:getTwistAngle()"],
"description":"getTwistAngle()",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:GetPointForAngle(float_fAngleInRadians,float_fLength)":{
"prefix":"cc.Physics3DConeTwistConstraint:GetPointForAngle(float_fAngleInRadians,float_fLength)",
"body":["cc.Physics3DConeTwistConstraint:GetPointForAngle(float_fAngleInRadians,float_fLength)"],
"description":"GetPointForAngle(float_fAngleInRadians,float_fLength)",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:setMaxMotorImpulseNormalized(float_maxMotorImpulse)":{
"prefix":"cc.Physics3DConeTwistConstraint:setMaxMotorImpulseNormalized(float_maxMotorImpulse)",
"body":["cc.Physics3DConeTwistConstraint:setMaxMotorImpulseNormalized(float_maxMotorImpulse)"],
"description":"setMaxMotorImpulseNormalized(float_maxMotorImpulse)",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:getTwistSpan()":{
"prefix":"cc.Physics3DConeTwistConstraint:getTwistSpan()",
"body":["cc.Physics3DConeTwistConstraint:getTwistSpan()"],
"description":"getTwistSpan()",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:setDamping(float_damping)":{
"prefix":"cc.Physics3DConeTwistConstraint:setDamping(float_damping)",
"body":["cc.Physics3DConeTwistConstraint:setDamping(float_damping)"],
"description":"setDamping(float_damping)",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:setLimit(float_swingSpan1,float_swingSpan2,float_twistSpan,float_softness,float_biasFactor,float_relaxationFactor)":{
"prefix":"cc.Physics3DConeTwistConstraint:setLimit(float_swingSpan1,float_swingSpan2,float_twistSpan,float_softness,float_biasFactor,float_relaxationFactor)",
"body":["cc.Physics3DConeTwistConstraint:setLimit(float_swingSpan1,float_swingSpan2,float_twistSpan,float_softness,float_biasFactor,float_relaxationFactor)"],
"description":"setLimit(float_swingSpan1,float_swingSpan2,float_twistSpan,float_softness,float_biasFactor,float_relaxationFactor)",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:getAFrame()":{
"prefix":"cc.Physics3DConeTwistConstraint:getAFrame()",
"body":["cc.Physics3DConeTwistConstraint:getAFrame()"],
"description":"getAFrame()",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:enableMotor(bool_b)":{
"prefix":"cc.Physics3DConeTwistConstraint:enableMotor(bool_b)",
"body":["cc.Physics3DConeTwistConstraint:enableMotor(bool_b)"],
"description":"enableMotor(bool_b)",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Mat4_frameA)":{
"prefix":"cc.Physics3DConeTwistConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Mat4_frameA)",
"body":["cc.Physics3DConeTwistConstraint:create(Physics3DRigidBody_rbA,const_cocos2d_Mat4_frameA)"],
"description":"create(Physics3DRigidBody_rbA,const_cocos2d_Mat4_frameA)",
"scope":"source.lua"},

"cc.Physics3DConeTwistConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)":{
"prefix":"cc.Physics3DConeTwistConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)",
"body":["cc.Physics3DConeTwistConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)"],
"description":"create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameA,const_cocos2d_Mat4_frameB)",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint":{
"prefix":"cc.Physics3D6DofConstraint",
"body":["cc.Physics3D6DofConstraint"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:setLinearLowerLimit(const_cocos2d_Vec3_linearLower)":{
"prefix":"cc.Physics3D6DofConstraint:setLinearLowerLimit(const_cocos2d_Vec3_linearLower)",
"body":["cc.Physics3D6DofConstraint:setLinearLowerLimit(const_cocos2d_Vec3_linearLower)"],
"description":"setLinearLowerLimit(const_cocos2d_Vec3_linearLower)",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:getLinearLowerLimit()":{
"prefix":"cc.Physics3D6DofConstraint:getLinearLowerLimit()",
"body":["cc.Physics3D6DofConstraint:getLinearLowerLimit()"],
"description":"getLinearLowerLimit()",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:getAngularUpperLimit()":{
"prefix":"cc.Physics3D6DofConstraint:getAngularUpperLimit()",
"body":["cc.Physics3D6DofConstraint:getAngularUpperLimit()"],
"description":"getAngularUpperLimit()",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:getUseFrameOffset()":{
"prefix":"cc.Physics3D6DofConstraint:getUseFrameOffset()",
"body":["cc.Physics3D6DofConstraint:getUseFrameOffset()"],
"description":"getUseFrameOffset()",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:getLinearUpperLimit()":{
"prefix":"cc.Physics3D6DofConstraint:getLinearUpperLimit()",
"body":["cc.Physics3D6DofConstraint:getLinearUpperLimit()"],
"description":"getLinearUpperLimit()",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:setAngularLowerLimit(const_cocos2d_Vec3_angularLower)":{
"prefix":"cc.Physics3D6DofConstraint:setAngularLowerLimit(const_cocos2d_Vec3_angularLower)",
"body":["cc.Physics3D6DofConstraint:setAngularLowerLimit(const_cocos2d_Vec3_angularLower)"],
"description":"setAngularLowerLimit(const_cocos2d_Vec3_angularLower)",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:isLimited(int_limitIndex)":{
"prefix":"cc.Physics3D6DofConstraint:isLimited(int_limitIndex)",
"body":["cc.Physics3D6DofConstraint:isLimited(int_limitIndex)"],
"description":"isLimited(int_limitIndex)",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:setUseFrameOffset(bool_frameOffsetOnOff)":{
"prefix":"cc.Physics3D6DofConstraint:setUseFrameOffset(bool_frameOffsetOnOff)",
"body":["cc.Physics3D6DofConstraint:setUseFrameOffset(bool_frameOffsetOnOff)"],
"description":"setUseFrameOffset(bool_frameOffsetOnOff)",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:setLinearUpperLimit(const_cocos2d_Vec3_linearUpper)":{
"prefix":"cc.Physics3D6DofConstraint:setLinearUpperLimit(const_cocos2d_Vec3_linearUpper)",
"body":["cc.Physics3D6DofConstraint:setLinearUpperLimit(const_cocos2d_Vec3_linearUpper)"],
"description":"setLinearUpperLimit(const_cocos2d_Vec3_linearUpper)",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:getAngularLowerLimit()":{
"prefix":"cc.Physics3D6DofConstraint:getAngularLowerLimit()",
"body":["cc.Physics3D6DofConstraint:getAngularLowerLimit()"],
"description":"getAngularLowerLimit()",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:setAngularUpperLimit(const_cocos2d_Vec3_angularUpper)":{
"prefix":"cc.Physics3D6DofConstraint:setAngularUpperLimit(const_cocos2d_Vec3_angularUpper)",
"body":["cc.Physics3D6DofConstraint:setAngularUpperLimit(const_cocos2d_Vec3_angularUpper)"],
"description":"setAngularUpperLimit(const_cocos2d_Vec3_angularUpper)",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInA,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameA)":{
"prefix":"cc.Physics3D6DofConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInA,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameA)",
"body":["cc.Physics3D6DofConstraint:create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInA,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameA)"],
"description":"create(Physics3DRigidBody_rbA,Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInA,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameA)",
"scope":"source.lua"},

"cc.Physics3D6DofConstraint:create(Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameB)":{
"prefix":"cc.Physics3D6DofConstraint:create(Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameB)",
"body":["cc.Physics3D6DofConstraint:create(Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameB)"],
"description":"create(Physics3DRigidBody_rbB,const_cocos2d_Mat4_frameInB,bool_useLinearReferenceFrameB)",
"scope":"source.lua"},

"cc.PhysicsShape":{
"prefix":"cc.PhysicsShape",
"body":["cc.PhysicsShape"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsShape:getFriction()":{
"prefix":"cc.PhysicsShape:getFriction()",
"body":["cc.PhysicsShape:getFriction()"],
"description":"getFriction()",
"scope":"source.lua"},

"cc.PhysicsShape:setGroup(int_group)":{
"prefix":"cc.PhysicsShape:setGroup(int_group)",
"body":["cc.PhysicsShape:setGroup(int_group)"],
"description":"setGroup(int_group)",
"scope":"source.lua"},

"cc.PhysicsShape:setDensity(float_density)":{
"prefix":"cc.PhysicsShape:setDensity(float_density)",
"body":["cc.PhysicsShape:setDensity(float_density)"],
"description":"setDensity(float_density)",
"scope":"source.lua"},

"cc.PhysicsShape:getMass()":{
"prefix":"cc.PhysicsShape:getMass()",
"body":["cc.PhysicsShape:getMass()"],
"description":"getMass()",
"scope":"source.lua"},

"cc.PhysicsShape:getMaterial()":{
"prefix":"cc.PhysicsShape:getMaterial()",
"body":["cc.PhysicsShape:getMaterial()"],
"description":"getMaterial()",
"scope":"source.lua"},

"cc.PhysicsShape:setSensor(bool_sensor)":{
"prefix":"cc.PhysicsShape:setSensor(bool_sensor)",
"body":["cc.PhysicsShape:setSensor(bool_sensor)"],
"description":"setSensor(bool_sensor)",
"scope":"source.lua"},

"cc.PhysicsShape:getCollisionBitmask()":{
"prefix":"cc.PhysicsShape:getCollisionBitmask()",
"body":["cc.PhysicsShape:getCollisionBitmask()"],
"description":"getCollisionBitmask()",
"scope":"source.lua"},

"cc.PhysicsShape:getArea()":{
"prefix":"cc.PhysicsShape:getArea()",
"body":["cc.PhysicsShape:getArea()"],
"description":"getArea()",
"scope":"source.lua"},

"cc.PhysicsShape:setCategoryBitmask(int_bitmask)":{
"prefix":"cc.PhysicsShape:setCategoryBitmask(int_bitmask)",
"body":["cc.PhysicsShape:setCategoryBitmask(int_bitmask)"],
"description":"setCategoryBitmask(int_bitmask)",
"scope":"source.lua"},

"cc.PhysicsShape:getGroup()":{
"prefix":"cc.PhysicsShape:getGroup()",
"body":["cc.PhysicsShape:getGroup()"],
"description":"getGroup()",
"scope":"source.lua"},

"cc.PhysicsShape:setMoment(float_moment)":{
"prefix":"cc.PhysicsShape:setMoment(float_moment)",
"body":["cc.PhysicsShape:setMoment(float_moment)"],
"description":"setMoment(float_moment)",
"scope":"source.lua"},

"cc.PhysicsShape:containsPoint(const_Vec2_point)":{
"prefix":"cc.PhysicsShape:containsPoint(const_Vec2_point)",
"body":["cc.PhysicsShape:containsPoint(const_Vec2_point)"],
"description":"containsPoint(const_Vec2_point)",
"scope":"source.lua"},

"cc.PhysicsShape:getCategoryBitmask()":{
"prefix":"cc.PhysicsShape:getCategoryBitmask()",
"body":["cc.PhysicsShape:getCategoryBitmask()"],
"description":"getCategoryBitmask()",
"scope":"source.lua"},

"cc.PhysicsShape:isSensor()":{
"prefix":"cc.PhysicsShape:isSensor()",
"body":["cc.PhysicsShape:isSensor()"],
"description":"isSensor()",
"scope":"source.lua"},

"cc.PhysicsShape:getType()":{
"prefix":"cc.PhysicsShape:getType()",
"body":["cc.PhysicsShape:getType()"],
"description":"getType()",
"scope":"source.lua"},

"cc.PhysicsShape:getContactTestBitmask()":{
"prefix":"cc.PhysicsShape:getContactTestBitmask()",
"body":["cc.PhysicsShape:getContactTestBitmask()"],
"description":"getContactTestBitmask()",
"scope":"source.lua"},

"cc.PhysicsShape:getCenter()":{
"prefix":"cc.PhysicsShape:getCenter()",
"body":["cc.PhysicsShape:getCenter()"],
"description":"getCenter()",
"scope":"source.lua"},

"cc.PhysicsShape:getDensity()":{
"prefix":"cc.PhysicsShape:getDensity()",
"body":["cc.PhysicsShape:getDensity()"],
"description":"getDensity()",
"scope":"source.lua"},

"cc.PhysicsShape:setMass(float_mass)":{
"prefix":"cc.PhysicsShape:setMass(float_mass)",
"body":["cc.PhysicsShape:setMass(float_mass)"],
"description":"setMass(float_mass)",
"scope":"source.lua"},

"cc.PhysicsShape:getTag()":{
"prefix":"cc.PhysicsShape:getTag()",
"body":["cc.PhysicsShape:getTag()"],
"description":"getTag()",
"scope":"source.lua"},

"cc.PhysicsShape:calculateDefaultMoment()":{
"prefix":"cc.PhysicsShape:calculateDefaultMoment()",
"body":["cc.PhysicsShape:calculateDefaultMoment()"],
"description":"calculateDefaultMoment()",
"scope":"source.lua"},

"cc.PhysicsShape:setCollisionBitmask(int_bitmask)":{
"prefix":"cc.PhysicsShape:setCollisionBitmask(int_bitmask)",
"body":["cc.PhysicsShape:setCollisionBitmask(int_bitmask)"],
"description":"setCollisionBitmask(int_bitmask)",
"scope":"source.lua"},

"cc.PhysicsShape:getMoment()":{
"prefix":"cc.PhysicsShape:getMoment()",
"body":["cc.PhysicsShape:getMoment()"],
"description":"getMoment()",
"scope":"source.lua"},

"cc.PhysicsShape:getOffset()":{
"prefix":"cc.PhysicsShape:getOffset()",
"body":["cc.PhysicsShape:getOffset()"],
"description":"getOffset()",
"scope":"source.lua"},

"cc.PhysicsShape:getRestitution()":{
"prefix":"cc.PhysicsShape:getRestitution()",
"body":["cc.PhysicsShape:getRestitution()"],
"description":"getRestitution()",
"scope":"source.lua"},

"cc.PhysicsShape:setFriction(float_friction)":{
"prefix":"cc.PhysicsShape:setFriction(float_friction)",
"body":["cc.PhysicsShape:setFriction(float_friction)"],
"description":"setFriction(float_friction)",
"scope":"source.lua"},

"cc.PhysicsShape:setMaterial(const_PhysicsMaterial_material)":{
"prefix":"cc.PhysicsShape:setMaterial(const_PhysicsMaterial_material)",
"body":["cc.PhysicsShape:setMaterial(const_PhysicsMaterial_material)"],
"description":"setMaterial(const_PhysicsMaterial_material)",
"scope":"source.lua"},

"cc.PhysicsShape:setTag(int_tag)":{
"prefix":"cc.PhysicsShape:setTag(int_tag)",
"body":["cc.PhysicsShape:setTag(int_tag)"],
"description":"setTag(int_tag)",
"scope":"source.lua"},

"cc.PhysicsShape:setContactTestBitmask(int_bitmask)":{
"prefix":"cc.PhysicsShape:setContactTestBitmask(int_bitmask)",
"body":["cc.PhysicsShape:setContactTestBitmask(int_bitmask)"],
"description":"setContactTestBitmask(int_bitmask)",
"scope":"source.lua"},

"cc.PhysicsShape:setRestitution(float_restitution)":{
"prefix":"cc.PhysicsShape:setRestitution(float_restitution)",
"body":["cc.PhysicsShape:setRestitution(float_restitution)"],
"description":"setRestitution(float_restitution)",
"scope":"source.lua"},

"cc.PhysicsShape:getBody()":{
"prefix":"cc.PhysicsShape:getBody()",
"body":["cc.PhysicsShape:getBody()"],
"description":"getBody()",
"scope":"source.lua"},

"cc.PhysicsShapeCircle":{
"prefix":"cc.PhysicsShapeCircle",
"body":["cc.PhysicsShapeCircle"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsShapeCircle:getRadius()":{
"prefix":"cc.PhysicsShapeCircle:getRadius()",
"body":["cc.PhysicsShapeCircle:getRadius()"],
"description":"getRadius()",
"scope":"source.lua"},

"cc.PhysicsShapeCircle:create(float_radius,const_PhysicsMaterial_material,const_Vec2_offset)":{
"prefix":"cc.PhysicsShapeCircle:create(float_radius,const_PhysicsMaterial_material,const_Vec2_offset)",
"body":["cc.PhysicsShapeCircle:create(float_radius,const_PhysicsMaterial_material,const_Vec2_offset)"],
"description":"create(float_radius,const_PhysicsMaterial_material,const_Vec2_offset)",
"scope":"source.lua"},

"cc.PhysicsShapeCircle:calculateArea(float_radius)":{
"prefix":"cc.PhysicsShapeCircle:calculateArea(float_radius)",
"body":["cc.PhysicsShapeCircle:calculateArea(float_radius)"],
"description":"calculateArea(float_radius)",
"scope":"source.lua"},

"cc.PhysicsShapeCircle:calculateArea()":{
"prefix":"cc.PhysicsShapeCircle:calculateArea()",
"body":["cc.PhysicsShapeCircle:calculateArea()"],
"description":"calculateArea()",
"scope":"source.lua"},

"cc.PhysicsShapeCircle:calculateMoment(float_mass,float_radius,const_Vec2_offset)":{
"prefix":"cc.PhysicsShapeCircle:calculateMoment(float_mass,float_radius,const_Vec2_offset)",
"body":["cc.PhysicsShapeCircle:calculateMoment(float_mass,float_radius,const_Vec2_offset)"],
"description":"calculateMoment(float_mass,float_radius,const_Vec2_offset)",
"scope":"source.lua"},

"cc.PhysicsShapePolygon":{
"prefix":"cc.PhysicsShapePolygon",
"body":["cc.PhysicsShapePolygon"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsShapePolygon:getPointsCount()":{
"prefix":"cc.PhysicsShapePolygon:getPointsCount()",
"body":["cc.PhysicsShapePolygon:getPointsCount()"],
"description":"getPointsCount()",
"scope":"source.lua"},

"cc.PhysicsShapePolygon:getPoint(int_i)":{
"prefix":"cc.PhysicsShapePolygon:getPoint(int_i)",
"body":["cc.PhysicsShapePolygon:getPoint(int_i)"],
"description":"getPoint(int_i)",
"scope":"source.lua"},

"cc.PhysicsShapeBox":{
"prefix":"cc.PhysicsShapeBox",
"body":["cc.PhysicsShapeBox"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsShapeBox:getSize()":{
"prefix":"cc.PhysicsShapeBox:getSize()",
"body":["cc.PhysicsShapeBox:getSize()"],
"description":"getSize()",
"scope":"source.lua"},

"cc.PhysicsShapeBox:create(const_Size_size,const_PhysicsMaterial_material,const_Vec2_offset,float_radius)":{
"prefix":"cc.PhysicsShapeBox:create(const_Size_size,const_PhysicsMaterial_material,const_Vec2_offset,float_radius)",
"body":["cc.PhysicsShapeBox:create(const_Size_size,const_PhysicsMaterial_material,const_Vec2_offset,float_radius)"],
"description":"create(const_Size_size,const_PhysicsMaterial_material,const_Vec2_offset,float_radius)",
"scope":"source.lua"},

"cc.PhysicsShapeEdgeSegment":{
"prefix":"cc.PhysicsShapeEdgeSegment",
"body":["cc.PhysicsShapeEdgeSegment"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsShapeEdgeSegment:getPointB()":{
"prefix":"cc.PhysicsShapeEdgeSegment:getPointB()",
"body":["cc.PhysicsShapeEdgeSegment:getPointB()"],
"description":"getPointB()",
"scope":"source.lua"},

"cc.PhysicsShapeEdgeSegment:getPointA()":{
"prefix":"cc.PhysicsShapeEdgeSegment:getPointA()",
"body":["cc.PhysicsShapeEdgeSegment:getPointA()"],
"description":"getPointA()",
"scope":"source.lua"},

"cc.PhysicsShapeEdgeSegment:create(const_Vec2_a,const_Vec2_b,const_PhysicsMaterial_material,float_border)":{
"prefix":"cc.PhysicsShapeEdgeSegment:create(const_Vec2_a,const_Vec2_b,const_PhysicsMaterial_material,float_border)",
"body":["cc.PhysicsShapeEdgeSegment:create(const_Vec2_a,const_Vec2_b,const_PhysicsMaterial_material,float_border)"],
"description":"create(const_Vec2_a,const_Vec2_b,const_PhysicsMaterial_material,float_border)",
"scope":"source.lua"},

"cc.PhysicsShapeEdgePolygon":{
"prefix":"cc.PhysicsShapeEdgePolygon",
"body":["cc.PhysicsShapeEdgePolygon"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsShapeEdgePolygon:getPointsCount()":{
"prefix":"cc.PhysicsShapeEdgePolygon:getPointsCount()",
"body":["cc.PhysicsShapeEdgePolygon:getPointsCount()"],
"description":"getPointsCount()",
"scope":"source.lua"},

"cc.PhysicsShapeEdgeBox":{
"prefix":"cc.PhysicsShapeEdgeBox",
"body":["cc.PhysicsShapeEdgeBox"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsShapeEdgeBox:create(const_Size_size,const_PhysicsMaterial_material,float_border,const_Vec2_offset)":{
"prefix":"cc.PhysicsShapeEdgeBox:create(const_Size_size,const_PhysicsMaterial_material,float_border,const_Vec2_offset)",
"body":["cc.PhysicsShapeEdgeBox:create(const_Size_size,const_PhysicsMaterial_material,float_border,const_Vec2_offset)"],
"description":"create(const_Size_size,const_PhysicsMaterial_material,float_border,const_Vec2_offset)",
"scope":"source.lua"},

"cc.PhysicsShapeEdgeChain":{
"prefix":"cc.PhysicsShapeEdgeChain",
"body":["cc.PhysicsShapeEdgeChain"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsShapeEdgeChain:getPointsCount()":{
"prefix":"cc.PhysicsShapeEdgeChain:getPointsCount()",
"body":["cc.PhysicsShapeEdgeChain:getPointsCount()"],
"description":"getPointsCount()",
"scope":"source.lua"},

"cc.PhysicsBody":{
"prefix":"cc.PhysicsBody",
"body":["cc.PhysicsBody"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsBody:isGravityEnabled()":{
"prefix":"cc.PhysicsBody:isGravityEnabled()",
"body":["cc.PhysicsBody:isGravityEnabled()"],
"description":"isGravityEnabled()",
"scope":"source.lua"},

"cc.PhysicsBody:resetForces()":{
"prefix":"cc.PhysicsBody:resetForces()",
"body":["cc.PhysicsBody:resetForces()"],
"description":"resetForces()",
"scope":"source.lua"},

"cc.PhysicsBody:getVelocityLimit()":{
"prefix":"cc.PhysicsBody:getVelocityLimit()",
"body":["cc.PhysicsBody:getVelocityLimit()"],
"description":"getVelocityLimit()",
"scope":"source.lua"},

"cc.PhysicsBody:setGroup(int_group)":{
"prefix":"cc.PhysicsBody:setGroup(int_group)",
"body":["cc.PhysicsBody:setGroup(int_group)"],
"description":"setGroup(int_group)",
"scope":"source.lua"},

"cc.PhysicsBody:getMass()":{
"prefix":"cc.PhysicsBody:getMass()",
"body":["cc.PhysicsBody:getMass()"],
"description":"getMass()",
"scope":"source.lua"},

"cc.PhysicsBody:getCollisionBitmask()":{
"prefix":"cc.PhysicsBody:getCollisionBitmask()",
"body":["cc.PhysicsBody:getCollisionBitmask()"],
"description":"getCollisionBitmask()",
"scope":"source.lua"},

"cc.PhysicsBody:getRotationOffset()":{
"prefix":"cc.PhysicsBody:getRotationOffset()",
"body":["cc.PhysicsBody:getRotationOffset()"],
"description":"getRotationOffset()",
"scope":"source.lua"},

"cc.PhysicsBody:getRotation()":{
"prefix":"cc.PhysicsBody:getRotation()",
"body":["cc.PhysicsBody:getRotation()"],
"description":"getRotation()",
"scope":"source.lua"},

"cc.PhysicsBody:getMoment()":{
"prefix":"cc.PhysicsBody:getMoment()",
"body":["cc.PhysicsBody:getMoment()"],
"description":"getMoment()",
"scope":"source.lua"},

"cc.PhysicsBody:applyImpulse(const_Vec2_impulse,const_Vec2_offset)":{
"prefix":"cc.PhysicsBody:applyImpulse(const_Vec2_impulse,const_Vec2_offset)",
"body":["cc.PhysicsBody:applyImpulse(const_Vec2_impulse,const_Vec2_offset)"],
"description":"applyImpulse(const_Vec2_impulse,const_Vec2_offset)",
"scope":"source.lua"},

"cc.PhysicsBody:setRotationOffset(float_rotation)":{
"prefix":"cc.PhysicsBody:setRotationOffset(float_rotation)",
"body":["cc.PhysicsBody:setRotationOffset(float_rotation)"],
"description":"setRotationOffset(float_rotation)",
"scope":"source.lua"},

"cc.PhysicsBody:applyForce(const_Vec2_force,const_Vec2_offset)":{
"prefix":"cc.PhysicsBody:applyForce(const_Vec2_force,const_Vec2_offset)",
"body":["cc.PhysicsBody:applyForce(const_Vec2_force,const_Vec2_offset)"],
"description":"applyForce(const_Vec2_force,const_Vec2_offset)",
"scope":"source.lua"},

"cc.PhysicsBody:addShape(PhysicsShape_shape,bool_addMassAndMoment)":{
"prefix":"cc.PhysicsBody:addShape(PhysicsShape_shape,bool_addMassAndMoment)",
"body":["cc.PhysicsBody:addShape(PhysicsShape_shape,bool_addMassAndMoment)"],
"description":"addShape(PhysicsShape_shape,bool_addMassAndMoment)",
"scope":"source.lua"},

"cc.PhysicsBody:applyTorque(float_torque)":{
"prefix":"cc.PhysicsBody:applyTorque(float_torque)",
"body":["cc.PhysicsBody:applyTorque(float_torque)"],
"description":"applyTorque(float_torque)",
"scope":"source.lua"},

"cc.PhysicsBody:getAngularVelocityLimit()":{
"prefix":"cc.PhysicsBody:getAngularVelocityLimit()",
"body":["cc.PhysicsBody:getAngularVelocityLimit()"],
"description":"getAngularVelocityLimit()",
"scope":"source.lua"},

"cc.PhysicsBody:setAngularVelocityLimit(float_limit)":{
"prefix":"cc.PhysicsBody:setAngularVelocityLimit(float_limit)",
"body":["cc.PhysicsBody:setAngularVelocityLimit(float_limit)"],
"description":"setAngularVelocityLimit(float_limit)",
"scope":"source.lua"},

"cc.PhysicsBody:getVelocity()":{
"prefix":"cc.PhysicsBody:getVelocity()",
"body":["cc.PhysicsBody:getVelocity()"],
"description":"getVelocity()",
"scope":"source.lua"},

"cc.PhysicsBody:getLinearDamping()":{
"prefix":"cc.PhysicsBody:getLinearDamping()",
"body":["cc.PhysicsBody:getLinearDamping()"],
"description":"getLinearDamping()",
"scope":"source.lua"},

"cc.PhysicsBody:removeAllShapes(bool_reduceMassAndMoment)":{
"prefix":"cc.PhysicsBody:removeAllShapes(bool_reduceMassAndMoment)",
"body":["cc.PhysicsBody:removeAllShapes(bool_reduceMassAndMoment)"],
"description":"removeAllShapes(bool_reduceMassAndMoment)",
"scope":"source.lua"},

"cc.PhysicsBody:setAngularDamping(float_damping)":{
"prefix":"cc.PhysicsBody:setAngularDamping(float_damping)",
"body":["cc.PhysicsBody:setAngularDamping(float_damping)"],
"description":"setAngularDamping(float_damping)",
"scope":"source.lua"},

"cc.PhysicsBody:setVelocityLimit(float_limit)":{
"prefix":"cc.PhysicsBody:setVelocityLimit(float_limit)",
"body":["cc.PhysicsBody:setVelocityLimit(float_limit)"],
"description":"setVelocityLimit(float_limit)",
"scope":"source.lua"},

"cc.PhysicsBody:setResting(bool_rest)":{
"prefix":"cc.PhysicsBody:setResting(bool_rest)",
"body":["cc.PhysicsBody:setResting(bool_rest)"],
"description":"setResting(bool_rest)",
"scope":"source.lua"},

"cc.PhysicsBody:getPositionOffset()":{
"prefix":"cc.PhysicsBody:getPositionOffset()",
"body":["cc.PhysicsBody:getPositionOffset()"],
"description":"getPositionOffset()",
"scope":"source.lua"},

"cc.PhysicsBody:setCategoryBitmask(int_bitmask)":{
"prefix":"cc.PhysicsBody:setCategoryBitmask(int_bitmask)",
"body":["cc.PhysicsBody:setCategoryBitmask(int_bitmask)"],
"description":"setCategoryBitmask(int_bitmask)",
"scope":"source.lua"},

"cc.PhysicsBody:getWorld()":{
"prefix":"cc.PhysicsBody:getWorld()",
"body":["cc.PhysicsBody:getWorld()"],
"description":"getWorld()",
"scope":"source.lua"},

"cc.PhysicsBody:getAngularVelocity()":{
"prefix":"cc.PhysicsBody:getAngularVelocity()",
"body":["cc.PhysicsBody:getAngularVelocity()"],
"description":"getAngularVelocity()",
"scope":"source.lua"},

"cc.PhysicsBody:getPosition()":{
"prefix":"cc.PhysicsBody:getPosition()",
"body":["cc.PhysicsBody:getPosition()"],
"description":"getPosition()",
"scope":"source.lua"},

"cc.PhysicsBody:setGravityEnable(bool_enable)":{
"prefix":"cc.PhysicsBody:setGravityEnable(bool_enable)",
"body":["cc.PhysicsBody:setGravityEnable(bool_enable)"],
"description":"setGravityEnable(bool_enable)",
"scope":"source.lua"},

"cc.PhysicsBody:getGroup()":{
"prefix":"cc.PhysicsBody:getGroup()",
"body":["cc.PhysicsBody:getGroup()"],
"description":"getGroup()",
"scope":"source.lua"},

"cc.PhysicsBody:setMoment(float_moment)":{
"prefix":"cc.PhysicsBody:setMoment(float_moment)",
"body":["cc.PhysicsBody:setMoment(float_moment)"],
"description":"setMoment(float_moment)",
"scope":"source.lua"},

"cc.PhysicsBody:getTag()":{
"prefix":"cc.PhysicsBody:getTag()",
"body":["cc.PhysicsBody:getTag()"],
"description":"getTag()",
"scope":"source.lua"},

"cc.PhysicsBody:local2World(const_Vec2_point)":{
"prefix":"cc.PhysicsBody:local2World(const_Vec2_point)",
"body":["cc.PhysicsBody:local2World(const_Vec2_point)"],
"description":"local2World(const_Vec2_point)",
"scope":"source.lua"},

"cc.PhysicsBody:getCategoryBitmask()":{
"prefix":"cc.PhysicsBody:getCategoryBitmask()",
"body":["cc.PhysicsBody:getCategoryBitmask()"],
"description":"getCategoryBitmask()",
"scope":"source.lua"},

"cc.PhysicsBody:setDynamic(bool_dynamic)":{
"prefix":"cc.PhysicsBody:setDynamic(bool_dynamic)",
"body":["cc.PhysicsBody:setDynamic(bool_dynamic)"],
"description":"setDynamic(bool_dynamic)",
"scope":"source.lua"},

"cc.PhysicsBody:getFirstShape()":{
"prefix":"cc.PhysicsBody:getFirstShape()",
"body":["cc.PhysicsBody:getFirstShape()"],
"description":"getFirstShape()",
"scope":"source.lua"},

"cc.PhysicsBody:getShapes()":{
"prefix":"cc.PhysicsBody:getShapes()",
"body":["cc.PhysicsBody:getShapes()"],
"description":"getShapes()",
"scope":"source.lua"},

"cc.PhysicsBody:getContactTestBitmask()":{
"prefix":"cc.PhysicsBody:getContactTestBitmask()",
"body":["cc.PhysicsBody:getContactTestBitmask()"],
"description":"getContactTestBitmask()",
"scope":"source.lua"},

"cc.PhysicsBody:setAngularVelocity(float_velocity)":{
"prefix":"cc.PhysicsBody:setAngularVelocity(float_velocity)",
"body":["cc.PhysicsBody:setAngularVelocity(float_velocity)"],
"description":"setAngularVelocity(float_velocity)",
"scope":"source.lua"},

"cc.PhysicsBody:world2Local(const_Vec2_point)":{
"prefix":"cc.PhysicsBody:world2Local(const_Vec2_point)",
"body":["cc.PhysicsBody:world2Local(const_Vec2_point)"],
"description":"world2Local(const_Vec2_point)",
"scope":"source.lua"},

"cc.PhysicsBody:removeShape(PhysicsShape_shape,bool_reduceMassAndMoment)":{
"prefix":"cc.PhysicsBody:removeShape(PhysicsShape_shape,bool_reduceMassAndMoment)",
"body":["cc.PhysicsBody:removeShape(PhysicsShape_shape,bool_reduceMassAndMoment)"],
"description":"removeShape(PhysicsShape_shape,bool_reduceMassAndMoment)",
"scope":"source.lua"},

"cc.PhysicsBody:removeShape(int_tag,bool_reduceMassAndMoment)":{
"prefix":"cc.PhysicsBody:removeShape(int_tag,bool_reduceMassAndMoment)",
"body":["cc.PhysicsBody:removeShape(int_tag,bool_reduceMassAndMoment)"],
"description":"removeShape(int_tag,bool_reduceMassAndMoment)",
"scope":"source.lua"},

"cc.PhysicsBody:setMass(float_mass)":{
"prefix":"cc.PhysicsBody:setMass(float_mass)",
"body":["cc.PhysicsBody:setMass(float_mass)"],
"description":"setMass(float_mass)",
"scope":"source.lua"},

"cc.PhysicsBody:addMoment(float_moment)":{
"prefix":"cc.PhysicsBody:addMoment(float_moment)",
"body":["cc.PhysicsBody:addMoment(float_moment)"],
"description":"addMoment(float_moment)",
"scope":"source.lua"},

"cc.PhysicsBody:setVelocity(const_Vec2_velocity)":{
"prefix":"cc.PhysicsBody:setVelocity(const_Vec2_velocity)",
"body":["cc.PhysicsBody:setVelocity(const_Vec2_velocity)"],
"description":"setVelocity(const_Vec2_velocity)",
"scope":"source.lua"},

"cc.PhysicsBody:setLinearDamping(float_damping)":{
"prefix":"cc.PhysicsBody:setLinearDamping(float_damping)",
"body":["cc.PhysicsBody:setLinearDamping(float_damping)"],
"description":"setLinearDamping(float_damping)",
"scope":"source.lua"},

"cc.PhysicsBody:setCollisionBitmask(int_bitmask)":{
"prefix":"cc.PhysicsBody:setCollisionBitmask(int_bitmask)",
"body":["cc.PhysicsBody:setCollisionBitmask(int_bitmask)"],
"description":"setCollisionBitmask(int_bitmask)",
"scope":"source.lua"},

"cc.PhysicsBody:setPositionOffset(const_Vec2_position)":{
"prefix":"cc.PhysicsBody:setPositionOffset(const_Vec2_position)",
"body":["cc.PhysicsBody:setPositionOffset(const_Vec2_position)"],
"description":"setPositionOffset(const_Vec2_position)",
"scope":"source.lua"},

"cc.PhysicsBody:setRotationEnable(bool_enable)":{
"prefix":"cc.PhysicsBody:setRotationEnable(bool_enable)",
"body":["cc.PhysicsBody:setRotationEnable(bool_enable)"],
"description":"setRotationEnable(bool_enable)",
"scope":"source.lua"},

"cc.PhysicsBody:isRotationEnabled()":{
"prefix":"cc.PhysicsBody:isRotationEnabled()",
"body":["cc.PhysicsBody:isRotationEnabled()"],
"description":"isRotationEnabled()",
"scope":"source.lua"},

"cc.PhysicsBody:getCPBody()":{
"prefix":"cc.PhysicsBody:getCPBody()",
"body":["cc.PhysicsBody:getCPBody()"],
"description":"getCPBody()",
"scope":"source.lua"},

"cc.PhysicsBody:getAngularDamping()":{
"prefix":"cc.PhysicsBody:getAngularDamping()",
"body":["cc.PhysicsBody:getAngularDamping()"],
"description":"getAngularDamping()",
"scope":"source.lua"},

"cc.PhysicsBody:getVelocityAtLocalPoint(const_Vec2_point)":{
"prefix":"cc.PhysicsBody:getVelocityAtLocalPoint(const_Vec2_point)",
"body":["cc.PhysicsBody:getVelocityAtLocalPoint(const_Vec2_point)"],
"description":"getVelocityAtLocalPoint(const_Vec2_point)",
"scope":"source.lua"},

"cc.PhysicsBody:isResting()":{
"prefix":"cc.PhysicsBody:isResting()",
"body":["cc.PhysicsBody:isResting()"],
"description":"isResting()",
"scope":"source.lua"},

"cc.PhysicsBody:addMass(float_mass)":{
"prefix":"cc.PhysicsBody:addMass(float_mass)",
"body":["cc.PhysicsBody:addMass(float_mass)"],
"description":"addMass(float_mass)",
"scope":"source.lua"},

"cc.PhysicsBody:getShape(int_tag)":{
"prefix":"cc.PhysicsBody:getShape(int_tag)",
"body":["cc.PhysicsBody:getShape(int_tag)"],
"description":"getShape(int_tag)",
"scope":"source.lua"},

"cc.PhysicsBody:setTag(int_tag)":{
"prefix":"cc.PhysicsBody:setTag(int_tag)",
"body":["cc.PhysicsBody:setTag(int_tag)"],
"description":"setTag(int_tag)",
"scope":"source.lua"},

"cc.PhysicsBody:getVelocityAtWorldPoint(const_Vec2_point)":{
"prefix":"cc.PhysicsBody:getVelocityAtWorldPoint(const_Vec2_point)",
"body":["cc.PhysicsBody:getVelocityAtWorldPoint(const_Vec2_point)"],
"description":"getVelocityAtWorldPoint(const_Vec2_point)",
"scope":"source.lua"},

"cc.PhysicsBody:setContactTestBitmask(int_bitmask)":{
"prefix":"cc.PhysicsBody:setContactTestBitmask(int_bitmask)",
"body":["cc.PhysicsBody:setContactTestBitmask(int_bitmask)"],
"description":"setContactTestBitmask(int_bitmask)",
"scope":"source.lua"},

"cc.PhysicsBody:removeFromWorld()":{
"prefix":"cc.PhysicsBody:removeFromWorld()",
"body":["cc.PhysicsBody:removeFromWorld()"],
"description":"removeFromWorld()",
"scope":"source.lua"},

"cc.PhysicsBody:isDynamic()":{
"prefix":"cc.PhysicsBody:isDynamic()",
"body":["cc.PhysicsBody:isDynamic()"],
"description":"isDynamic()",
"scope":"source.lua"},

"cc.PhysicsBody:getNode()":{
"prefix":"cc.PhysicsBody:getNode()",
"body":["cc.PhysicsBody:getNode()"],
"description":"getNode()",
"scope":"source.lua"},

"cc.PhysicsBody:createBox(const_Size_size,const_PhysicsMaterial_material,const_Vec2_offset)":{
"prefix":"cc.PhysicsBody:createBox(const_Size_size,const_PhysicsMaterial_material,const_Vec2_offset)",
"body":["cc.PhysicsBody:createBox(const_Size_size,const_PhysicsMaterial_material,const_Vec2_offset)"],
"description":"createBox(const_Size_size,const_PhysicsMaterial_material,const_Vec2_offset)",
"scope":"source.lua"},

"cc.PhysicsBody:createEdgeSegment(const_Vec2_a,const_Vec2_b,const_PhysicsMaterial_material,float_border)":{
"prefix":"cc.PhysicsBody:createEdgeSegment(const_Vec2_a,const_Vec2_b,const_PhysicsMaterial_material,float_border)",
"body":["cc.PhysicsBody:createEdgeSegment(const_Vec2_a,const_Vec2_b,const_PhysicsMaterial_material,float_border)"],
"description":"createEdgeSegment(const_Vec2_a,const_Vec2_b,const_PhysicsMaterial_material,float_border)",
"scope":"source.lua"},

"cc.PhysicsBody:create()":{
"prefix":"cc.PhysicsBody:create()",
"body":["cc.PhysicsBody:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.PhysicsBody:create(float_mass)":{
"prefix":"cc.PhysicsBody:create(float_mass)",
"body":["cc.PhysicsBody:create(float_mass)"],
"description":"create(float_mass)",
"scope":"source.lua"},

"cc.PhysicsBody:create(float_mass,float_moment)":{
"prefix":"cc.PhysicsBody:create(float_mass,float_moment)",
"body":["cc.PhysicsBody:create(float_mass,float_moment)"],
"description":"create(float_mass,float_moment)",
"scope":"source.lua"},

"cc.PhysicsBody:createEdgeBox(const_Size_size,const_PhysicsMaterial_material,float_border,const_Vec2_offset)":{
"prefix":"cc.PhysicsBody:createEdgeBox(const_Size_size,const_PhysicsMaterial_material,float_border,const_Vec2_offset)",
"body":["cc.PhysicsBody:createEdgeBox(const_Size_size,const_PhysicsMaterial_material,float_border,const_Vec2_offset)"],
"description":"createEdgeBox(const_Size_size,const_PhysicsMaterial_material,float_border,const_Vec2_offset)",
"scope":"source.lua"},

"cc.PhysicsBody:createCircle(float_radius,const_PhysicsMaterial_material,const_Vec2_offset)":{
"prefix":"cc.PhysicsBody:createCircle(float_radius,const_PhysicsMaterial_material,const_Vec2_offset)",
"body":["cc.PhysicsBody:createCircle(float_radius,const_PhysicsMaterial_material,const_Vec2_offset)"],
"description":"createCircle(float_radius,const_PhysicsMaterial_material,const_Vec2_offset)",
"scope":"source.lua"},

"cc.PhysicsContact":{
"prefix":"cc.PhysicsContact",
"body":["cc.PhysicsContact"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsContact:getContactData()":{
"prefix":"cc.PhysicsContact:getContactData()",
"body":["cc.PhysicsContact:getContactData()"],
"description":"getContactData()",
"scope":"source.lua"},

"cc.PhysicsContact:getEventCode()":{
"prefix":"cc.PhysicsContact:getEventCode()",
"body":["cc.PhysicsContact:getEventCode()"],
"description":"getEventCode()",
"scope":"source.lua"},

"cc.PhysicsContact:getPreContactData()":{
"prefix":"cc.PhysicsContact:getPreContactData()",
"body":["cc.PhysicsContact:getPreContactData()"],
"description":"getPreContactData()",
"scope":"source.lua"},

"cc.PhysicsContact:getShapeA()":{
"prefix":"cc.PhysicsContact:getShapeA()",
"body":["cc.PhysicsContact:getShapeA()"],
"description":"getShapeA()",
"scope":"source.lua"},

"cc.PhysicsContact:getShapeB()":{
"prefix":"cc.PhysicsContact:getShapeB()",
"body":["cc.PhysicsContact:getShapeB()"],
"description":"getShapeB()",
"scope":"source.lua"},

"cc.PhysicsContactPreSolve":{
"prefix":"cc.PhysicsContactPreSolve",
"body":["cc.PhysicsContactPreSolve"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsContactPreSolve:getFriction()":{
"prefix":"cc.PhysicsContactPreSolve:getFriction()",
"body":["cc.PhysicsContactPreSolve:getFriction()"],
"description":"getFriction()",
"scope":"source.lua"},

"cc.PhysicsContactPreSolve:getRestitution()":{
"prefix":"cc.PhysicsContactPreSolve:getRestitution()",
"body":["cc.PhysicsContactPreSolve:getRestitution()"],
"description":"getRestitution()",
"scope":"source.lua"},

"cc.PhysicsContactPreSolve:setFriction(float_friction)":{
"prefix":"cc.PhysicsContactPreSolve:setFriction(float_friction)",
"body":["cc.PhysicsContactPreSolve:setFriction(float_friction)"],
"description":"setFriction(float_friction)",
"scope":"source.lua"},

"cc.PhysicsContactPreSolve:ignore()":{
"prefix":"cc.PhysicsContactPreSolve:ignore()",
"body":["cc.PhysicsContactPreSolve:ignore()"],
"description":"ignore()",
"scope":"source.lua"},

"cc.PhysicsContactPreSolve:getSurfaceVelocity()":{
"prefix":"cc.PhysicsContactPreSolve:getSurfaceVelocity()",
"body":["cc.PhysicsContactPreSolve:getSurfaceVelocity()"],
"description":"getSurfaceVelocity()",
"scope":"source.lua"},

"cc.PhysicsContactPreSolve:setSurfaceVelocity(const_Vec2_velocity)":{
"prefix":"cc.PhysicsContactPreSolve:setSurfaceVelocity(const_Vec2_velocity)",
"body":["cc.PhysicsContactPreSolve:setSurfaceVelocity(const_Vec2_velocity)"],
"description":"setSurfaceVelocity(const_Vec2_velocity)",
"scope":"source.lua"},

"cc.PhysicsContactPreSolve:setRestitution(float_restitution)":{
"prefix":"cc.PhysicsContactPreSolve:setRestitution(float_restitution)",
"body":["cc.PhysicsContactPreSolve:setRestitution(float_restitution)"],
"description":"setRestitution(float_restitution)",
"scope":"source.lua"},

"cc.PhysicsContactPostSolve":{
"prefix":"cc.PhysicsContactPostSolve",
"body":["cc.PhysicsContactPostSolve"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsContactPostSolve:getFriction()":{
"prefix":"cc.PhysicsContactPostSolve:getFriction()",
"body":["cc.PhysicsContactPostSolve:getFriction()"],
"description":"getFriction()",
"scope":"source.lua"},

"cc.PhysicsContactPostSolve:getSurfaceVelocity()":{
"prefix":"cc.PhysicsContactPostSolve:getSurfaceVelocity()",
"body":["cc.PhysicsContactPostSolve:getSurfaceVelocity()"],
"description":"getSurfaceVelocity()",
"scope":"source.lua"},

"cc.PhysicsContactPostSolve:getRestitution()":{
"prefix":"cc.PhysicsContactPostSolve:getRestitution()",
"body":["cc.PhysicsContactPostSolve:getRestitution()"],
"description":"getRestitution()",
"scope":"source.lua"},

"cc.EventListenerPhysicsContact":{
"prefix":"cc.EventListenerPhysicsContact",
"body":["cc.EventListenerPhysicsContact"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerPhysicsContact:create()":{
"prefix":"cc.EventListenerPhysicsContact:create()",
"body":["cc.EventListenerPhysicsContact:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.EventListenerPhysicsContactWithBodies":{
"prefix":"cc.EventListenerPhysicsContactWithBodies",
"body":["cc.EventListenerPhysicsContactWithBodies"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerPhysicsContactWithBodies:hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)":{
"prefix":"cc.EventListenerPhysicsContactWithBodies:hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)",
"body":["cc.EventListenerPhysicsContactWithBodies:hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)"],
"description":"hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)",
"scope":"source.lua"},

"cc.EventListenerPhysicsContactWithBodies:create(PhysicsBody_bodyA,PhysicsBody_bodyB)":{
"prefix":"cc.EventListenerPhysicsContactWithBodies:create(PhysicsBody_bodyA,PhysicsBody_bodyB)",
"body":["cc.EventListenerPhysicsContactWithBodies:create(PhysicsBody_bodyA,PhysicsBody_bodyB)"],
"description":"create(PhysicsBody_bodyA,PhysicsBody_bodyB)",
"scope":"source.lua"},

"cc.EventListenerPhysicsContactWithShapes":{
"prefix":"cc.EventListenerPhysicsContactWithShapes",
"body":["cc.EventListenerPhysicsContactWithShapes"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerPhysicsContactWithShapes:hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)":{
"prefix":"cc.EventListenerPhysicsContactWithShapes:hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)",
"body":["cc.EventListenerPhysicsContactWithShapes:hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)"],
"description":"hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)",
"scope":"source.lua"},

"cc.EventListenerPhysicsContactWithShapes:create(PhysicsShape_shapeA,PhysicsShape_shapeB)":{
"prefix":"cc.EventListenerPhysicsContactWithShapes:create(PhysicsShape_shapeA,PhysicsShape_shapeB)",
"body":["cc.EventListenerPhysicsContactWithShapes:create(PhysicsShape_shapeA,PhysicsShape_shapeB)"],
"description":"create(PhysicsShape_shapeA,PhysicsShape_shapeB)",
"scope":"source.lua"},

"cc.EventListenerPhysicsContactWithGroup":{
"prefix":"cc.EventListenerPhysicsContactWithGroup",
"body":["cc.EventListenerPhysicsContactWithGroup"],
"description":"cocos class",
"scope":"source.lua"},

"cc.EventListenerPhysicsContactWithGroup:hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)":{
"prefix":"cc.EventListenerPhysicsContactWithGroup:hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)",
"body":["cc.EventListenerPhysicsContactWithGroup:hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)"],
"description":"hitTest(PhysicsShape_shapeA,PhysicsShape_shapeB)",
"scope":"source.lua"},

"cc.EventListenerPhysicsContactWithGroup:create(int_group)":{
"prefix":"cc.EventListenerPhysicsContactWithGroup:create(int_group)",
"body":["cc.EventListenerPhysicsContactWithGroup:create(int_group)"],
"description":"create(int_group)",
"scope":"source.lua"},

"cc.PhysicsJoint":{
"prefix":"cc.PhysicsJoint",
"body":["cc.PhysicsJoint"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJoint:getBodyA()":{
"prefix":"cc.PhysicsJoint:getBodyA()",
"body":["cc.PhysicsJoint:getBodyA()"],
"description":"getBodyA()",
"scope":"source.lua"},

"cc.PhysicsJoint:getBodyB()":{
"prefix":"cc.PhysicsJoint:getBodyB()",
"body":["cc.PhysicsJoint:getBodyB()"],
"description":"getBodyB()",
"scope":"source.lua"},

"cc.PhysicsJoint:getMaxForce()":{
"prefix":"cc.PhysicsJoint:getMaxForce()",
"body":["cc.PhysicsJoint:getMaxForce()"],
"description":"getMaxForce()",
"scope":"source.lua"},

"cc.PhysicsJoint:setMaxForce(float_force)":{
"prefix":"cc.PhysicsJoint:setMaxForce(float_force)",
"body":["cc.PhysicsJoint:setMaxForce(float_force)"],
"description":"setMaxForce(float_force)",
"scope":"source.lua"},

"cc.PhysicsJoint:isEnabled()":{
"prefix":"cc.PhysicsJoint:isEnabled()",
"body":["cc.PhysicsJoint:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"cc.PhysicsJoint:setEnable(bool_enable)":{
"prefix":"cc.PhysicsJoint:setEnable(bool_enable)",
"body":["cc.PhysicsJoint:setEnable(bool_enable)"],
"description":"setEnable(bool_enable)",
"scope":"source.lua"},

"cc.PhysicsJoint:setCollisionEnable(bool_enable)":{
"prefix":"cc.PhysicsJoint:setCollisionEnable(bool_enable)",
"body":["cc.PhysicsJoint:setCollisionEnable(bool_enable)"],
"description":"setCollisionEnable(bool_enable)",
"scope":"source.lua"},

"cc.PhysicsJoint:getWorld()":{
"prefix":"cc.PhysicsJoint:getWorld()",
"body":["cc.PhysicsJoint:getWorld()"],
"description":"getWorld()",
"scope":"source.lua"},

"cc.PhysicsJoint:setTag(int_tag)":{
"prefix":"cc.PhysicsJoint:setTag(int_tag)",
"body":["cc.PhysicsJoint:setTag(int_tag)"],
"description":"setTag(int_tag)",
"scope":"source.lua"},

"cc.PhysicsJoint:removeFormWorld()":{
"prefix":"cc.PhysicsJoint:removeFormWorld()",
"body":["cc.PhysicsJoint:removeFormWorld()"],
"description":"removeFormWorld()",
"scope":"source.lua"},

"cc.PhysicsJoint:isCollisionEnabled()":{
"prefix":"cc.PhysicsJoint:isCollisionEnabled()",
"body":["cc.PhysicsJoint:isCollisionEnabled()"],
"description":"isCollisionEnabled()",
"scope":"source.lua"},

"cc.PhysicsJoint:getTag()":{
"prefix":"cc.PhysicsJoint:getTag()",
"body":["cc.PhysicsJoint:getTag()"],
"description":"getTag()",
"scope":"source.lua"},

"cc.PhysicsJointFixed":{
"prefix":"cc.PhysicsJointFixed",
"body":["cc.PhysicsJointFixed"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointFixed:createConstraints()":{
"prefix":"cc.PhysicsJointFixed:createConstraints()",
"body":["cc.PhysicsJointFixed:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointFixed:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr)":{
"prefix":"cc.PhysicsJointFixed:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr)",
"body":["cc.PhysicsJointFixed:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr)",
"scope":"source.lua"},

"cc.PhysicsJointLimit":{
"prefix":"cc.PhysicsJointLimit",
"body":["cc.PhysicsJointLimit"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointLimit:setAnchr2(const_Vec2_anchr2)":{
"prefix":"cc.PhysicsJointLimit:setAnchr2(const_Vec2_anchr2)",
"body":["cc.PhysicsJointLimit:setAnchr2(const_Vec2_anchr2)"],
"description":"setAnchr2(const_Vec2_anchr2)",
"scope":"source.lua"},

"cc.PhysicsJointLimit:setAnchr1(const_Vec2_anchr1)":{
"prefix":"cc.PhysicsJointLimit:setAnchr1(const_Vec2_anchr1)",
"body":["cc.PhysicsJointLimit:setAnchr1(const_Vec2_anchr1)"],
"description":"setAnchr1(const_Vec2_anchr1)",
"scope":"source.lua"},

"cc.PhysicsJointLimit:setMax(float_max)":{
"prefix":"cc.PhysicsJointLimit:setMax(float_max)",
"body":["cc.PhysicsJointLimit:setMax(float_max)"],
"description":"setMax(float_max)",
"scope":"source.lua"},

"cc.PhysicsJointLimit:getAnchr2()":{
"prefix":"cc.PhysicsJointLimit:getAnchr2()",
"body":["cc.PhysicsJointLimit:getAnchr2()"],
"description":"getAnchr2()",
"scope":"source.lua"},

"cc.PhysicsJointLimit:getAnchr1()":{
"prefix":"cc.PhysicsJointLimit:getAnchr1()",
"body":["cc.PhysicsJointLimit:getAnchr1()"],
"description":"getAnchr1()",
"scope":"source.lua"},

"cc.PhysicsJointLimit:createConstraints()":{
"prefix":"cc.PhysicsJointLimit:createConstraints()",
"body":["cc.PhysicsJointLimit:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointLimit:getMin()":{
"prefix":"cc.PhysicsJointLimit:getMin()",
"body":["cc.PhysicsJointLimit:getMin()"],
"description":"getMin()",
"scope":"source.lua"},

"cc.PhysicsJointLimit:getMax()":{
"prefix":"cc.PhysicsJointLimit:getMax()",
"body":["cc.PhysicsJointLimit:getMax()"],
"description":"getMax()",
"scope":"source.lua"},

"cc.PhysicsJointLimit:setMin(float_min)":{
"prefix":"cc.PhysicsJointLimit:setMin(float_min)",
"body":["cc.PhysicsJointLimit:setMin(float_min)"],
"description":"setMin(float_min)",
"scope":"source.lua"},

"cc.PhysicsJointLimit:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)":{
"prefix":"cc.PhysicsJointLimit:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)",
"body":["cc.PhysicsJointLimit:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)",
"scope":"source.lua"},

"cc.PhysicsJointLimit:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2,float_min,float_max)":{
"prefix":"cc.PhysicsJointLimit:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2,float_min,float_max)",
"body":["cc.PhysicsJointLimit:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2,float_min,float_max)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2,float_min,float_max)",
"scope":"source.lua"},

"cc.PhysicsJointPin":{
"prefix":"cc.PhysicsJointPin",
"body":["cc.PhysicsJointPin"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointPin:createConstraints()":{
"prefix":"cc.PhysicsJointPin:createConstraints()",
"body":["cc.PhysicsJointPin:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointPin:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_pivot)":{
"prefix":"cc.PhysicsJointPin:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_pivot)",
"body":["cc.PhysicsJointPin:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_pivot)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_pivot)",
"scope":"source.lua"},

"cc.PhysicsJointPin:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)":{
"prefix":"cc.PhysicsJointPin:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)",
"body":["cc.PhysicsJointPin:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)",
"scope":"source.lua"},

"cc.PhysicsJointDistance":{
"prefix":"cc.PhysicsJointDistance",
"body":["cc.PhysicsJointDistance"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointDistance:createConstraints()":{
"prefix":"cc.PhysicsJointDistance:createConstraints()",
"body":["cc.PhysicsJointDistance:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointDistance:setDistance(float_distance)":{
"prefix":"cc.PhysicsJointDistance:setDistance(float_distance)",
"body":["cc.PhysicsJointDistance:setDistance(float_distance)"],
"description":"setDistance(float_distance)",
"scope":"source.lua"},

"cc.PhysicsJointDistance:getDistance()":{
"prefix":"cc.PhysicsJointDistance:getDistance()",
"body":["cc.PhysicsJointDistance:getDistance()"],
"description":"getDistance()",
"scope":"source.lua"},

"cc.PhysicsJointDistance:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)":{
"prefix":"cc.PhysicsJointDistance:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)",
"body":["cc.PhysicsJointDistance:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2)",
"scope":"source.lua"},

"cc.PhysicsJointSpring":{
"prefix":"cc.PhysicsJointSpring",
"body":["cc.PhysicsJointSpring"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointSpring:setAnchr2(const_Vec2_anchr2)":{
"prefix":"cc.PhysicsJointSpring:setAnchr2(const_Vec2_anchr2)",
"body":["cc.PhysicsJointSpring:setAnchr2(const_Vec2_anchr2)"],
"description":"setAnchr2(const_Vec2_anchr2)",
"scope":"source.lua"},

"cc.PhysicsJointSpring:setAnchr1(const_Vec2_anchr1)":{
"prefix":"cc.PhysicsJointSpring:setAnchr1(const_Vec2_anchr1)",
"body":["cc.PhysicsJointSpring:setAnchr1(const_Vec2_anchr1)"],
"description":"setAnchr1(const_Vec2_anchr1)",
"scope":"source.lua"},

"cc.PhysicsJointSpring:getDamping()":{
"prefix":"cc.PhysicsJointSpring:getDamping()",
"body":["cc.PhysicsJointSpring:getDamping()"],
"description":"getDamping()",
"scope":"source.lua"},

"cc.PhysicsJointSpring:setStiffness(float_stiffness)":{
"prefix":"cc.PhysicsJointSpring:setStiffness(float_stiffness)",
"body":["cc.PhysicsJointSpring:setStiffness(float_stiffness)"],
"description":"setStiffness(float_stiffness)",
"scope":"source.lua"},

"cc.PhysicsJointSpring:getRestLength()":{
"prefix":"cc.PhysicsJointSpring:getRestLength()",
"body":["cc.PhysicsJointSpring:getRestLength()"],
"description":"getRestLength()",
"scope":"source.lua"},

"cc.PhysicsJointSpring:getAnchr2()":{
"prefix":"cc.PhysicsJointSpring:getAnchr2()",
"body":["cc.PhysicsJointSpring:getAnchr2()"],
"description":"getAnchr2()",
"scope":"source.lua"},

"cc.PhysicsJointSpring:getAnchr1()":{
"prefix":"cc.PhysicsJointSpring:getAnchr1()",
"body":["cc.PhysicsJointSpring:getAnchr1()"],
"description":"getAnchr1()",
"scope":"source.lua"},

"cc.PhysicsJointSpring:getStiffness()":{
"prefix":"cc.PhysicsJointSpring:getStiffness()",
"body":["cc.PhysicsJointSpring:getStiffness()"],
"description":"getStiffness()",
"scope":"source.lua"},

"cc.PhysicsJointSpring:createConstraints()":{
"prefix":"cc.PhysicsJointSpring:createConstraints()",
"body":["cc.PhysicsJointSpring:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointSpring:setRestLength(float_restLength)":{
"prefix":"cc.PhysicsJointSpring:setRestLength(float_restLength)",
"body":["cc.PhysicsJointSpring:setRestLength(float_restLength)"],
"description":"setRestLength(float_restLength)",
"scope":"source.lua"},

"cc.PhysicsJointSpring:setDamping(float_damping)":{
"prefix":"cc.PhysicsJointSpring:setDamping(float_damping)",
"body":["cc.PhysicsJointSpring:setDamping(float_damping)"],
"description":"setDamping(float_damping)",
"scope":"source.lua"},

"cc.PhysicsJointSpring:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2,float_stiffness,float_damping)":{
"prefix":"cc.PhysicsJointSpring:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2,float_stiffness,float_damping)",
"body":["cc.PhysicsJointSpring:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2,float_stiffness,float_damping)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_anchr1,const_Vec2_anchr2,float_stiffness,float_damping)",
"scope":"source.lua"},

"cc.PhysicsJointGroove":{
"prefix":"cc.PhysicsJointGroove",
"body":["cc.PhysicsJointGroove"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointGroove:setAnchr2(const_Vec2_anchr2)":{
"prefix":"cc.PhysicsJointGroove:setAnchr2(const_Vec2_anchr2)",
"body":["cc.PhysicsJointGroove:setAnchr2(const_Vec2_anchr2)"],
"description":"setAnchr2(const_Vec2_anchr2)",
"scope":"source.lua"},

"cc.PhysicsJointGroove:setGrooveA(const_Vec2_grooveA)":{
"prefix":"cc.PhysicsJointGroove:setGrooveA(const_Vec2_grooveA)",
"body":["cc.PhysicsJointGroove:setGrooveA(const_Vec2_grooveA)"],
"description":"setGrooveA(const_Vec2_grooveA)",
"scope":"source.lua"},

"cc.PhysicsJointGroove:setGrooveB(const_Vec2_grooveB)":{
"prefix":"cc.PhysicsJointGroove:setGrooveB(const_Vec2_grooveB)",
"body":["cc.PhysicsJointGroove:setGrooveB(const_Vec2_grooveB)"],
"description":"setGrooveB(const_Vec2_grooveB)",
"scope":"source.lua"},

"cc.PhysicsJointGroove:getGrooveA()":{
"prefix":"cc.PhysicsJointGroove:getGrooveA()",
"body":["cc.PhysicsJointGroove:getGrooveA()"],
"description":"getGrooveA()",
"scope":"source.lua"},

"cc.PhysicsJointGroove:getGrooveB()":{
"prefix":"cc.PhysicsJointGroove:getGrooveB()",
"body":["cc.PhysicsJointGroove:getGrooveB()"],
"description":"getGrooveB()",
"scope":"source.lua"},

"cc.PhysicsJointGroove:getAnchr2()":{
"prefix":"cc.PhysicsJointGroove:getAnchr2()",
"body":["cc.PhysicsJointGroove:getAnchr2()"],
"description":"getAnchr2()",
"scope":"source.lua"},

"cc.PhysicsJointGroove:createConstraints()":{
"prefix":"cc.PhysicsJointGroove:createConstraints()",
"body":["cc.PhysicsJointGroove:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointGroove:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_grooveA,const_Vec2_grooveB,const_Vec2_anchr2)":{
"prefix":"cc.PhysicsJointGroove:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_grooveA,const_Vec2_grooveB,const_Vec2_anchr2)",
"body":["cc.PhysicsJointGroove:construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_grooveA,const_Vec2_grooveB,const_Vec2_anchr2)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,const_Vec2_grooveA,const_Vec2_grooveB,const_Vec2_anchr2)",
"scope":"source.lua"},

"cc.PhysicsJointRotarySpring":{
"prefix":"cc.PhysicsJointRotarySpring",
"body":["cc.PhysicsJointRotarySpring"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointRotarySpring:getDamping()":{
"prefix":"cc.PhysicsJointRotarySpring:getDamping()",
"body":["cc.PhysicsJointRotarySpring:getDamping()"],
"description":"getDamping()",
"scope":"source.lua"},

"cc.PhysicsJointRotarySpring:setRestAngle(float_restAngle)":{
"prefix":"cc.PhysicsJointRotarySpring:setRestAngle(float_restAngle)",
"body":["cc.PhysicsJointRotarySpring:setRestAngle(float_restAngle)"],
"description":"setRestAngle(float_restAngle)",
"scope":"source.lua"},

"cc.PhysicsJointRotarySpring:getStiffness()":{
"prefix":"cc.PhysicsJointRotarySpring:getStiffness()",
"body":["cc.PhysicsJointRotarySpring:getStiffness()"],
"description":"getStiffness()",
"scope":"source.lua"},

"cc.PhysicsJointRotarySpring:createConstraints()":{
"prefix":"cc.PhysicsJointRotarySpring:createConstraints()",
"body":["cc.PhysicsJointRotarySpring:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointRotarySpring:setStiffness(float_stiffness)":{
"prefix":"cc.PhysicsJointRotarySpring:setStiffness(float_stiffness)",
"body":["cc.PhysicsJointRotarySpring:setStiffness(float_stiffness)"],
"description":"setStiffness(float_stiffness)",
"scope":"source.lua"},

"cc.PhysicsJointRotarySpring:setDamping(float_damping)":{
"prefix":"cc.PhysicsJointRotarySpring:setDamping(float_damping)",
"body":["cc.PhysicsJointRotarySpring:setDamping(float_damping)"],
"description":"setDamping(float_damping)",
"scope":"source.lua"},

"cc.PhysicsJointRotarySpring:getRestAngle()":{
"prefix":"cc.PhysicsJointRotarySpring:getRestAngle()",
"body":["cc.PhysicsJointRotarySpring:getRestAngle()"],
"description":"getRestAngle()",
"scope":"source.lua"},

"cc.PhysicsJointRotarySpring:construct(PhysicsBody_a,PhysicsBody_b,float_stiffness,float_damping)":{
"prefix":"cc.PhysicsJointRotarySpring:construct(PhysicsBody_a,PhysicsBody_b,float_stiffness,float_damping)",
"body":["cc.PhysicsJointRotarySpring:construct(PhysicsBody_a,PhysicsBody_b,float_stiffness,float_damping)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,float_stiffness,float_damping)",
"scope":"source.lua"},

"cc.PhysicsJointRotaryLimit":{
"prefix":"cc.PhysicsJointRotaryLimit",
"body":["cc.PhysicsJointRotaryLimit"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointRotaryLimit:getMax()":{
"prefix":"cc.PhysicsJointRotaryLimit:getMax()",
"body":["cc.PhysicsJointRotaryLimit:getMax()"],
"description":"getMax()",
"scope":"source.lua"},

"cc.PhysicsJointRotaryLimit:createConstraints()":{
"prefix":"cc.PhysicsJointRotaryLimit:createConstraints()",
"body":["cc.PhysicsJointRotaryLimit:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointRotaryLimit:setMin(float_min)":{
"prefix":"cc.PhysicsJointRotaryLimit:setMin(float_min)",
"body":["cc.PhysicsJointRotaryLimit:setMin(float_min)"],
"description":"setMin(float_min)",
"scope":"source.lua"},

"cc.PhysicsJointRotaryLimit:setMax(float_max)":{
"prefix":"cc.PhysicsJointRotaryLimit:setMax(float_max)",
"body":["cc.PhysicsJointRotaryLimit:setMax(float_max)"],
"description":"setMax(float_max)",
"scope":"source.lua"},

"cc.PhysicsJointRotaryLimit:getMin()":{
"prefix":"cc.PhysicsJointRotaryLimit:getMin()",
"body":["cc.PhysicsJointRotaryLimit:getMin()"],
"description":"getMin()",
"scope":"source.lua"},

"cc.PhysicsJointRotaryLimit:construct(PhysicsBody_a,PhysicsBody_b,float_min,float_max)":{
"prefix":"cc.PhysicsJointRotaryLimit:construct(PhysicsBody_a,PhysicsBody_b,float_min,float_max)",
"body":["cc.PhysicsJointRotaryLimit:construct(PhysicsBody_a,PhysicsBody_b,float_min,float_max)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,float_min,float_max)",
"scope":"source.lua"},

"cc.PhysicsJointRotaryLimit:construct(PhysicsBody_a,PhysicsBody_b)":{
"prefix":"cc.PhysicsJointRotaryLimit:construct(PhysicsBody_a,PhysicsBody_b)",
"body":["cc.PhysicsJointRotaryLimit:construct(PhysicsBody_a,PhysicsBody_b)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b)",
"scope":"source.lua"},

"cc.PhysicsJointRatchet":{
"prefix":"cc.PhysicsJointRatchet",
"body":["cc.PhysicsJointRatchet"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointRatchet:getAngle()":{
"prefix":"cc.PhysicsJointRatchet:getAngle()",
"body":["cc.PhysicsJointRatchet:getAngle()"],
"description":"getAngle()",
"scope":"source.lua"},

"cc.PhysicsJointRatchet:setAngle(float_angle)":{
"prefix":"cc.PhysicsJointRatchet:setAngle(float_angle)",
"body":["cc.PhysicsJointRatchet:setAngle(float_angle)"],
"description":"setAngle(float_angle)",
"scope":"source.lua"},

"cc.PhysicsJointRatchet:createConstraints()":{
"prefix":"cc.PhysicsJointRatchet:createConstraints()",
"body":["cc.PhysicsJointRatchet:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointRatchet:setPhase(float_phase)":{
"prefix":"cc.PhysicsJointRatchet:setPhase(float_phase)",
"body":["cc.PhysicsJointRatchet:setPhase(float_phase)"],
"description":"setPhase(float_phase)",
"scope":"source.lua"},

"cc.PhysicsJointRatchet:getPhase()":{
"prefix":"cc.PhysicsJointRatchet:getPhase()",
"body":["cc.PhysicsJointRatchet:getPhase()"],
"description":"getPhase()",
"scope":"source.lua"},

"cc.PhysicsJointRatchet:setRatchet(float_ratchet)":{
"prefix":"cc.PhysicsJointRatchet:setRatchet(float_ratchet)",
"body":["cc.PhysicsJointRatchet:setRatchet(float_ratchet)"],
"description":"setRatchet(float_ratchet)",
"scope":"source.lua"},

"cc.PhysicsJointRatchet:getRatchet()":{
"prefix":"cc.PhysicsJointRatchet:getRatchet()",
"body":["cc.PhysicsJointRatchet:getRatchet()"],
"description":"getRatchet()",
"scope":"source.lua"},

"cc.PhysicsJointRatchet:construct(PhysicsBody_a,PhysicsBody_b,float_phase,float_ratchet)":{
"prefix":"cc.PhysicsJointRatchet:construct(PhysicsBody_a,PhysicsBody_b,float_phase,float_ratchet)",
"body":["cc.PhysicsJointRatchet:construct(PhysicsBody_a,PhysicsBody_b,float_phase,float_ratchet)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,float_phase,float_ratchet)",
"scope":"source.lua"},

"cc.PhysicsJointGear":{
"prefix":"cc.PhysicsJointGear",
"body":["cc.PhysicsJointGear"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointGear:setRatio(float_ratchet)":{
"prefix":"cc.PhysicsJointGear:setRatio(float_ratchet)",
"body":["cc.PhysicsJointGear:setRatio(float_ratchet)"],
"description":"setRatio(float_ratchet)",
"scope":"source.lua"},

"cc.PhysicsJointGear:getPhase()":{
"prefix":"cc.PhysicsJointGear:getPhase()",
"body":["cc.PhysicsJointGear:getPhase()"],
"description":"getPhase()",
"scope":"source.lua"},

"cc.PhysicsJointGear:setPhase(float_phase)":{
"prefix":"cc.PhysicsJointGear:setPhase(float_phase)",
"body":["cc.PhysicsJointGear:setPhase(float_phase)"],
"description":"setPhase(float_phase)",
"scope":"source.lua"},

"cc.PhysicsJointGear:createConstraints()":{
"prefix":"cc.PhysicsJointGear:createConstraints()",
"body":["cc.PhysicsJointGear:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointGear:getRatio()":{
"prefix":"cc.PhysicsJointGear:getRatio()",
"body":["cc.PhysicsJointGear:getRatio()"],
"description":"getRatio()",
"scope":"source.lua"},

"cc.PhysicsJointGear:construct(PhysicsBody_a,PhysicsBody_b,float_phase,float_ratio)":{
"prefix":"cc.PhysicsJointGear:construct(PhysicsBody_a,PhysicsBody_b,float_phase,float_ratio)",
"body":["cc.PhysicsJointGear:construct(PhysicsBody_a,PhysicsBody_b,float_phase,float_ratio)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,float_phase,float_ratio)",
"scope":"source.lua"},

"cc.PhysicsJointMotor":{
"prefix":"cc.PhysicsJointMotor",
"body":["cc.PhysicsJointMotor"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsJointMotor:setRate(float_rate)":{
"prefix":"cc.PhysicsJointMotor:setRate(float_rate)",
"body":["cc.PhysicsJointMotor:setRate(float_rate)"],
"description":"setRate(float_rate)",
"scope":"source.lua"},

"cc.PhysicsJointMotor:getRate()":{
"prefix":"cc.PhysicsJointMotor:getRate()",
"body":["cc.PhysicsJointMotor:getRate()"],
"description":"getRate()",
"scope":"source.lua"},

"cc.PhysicsJointMotor:createConstraints()":{
"prefix":"cc.PhysicsJointMotor:createConstraints()",
"body":["cc.PhysicsJointMotor:createConstraints()"],
"description":"createConstraints()",
"scope":"source.lua"},

"cc.PhysicsJointMotor:construct(PhysicsBody_a,PhysicsBody_b,float_rate)":{
"prefix":"cc.PhysicsJointMotor:construct(PhysicsBody_a,PhysicsBody_b,float_rate)",
"body":["cc.PhysicsJointMotor:construct(PhysicsBody_a,PhysicsBody_b,float_rate)"],
"description":"construct(PhysicsBody_a,PhysicsBody_b,float_rate)",
"scope":"source.lua"},

"cc.PhysicsWorld":{
"prefix":"cc.PhysicsWorld",
"body":["cc.PhysicsWorld"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsWorld:setGravity(const_Vec2_gravity)":{
"prefix":"cc.PhysicsWorld:setGravity(const_Vec2_gravity)",
"body":["cc.PhysicsWorld:setGravity(const_Vec2_gravity)"],
"description":"setGravity(const_Vec2_gravity)",
"scope":"source.lua"},

"cc.PhysicsWorld:getAllBodies()":{
"prefix":"cc.PhysicsWorld:getAllBodies()",
"body":["cc.PhysicsWorld:getAllBodies()"],
"description":"getAllBodies()",
"scope":"source.lua"},

"cc.PhysicsWorld:setFixedUpdateRate(int_updatesPerSecond)":{
"prefix":"cc.PhysicsWorld:setFixedUpdateRate(int_updatesPerSecond)",
"body":["cc.PhysicsWorld:setFixedUpdateRate(int_updatesPerSecond)"],
"description":"setFixedUpdateRate(int_updatesPerSecond)",
"scope":"source.lua"},

"cc.PhysicsWorld:setSubsteps(int_steps)":{
"prefix":"cc.PhysicsWorld:setSubsteps(int_steps)",
"body":["cc.PhysicsWorld:setSubsteps(int_steps)"],
"description":"setSubsteps(int_steps)",
"scope":"source.lua"},

"cc.PhysicsWorld:setAutoStep(bool_autoStep)":{
"prefix":"cc.PhysicsWorld:setAutoStep(bool_autoStep)",
"body":["cc.PhysicsWorld:setAutoStep(bool_autoStep)"],
"description":"setAutoStep(bool_autoStep)",
"scope":"source.lua"},

"cc.PhysicsWorld:addJoint(PhysicsJoint_joint)":{
"prefix":"cc.PhysicsWorld:addJoint(PhysicsJoint_joint)",
"body":["cc.PhysicsWorld:addJoint(PhysicsJoint_joint)"],
"description":"addJoint(PhysicsJoint_joint)",
"scope":"source.lua"},

"cc.PhysicsWorld:removeAllJoints(bool_destroy)":{
"prefix":"cc.PhysicsWorld:removeAllJoints(bool_destroy)",
"body":["cc.PhysicsWorld:removeAllJoints(bool_destroy)"],
"description":"removeAllJoints(bool_destroy)",
"scope":"source.lua"},

"cc.PhysicsWorld:getDebugDrawMask()":{
"prefix":"cc.PhysicsWorld:getDebugDrawMask()",
"body":["cc.PhysicsWorld:getDebugDrawMask()"],
"description":"getDebugDrawMask()",
"scope":"source.lua"},

"cc.PhysicsWorld:isAutoStep()":{
"prefix":"cc.PhysicsWorld:isAutoStep()",
"body":["cc.PhysicsWorld:isAutoStep()"],
"description":"isAutoStep()",
"scope":"source.lua"},

"cc.PhysicsWorld:removeBody(PhysicsBody_body)":{
"prefix":"cc.PhysicsWorld:removeBody(PhysicsBody_body)",
"body":["cc.PhysicsWorld:removeBody(PhysicsBody_body)"],
"description":"removeBody(PhysicsBody_body)",
"scope":"source.lua"},

"cc.PhysicsWorld:removeBody(int_tag)":{
"prefix":"cc.PhysicsWorld:removeBody(int_tag)",
"body":["cc.PhysicsWorld:removeBody(int_tag)"],
"description":"removeBody(int_tag)",
"scope":"source.lua"},

"cc.PhysicsWorld:removeJoint(PhysicsJoint_joint,bool_destroy)":{
"prefix":"cc.PhysicsWorld:removeJoint(PhysicsJoint_joint,bool_destroy)",
"body":["cc.PhysicsWorld:removeJoint(PhysicsJoint_joint,bool_destroy)"],
"description":"removeJoint(PhysicsJoint_joint,bool_destroy)",
"scope":"source.lua"},

"cc.PhysicsWorld:getShapes(const_Vec2_point)":{
"prefix":"cc.PhysicsWorld:getShapes(const_Vec2_point)",
"body":["cc.PhysicsWorld:getShapes(const_Vec2_point)"],
"description":"getShapes(const_Vec2_point)",
"scope":"source.lua"},

"cc.PhysicsWorld:step(float_delta)":{
"prefix":"cc.PhysicsWorld:step(float_delta)",
"body":["cc.PhysicsWorld:step(float_delta)"],
"description":"step(float_delta)",
"scope":"source.lua"},

"cc.PhysicsWorld:setDebugDrawMask(int_mask)":{
"prefix":"cc.PhysicsWorld:setDebugDrawMask(int_mask)",
"body":["cc.PhysicsWorld:setDebugDrawMask(int_mask)"],
"description":"setDebugDrawMask(int_mask)",
"scope":"source.lua"},

"cc.PhysicsWorld:getGravity()":{
"prefix":"cc.PhysicsWorld:getGravity()",
"body":["cc.PhysicsWorld:getGravity()"],
"description":"getGravity()",
"scope":"source.lua"},

"cc.PhysicsWorld:setUpdateRate(int_rate)":{
"prefix":"cc.PhysicsWorld:setUpdateRate(int_rate)",
"body":["cc.PhysicsWorld:setUpdateRate(int_rate)"],
"description":"setUpdateRate(int_rate)",
"scope":"source.lua"},

"cc.PhysicsWorld:getFixedUpdateRate()":{
"prefix":"cc.PhysicsWorld:getFixedUpdateRate()",
"body":["cc.PhysicsWorld:getFixedUpdateRate()"],
"description":"getFixedUpdateRate()",
"scope":"source.lua"},

"cc.PhysicsWorld:getSubsteps()":{
"prefix":"cc.PhysicsWorld:getSubsteps()",
"body":["cc.PhysicsWorld:getSubsteps()"],
"description":"getSubsteps()",
"scope":"source.lua"},

"cc.PhysicsWorld:getSpeed()":{
"prefix":"cc.PhysicsWorld:getSpeed()",
"body":["cc.PhysicsWorld:getSpeed()"],
"description":"getSpeed()",
"scope":"source.lua"},

"cc.PhysicsWorld:getUpdateRate()":{
"prefix":"cc.PhysicsWorld:getUpdateRate()",
"body":["cc.PhysicsWorld:getUpdateRate()"],
"description":"getUpdateRate()",
"scope":"source.lua"},

"cc.PhysicsWorld:removeAllBodies()":{
"prefix":"cc.PhysicsWorld:removeAllBodies()",
"body":["cc.PhysicsWorld:removeAllBodies()"],
"description":"removeAllBodies()",
"scope":"source.lua"},

"cc.PhysicsWorld:setSpeed(float_speed)":{
"prefix":"cc.PhysicsWorld:setSpeed(float_speed)",
"body":["cc.PhysicsWorld:setSpeed(float_speed)"],
"description":"setSpeed(float_speed)",
"scope":"source.lua"},

"cc.PhysicsWorld:getShape(const_Vec2_point)":{
"prefix":"cc.PhysicsWorld:getShape(const_Vec2_point)",
"body":["cc.PhysicsWorld:getShape(const_Vec2_point)"],
"description":"getShape(const_Vec2_point)",
"scope":"source.lua"},

"cc.PhysicsWorld:getBody(int_tag)":{
"prefix":"cc.PhysicsWorld:getBody(int_tag)",
"body":["cc.PhysicsWorld:getBody(int_tag)"],
"description":"getBody(int_tag)",
"scope":"source.lua"},

"sp.SkeletonRenderer":{
"prefix":"sp.SkeletonRenderer",
"body":["sp.SkeletonRenderer"],
"description":"cocos class",
"scope":"source.lua"},

"sp.SkeletonRenderer:setTimeScale(float_scale)":{
"prefix":"sp.SkeletonRenderer:setTimeScale(float_scale)",
"body":["sp.SkeletonRenderer:setTimeScale(float_scale)"],
"description":"setTimeScale(float_scale)",
"scope":"source.lua"},

"sp.SkeletonRenderer:getDebugSlotsEnabled()":{
"prefix":"sp.SkeletonRenderer:getDebugSlotsEnabled()",
"body":["sp.SkeletonRenderer:getDebugSlotsEnabled()"],
"description":"getDebugSlotsEnabled()",
"scope":"source.lua"},

"sp.SkeletonRenderer:setDebugSlotsEnabled(bool_enabled)":{
"prefix":"sp.SkeletonRenderer:setDebugSlotsEnabled(bool_enabled)",
"body":["sp.SkeletonRenderer:setDebugSlotsEnabled(bool_enabled)"],
"description":"setDebugSlotsEnabled(bool_enabled)",
"scope":"source.lua"},

"sp.SkeletonRenderer:setDebugBonesEnabled(bool_enabled)":{
"prefix":"sp.SkeletonRenderer:setDebugBonesEnabled(bool_enabled)",
"body":["sp.SkeletonRenderer:setDebugBonesEnabled(bool_enabled)"],
"description":"setDebugBonesEnabled(bool_enabled)",
"scope":"source.lua"},

"sp.SkeletonRenderer:getDebugBonesEnabled()":{
"prefix":"sp.SkeletonRenderer:getDebugBonesEnabled()",
"body":["sp.SkeletonRenderer:getDebugBonesEnabled()"],
"description":"getDebugBonesEnabled()",
"scope":"source.lua"},

"sp.SkeletonRenderer:getTimeScale()":{
"prefix":"sp.SkeletonRenderer:getTimeScale()",
"body":["sp.SkeletonRenderer:getTimeScale()"],
"description":"getTimeScale()",
"scope":"source.lua"},

"sp.SkeletonRenderer:getSkeleton()":{
"prefix":"sp.SkeletonRenderer:getSkeleton()",
"body":["sp.SkeletonRenderer:getSkeleton()"],
"description":"getSkeleton()",
"scope":"source.lua"},

"sp.SkeletonAnimation":{
"prefix":"sp.SkeletonAnimation",
"body":["sp.SkeletonAnimation"],
"description":"cocos class",
"scope":"source.lua"},

"sp.SkeletonAnimation:findAnimation(const_std_string_name)":{
"prefix":"sp.SkeletonAnimation:findAnimation(const_std_string_name)",
"body":["sp.SkeletonAnimation:findAnimation(const_std_string_name)"],
"description":"findAnimation(const_std_string_name)",
"scope":"source.lua"},

"ccs.ActionFrame":{
"prefix":"ccs.ActionFrame",
"body":["ccs.ActionFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionFrame:getAction(float_duration)":{
"prefix":"ccs.ActionFrame:getAction(float_duration)",
"body":["ccs.ActionFrame:getAction(float_duration)"],
"description":"getAction(float_duration)",
"scope":"source.lua"},

"ccs.ActionFrame:getAction(float_duration,ActionFrame_srcFrame)":{
"prefix":"ccs.ActionFrame:getAction(float_duration,ActionFrame_srcFrame)",
"body":["ccs.ActionFrame:getAction(float_duration,ActionFrame_srcFrame)"],
"description":"getAction(float_duration,ActionFrame_srcFrame)",
"scope":"source.lua"},

"ccs.ActionFrame:getFrameType()":{
"prefix":"ccs.ActionFrame:getFrameType()",
"body":["ccs.ActionFrame:getFrameType()"],
"description":"getFrameType()",
"scope":"source.lua"},

"ccs.ActionFrame:setFrameTime(float_fTime)":{
"prefix":"ccs.ActionFrame:setFrameTime(float_fTime)",
"body":["ccs.ActionFrame:setFrameTime(float_fTime)"],
"description":"setFrameTime(float_fTime)",
"scope":"source.lua"},

"ccs.ActionFrame:setEasingType(int_easingType)":{
"prefix":"ccs.ActionFrame:setEasingType(int_easingType)",
"body":["ccs.ActionFrame:setEasingType(int_easingType)"],
"description":"setEasingType(int_easingType)",
"scope":"source.lua"},

"ccs.ActionFrame:getFrameTime()":{
"prefix":"ccs.ActionFrame:getFrameTime()",
"body":["ccs.ActionFrame:getFrameTime()"],
"description":"getFrameTime()",
"scope":"source.lua"},

"ccs.ActionFrame:getFrameIndex()":{
"prefix":"ccs.ActionFrame:getFrameIndex()",
"body":["ccs.ActionFrame:getFrameIndex()"],
"description":"getFrameIndex()",
"scope":"source.lua"},

"ccs.ActionFrame:setFrameType(int_frameType)":{
"prefix":"ccs.ActionFrame:setFrameType(int_frameType)",
"body":["ccs.ActionFrame:setFrameType(int_frameType)"],
"description":"setFrameType(int_frameType)",
"scope":"source.lua"},

"ccs.ActionFrame:setFrameIndex(int_index)":{
"prefix":"ccs.ActionFrame:setFrameIndex(int_index)",
"body":["ccs.ActionFrame:setFrameIndex(int_index)"],
"description":"setFrameIndex(int_index)",
"scope":"source.lua"},

"ccs.ActionFrame:setEasingParameter()":{
"prefix":"ccs.ActionFrame:setEasingParameter()",
"body":["ccs.ActionFrame:setEasingParameter()"],
"description":"setEasingParameter()",
"scope":"source.lua"},

"ccs.ActionFrame:getEasingType()":{
"prefix":"ccs.ActionFrame:getEasingType()",
"body":["ccs.ActionFrame:getEasingType()"],
"description":"getEasingType()",
"scope":"source.lua"},

"ccs.ActionMoveFrame":{
"prefix":"ccs.ActionMoveFrame",
"body":["ccs.ActionMoveFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionMoveFrame:setPosition(cocos2d_Vec2_pos)":{
"prefix":"ccs.ActionMoveFrame:setPosition(cocos2d_Vec2_pos)",
"body":["ccs.ActionMoveFrame:setPosition(cocos2d_Vec2_pos)"],
"description":"setPosition(cocos2d_Vec2_pos)",
"scope":"source.lua"},

"ccs.ActionMoveFrame:getAction(float_duration)":{
"prefix":"ccs.ActionMoveFrame:getAction(float_duration)",
"body":["ccs.ActionMoveFrame:getAction(float_duration)"],
"description":"getAction(float_duration)",
"scope":"source.lua"},

"ccs.ActionMoveFrame:getPosition()":{
"prefix":"ccs.ActionMoveFrame:getPosition()",
"body":["ccs.ActionMoveFrame:getPosition()"],
"description":"getPosition()",
"scope":"source.lua"},

"ccs.ActionScaleFrame":{
"prefix":"ccs.ActionScaleFrame",
"body":["ccs.ActionScaleFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionScaleFrame:setScaleY(float_scaleY)":{
"prefix":"ccs.ActionScaleFrame:setScaleY(float_scaleY)",
"body":["ccs.ActionScaleFrame:setScaleY(float_scaleY)"],
"description":"setScaleY(float_scaleY)",
"scope":"source.lua"},

"ccs.ActionScaleFrame:setScaleX(float_scaleX)":{
"prefix":"ccs.ActionScaleFrame:setScaleX(float_scaleX)",
"body":["ccs.ActionScaleFrame:setScaleX(float_scaleX)"],
"description":"setScaleX(float_scaleX)",
"scope":"source.lua"},

"ccs.ActionScaleFrame:getScaleY()":{
"prefix":"ccs.ActionScaleFrame:getScaleY()",
"body":["ccs.ActionScaleFrame:getScaleY()"],
"description":"getScaleY()",
"scope":"source.lua"},

"ccs.ActionScaleFrame:getScaleX()":{
"prefix":"ccs.ActionScaleFrame:getScaleX()",
"body":["ccs.ActionScaleFrame:getScaleX()"],
"description":"getScaleX()",
"scope":"source.lua"},

"ccs.ActionScaleFrame:getAction(float_duration)":{
"prefix":"ccs.ActionScaleFrame:getAction(float_duration)",
"body":["ccs.ActionScaleFrame:getAction(float_duration)"],
"description":"getAction(float_duration)",
"scope":"source.lua"},

"ccs.ActionRotationFrame":{
"prefix":"ccs.ActionRotationFrame",
"body":["ccs.ActionRotationFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionRotationFrame:setRotation(float_rotation)":{
"prefix":"ccs.ActionRotationFrame:setRotation(float_rotation)",
"body":["ccs.ActionRotationFrame:setRotation(float_rotation)"],
"description":"setRotation(float_rotation)",
"scope":"source.lua"},

"ccs.ActionRotationFrame:getAction(float_duration)":{
"prefix":"ccs.ActionRotationFrame:getAction(float_duration)",
"body":["ccs.ActionRotationFrame:getAction(float_duration)"],
"description":"getAction(float_duration)",
"scope":"source.lua"},

"ccs.ActionRotationFrame:getAction(float_duration,ActionFrame_srcFrame)":{
"prefix":"ccs.ActionRotationFrame:getAction(float_duration,ActionFrame_srcFrame)",
"body":["ccs.ActionRotationFrame:getAction(float_duration,ActionFrame_srcFrame)"],
"description":"getAction(float_duration,ActionFrame_srcFrame)",
"scope":"source.lua"},

"ccs.ActionRotationFrame:getRotation()":{
"prefix":"ccs.ActionRotationFrame:getRotation()",
"body":["ccs.ActionRotationFrame:getRotation()"],
"description":"getRotation()",
"scope":"source.lua"},

"ccs.ActionFadeFrame":{
"prefix":"ccs.ActionFadeFrame",
"body":["ccs.ActionFadeFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionFadeFrame:getOpacity()":{
"prefix":"ccs.ActionFadeFrame:getOpacity()",
"body":["ccs.ActionFadeFrame:getOpacity()"],
"description":"getOpacity()",
"scope":"source.lua"},

"ccs.ActionFadeFrame:getAction(float_duration)":{
"prefix":"ccs.ActionFadeFrame:getAction(float_duration)",
"body":["ccs.ActionFadeFrame:getAction(float_duration)"],
"description":"getAction(float_duration)",
"scope":"source.lua"},

"ccs.ActionFadeFrame:setOpacity(int_opacity)":{
"prefix":"ccs.ActionFadeFrame:setOpacity(int_opacity)",
"body":["ccs.ActionFadeFrame:setOpacity(int_opacity)"],
"description":"setOpacity(int_opacity)",
"scope":"source.lua"},

"ccs.ActionTintFrame":{
"prefix":"ccs.ActionTintFrame",
"body":["ccs.ActionTintFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionTintFrame:getColor()":{
"prefix":"ccs.ActionTintFrame:getColor()",
"body":["ccs.ActionTintFrame:getColor()"],
"description":"getColor()",
"scope":"source.lua"},

"ccs.ActionTintFrame:getAction(float_duration)":{
"prefix":"ccs.ActionTintFrame:getAction(float_duration)",
"body":["ccs.ActionTintFrame:getAction(float_duration)"],
"description":"getAction(float_duration)",
"scope":"source.lua"},

"ccs.ActionTintFrame:setColor(cocos2d_Color3B_ccolor)":{
"prefix":"ccs.ActionTintFrame:setColor(cocos2d_Color3B_ccolor)",
"body":["ccs.ActionTintFrame:setColor(cocos2d_Color3B_ccolor)"],
"description":"setColor(cocos2d_Color3B_ccolor)",
"scope":"source.lua"},

"ccs.ActionObject":{
"prefix":"ccs.ActionObject",
"body":["ccs.ActionObject"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionObject:setCurrentTime(float_fTime)":{
"prefix":"ccs.ActionObject:setCurrentTime(float_fTime)",
"body":["ccs.ActionObject:setCurrentTime(float_fTime)"],
"description":"setCurrentTime(float_fTime)",
"scope":"source.lua"},

"ccs.ActionObject:pause()":{
"prefix":"ccs.ActionObject:pause()",
"body":["ccs.ActionObject:pause()"],
"description":"pause()",
"scope":"source.lua"},

"ccs.ActionObject:setName(const_char_name)":{
"prefix":"ccs.ActionObject:setName(const_char_name)",
"body":["ccs.ActionObject:setName(const_char_name)"],
"description":"setName(const_char_name)",
"scope":"source.lua"},

"ccs.ActionObject:setUnitTime(float_fTime)":{
"prefix":"ccs.ActionObject:setUnitTime(float_fTime)",
"body":["ccs.ActionObject:setUnitTime(float_fTime)"],
"description":"setUnitTime(float_fTime)",
"scope":"source.lua"},

"ccs.ActionObject:getTotalTime()":{
"prefix":"ccs.ActionObject:getTotalTime()",
"body":["ccs.ActionObject:getTotalTime()"],
"description":"getTotalTime()",
"scope":"source.lua"},

"ccs.ActionObject:getName()":{
"prefix":"ccs.ActionObject:getName()",
"body":["ccs.ActionObject:getName()"],
"description":"getName()",
"scope":"source.lua"},

"ccs.ActionObject:stop()":{
"prefix":"ccs.ActionObject:stop()",
"body":["ccs.ActionObject:stop()"],
"description":"stop()",
"scope":"source.lua"},

"ccs.ActionObject:play()":{
"prefix":"ccs.ActionObject:play()",
"body":["ccs.ActionObject:play()"],
"description":"play()",
"scope":"source.lua"},

"ccs.ActionObject:play(cocos2d_CallFunc_func)":{
"prefix":"ccs.ActionObject:play(cocos2d_CallFunc_func)",
"body":["ccs.ActionObject:play(cocos2d_CallFunc_func)"],
"description":"play(cocos2d_CallFunc_func)",
"scope":"source.lua"},

"ccs.ActionObject:getCurrentTime()":{
"prefix":"ccs.ActionObject:getCurrentTime()",
"body":["ccs.ActionObject:getCurrentTime()"],
"description":"getCurrentTime()",
"scope":"source.lua"},

"ccs.ActionObject:removeActionNode(ActionNode_node)":{
"prefix":"ccs.ActionObject:removeActionNode(ActionNode_node)",
"body":["ccs.ActionObject:removeActionNode(ActionNode_node)"],
"description":"removeActionNode(ActionNode_node)",
"scope":"source.lua"},

"ccs.ActionObject:getLoop()":{
"prefix":"ccs.ActionObject:getLoop()",
"body":["ccs.ActionObject:getLoop()"],
"description":"getLoop()",
"scope":"source.lua"},

"ccs.ActionObject:addActionNode(ActionNode_node)":{
"prefix":"ccs.ActionObject:addActionNode(ActionNode_node)",
"body":["ccs.ActionObject:addActionNode(ActionNode_node)"],
"description":"addActionNode(ActionNode_node)",
"scope":"source.lua"},

"ccs.ActionObject:getUnitTime()":{
"prefix":"ccs.ActionObject:getUnitTime()",
"body":["ccs.ActionObject:getUnitTime()"],
"description":"getUnitTime()",
"scope":"source.lua"},

"ccs.ActionObject:isPlaying()":{
"prefix":"ccs.ActionObject:isPlaying()",
"body":["ccs.ActionObject:isPlaying()"],
"description":"isPlaying()",
"scope":"source.lua"},

"ccs.ActionObject:updateToFrameByTime(float_fTime)":{
"prefix":"ccs.ActionObject:updateToFrameByTime(float_fTime)",
"body":["ccs.ActionObject:updateToFrameByTime(float_fTime)"],
"description":"updateToFrameByTime(float_fTime)",
"scope":"source.lua"},

"ccs.ActionObject:setLoop(bool_bLoop)":{
"prefix":"ccs.ActionObject:setLoop(bool_bLoop)",
"body":["ccs.ActionObject:setLoop(bool_bLoop)"],
"description":"setLoop(bool_bLoop)",
"scope":"source.lua"},

"ccs.ActionObject:simulationActionUpdate(float_dt)":{
"prefix":"ccs.ActionObject:simulationActionUpdate(float_dt)",
"body":["ccs.ActionObject:simulationActionUpdate(float_dt)"],
"description":"simulationActionUpdate(float_dt)",
"scope":"source.lua"},

"ccs.ActionManagerEx":{
"prefix":"ccs.ActionManagerEx",
"body":["ccs.ActionManagerEx"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionManagerEx:stopActionByName(const_char_jsonName,const_char_actionName)":{
"prefix":"ccs.ActionManagerEx:stopActionByName(const_char_jsonName,const_char_actionName)",
"body":["ccs.ActionManagerEx:stopActionByName(const_char_jsonName,const_char_actionName)"],
"description":"stopActionByName(const_char_jsonName,const_char_actionName)",
"scope":"source.lua"},

"ccs.ActionManagerEx:getActionByName(const_char_jsonName,const_char_actionName)":{
"prefix":"ccs.ActionManagerEx:getActionByName(const_char_jsonName,const_char_actionName)",
"body":["ccs.ActionManagerEx:getActionByName(const_char_jsonName,const_char_actionName)"],
"description":"getActionByName(const_char_jsonName,const_char_actionName)",
"scope":"source.lua"},

"ccs.ActionManagerEx:getStudioVersionNumber()":{
"prefix":"ccs.ActionManagerEx:getStudioVersionNumber()",
"body":["ccs.ActionManagerEx:getStudioVersionNumber()"],
"description":"getStudioVersionNumber()",
"scope":"source.lua"},

"ccs.ActionManagerEx:playActionByName(const_char_jsonName,const_char_actionName)":{
"prefix":"ccs.ActionManagerEx:playActionByName(const_char_jsonName,const_char_actionName)",
"body":["ccs.ActionManagerEx:playActionByName(const_char_jsonName,const_char_actionName)"],
"description":"playActionByName(const_char_jsonName,const_char_actionName)",
"scope":"source.lua"},

"ccs.ActionManagerEx:playActionByName(const_char_jsonName,const_char_actionName,cocos2d_CallFunc_func)":{
"prefix":"ccs.ActionManagerEx:playActionByName(const_char_jsonName,const_char_actionName,cocos2d_CallFunc_func)",
"body":["ccs.ActionManagerEx:playActionByName(const_char_jsonName,const_char_actionName,cocos2d_CallFunc_func)"],
"description":"playActionByName(const_char_jsonName,const_char_actionName,cocos2d_CallFunc_func)",
"scope":"source.lua"},

"ccs.ActionManagerEx:releaseActions()":{
"prefix":"ccs.ActionManagerEx:releaseActions()",
"body":["ccs.ActionManagerEx:releaseActions()"],
"description":"releaseActions()",
"scope":"source.lua"},

"ccs.ActionManagerEx:destroyInstance()":{
"prefix":"ccs.ActionManagerEx:destroyInstance()",
"body":["ccs.ActionManagerEx:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"ccs.ActionManagerEx:getInstance()":{
"prefix":"ccs.ActionManagerEx:getInstance()",
"body":["ccs.ActionManagerEx:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"ccs.BaseData":{
"prefix":"ccs.BaseData",
"body":["ccs.BaseData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.BaseData:getColor()":{
"prefix":"ccs.BaseData:getColor()",
"body":["ccs.BaseData:getColor()"],
"description":"getColor()",
"scope":"source.lua"},

"ccs.BaseData:setColor(const_cocos2d_Color4B_color)":{
"prefix":"ccs.BaseData:setColor(const_cocos2d_Color4B_color)",
"body":["ccs.BaseData:setColor(const_cocos2d_Color4B_color)"],
"description":"setColor(const_cocos2d_Color4B_color)",
"scope":"source.lua"},

"ccs.DisplayData":{
"prefix":"ccs.DisplayData",
"body":["ccs.DisplayData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.DisplayData:copy(DisplayData_displayData)":{
"prefix":"ccs.DisplayData:copy(DisplayData_displayData)",
"body":["ccs.DisplayData:copy(DisplayData_displayData)"],
"description":"copy(DisplayData_displayData)",
"scope":"source.lua"},

"ccs.DisplayData:changeDisplayToTexture(const_std_string_displayName)":{
"prefix":"ccs.DisplayData:changeDisplayToTexture(const_std_string_displayName)",
"body":["ccs.DisplayData:changeDisplayToTexture(const_std_string_displayName)"],
"description":"changeDisplayToTexture(const_std_string_displayName)",
"scope":"source.lua"},

"ccs.SpriteDisplayData":{
"prefix":"ccs.SpriteDisplayData",
"body":["ccs.SpriteDisplayData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.SpriteDisplayData:copy(DisplayData_displayData)":{
"prefix":"ccs.SpriteDisplayData:copy(DisplayData_displayData)",
"body":["ccs.SpriteDisplayData:copy(DisplayData_displayData)"],
"description":"copy(DisplayData_displayData)",
"scope":"source.lua"},

"ccs.ArmatureDisplayData":{
"prefix":"ccs.ArmatureDisplayData",
"body":["ccs.ArmatureDisplayData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ArmatureDisplayData:new()":{
"prefix":"ccs.ArmatureDisplayData:new()",
"body":["ccs.ArmatureDisplayData:new()"],
"description":"new()",
"scope":"source.lua"},

"ccs.ArmatureDisplayData:create()":{
"prefix":"ccs.ArmatureDisplayData:create()",
"body":["ccs.ArmatureDisplayData:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ParticleDisplayData":{
"prefix":"ccs.ParticleDisplayData",
"body":["ccs.ParticleDisplayData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ParticleDisplayData:new()":{
"prefix":"ccs.ParticleDisplayData:new()",
"body":["ccs.ParticleDisplayData:new()"],
"description":"new()",
"scope":"source.lua"},

"ccs.ParticleDisplayData:create()":{
"prefix":"ccs.ParticleDisplayData:create()",
"body":["ccs.ParticleDisplayData:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.BoneData":{
"prefix":"ccs.BoneData",
"body":["ccs.BoneData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.BoneData:getDisplayData(int_index)":{
"prefix":"ccs.BoneData:getDisplayData(int_index)",
"body":["ccs.BoneData:getDisplayData(int_index)"],
"description":"getDisplayData(int_index)",
"scope":"source.lua"},

"ccs.BoneData:init()":{
"prefix":"ccs.BoneData:init()",
"body":["ccs.BoneData:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.BoneData:addDisplayData(DisplayData_displayData)":{
"prefix":"ccs.BoneData:addDisplayData(DisplayData_displayData)",
"body":["ccs.BoneData:addDisplayData(DisplayData_displayData)"],
"description":"addDisplayData(DisplayData_displayData)",
"scope":"source.lua"},

"ccs.ArmatureData":{
"prefix":"ccs.ArmatureData",
"body":["ccs.ArmatureData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ArmatureData:addBoneData(BoneData_boneData)":{
"prefix":"ccs.ArmatureData:addBoneData(BoneData_boneData)",
"body":["ccs.ArmatureData:addBoneData(BoneData_boneData)"],
"description":"addBoneData(BoneData_boneData)",
"scope":"source.lua"},

"ccs.ArmatureData:init()":{
"prefix":"ccs.ArmatureData:init()",
"body":["ccs.ArmatureData:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.ArmatureData:getBoneData(const_std_string_boneName)":{
"prefix":"ccs.ArmatureData:getBoneData(const_std_string_boneName)",
"body":["ccs.ArmatureData:getBoneData(const_std_string_boneName)"],
"description":"getBoneData(const_std_string_boneName)",
"scope":"source.lua"},

"ccs.FrameData":{
"prefix":"ccs.FrameData",
"body":["ccs.FrameData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.FrameData:copy(const_BaseData_baseData)":{
"prefix":"ccs.FrameData:copy(const_BaseData_baseData)",
"body":["ccs.FrameData:copy(const_BaseData_baseData)"],
"description":"copy(const_BaseData_baseData)",
"scope":"source.lua"},

"ccs.MovementBoneData":{
"prefix":"ccs.MovementBoneData",
"body":["ccs.MovementBoneData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.MovementBoneData:init()":{
"prefix":"ccs.MovementBoneData:init()",
"body":["ccs.MovementBoneData:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.MovementBoneData:getFrameData(int_index)":{
"prefix":"ccs.MovementBoneData:getFrameData(int_index)",
"body":["ccs.MovementBoneData:getFrameData(int_index)"],
"description":"getFrameData(int_index)",
"scope":"source.lua"},

"ccs.MovementBoneData:addFrameData(FrameData_frameData)":{
"prefix":"ccs.MovementBoneData:addFrameData(FrameData_frameData)",
"body":["ccs.MovementBoneData:addFrameData(FrameData_frameData)"],
"description":"addFrameData(FrameData_frameData)",
"scope":"source.lua"},

"ccs.MovementData":{
"prefix":"ccs.MovementData",
"body":["ccs.MovementData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.MovementData:getMovementBoneData(const_std_string_boneName)":{
"prefix":"ccs.MovementData:getMovementBoneData(const_std_string_boneName)",
"body":["ccs.MovementData:getMovementBoneData(const_std_string_boneName)"],
"description":"getMovementBoneData(const_std_string_boneName)",
"scope":"source.lua"},

"ccs.MovementData:addMovementBoneData(MovementBoneData_movBoneData)":{
"prefix":"ccs.MovementData:addMovementBoneData(MovementBoneData_movBoneData)",
"body":["ccs.MovementData:addMovementBoneData(MovementBoneData_movBoneData)"],
"description":"addMovementBoneData(MovementBoneData_movBoneData)",
"scope":"source.lua"},

"ccs.AnimationData":{
"prefix":"ccs.AnimationData",
"body":["ccs.AnimationData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.AnimationData:getMovement(const_std_string_movementName)":{
"prefix":"ccs.AnimationData:getMovement(const_std_string_movementName)",
"body":["ccs.AnimationData:getMovement(const_std_string_movementName)"],
"description":"getMovement(const_std_string_movementName)",
"scope":"source.lua"},

"ccs.AnimationData:getMovementCount()":{
"prefix":"ccs.AnimationData:getMovementCount()",
"body":["ccs.AnimationData:getMovementCount()"],
"description":"getMovementCount()",
"scope":"source.lua"},

"ccs.AnimationData:addMovement(MovementData_movData)":{
"prefix":"ccs.AnimationData:addMovement(MovementData_movData)",
"body":["ccs.AnimationData:addMovement(MovementData_movData)"],
"description":"addMovement(MovementData_movData)",
"scope":"source.lua"},

"ccs.ContourData":{
"prefix":"ccs.ContourData",
"body":["ccs.ContourData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ContourData:init()":{
"prefix":"ccs.ContourData:init()",
"body":["ccs.ContourData:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.ContourData:addVertex(cocos2d_Vec2_vertex)":{
"prefix":"ccs.ContourData:addVertex(cocos2d_Vec2_vertex)",
"body":["ccs.ContourData:addVertex(cocos2d_Vec2_vertex)"],
"description":"addVertex(cocos2d_Vec2_vertex)",
"scope":"source.lua"},

"ccs.TextureData":{
"prefix":"ccs.TextureData",
"body":["ccs.TextureData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.TextureData:getContourData(int_index)":{
"prefix":"ccs.TextureData:getContourData(int_index)",
"body":["ccs.TextureData:getContourData(int_index)"],
"description":"getContourData(int_index)",
"scope":"source.lua"},

"ccs.TextureData:init()":{
"prefix":"ccs.TextureData:init()",
"body":["ccs.TextureData:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.TextureData:addContourData(ContourData_contourData)":{
"prefix":"ccs.TextureData:addContourData(ContourData_contourData)",
"body":["ccs.TextureData:addContourData(ContourData_contourData)"],
"description":"addContourData(ContourData_contourData)",
"scope":"source.lua"},

"ccs.Tween":{
"prefix":"ccs.Tween",
"body":["ccs.Tween"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.Tween:getAnimation()":{
"prefix":"ccs.Tween:getAnimation()",
"body":["ccs.Tween:getAnimation()"],
"description":"getAnimation()",
"scope":"source.lua"},

"ccs.Tween:gotoAndPause(int_frameIndex)":{
"prefix":"ccs.Tween:gotoAndPause(int_frameIndex)",
"body":["ccs.Tween:gotoAndPause(int_frameIndex)"],
"description":"gotoAndPause(int_frameIndex)",
"scope":"source.lua"},

"ccs.Tween:play(MovementBoneData_movementBoneData,int_durationTo,int_durationTween,int_loop,int_tweenEasing)":{
"prefix":"ccs.Tween:play(MovementBoneData_movementBoneData,int_durationTo,int_durationTween,int_loop,int_tweenEasing)",
"body":["ccs.Tween:play(MovementBoneData_movementBoneData,int_durationTo,int_durationTween,int_loop,int_tweenEasing)"],
"description":"play(MovementBoneData_movementBoneData,int_durationTo,int_durationTween,int_loop,int_tweenEasing)",
"scope":"source.lua"},

"ccs.Tween:gotoAndPlay(int_frameIndex)":{
"prefix":"ccs.Tween:gotoAndPlay(int_frameIndex)",
"body":["ccs.Tween:gotoAndPlay(int_frameIndex)"],
"description":"gotoAndPlay(int_frameIndex)",
"scope":"source.lua"},

"ccs.Tween:init(Bone_bone)":{
"prefix":"ccs.Tween:init(Bone_bone)",
"body":["ccs.Tween:init(Bone_bone)"],
"description":"init(Bone_bone)",
"scope":"source.lua"},

"ccs.Tween:setAnimation(ArmatureAnimation_animation)":{
"prefix":"ccs.Tween:setAnimation(ArmatureAnimation_animation)",
"body":["ccs.Tween:setAnimation(ArmatureAnimation_animation)"],
"description":"setAnimation(ArmatureAnimation_animation)",
"scope":"source.lua"},

"ccs.Tween:create(Bone_bone)":{
"prefix":"ccs.Tween:create(Bone_bone)",
"body":["ccs.Tween:create(Bone_bone)"],
"description":"create(Bone_bone)",
"scope":"source.lua"},

"ccs.DisplayManager":{
"prefix":"ccs.DisplayManager",
"body":["ccs.DisplayManager"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.DisplayManager:getDisplayRenderNode()":{
"prefix":"ccs.DisplayManager:getDisplayRenderNode()",
"body":["ccs.DisplayManager:getDisplayRenderNode()"],
"description":"getDisplayRenderNode()",
"scope":"source.lua"},

"ccs.DisplayManager:getAnchorPointInPoints()":{
"prefix":"ccs.DisplayManager:getAnchorPointInPoints()",
"body":["ccs.DisplayManager:getAnchorPointInPoints()"],
"description":"getAnchorPointInPoints()",
"scope":"source.lua"},

"ccs.DisplayManager:getDisplayRenderNodeType()":{
"prefix":"ccs.DisplayManager:getDisplayRenderNodeType()",
"body":["ccs.DisplayManager:getDisplayRenderNodeType()"],
"description":"getDisplayRenderNodeType()",
"scope":"source.lua"},

"ccs.DisplayManager:removeDisplay(int_index)":{
"prefix":"ccs.DisplayManager:removeDisplay(int_index)",
"body":["ccs.DisplayManager:removeDisplay(int_index)"],
"description":"removeDisplay(int_index)",
"scope":"source.lua"},

"ccs.DisplayManager:setForceChangeDisplay(bool_force)":{
"prefix":"ccs.DisplayManager:setForceChangeDisplay(bool_force)",
"body":["ccs.DisplayManager:setForceChangeDisplay(bool_force)"],
"description":"setForceChangeDisplay(bool_force)",
"scope":"source.lua"},

"ccs.DisplayManager:init(Bone_bone)":{
"prefix":"ccs.DisplayManager:init(Bone_bone)",
"body":["ccs.DisplayManager:init(Bone_bone)"],
"description":"init(Bone_bone)",
"scope":"source.lua"},

"ccs.DisplayManager:getContentSize()":{
"prefix":"ccs.DisplayManager:getContentSize()",
"body":["ccs.DisplayManager:getContentSize()"],
"description":"getContentSize()",
"scope":"source.lua"},

"ccs.DisplayManager:getBoundingBox()":{
"prefix":"ccs.DisplayManager:getBoundingBox()",
"body":["ccs.DisplayManager:getBoundingBox()"],
"description":"getBoundingBox()",
"scope":"source.lua"},

"ccs.DisplayManager:addDisplay(DisplayData_displayData,int_index)":{
"prefix":"ccs.DisplayManager:addDisplay(DisplayData_displayData,int_index)",
"body":["ccs.DisplayManager:addDisplay(DisplayData_displayData,int_index)"],
"description":"addDisplay(DisplayData_displayData,int_index)",
"scope":"source.lua"},

"ccs.DisplayManager:containPoint(cocos2d_Vec2__point)":{
"prefix":"ccs.DisplayManager:containPoint(cocos2d_Vec2__point)",
"body":["ccs.DisplayManager:containPoint(cocos2d_Vec2__point)"],
"description":"containPoint(cocos2d_Vec2__point)",
"scope":"source.lua"},

"ccs.DisplayManager:containPoint(float_x,float_y)":{
"prefix":"ccs.DisplayManager:containPoint(float_x,float_y)",
"body":["ccs.DisplayManager:containPoint(float_x,float_y)"],
"description":"containPoint(float_x,float_y)",
"scope":"source.lua"},

"ccs.DisplayManager:changeDisplayWithIndex(int_index,bool_force)":{
"prefix":"ccs.DisplayManager:changeDisplayWithIndex(int_index,bool_force)",
"body":["ccs.DisplayManager:changeDisplayWithIndex(int_index,bool_force)"],
"description":"changeDisplayWithIndex(int_index,bool_force)",
"scope":"source.lua"},

"ccs.DisplayManager:changeDisplayWithName(const_std_string_name,bool_force)":{
"prefix":"ccs.DisplayManager:changeDisplayWithName(const_std_string_name,bool_force)",
"body":["ccs.DisplayManager:changeDisplayWithName(const_std_string_name,bool_force)"],
"description":"changeDisplayWithName(const_std_string_name,bool_force)",
"scope":"source.lua"},

"ccs.DisplayManager:isForceChangeDisplay()":{
"prefix":"ccs.DisplayManager:isForceChangeDisplay()",
"body":["ccs.DisplayManager:isForceChangeDisplay()"],
"description":"isForceChangeDisplay()",
"scope":"source.lua"},

"ccs.DisplayManager:getCurrentDisplayIndex()":{
"prefix":"ccs.DisplayManager:getCurrentDisplayIndex()",
"body":["ccs.DisplayManager:getCurrentDisplayIndex()"],
"description":"getCurrentDisplayIndex()",
"scope":"source.lua"},

"ccs.DisplayManager:getAnchorPoint()":{
"prefix":"ccs.DisplayManager:getAnchorPoint()",
"body":["ccs.DisplayManager:getAnchorPoint()"],
"description":"getAnchorPoint()",
"scope":"source.lua"},

"ccs.DisplayManager:getDecorativeDisplayList()":{
"prefix":"ccs.DisplayManager:getDecorativeDisplayList()",
"body":["ccs.DisplayManager:getDecorativeDisplayList()"],
"description":"getDecorativeDisplayList()",
"scope":"source.lua"},

"ccs.DisplayManager:isVisible()":{
"prefix":"ccs.DisplayManager:isVisible()",
"body":["ccs.DisplayManager:isVisible()"],
"description":"isVisible()",
"scope":"source.lua"},

"ccs.DisplayManager:setVisible(bool_visible)":{
"prefix":"ccs.DisplayManager:setVisible(bool_visible)",
"body":["ccs.DisplayManager:setVisible(bool_visible)"],
"description":"setVisible(bool_visible)",
"scope":"source.lua"},

"ccs.DisplayManager:create(Bone_bone)":{
"prefix":"ccs.DisplayManager:create(Bone_bone)",
"body":["ccs.DisplayManager:create(Bone_bone)"],
"description":"create(Bone_bone)",
"scope":"source.lua"},

"ccs.Bone":{
"prefix":"ccs.Bone",
"body":["ccs.Bone"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.Bone:isTransformDirty()":{
"prefix":"ccs.Bone:isTransformDirty()",
"body":["ccs.Bone:isTransformDirty()"],
"description":"isTransformDirty()",
"scope":"source.lua"},

"ccs.Bone:setBlendFunc(const_cocos2d_BlendFunc_blendFunc)":{
"prefix":"ccs.Bone:setBlendFunc(const_cocos2d_BlendFunc_blendFunc)",
"body":["ccs.Bone:setBlendFunc(const_cocos2d_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_cocos2d_BlendFunc_blendFunc)",
"scope":"source.lua"},

"ccs.Bone:isIgnoreMovementBoneData()":{
"prefix":"ccs.Bone:isIgnoreMovementBoneData()",
"body":["ccs.Bone:isIgnoreMovementBoneData()"],
"description":"isIgnoreMovementBoneData()",
"scope":"source.lua"},

"ccs.Bone:updateZOrder()":{
"prefix":"ccs.Bone:updateZOrder()",
"body":["ccs.Bone:updateZOrder()"],
"description":"updateZOrder()",
"scope":"source.lua"},

"ccs.Bone:getDisplayRenderNode()":{
"prefix":"ccs.Bone:getDisplayRenderNode()",
"body":["ccs.Bone:getDisplayRenderNode()"],
"description":"getDisplayRenderNode()",
"scope":"source.lua"},

"ccs.Bone:isBlendDirty()":{
"prefix":"ccs.Bone:isBlendDirty()",
"body":["ccs.Bone:isBlendDirty()"],
"description":"isBlendDirty()",
"scope":"source.lua"},

"ccs.Bone:addChildBone(Bone_child)":{
"prefix":"ccs.Bone:addChildBone(Bone_child)",
"body":["ccs.Bone:addChildBone(Bone_child)"],
"description":"addChildBone(Bone_child)",
"scope":"source.lua"},

"ccs.Bone:getWorldInfo()":{
"prefix":"ccs.Bone:getWorldInfo()",
"body":["ccs.Bone:getWorldInfo()"],
"description":"getWorldInfo()",
"scope":"source.lua"},

"ccs.Bone:getTween()":{
"prefix":"ccs.Bone:getTween()",
"body":["ccs.Bone:getTween()"],
"description":"getTween()",
"scope":"source.lua"},

"ccs.Bone:getParentBone()":{
"prefix":"ccs.Bone:getParentBone()",
"body":["ccs.Bone:getParentBone()"],
"description":"getParentBone()",
"scope":"source.lua"},

"ccs.Bone:updateColor()":{
"prefix":"ccs.Bone:updateColor()",
"body":["ccs.Bone:updateColor()"],
"description":"updateColor()",
"scope":"source.lua"},

"ccs.Bone:setTransformDirty(bool_dirty)":{
"prefix":"ccs.Bone:setTransformDirty(bool_dirty)",
"body":["ccs.Bone:setTransformDirty(bool_dirty)"],
"description":"setTransformDirty(bool_dirty)",
"scope":"source.lua"},

"ccs.Bone:getDisplayRenderNodeType()":{
"prefix":"ccs.Bone:getDisplayRenderNodeType()",
"body":["ccs.Bone:getDisplayRenderNodeType()"],
"description":"getDisplayRenderNodeType()",
"scope":"source.lua"},

"ccs.Bone:removeDisplay(int_index)":{
"prefix":"ccs.Bone:removeDisplay(int_index)",
"body":["ccs.Bone:removeDisplay(int_index)"],
"description":"removeDisplay(int_index)",
"scope":"source.lua"},

"ccs.Bone:setBoneData(BoneData_boneData)":{
"prefix":"ccs.Bone:setBoneData(BoneData_boneData)",
"body":["ccs.Bone:setBoneData(BoneData_boneData)"],
"description":"setBoneData(BoneData_boneData)",
"scope":"source.lua"},

"ccs.Bone:init()":{
"prefix":"ccs.Bone:init()",
"body":["ccs.Bone:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.Bone:init(const_std_string_name)":{
"prefix":"ccs.Bone:init(const_std_string_name)",
"body":["ccs.Bone:init(const_std_string_name)"],
"description":"init(const_std_string_name)",
"scope":"source.lua"},

"ccs.Bone:setParentBone(Bone_parent)":{
"prefix":"ccs.Bone:setParentBone(Bone_parent)",
"body":["ccs.Bone:setParentBone(Bone_parent)"],
"description":"setParentBone(Bone_parent)",
"scope":"source.lua"},

"ccs.Bone:addDisplay(DisplayData_displayData,int_index)":{
"prefix":"ccs.Bone:addDisplay(DisplayData_displayData,int_index)",
"body":["ccs.Bone:addDisplay(DisplayData_displayData,int_index)"],
"description":"addDisplay(DisplayData_displayData,int_index)",
"scope":"source.lua"},

"ccs.Bone:getBlendFunc()":{
"prefix":"ccs.Bone:getBlendFunc()",
"body":["ccs.Bone:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"ccs.Bone:removeFromParent(bool_recursion)":{
"prefix":"ccs.Bone:removeFromParent(bool_recursion)",
"body":["ccs.Bone:removeFromParent(bool_recursion)"],
"description":"removeFromParent(bool_recursion)",
"scope":"source.lua"},

"ccs.Bone:getColliderDetector()":{
"prefix":"ccs.Bone:getColliderDetector()",
"body":["ccs.Bone:getColliderDetector()"],
"description":"getColliderDetector()",
"scope":"source.lua"},

"ccs.Bone:getChildArmature()":{
"prefix":"ccs.Bone:getChildArmature()",
"body":["ccs.Bone:getChildArmature()"],
"description":"getChildArmature()",
"scope":"source.lua"},

"ccs.Bone:getTweenData()":{
"prefix":"ccs.Bone:getTweenData()",
"body":["ccs.Bone:getTweenData()"],
"description":"getTweenData()",
"scope":"source.lua"},

"ccs.Bone:changeDisplayWithIndex(int_index,bool_force)":{
"prefix":"ccs.Bone:changeDisplayWithIndex(int_index,bool_force)",
"body":["ccs.Bone:changeDisplayWithIndex(int_index,bool_force)"],
"description":"changeDisplayWithIndex(int_index,bool_force)",
"scope":"source.lua"},

"ccs.Bone:changeDisplayWithName(const_std_string_name,bool_force)":{
"prefix":"ccs.Bone:changeDisplayWithName(const_std_string_name,bool_force)",
"body":["ccs.Bone:changeDisplayWithName(const_std_string_name,bool_force)"],
"description":"changeDisplayWithName(const_std_string_name,bool_force)",
"scope":"source.lua"},

"ccs.Bone:setArmature(Armature_armature)":{
"prefix":"ccs.Bone:setArmature(Armature_armature)",
"body":["ccs.Bone:setArmature(Armature_armature)"],
"description":"setArmature(Armature_armature)",
"scope":"source.lua"},

"ccs.Bone:setBlendDirty(bool_dirty)":{
"prefix":"ccs.Bone:setBlendDirty(bool_dirty)",
"body":["ccs.Bone:setBlendDirty(bool_dirty)"],
"description":"setBlendDirty(bool_dirty)",
"scope":"source.lua"},

"ccs.Bone:removeChildBone(Bone_bone,bool_recursion)":{
"prefix":"ccs.Bone:removeChildBone(Bone_bone,bool_recursion)",
"body":["ccs.Bone:removeChildBone(Bone_bone,bool_recursion)"],
"description":"removeChildBone(Bone_bone,bool_recursion)",
"scope":"source.lua"},

"ccs.Bone:setChildArmature(Armature_childArmature)":{
"prefix":"ccs.Bone:setChildArmature(Armature_childArmature)",
"body":["ccs.Bone:setChildArmature(Armature_childArmature)"],
"description":"setChildArmature(Armature_childArmature)",
"scope":"source.lua"},

"ccs.Bone:getNodeToArmatureTransform()":{
"prefix":"ccs.Bone:getNodeToArmatureTransform()",
"body":["ccs.Bone:getNodeToArmatureTransform()"],
"description":"getNodeToArmatureTransform()",
"scope":"source.lua"},

"ccs.Bone:getDisplayManager()":{
"prefix":"ccs.Bone:getDisplayManager()",
"body":["ccs.Bone:getDisplayManager()"],
"description":"getDisplayManager()",
"scope":"source.lua"},

"ccs.Bone:getArmature()":{
"prefix":"ccs.Bone:getArmature()",
"body":["ccs.Bone:getArmature()"],
"description":"getArmature()",
"scope":"source.lua"},

"ccs.Bone:getBoneData()":{
"prefix":"ccs.Bone:getBoneData()",
"body":["ccs.Bone:getBoneData()"],
"description":"getBoneData()",
"scope":"source.lua"},

"ccs.Bone:create()":{
"prefix":"ccs.Bone:create()",
"body":["ccs.Bone:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.Bone:create(const_std_string_name)":{
"prefix":"ccs.Bone:create(const_std_string_name)",
"body":["ccs.Bone:create(const_std_string_name)"],
"description":"create(const_std_string_name)",
"scope":"source.lua"},

"ccs.BatchNode":{
"prefix":"ccs.BatchNode",
"body":["ccs.BatchNode"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.BatchNode:create()":{
"prefix":"ccs.BatchNode:create()",
"body":["ccs.BatchNode:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ArmatureAnimation":{
"prefix":"ccs.ArmatureAnimation",
"body":["ccs.ArmatureAnimation"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ArmatureAnimation:getSpeedScale()":{
"prefix":"ccs.ArmatureAnimation:getSpeedScale()",
"body":["ccs.ArmatureAnimation:getSpeedScale()"],
"description":"getSpeedScale()",
"scope":"source.lua"},

"ccs.ArmatureAnimation:play(const_std_string_animationName,int_durationTo,int_loop)":{
"prefix":"ccs.ArmatureAnimation:play(const_std_string_animationName,int_durationTo,int_loop)",
"body":["ccs.ArmatureAnimation:play(const_std_string_animationName,int_durationTo,int_loop)"],
"description":"play(const_std_string_animationName,int_durationTo,int_loop)",
"scope":"source.lua"},

"ccs.ArmatureAnimation:gotoAndPause(int_frameIndex)":{
"prefix":"ccs.ArmatureAnimation:gotoAndPause(int_frameIndex)",
"body":["ccs.ArmatureAnimation:gotoAndPause(int_frameIndex)"],
"description":"gotoAndPause(int_frameIndex)",
"scope":"source.lua"},

"ccs.ArmatureAnimation:playWithIndexes(int_durationTo,bool_loop)":{
"prefix":"ccs.ArmatureAnimation:playWithIndexes(int_durationTo,bool_loop)",
"body":["ccs.ArmatureAnimation:playWithIndexes(int_durationTo,bool_loop)"],
"description":"playWithIndexes(int_durationTo,bool_loop)",
"scope":"source.lua"},

"ccs.ArmatureAnimation:setAnimationData(AnimationData_data)":{
"prefix":"ccs.ArmatureAnimation:setAnimationData(AnimationData_data)",
"body":["ccs.ArmatureAnimation:setAnimationData(AnimationData_data)"],
"description":"setAnimationData(AnimationData_data)",
"scope":"source.lua"},

"ccs.ArmatureAnimation:setSpeedScale(float_speedScale)":{
"prefix":"ccs.ArmatureAnimation:setSpeedScale(float_speedScale)",
"body":["ccs.ArmatureAnimation:setSpeedScale(float_speedScale)"],
"description":"setSpeedScale(float_speedScale)",
"scope":"source.lua"},

"ccs.ArmatureAnimation:getAnimationData()":{
"prefix":"ccs.ArmatureAnimation:getAnimationData()",
"body":["ccs.ArmatureAnimation:getAnimationData()"],
"description":"getAnimationData()",
"scope":"source.lua"},

"ccs.ArmatureAnimation:gotoAndPlay(int_frameIndex)":{
"prefix":"ccs.ArmatureAnimation:gotoAndPlay(int_frameIndex)",
"body":["ccs.ArmatureAnimation:gotoAndPlay(int_frameIndex)"],
"description":"gotoAndPlay(int_frameIndex)",
"scope":"source.lua"},

"ccs.ArmatureAnimation:init(Armature_armature)":{
"prefix":"ccs.ArmatureAnimation:init(Armature_armature)",
"body":["ccs.ArmatureAnimation:init(Armature_armature)"],
"description":"init(Armature_armature)",
"scope":"source.lua"},

"ccs.ArmatureAnimation:playWithNames(int_durationTo,bool_loop)":{
"prefix":"ccs.ArmatureAnimation:playWithNames(int_durationTo,bool_loop)",
"body":["ccs.ArmatureAnimation:playWithNames(int_durationTo,bool_loop)"],
"description":"playWithNames(int_durationTo,bool_loop)",
"scope":"source.lua"},

"ccs.ArmatureAnimation:getMovementCount()":{
"prefix":"ccs.ArmatureAnimation:getMovementCount()",
"body":["ccs.ArmatureAnimation:getMovementCount()"],
"description":"getMovementCount()",
"scope":"source.lua"},

"ccs.ArmatureAnimation:playWithIndex(int_animationIndex,int_durationTo,int_loop)":{
"prefix":"ccs.ArmatureAnimation:playWithIndex(int_animationIndex,int_durationTo,int_loop)",
"body":["ccs.ArmatureAnimation:playWithIndex(int_animationIndex,int_durationTo,int_loop)"],
"description":"playWithIndex(int_animationIndex,int_durationTo,int_loop)",
"scope":"source.lua"},

"ccs.ArmatureAnimation:getCurrentMovementID()":{
"prefix":"ccs.ArmatureAnimation:getCurrentMovementID()",
"body":["ccs.ArmatureAnimation:getCurrentMovementID()"],
"description":"getCurrentMovementID()",
"scope":"source.lua"},

"ccs.ArmatureAnimation:create(Armature_armature)":{
"prefix":"ccs.ArmatureAnimation:create(Armature_armature)",
"body":["ccs.ArmatureAnimation:create(Armature_armature)"],
"description":"create(Armature_armature)",
"scope":"source.lua"},

"ccs.ArmatureDataManager":{
"prefix":"ccs.ArmatureDataManager",
"body":["ccs.ArmatureDataManager"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ArmatureDataManager:getAnimationDatas()":{
"prefix":"ccs.ArmatureDataManager:getAnimationDatas()",
"body":["ccs.ArmatureDataManager:getAnimationDatas()"],
"description":"getAnimationDatas()",
"scope":"source.lua"},

"ccs.ArmatureDataManager:removeAnimationData(const_std_string_id)":{
"prefix":"ccs.ArmatureDataManager:removeAnimationData(const_std_string_id)",
"body":["ccs.ArmatureDataManager:removeAnimationData(const_std_string_id)"],
"description":"removeAnimationData(const_std_string_id)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:addArmatureData(const_std_string_id,ArmatureData_armatureData,const_std_string_configFilePath)":{
"prefix":"ccs.ArmatureDataManager:addArmatureData(const_std_string_id,ArmatureData_armatureData,const_std_string_configFilePath)",
"body":["ccs.ArmatureDataManager:addArmatureData(const_std_string_id,ArmatureData_armatureData,const_std_string_configFilePath)"],
"description":"addArmatureData(const_std_string_id,ArmatureData_armatureData,const_std_string_configFilePath)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:addArmatureFileInfo(const_std_string_configFilePath)":{
"prefix":"ccs.ArmatureDataManager:addArmatureFileInfo(const_std_string_configFilePath)",
"body":["ccs.ArmatureDataManager:addArmatureFileInfo(const_std_string_configFilePath)"],
"description":"addArmatureFileInfo(const_std_string_configFilePath)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:addArmatureFileInfo(const_std_string_imagePath,const_std_string_plistPath,const_std_string_configFilePath)":{
"prefix":"ccs.ArmatureDataManager:addArmatureFileInfo(const_std_string_imagePath,const_std_string_plistPath,const_std_string_configFilePath)",
"body":["ccs.ArmatureDataManager:addArmatureFileInfo(const_std_string_imagePath,const_std_string_plistPath,const_std_string_configFilePath)"],
"description":"addArmatureFileInfo(const_std_string_imagePath,const_std_string_plistPath,const_std_string_configFilePath)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:removeArmatureFileInfo(const_std_string_configFilePath)":{
"prefix":"ccs.ArmatureDataManager:removeArmatureFileInfo(const_std_string_configFilePath)",
"body":["ccs.ArmatureDataManager:removeArmatureFileInfo(const_std_string_configFilePath)"],
"description":"removeArmatureFileInfo(const_std_string_configFilePath)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:getTextureDatas()":{
"prefix":"ccs.ArmatureDataManager:getTextureDatas()",
"body":["ccs.ArmatureDataManager:getTextureDatas()"],
"description":"getTextureDatas()",
"scope":"source.lua"},

"ccs.ArmatureDataManager:getTextureData(const_std_string_id)":{
"prefix":"ccs.ArmatureDataManager:getTextureData(const_std_string_id)",
"body":["ccs.ArmatureDataManager:getTextureData(const_std_string_id)"],
"description":"getTextureData(const_std_string_id)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:getArmatureData(const_std_string_id)":{
"prefix":"ccs.ArmatureDataManager:getArmatureData(const_std_string_id)",
"body":["ccs.ArmatureDataManager:getArmatureData(const_std_string_id)"],
"description":"getArmatureData(const_std_string_id)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:getAnimationData(const_std_string_id)":{
"prefix":"ccs.ArmatureDataManager:getAnimationData(const_std_string_id)",
"body":["ccs.ArmatureDataManager:getAnimationData(const_std_string_id)"],
"description":"getAnimationData(const_std_string_id)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:addAnimationData(const_std_string_id,AnimationData_animationData,const_std_string_configFilePath)":{
"prefix":"ccs.ArmatureDataManager:addAnimationData(const_std_string_id,AnimationData_animationData,const_std_string_configFilePath)",
"body":["ccs.ArmatureDataManager:addAnimationData(const_std_string_id,AnimationData_animationData,const_std_string_configFilePath)"],
"description":"addAnimationData(const_std_string_id,AnimationData_animationData,const_std_string_configFilePath)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:init()":{
"prefix":"ccs.ArmatureDataManager:init()",
"body":["ccs.ArmatureDataManager:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.ArmatureDataManager:removeArmatureData(const_std_string_id)":{
"prefix":"ccs.ArmatureDataManager:removeArmatureData(const_std_string_id)",
"body":["ccs.ArmatureDataManager:removeArmatureData(const_std_string_id)"],
"description":"removeArmatureData(const_std_string_id)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:getArmatureDatas()":{
"prefix":"ccs.ArmatureDataManager:getArmatureDatas()",
"body":["ccs.ArmatureDataManager:getArmatureDatas()"],
"description":"getArmatureDatas()",
"scope":"source.lua"},

"ccs.ArmatureDataManager:removeTextureData(const_std_string_id)":{
"prefix":"ccs.ArmatureDataManager:removeTextureData(const_std_string_id)",
"body":["ccs.ArmatureDataManager:removeTextureData(const_std_string_id)"],
"description":"removeTextureData(const_std_string_id)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:addTextureData(const_std_string_id,TextureData_textureData,const_std_string_configFilePath)":{
"prefix":"ccs.ArmatureDataManager:addTextureData(const_std_string_id,TextureData_textureData,const_std_string_configFilePath)",
"body":["ccs.ArmatureDataManager:addTextureData(const_std_string_id,TextureData_textureData,const_std_string_configFilePath)"],
"description":"addTextureData(const_std_string_id,TextureData_textureData,const_std_string_configFilePath)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:isAutoLoadSpriteFile()":{
"prefix":"ccs.ArmatureDataManager:isAutoLoadSpriteFile()",
"body":["ccs.ArmatureDataManager:isAutoLoadSpriteFile()"],
"description":"isAutoLoadSpriteFile()",
"scope":"source.lua"},

"ccs.ArmatureDataManager:addSpriteFrameFromFile(const_std_string_plistPath,const_std_string_imagePath,const_std_string_configFilePath)":{
"prefix":"ccs.ArmatureDataManager:addSpriteFrameFromFile(const_std_string_plistPath,const_std_string_imagePath,const_std_string_configFilePath)",
"body":["ccs.ArmatureDataManager:addSpriteFrameFromFile(const_std_string_plistPath,const_std_string_imagePath,const_std_string_configFilePath)"],
"description":"addSpriteFrameFromFile(const_std_string_plistPath,const_std_string_imagePath,const_std_string_configFilePath)",
"scope":"source.lua"},

"ccs.ArmatureDataManager:destroyInstance()":{
"prefix":"ccs.ArmatureDataManager:destroyInstance()",
"body":["ccs.ArmatureDataManager:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"ccs.ArmatureDataManager:getInstance()":{
"prefix":"ccs.ArmatureDataManager:getInstance()",
"body":["ccs.ArmatureDataManager:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"ccs.Armature":{
"prefix":"ccs.Armature",
"body":["ccs.Armature"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.Armature:getBone(const_std_string_name)":{
"prefix":"ccs.Armature:getBone(const_std_string_name)",
"body":["ccs.Armature:getBone(const_std_string_name)"],
"description":"getBone(const_std_string_name)",
"scope":"source.lua"},

"ccs.Armature:changeBoneParent(Bone_bone,const_std_string_parentName)":{
"prefix":"ccs.Armature:changeBoneParent(Bone_bone,const_std_string_parentName)",
"body":["ccs.Armature:changeBoneParent(Bone_bone,const_std_string_parentName)"],
"description":"changeBoneParent(Bone_bone,const_std_string_parentName)",
"scope":"source.lua"},

"ccs.Armature:setAnimation(ArmatureAnimation_animation)":{
"prefix":"ccs.Armature:setAnimation(ArmatureAnimation_animation)",
"body":["ccs.Armature:setAnimation(ArmatureAnimation_animation)"],
"description":"setAnimation(ArmatureAnimation_animation)",
"scope":"source.lua"},

"ccs.Armature:getBoneAtPoint(float_x,float_y)":{
"prefix":"ccs.Armature:getBoneAtPoint(float_x,float_y)",
"body":["ccs.Armature:getBoneAtPoint(float_x,float_y)"],
"description":"getBoneAtPoint(float_x,float_y)",
"scope":"source.lua"},

"ccs.Armature:getArmatureTransformDirty()":{
"prefix":"ccs.Armature:getArmatureTransformDirty()",
"body":["ccs.Armature:getArmatureTransformDirty()"],
"description":"getArmatureTransformDirty()",
"scope":"source.lua"},

"ccs.Armature:setVersion(float_version)":{
"prefix":"ccs.Armature:setVersion(float_version)",
"body":["ccs.Armature:setVersion(float_version)"],
"description":"setVersion(float_version)",
"scope":"source.lua"},

"ccs.Armature:updateOffsetPoint()":{
"prefix":"ccs.Armature:updateOffsetPoint()",
"body":["ccs.Armature:updateOffsetPoint()"],
"description":"updateOffsetPoint()",
"scope":"source.lua"},

"ccs.Armature:getParentBone()":{
"prefix":"ccs.Armature:getParentBone()",
"body":["ccs.Armature:getParentBone()"],
"description":"getParentBone()",
"scope":"source.lua"},

"ccs.Armature:removeBone(Bone_bone,bool_recursion)":{
"prefix":"ccs.Armature:removeBone(Bone_bone,bool_recursion)",
"body":["ccs.Armature:removeBone(Bone_bone,bool_recursion)"],
"description":"removeBone(Bone_bone,bool_recursion)",
"scope":"source.lua"},

"ccs.Armature:getBatchNode()":{
"prefix":"ccs.Armature:getBatchNode()",
"body":["ccs.Armature:getBatchNode()"],
"description":"getBatchNode()",
"scope":"source.lua"},

"ccs.Armature:init()":{
"prefix":"ccs.Armature:init()",
"body":["ccs.Armature:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.Armature:init(const_std_string_name)":{
"prefix":"ccs.Armature:init(const_std_string_name)",
"body":["ccs.Armature:init(const_std_string_name)"],
"description":"init(const_std_string_name)",
"scope":"source.lua"},

"ccs.Armature:setParentBone(Bone_parentBone)":{
"prefix":"ccs.Armature:setParentBone(Bone_parentBone)",
"body":["ccs.Armature:setParentBone(Bone_parentBone)"],
"description":"setParentBone(Bone_parentBone)",
"scope":"source.lua"},

"ccs.Armature:setBatchNode(BatchNode_batchNode)":{
"prefix":"ccs.Armature:setBatchNode(BatchNode_batchNode)",
"body":["ccs.Armature:setBatchNode(BatchNode_batchNode)"],
"description":"setBatchNode(BatchNode_batchNode)",
"scope":"source.lua"},

"ccs.Armature:setArmatureData(ArmatureData_armatureData)":{
"prefix":"ccs.Armature:setArmatureData(ArmatureData_armatureData)",
"body":["ccs.Armature:setArmatureData(ArmatureData_armatureData)"],
"description":"setArmatureData(ArmatureData_armatureData)",
"scope":"source.lua"},

"ccs.Armature:addBone(Bone_bone,const_std_string_parentName)":{
"prefix":"ccs.Armature:addBone(Bone_bone,const_std_string_parentName)",
"body":["ccs.Armature:addBone(Bone_bone,const_std_string_parentName)"],
"description":"addBone(Bone_bone,const_std_string_parentName)",
"scope":"source.lua"},

"ccs.Armature:getArmatureData()":{
"prefix":"ccs.Armature:getArmatureData()",
"body":["ccs.Armature:getArmatureData()"],
"description":"getArmatureData()",
"scope":"source.lua"},

"ccs.Armature:getVersion()":{
"prefix":"ccs.Armature:getVersion()",
"body":["ccs.Armature:getVersion()"],
"description":"getVersion()",
"scope":"source.lua"},

"ccs.Armature:getAnimation()":{
"prefix":"ccs.Armature:getAnimation()",
"body":["ccs.Armature:getAnimation()"],
"description":"getAnimation()",
"scope":"source.lua"},

"ccs.Armature:getOffsetPoints()":{
"prefix":"ccs.Armature:getOffsetPoints()",
"body":["ccs.Armature:getOffsetPoints()"],
"description":"getOffsetPoints()",
"scope":"source.lua"},

"ccs.Armature:setBlendFunc(const_cocos2d_BlendFunc_blendFunc)":{
"prefix":"ccs.Armature:setBlendFunc(const_cocos2d_BlendFunc_blendFunc)",
"body":["ccs.Armature:setBlendFunc(const_cocos2d_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_cocos2d_BlendFunc_blendFunc)",
"scope":"source.lua"},

"ccs.Armature:getBoneDic()":{
"prefix":"ccs.Armature:getBoneDic()",
"body":["ccs.Armature:getBoneDic()"],
"description":"getBoneDic()",
"scope":"source.lua"},

"ccs.Armature:create()":{
"prefix":"ccs.Armature:create()",
"body":["ccs.Armature:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.Armature:create(const_std_string_name)":{
"prefix":"ccs.Armature:create(const_std_string_name)",
"body":["ccs.Armature:create(const_std_string_name)"],
"description":"create(const_std_string_name)",
"scope":"source.lua"},

"ccs.Skin":{
"prefix":"ccs.Skin",
"body":["ccs.Skin"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.Skin:getBone()":{
"prefix":"ccs.Skin:getBone()",
"body":["ccs.Skin:getBone()"],
"description":"getBone()",
"scope":"source.lua"},

"ccs.Skin:getNodeToWorldTransformAR()":{
"prefix":"ccs.Skin:getNodeToWorldTransformAR()",
"body":["ccs.Skin:getNodeToWorldTransformAR()"],
"description":"getNodeToWorldTransformAR()",
"scope":"source.lua"},

"ccs.Skin:updateArmatureTransform()":{
"prefix":"ccs.Skin:updateArmatureTransform()",
"body":["ccs.Skin:updateArmatureTransform()"],
"description":"updateArmatureTransform()",
"scope":"source.lua"},

"ccs.Skin:setBone(Bone_bone)":{
"prefix":"ccs.Skin:setBone(Bone_bone)",
"body":["ccs.Skin:setBone(Bone_bone)"],
"description":"setBone(Bone_bone)",
"scope":"source.lua"},

"ccs.Skin:create()":{
"prefix":"ccs.Skin:create()",
"body":["ccs.Skin:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.Skin:create(const_std_string_pszFileName)":{
"prefix":"ccs.Skin:create(const_std_string_pszFileName)",
"body":["ccs.Skin:create(const_std_string_pszFileName)"],
"description":"create(const_std_string_pszFileName)",
"scope":"source.lua"},

"ccs.Skin:createWithSpriteFrameName(const_std_string_pszSpriteFrameName)":{
"prefix":"ccs.Skin:createWithSpriteFrameName(const_std_string_pszSpriteFrameName)",
"body":["ccs.Skin:createWithSpriteFrameName(const_std_string_pszSpriteFrameName)"],
"description":"createWithSpriteFrameName(const_std_string_pszSpriteFrameName)",
"scope":"source.lua"},

"ccs.ComAttribute":{
"prefix":"ccs.ComAttribute",
"body":["ccs.ComAttribute"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ComAttribute:getFloat(const_std_string_key,float_def)":{
"prefix":"ccs.ComAttribute:getFloat(const_std_string_key,float_def)",
"body":["ccs.ComAttribute:getFloat(const_std_string_key,float_def)"],
"description":"getFloat(const_std_string_key,float_def)",
"scope":"source.lua"},

"ccs.ComAttribute:getString(const_std_string_key,const_std_string_def)":{
"prefix":"ccs.ComAttribute:getString(const_std_string_key,const_std_string_def)",
"body":["ccs.ComAttribute:getString(const_std_string_key,const_std_string_def)"],
"description":"getString(const_std_string_key,const_std_string_def)",
"scope":"source.lua"},

"ccs.ComAttribute:setFloat(const_std_string_key,float_value)":{
"prefix":"ccs.ComAttribute:setFloat(const_std_string_key,float_value)",
"body":["ccs.ComAttribute:setFloat(const_std_string_key,float_value)"],
"description":"setFloat(const_std_string_key,float_value)",
"scope":"source.lua"},

"ccs.ComAttribute:setString(const_std_string_key,const_std_string_value)":{
"prefix":"ccs.ComAttribute:setString(const_std_string_key,const_std_string_value)",
"body":["ccs.ComAttribute:setString(const_std_string_key,const_std_string_value)"],
"description":"setString(const_std_string_key,const_std_string_value)",
"scope":"source.lua"},

"ccs.ComAttribute:getBool(const_std_string_key,bool_def)":{
"prefix":"ccs.ComAttribute:getBool(const_std_string_key,bool_def)",
"body":["ccs.ComAttribute:getBool(const_std_string_key,bool_def)"],
"description":"getBool(const_std_string_key,bool_def)",
"scope":"source.lua"},

"ccs.ComAttribute:setInt(const_std_string_key,int_value)":{
"prefix":"ccs.ComAttribute:setInt(const_std_string_key,int_value)",
"body":["ccs.ComAttribute:setInt(const_std_string_key,int_value)"],
"description":"setInt(const_std_string_key,int_value)",
"scope":"source.lua"},

"ccs.ComAttribute:parse(const_std_string_jsonFile)":{
"prefix":"ccs.ComAttribute:parse(const_std_string_jsonFile)",
"body":["ccs.ComAttribute:parse(const_std_string_jsonFile)"],
"description":"parse(const_std_string_jsonFile)",
"scope":"source.lua"},

"ccs.ComAttribute:getInt(const_std_string_key,int_def)":{
"prefix":"ccs.ComAttribute:getInt(const_std_string_key,int_def)",
"body":["ccs.ComAttribute:getInt(const_std_string_key,int_def)"],
"description":"getInt(const_std_string_key,int_def)",
"scope":"source.lua"},

"ccs.ComAttribute:setBool(const_std_string_key,bool_value)":{
"prefix":"ccs.ComAttribute:setBool(const_std_string_key,bool_value)",
"body":["ccs.ComAttribute:setBool(const_std_string_key,bool_value)"],
"description":"setBool(const_std_string_key,bool_value)",
"scope":"source.lua"},

"ccs.ComAttribute:create()":{
"prefix":"ccs.ComAttribute:create()",
"body":["ccs.ComAttribute:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ComAudio":{
"prefix":"ccs.ComAudio",
"body":["ccs.ComAudio"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ComAudio:stopAllEffects()":{
"prefix":"ccs.ComAudio:stopAllEffects()",
"body":["ccs.ComAudio:stopAllEffects()"],
"description":"stopAllEffects()",
"scope":"source.lua"},

"ccs.ComAudio:getEffectsVolume()":{
"prefix":"ccs.ComAudio:getEffectsVolume()",
"body":["ccs.ComAudio:getEffectsVolume()"],
"description":"getEffectsVolume()",
"scope":"source.lua"},

"ccs.ComAudio:stopEffect(unsigned_int_nSoundId)":{
"prefix":"ccs.ComAudio:stopEffect(unsigned_int_nSoundId)",
"body":["ccs.ComAudio:stopEffect(unsigned_int_nSoundId)"],
"description":"stopEffect(unsigned_int_nSoundId)",
"scope":"source.lua"},

"ccs.ComAudio:getBackgroundMusicVolume()":{
"prefix":"ccs.ComAudio:getBackgroundMusicVolume()",
"body":["ccs.ComAudio:getBackgroundMusicVolume()"],
"description":"getBackgroundMusicVolume()",
"scope":"source.lua"},

"ccs.ComAudio:willPlayBackgroundMusic()":{
"prefix":"ccs.ComAudio:willPlayBackgroundMusic()",
"body":["ccs.ComAudio:willPlayBackgroundMusic()"],
"description":"willPlayBackgroundMusic()",
"scope":"source.lua"},

"ccs.ComAudio:setBackgroundMusicVolume(float_volume)":{
"prefix":"ccs.ComAudio:setBackgroundMusicVolume(float_volume)",
"body":["ccs.ComAudio:setBackgroundMusicVolume(float_volume)"],
"description":"setBackgroundMusicVolume(float_volume)",
"scope":"source.lua"},

"ccs.ComAudio:start()":{
"prefix":"ccs.ComAudio:start()",
"body":["ccs.ComAudio:start()"],
"description":"start()",
"scope":"source.lua"},

"ccs.ComAudio:stopBackgroundMusic(bool_bReleaseData)":{
"prefix":"ccs.ComAudio:stopBackgroundMusic(bool_bReleaseData)",
"body":["ccs.ComAudio:stopBackgroundMusic(bool_bReleaseData)"],
"description":"stopBackgroundMusic(bool_bReleaseData)",
"scope":"source.lua"},

"ccs.ComAudio:pauseBackgroundMusic()":{
"prefix":"ccs.ComAudio:pauseBackgroundMusic()",
"body":["ccs.ComAudio:pauseBackgroundMusic()"],
"description":"pauseBackgroundMusic()",
"scope":"source.lua"},

"ccs.ComAudio:isBackgroundMusicPlaying()":{
"prefix":"ccs.ComAudio:isBackgroundMusicPlaying()",
"body":["ccs.ComAudio:isBackgroundMusicPlaying()"],
"description":"isBackgroundMusicPlaying()",
"scope":"source.lua"},

"ccs.ComAudio:isLoop()":{
"prefix":"ccs.ComAudio:isLoop()",
"body":["ccs.ComAudio:isLoop()"],
"description":"isLoop()",
"scope":"source.lua"},

"ccs.ComAudio:resumeAllEffects()":{
"prefix":"ccs.ComAudio:resumeAllEffects()",
"body":["ccs.ComAudio:resumeAllEffects()"],
"description":"resumeAllEffects()",
"scope":"source.lua"},

"ccs.ComAudio:pauseAllEffects()":{
"prefix":"ccs.ComAudio:pauseAllEffects()",
"body":["ccs.ComAudio:pauseAllEffects()"],
"description":"pauseAllEffects()",
"scope":"source.lua"},

"ccs.ComAudio:preloadBackgroundMusic(const_char_pszFilePath)":{
"prefix":"ccs.ComAudio:preloadBackgroundMusic(const_char_pszFilePath)",
"body":["ccs.ComAudio:preloadBackgroundMusic(const_char_pszFilePath)"],
"description":"preloadBackgroundMusic(const_char_pszFilePath)",
"scope":"source.lua"},

"ccs.ComAudio:playBackgroundMusic(const_char_pszFilePath,bool_bLoop)":{
"prefix":"ccs.ComAudio:playBackgroundMusic(const_char_pszFilePath,bool_bLoop)",
"body":["ccs.ComAudio:playBackgroundMusic(const_char_pszFilePath,bool_bLoop)"],
"description":"playBackgroundMusic(const_char_pszFilePath,bool_bLoop)",
"scope":"source.lua"},

"ccs.ComAudio:playBackgroundMusic()":{
"prefix":"ccs.ComAudio:playBackgroundMusic()",
"body":["ccs.ComAudio:playBackgroundMusic()"],
"description":"playBackgroundMusic()",
"scope":"source.lua"},

"ccs.ComAudio:stop()":{
"prefix":"ccs.ComAudio:stop()",
"body":["ccs.ComAudio:stop()"],
"description":"stop()",
"scope":"source.lua"},

"ccs.ComAudio:playEffect(const_char_pszFilePath,bool_bLoop)":{
"prefix":"ccs.ComAudio:playEffect(const_char_pszFilePath,bool_bLoop)",
"body":["ccs.ComAudio:playEffect(const_char_pszFilePath,bool_bLoop)"],
"description":"playEffect(const_char_pszFilePath,bool_bLoop)",
"scope":"source.lua"},

"ccs.ComAudio:playEffect()":{
"prefix":"ccs.ComAudio:playEffect()",
"body":["ccs.ComAudio:playEffect()"],
"description":"playEffect()",
"scope":"source.lua"},

"ccs.ComAudio:preloadEffect(const_char_pszFilePath)":{
"prefix":"ccs.ComAudio:preloadEffect(const_char_pszFilePath)",
"body":["ccs.ComAudio:preloadEffect(const_char_pszFilePath)"],
"description":"preloadEffect(const_char_pszFilePath)",
"scope":"source.lua"},

"ccs.ComAudio:setLoop(bool_bLoop)":{
"prefix":"ccs.ComAudio:setLoop(bool_bLoop)",
"body":["ccs.ComAudio:setLoop(bool_bLoop)"],
"description":"setLoop(bool_bLoop)",
"scope":"source.lua"},

"ccs.ComAudio:unloadEffect(const_char_pszFilePath)":{
"prefix":"ccs.ComAudio:unloadEffect(const_char_pszFilePath)",
"body":["ccs.ComAudio:unloadEffect(const_char_pszFilePath)"],
"description":"unloadEffect(const_char_pszFilePath)",
"scope":"source.lua"},

"ccs.ComAudio:rewindBackgroundMusic()":{
"prefix":"ccs.ComAudio:rewindBackgroundMusic()",
"body":["ccs.ComAudio:rewindBackgroundMusic()"],
"description":"rewindBackgroundMusic()",
"scope":"source.lua"},

"ccs.ComAudio:pauseEffect(unsigned_int_nSoundId)":{
"prefix":"ccs.ComAudio:pauseEffect(unsigned_int_nSoundId)",
"body":["ccs.ComAudio:pauseEffect(unsigned_int_nSoundId)"],
"description":"pauseEffect(unsigned_int_nSoundId)",
"scope":"source.lua"},

"ccs.ComAudio:resumeBackgroundMusic()":{
"prefix":"ccs.ComAudio:resumeBackgroundMusic()",
"body":["ccs.ComAudio:resumeBackgroundMusic()"],
"description":"resumeBackgroundMusic()",
"scope":"source.lua"},

"ccs.ComAudio:setFile(const_char_pszFilePath)":{
"prefix":"ccs.ComAudio:setFile(const_char_pszFilePath)",
"body":["ccs.ComAudio:setFile(const_char_pszFilePath)"],
"description":"setFile(const_char_pszFilePath)",
"scope":"source.lua"},

"ccs.ComAudio:setEffectsVolume(float_volume)":{
"prefix":"ccs.ComAudio:setEffectsVolume(float_volume)",
"body":["ccs.ComAudio:setEffectsVolume(float_volume)"],
"description":"setEffectsVolume(float_volume)",
"scope":"source.lua"},

"ccs.ComAudio:getFile()":{
"prefix":"ccs.ComAudio:getFile()",
"body":["ccs.ComAudio:getFile()"],
"description":"getFile()",
"scope":"source.lua"},

"ccs.ComAudio:resumeEffect(unsigned_int_nSoundId)":{
"prefix":"ccs.ComAudio:resumeEffect(unsigned_int_nSoundId)",
"body":["ccs.ComAudio:resumeEffect(unsigned_int_nSoundId)"],
"description":"resumeEffect(unsigned_int_nSoundId)",
"scope":"source.lua"},

"ccs.ComAudio:create()":{
"prefix":"ccs.ComAudio:create()",
"body":["ccs.ComAudio:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ComController":{
"prefix":"ccs.ComController",
"body":["ccs.ComController"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ComController:create()":{
"prefix":"ccs.ComController:create()",
"body":["ccs.ComController:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ComRender":{
"prefix":"ccs.ComRender",
"body":["ccs.ComRender"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ComRender:setNode(cocos2d_Node_node)":{
"prefix":"ccs.ComRender:setNode(cocos2d_Node_node)",
"body":["ccs.ComRender:setNode(cocos2d_Node_node)"],
"description":"setNode(cocos2d_Node_node)",
"scope":"source.lua"},

"ccs.ComRender:getNode()":{
"prefix":"ccs.ComRender:getNode()",
"body":["ccs.ComRender:getNode()"],
"description":"getNode()",
"scope":"source.lua"},

"ccs.ComRender:create()":{
"prefix":"ccs.ComRender:create()",
"body":["ccs.ComRender:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.GUIReader":{
"prefix":"ccs.GUIReader",
"body":["ccs.GUIReader"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.GUIReader:setFilePath(const_std_string_strFilePath)":{
"prefix":"ccs.GUIReader:setFilePath(const_std_string_strFilePath)",
"body":["ccs.GUIReader:setFilePath(const_std_string_strFilePath)"],
"description":"setFilePath(const_std_string_strFilePath)",
"scope":"source.lua"},

"ccs.GUIReader:widgetFromJsonFile(const_char_fileName)":{
"prefix":"ccs.GUIReader:widgetFromJsonFile(const_char_fileName)",
"body":["ccs.GUIReader:widgetFromJsonFile(const_char_fileName)"],
"description":"widgetFromJsonFile(const_char_fileName)",
"scope":"source.lua"},

"ccs.GUIReader:getFilePath()":{
"prefix":"ccs.GUIReader:getFilePath()",
"body":["ccs.GUIReader:getFilePath()"],
"description":"getFilePath()",
"scope":"source.lua"},

"ccs.GUIReader:widgetFromBinaryFile(const_char_fileName)":{
"prefix":"ccs.GUIReader:widgetFromBinaryFile(const_char_fileName)",
"body":["ccs.GUIReader:widgetFromBinaryFile(const_char_fileName)"],
"description":"widgetFromBinaryFile(const_char_fileName)",
"scope":"source.lua"},

"ccs.GUIReader:getVersionInteger(const_char_str)":{
"prefix":"ccs.GUIReader:getVersionInteger(const_char_str)",
"body":["ccs.GUIReader:getVersionInteger(const_char_str)"],
"description":"getVersionInteger(const_char_str)",
"scope":"source.lua"},

"ccs.GUIReader:destroyInstance()":{
"prefix":"ccs.GUIReader:destroyInstance()",
"body":["ccs.GUIReader:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"ccs.GUIReader:getInstance()":{
"prefix":"ccs.GUIReader:getInstance()",
"body":["ccs.GUIReader:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"ccs.SceneReader":{
"prefix":"ccs.SceneReader",
"body":["ccs.SceneReader"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.SceneReader:setTarget()":{
"prefix":"ccs.SceneReader:setTarget()",
"body":["ccs.SceneReader:setTarget()"],
"description":"setTarget()",
"scope":"source.lua"},

"ccs.SceneReader:createNodeWithSceneFile(const_std_string_fileName,AttachComponentType_attachComponent)":{
"prefix":"ccs.SceneReader:createNodeWithSceneFile(const_std_string_fileName,AttachComponentType_attachComponent)",
"body":["ccs.SceneReader:createNodeWithSceneFile(const_std_string_fileName,AttachComponentType_attachComponent)"],
"description":"createNodeWithSceneFile(const_std_string_fileName,AttachComponentType_attachComponent)",
"scope":"source.lua"},

"ccs.SceneReader:getAttachComponentType()":{
"prefix":"ccs.SceneReader:getAttachComponentType()",
"body":["ccs.SceneReader:getAttachComponentType()"],
"description":"getAttachComponentType()",
"scope":"source.lua"},

"ccs.SceneReader:getNodeByTag(int_nTag)":{
"prefix":"ccs.SceneReader:getNodeByTag(int_nTag)",
"body":["ccs.SceneReader:getNodeByTag(int_nTag)"],
"description":"getNodeByTag(int_nTag)",
"scope":"source.lua"},

"ccs.SceneReader:destroyInstance()":{
"prefix":"ccs.SceneReader:destroyInstance()",
"body":["ccs.SceneReader:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"ccs.SceneReader:sceneReaderVersion()":{
"prefix":"ccs.SceneReader:sceneReaderVersion()",
"body":["ccs.SceneReader:sceneReaderVersion()"],
"description":"sceneReaderVersion()",
"scope":"source.lua"},

"ccs.SceneReader:getInstance()":{
"prefix":"ccs.SceneReader:getInstance()",
"body":["ccs.SceneReader:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"ccs.ActionTimelineCache":{
"prefix":"ccs.ActionTimelineCache",
"body":["ccs.ActionTimelineCache"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionTimelineCache:createActionFromJson(const_std_string_fileName)":{
"prefix":"ccs.ActionTimelineCache:createActionFromJson(const_std_string_fileName)",
"body":["ccs.ActionTimelineCache:createActionFromJson(const_std_string_fileName)"],
"description":"createActionFromJson(const_std_string_fileName)",
"scope":"source.lua"},

"ccs.ActionTimelineCache:createActionWithFlatBuffersFile(const_std_string_fileName)":{
"prefix":"ccs.ActionTimelineCache:createActionWithFlatBuffersFile(const_std_string_fileName)",
"body":["ccs.ActionTimelineCache:createActionWithFlatBuffersFile(const_std_string_fileName)"],
"description":"createActionWithFlatBuffersFile(const_std_string_fileName)",
"scope":"source.lua"},

"ccs.ActionTimelineCache:loadAnimationActionWithFlatBuffersFile(const_std_string_fileName)":{
"prefix":"ccs.ActionTimelineCache:loadAnimationActionWithFlatBuffersFile(const_std_string_fileName)",
"body":["ccs.ActionTimelineCache:loadAnimationActionWithFlatBuffersFile(const_std_string_fileName)"],
"description":"loadAnimationActionWithFlatBuffersFile(const_std_string_fileName)",
"scope":"source.lua"},

"ccs.ActionTimelineCache:createActionFromContent(const_std_string_fileName,const_std_string_content)":{
"prefix":"ccs.ActionTimelineCache:createActionFromContent(const_std_string_fileName,const_std_string_content)",
"body":["ccs.ActionTimelineCache:createActionFromContent(const_std_string_fileName,const_std_string_content)"],
"description":"createActionFromContent(const_std_string_fileName,const_std_string_content)",
"scope":"source.lua"},

"ccs.ActionTimelineCache:purge()":{
"prefix":"ccs.ActionTimelineCache:purge()",
"body":["ccs.ActionTimelineCache:purge()"],
"description":"purge()",
"scope":"source.lua"},

"ccs.ActionTimelineCache:init()":{
"prefix":"ccs.ActionTimelineCache:init()",
"body":["ccs.ActionTimelineCache:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.ActionTimelineCache:loadAnimationActionWithContent(const_std_stringfileName,const_std_string_content)":{
"prefix":"ccs.ActionTimelineCache:loadAnimationActionWithContent(const_std_stringfileName,const_std_string_content)",
"body":["ccs.ActionTimelineCache:loadAnimationActionWithContent(const_std_stringfileName,const_std_string_content)"],
"description":"loadAnimationActionWithContent(const_std_stringfileName,const_std_string_content)",
"scope":"source.lua"},

"ccs.ActionTimelineCache:loadAnimationActionWithFile(const_std_string_fileName)":{
"prefix":"ccs.ActionTimelineCache:loadAnimationActionWithFile(const_std_string_fileName)",
"body":["ccs.ActionTimelineCache:loadAnimationActionWithFile(const_std_string_fileName)"],
"description":"loadAnimationActionWithFile(const_std_string_fileName)",
"scope":"source.lua"},

"ccs.ActionTimelineCache:removeAction(const_std_string_fileName)":{
"prefix":"ccs.ActionTimelineCache:removeAction(const_std_string_fileName)",
"body":["ccs.ActionTimelineCache:removeAction(const_std_string_fileName)"],
"description":"removeAction(const_std_string_fileName)",
"scope":"source.lua"},

"ccs.ActionTimelineCache:createActionWithFlatBuffersForSimulator(const_std_string_fileName)":{
"prefix":"ccs.ActionTimelineCache:createActionWithFlatBuffersForSimulator(const_std_string_fileName)",
"body":["ccs.ActionTimelineCache:createActionWithFlatBuffersForSimulator(const_std_string_fileName)"],
"description":"createActionWithFlatBuffersForSimulator(const_std_string_fileName)",
"scope":"source.lua"},

"ccs.ActionTimelineCache:destroyInstance()":{
"prefix":"ccs.ActionTimelineCache:destroyInstance()",
"body":["ccs.ActionTimelineCache:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"ccs.ActionTimelineCache:createAction(const_std_string_fileName)":{
"prefix":"ccs.ActionTimelineCache:createAction(const_std_string_fileName)",
"body":["ccs.ActionTimelineCache:createAction(const_std_string_fileName)"],
"description":"createAction(const_std_string_fileName)",
"scope":"source.lua"},

"ccs.Frame":{
"prefix":"ccs.Frame",
"body":["ccs.Frame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.Frame:clone()":{
"prefix":"ccs.Frame:clone()",
"body":["ccs.Frame:clone()"],
"description":"clone()",
"scope":"source.lua"},

"ccs.Frame:setTweenType()":{
"prefix":"ccs.Frame:setTweenType()",
"body":["ccs.Frame:setTweenType()"],
"description":"setTweenType()",
"scope":"source.lua"},

"ccs.Frame:setNode()":{
"prefix":"ccs.Frame:setNode()",
"body":["ccs.Frame:setNode()"],
"description":"setNode()",
"scope":"source.lua"},

"ccs.Frame:setTimeline()":{
"prefix":"ccs.Frame:setTimeline()",
"body":["ccs.Frame:setTimeline()"],
"description":"setTimeline()",
"scope":"source.lua"},

"ccs.Frame:isEnterWhenPassed()":{
"prefix":"ccs.Frame:isEnterWhenPassed()",
"body":["ccs.Frame:isEnterWhenPassed()"],
"description":"isEnterWhenPassed()",
"scope":"source.lua"},

"ccs.Frame:getTweenType()":{
"prefix":"ccs.Frame:getTweenType()",
"body":["ccs.Frame:getTweenType()"],
"description":"getTweenType()",
"scope":"source.lua"},

"ccs.Frame:getEasingParams()":{
"prefix":"ccs.Frame:getEasingParams()",
"body":["ccs.Frame:getEasingParams()"],
"description":"getEasingParams()",
"scope":"source.lua"},

"ccs.Frame:setEasingParams()":{
"prefix":"ccs.Frame:setEasingParams()",
"body":["ccs.Frame:setEasingParams()"],
"description":"setEasingParams()",
"scope":"source.lua"},

"ccs.Frame:getFrameIndex()":{
"prefix":"ccs.Frame:getFrameIndex()",
"body":["ccs.Frame:getFrameIndex()"],
"description":"getFrameIndex()",
"scope":"source.lua"},

"ccs.Frame:apply()":{
"prefix":"ccs.Frame:apply()",
"body":["ccs.Frame:apply()"],
"description":"apply()",
"scope":"source.lua"},

"ccs.Frame:isTween()":{
"prefix":"ccs.Frame:isTween()",
"body":["ccs.Frame:isTween()"],
"description":"isTween()",
"scope":"source.lua"},

"ccs.Frame:setFrameIndex()":{
"prefix":"ccs.Frame:setFrameIndex()",
"body":["ccs.Frame:setFrameIndex()"],
"description":"setFrameIndex()",
"scope":"source.lua"},

"ccs.Frame:setTween()":{
"prefix":"ccs.Frame:setTween()",
"body":["ccs.Frame:setTween()"],
"description":"setTween()",
"scope":"source.lua"},

"ccs.Frame:getTimeline()":{
"prefix":"ccs.Frame:getTimeline()",
"body":["ccs.Frame:getTimeline()"],
"description":"getTimeline()",
"scope":"source.lua"},

"ccs.Frame:getNode()":{
"prefix":"ccs.Frame:getNode()",
"body":["ccs.Frame:getNode()"],
"description":"getNode()",
"scope":"source.lua"},

"ccs.VisibleFrame":{
"prefix":"ccs.VisibleFrame",
"body":["ccs.VisibleFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.VisibleFrame:isVisible()":{
"prefix":"ccs.VisibleFrame:isVisible()",
"body":["ccs.VisibleFrame:isVisible()"],
"description":"isVisible()",
"scope":"source.lua"},

"ccs.VisibleFrame:setVisible(bool_visible)":{
"prefix":"ccs.VisibleFrame:setVisible(bool_visible)",
"body":["ccs.VisibleFrame:setVisible(bool_visible)"],
"description":"setVisible(bool_visible)",
"scope":"source.lua"},

"ccs.VisibleFrame:create()":{
"prefix":"ccs.VisibleFrame:create()",
"body":["ccs.VisibleFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.TextureFrame":{
"prefix":"ccs.TextureFrame",
"body":["ccs.TextureFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.TextureFrame:new()":{
"prefix":"ccs.TextureFrame:new()",
"body":["ccs.TextureFrame:new()"],
"description":"new()",
"scope":"source.lua"},

"ccs.TextureFrame:getTextureName()":{
"prefix":"ccs.TextureFrame:getTextureName()",
"body":["ccs.TextureFrame:getTextureName()"],
"description":"getTextureName()",
"scope":"source.lua"},

"ccs.TextureFrame:setTextureName()":{
"prefix":"ccs.TextureFrame:setTextureName()",
"body":["ccs.TextureFrame:setTextureName()"],
"description":"setTextureName()",
"scope":"source.lua"},

"ccs.TextureFrame:create()":{
"prefix":"ccs.TextureFrame:create()",
"body":["ccs.TextureFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.RotationFrame":{
"prefix":"ccs.RotationFrame",
"body":["ccs.RotationFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.RotationFrame:setRotation(float_rotation)":{
"prefix":"ccs.RotationFrame:setRotation(float_rotation)",
"body":["ccs.RotationFrame:setRotation(float_rotation)"],
"description":"setRotation(float_rotation)",
"scope":"source.lua"},

"ccs.RotationFrame:getRotation()":{
"prefix":"ccs.RotationFrame:getRotation()",
"body":["ccs.RotationFrame:getRotation()"],
"description":"getRotation()",
"scope":"source.lua"},

"ccs.RotationFrame:create()":{
"prefix":"ccs.RotationFrame:create()",
"body":["ccs.RotationFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.SkewFrame":{
"prefix":"ccs.SkewFrame",
"body":["ccs.SkewFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.SkewFrame:getSkewY()":{
"prefix":"ccs.SkewFrame:getSkewY()",
"body":["ccs.SkewFrame:getSkewY()"],
"description":"getSkewY()",
"scope":"source.lua"},

"ccs.SkewFrame:setSkewX(float_skewx)":{
"prefix":"ccs.SkewFrame:setSkewX(float_skewx)",
"body":["ccs.SkewFrame:setSkewX(float_skewx)"],
"description":"setSkewX(float_skewx)",
"scope":"source.lua"},

"ccs.SkewFrame:setSkewY(float_skewy)":{
"prefix":"ccs.SkewFrame:setSkewY(float_skewy)",
"body":["ccs.SkewFrame:setSkewY(float_skewy)"],
"description":"setSkewY(float_skewy)",
"scope":"source.lua"},

"ccs.SkewFrame:getSkewX()":{
"prefix":"ccs.SkewFrame:getSkewX()",
"body":["ccs.SkewFrame:getSkewX()"],
"description":"getSkewX()",
"scope":"source.lua"},

"ccs.SkewFrame:create()":{
"prefix":"ccs.SkewFrame:create()",
"body":["ccs.SkewFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.RotationSkewFrame":{
"prefix":"ccs.RotationSkewFrame",
"body":["ccs.RotationSkewFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.RotationSkewFrame:create()":{
"prefix":"ccs.RotationSkewFrame:create()",
"body":["ccs.RotationSkewFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.PositionFrame":{
"prefix":"ccs.PositionFrame",
"body":["ccs.PositionFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.PositionFrame:getX()":{
"prefix":"ccs.PositionFrame:getX()",
"body":["ccs.PositionFrame:getX()"],
"description":"getX()",
"scope":"source.lua"},

"ccs.PositionFrame:getY()":{
"prefix":"ccs.PositionFrame:getY()",
"body":["ccs.PositionFrame:getY()"],
"description":"getY()",
"scope":"source.lua"},

"ccs.PositionFrame:setPosition(const_cocos2d_Point_position)":{
"prefix":"ccs.PositionFrame:setPosition(const_cocos2d_Point_position)",
"body":["ccs.PositionFrame:setPosition(const_cocos2d_Point_position)"],
"description":"setPosition(const_cocos2d_Point_position)",
"scope":"source.lua"},

"ccs.PositionFrame:setX(float_x)":{
"prefix":"ccs.PositionFrame:setX(float_x)",
"body":["ccs.PositionFrame:setX(float_x)"],
"description":"setX(float_x)",
"scope":"source.lua"},

"ccs.PositionFrame:setY(float_y)":{
"prefix":"ccs.PositionFrame:setY(float_y)",
"body":["ccs.PositionFrame:setY(float_y)"],
"description":"setY(float_y)",
"scope":"source.lua"},

"ccs.PositionFrame:getPosition()":{
"prefix":"ccs.PositionFrame:getPosition()",
"body":["ccs.PositionFrame:getPosition()"],
"description":"getPosition()",
"scope":"source.lua"},

"ccs.PositionFrame:create()":{
"prefix":"ccs.PositionFrame:create()",
"body":["ccs.PositionFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ScaleFrame":{
"prefix":"ccs.ScaleFrame",
"body":["ccs.ScaleFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ScaleFrame:new()":{
"prefix":"ccs.ScaleFrame:new()",
"body":["ccs.ScaleFrame:new()"],
"description":"new()",
"scope":"source.lua"},

"ccs.ScaleFrame:setScaleY()":{
"prefix":"ccs.ScaleFrame:setScaleY()",
"body":["ccs.ScaleFrame:setScaleY()"],
"description":"setScaleY()",
"scope":"source.lua"},

"ccs.ScaleFrame:setScaleX()":{
"prefix":"ccs.ScaleFrame:setScaleX()",
"body":["ccs.ScaleFrame:setScaleX()"],
"description":"setScaleX()",
"scope":"source.lua"},

"ccs.ScaleFrame:getScaleY()":{
"prefix":"ccs.ScaleFrame:getScaleY()",
"body":["ccs.ScaleFrame:getScaleY()"],
"description":"getScaleY()",
"scope":"source.lua"},

"ccs.ScaleFrame:getScaleX()":{
"prefix":"ccs.ScaleFrame:getScaleX()",
"body":["ccs.ScaleFrame:getScaleX()"],
"description":"getScaleX()",
"scope":"source.lua"},

"ccs.ScaleFrame:setScale()":{
"prefix":"ccs.ScaleFrame:setScale()",
"body":["ccs.ScaleFrame:setScale()"],
"description":"setScale()",
"scope":"source.lua"},

"ccs.ScaleFrame:create()":{
"prefix":"ccs.ScaleFrame:create()",
"body":["ccs.ScaleFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.AnchorPointFrame":{
"prefix":"ccs.AnchorPointFrame",
"body":["ccs.AnchorPointFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.AnchorPointFrame:setAnchorPoint(const_cocos2d_Point_point)":{
"prefix":"ccs.AnchorPointFrame:setAnchorPoint(const_cocos2d_Point_point)",
"body":["ccs.AnchorPointFrame:setAnchorPoint(const_cocos2d_Point_point)"],
"description":"setAnchorPoint(const_cocos2d_Point_point)",
"scope":"source.lua"},

"ccs.AnchorPointFrame:getAnchorPoint()":{
"prefix":"ccs.AnchorPointFrame:getAnchorPoint()",
"body":["ccs.AnchorPointFrame:getAnchorPoint()"],
"description":"getAnchorPoint()",
"scope":"source.lua"},

"ccs.AnchorPointFrame:create()":{
"prefix":"ccs.AnchorPointFrame:create()",
"body":["ccs.AnchorPointFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.InnerActionFrame":{
"prefix":"ccs.InnerActionFrame",
"body":["ccs.InnerActionFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.InnerActionFrame:new()":{
"prefix":"ccs.InnerActionFrame:new()",
"body":["ccs.InnerActionFrame:new()"],
"description":"new()",
"scope":"source.lua"},

"ccs.InnerActionFrame:getEndFrameIndex()":{
"prefix":"ccs.InnerActionFrame:getEndFrameIndex()",
"body":["ccs.InnerActionFrame:getEndFrameIndex()"],
"description":"getEndFrameIndex()",
"scope":"source.lua"},

"ccs.InnerActionFrame:getStartFrameIndex()":{
"prefix":"ccs.InnerActionFrame:getStartFrameIndex()",
"body":["ccs.InnerActionFrame:getStartFrameIndex()"],
"description":"getStartFrameIndex()",
"scope":"source.lua"},

"ccs.InnerActionFrame:getInnerActionType()":{
"prefix":"ccs.InnerActionFrame:getInnerActionType()",
"body":["ccs.InnerActionFrame:getInnerActionType()"],
"description":"getInnerActionType()",
"scope":"source.lua"},

"ccs.InnerActionFrame:setEndFrameIndex()":{
"prefix":"ccs.InnerActionFrame:setEndFrameIndex()",
"body":["ccs.InnerActionFrame:setEndFrameIndex()"],
"description":"setEndFrameIndex()",
"scope":"source.lua"},

"ccs.InnerActionFrame:setEnterWithName()":{
"prefix":"ccs.InnerActionFrame:setEnterWithName()",
"body":["ccs.InnerActionFrame:setEnterWithName()"],
"description":"setEnterWithName()",
"scope":"source.lua"},

"ccs.InnerActionFrame:setSingleFrameIndex()":{
"prefix":"ccs.InnerActionFrame:setSingleFrameIndex()",
"body":["ccs.InnerActionFrame:setSingleFrameIndex()"],
"description":"setSingleFrameIndex()",
"scope":"source.lua"},

"ccs.InnerActionFrame:setStartFrameIndex()":{
"prefix":"ccs.InnerActionFrame:setStartFrameIndex()",
"body":["ccs.InnerActionFrame:setStartFrameIndex()"],
"description":"setStartFrameIndex()",
"scope":"source.lua"},

"ccs.InnerActionFrame:getSingleFrameIndex()":{
"prefix":"ccs.InnerActionFrame:getSingleFrameIndex()",
"body":["ccs.InnerActionFrame:getSingleFrameIndex()"],
"description":"getSingleFrameIndex()",
"scope":"source.lua"},

"ccs.InnerActionFrame:setInnerActionType()":{
"prefix":"ccs.InnerActionFrame:setInnerActionType()",
"body":["ccs.InnerActionFrame:setInnerActionType()"],
"description":"setInnerActionType()",
"scope":"source.lua"},

"ccs.InnerActionFrame:setAnimationName()":{
"prefix":"ccs.InnerActionFrame:setAnimationName()",
"body":["ccs.InnerActionFrame:setAnimationName()"],
"description":"setAnimationName()",
"scope":"source.lua"},

"ccs.InnerActionFrame:create()":{
"prefix":"ccs.InnerActionFrame:create()",
"body":["ccs.InnerActionFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ColorFrame":{
"prefix":"ccs.ColorFrame",
"body":["ccs.ColorFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ColorFrame:new()":{
"prefix":"ccs.ColorFrame:new()",
"body":["ccs.ColorFrame:new()"],
"description":"new()",
"scope":"source.lua"},

"ccs.ColorFrame:getColor()":{
"prefix":"ccs.ColorFrame:getColor()",
"body":["ccs.ColorFrame:getColor()"],
"description":"getColor()",
"scope":"source.lua"},

"ccs.ColorFrame:setColor()":{
"prefix":"ccs.ColorFrame:setColor()",
"body":["ccs.ColorFrame:setColor()"],
"description":"setColor()",
"scope":"source.lua"},

"ccs.ColorFrame:create()":{
"prefix":"ccs.ColorFrame:create()",
"body":["ccs.ColorFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.AlphaFrame":{
"prefix":"ccs.AlphaFrame",
"body":["ccs.AlphaFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.AlphaFrame:getAlpha()":{
"prefix":"ccs.AlphaFrame:getAlpha()",
"body":["ccs.AlphaFrame:getAlpha()"],
"description":"getAlpha()",
"scope":"source.lua"},

"ccs.AlphaFrame:setAlpha(GLubyte_alpha)":{
"prefix":"ccs.AlphaFrame:setAlpha(GLubyte_alpha)",
"body":["ccs.AlphaFrame:setAlpha(GLubyte_alpha)"],
"description":"setAlpha(GLubyte_alpha)",
"scope":"source.lua"},

"ccs.AlphaFrame:create()":{
"prefix":"ccs.AlphaFrame:create()",
"body":["ccs.AlphaFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.EventFrame":{
"prefix":"ccs.EventFrame",
"body":["ccs.EventFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.EventFrame:new()":{
"prefix":"ccs.EventFrame:new()",
"body":["ccs.EventFrame:new()"],
"description":"new()",
"scope":"source.lua"},

"ccs.EventFrame:setEvent()":{
"prefix":"ccs.EventFrame:setEvent()",
"body":["ccs.EventFrame:setEvent()"],
"description":"setEvent()",
"scope":"source.lua"},

"ccs.EventFrame:init()":{
"prefix":"ccs.EventFrame:init()",
"body":["ccs.EventFrame:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.EventFrame:getEvent()":{
"prefix":"ccs.EventFrame:getEvent()",
"body":["ccs.EventFrame:getEvent()"],
"description":"getEvent()",
"scope":"source.lua"},

"ccs.EventFrame:create()":{
"prefix":"ccs.EventFrame:create()",
"body":["ccs.EventFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ZOrderFrame":{
"prefix":"ccs.ZOrderFrame",
"body":["ccs.ZOrderFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ZOrderFrame:getZOrder()":{
"prefix":"ccs.ZOrderFrame:getZOrder()",
"body":["ccs.ZOrderFrame:getZOrder()"],
"description":"getZOrder()",
"scope":"source.lua"},

"ccs.ZOrderFrame:setZOrder(int_zorder)":{
"prefix":"ccs.ZOrderFrame:setZOrder(int_zorder)",
"body":["ccs.ZOrderFrame:setZOrder(int_zorder)"],
"description":"setZOrder(int_zorder)",
"scope":"source.lua"},

"ccs.ZOrderFrame:create()":{
"prefix":"ccs.ZOrderFrame:create()",
"body":["ccs.ZOrderFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.BlendFuncFrame":{
"prefix":"ccs.BlendFuncFrame",
"body":["ccs.BlendFuncFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.BlendFuncFrame:getBlendFunc()":{
"prefix":"ccs.BlendFuncFrame:getBlendFunc()",
"body":["ccs.BlendFuncFrame:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"ccs.BlendFuncFrame:setBlendFunc(cocos2d_BlendFunc_blendFunc)":{
"prefix":"ccs.BlendFuncFrame:setBlendFunc(cocos2d_BlendFunc_blendFunc)",
"body":["ccs.BlendFuncFrame:setBlendFunc(cocos2d_BlendFunc_blendFunc)"],
"description":"setBlendFunc(cocos2d_BlendFunc_blendFunc)",
"scope":"source.lua"},

"ccs.BlendFuncFrame:create()":{
"prefix":"ccs.BlendFuncFrame:create()",
"body":["ccs.BlendFuncFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.PlayableFrame":{
"prefix":"ccs.PlayableFrame",
"body":["ccs.PlayableFrame"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.PlayableFrame:setPlayableAct(std_string_playact)":{
"prefix":"ccs.PlayableFrame:setPlayableAct(std_string_playact)",
"body":["ccs.PlayableFrame:setPlayableAct(std_string_playact)"],
"description":"setPlayableAct(std_string_playact)",
"scope":"source.lua"},

"ccs.PlayableFrame:getPlayableAct()":{
"prefix":"ccs.PlayableFrame:getPlayableAct()",
"body":["ccs.PlayableFrame:getPlayableAct()"],
"description":"getPlayableAct()",
"scope":"source.lua"},

"ccs.PlayableFrame:create()":{
"prefix":"ccs.PlayableFrame:create()",
"body":["ccs.PlayableFrame:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.Timeline":{
"prefix":"ccs.Timeline",
"body":["ccs.Timeline"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.Timeline:clone()":{
"prefix":"ccs.Timeline:clone()",
"body":["ccs.Timeline:clone()"],
"description":"clone()",
"scope":"source.lua"},

"ccs.Timeline:gotoFrame(int_frameIndex)":{
"prefix":"ccs.Timeline:gotoFrame(int_frameIndex)",
"body":["ccs.Timeline:gotoFrame(int_frameIndex)"],
"description":"gotoFrame(int_frameIndex)",
"scope":"source.lua"},

"ccs.Timeline:setNode(cocos2d_Node_node)":{
"prefix":"ccs.Timeline:setNode(cocos2d_Node_node)",
"body":["ccs.Timeline:setNode(cocos2d_Node_node)"],
"description":"setNode(cocos2d_Node_node)",
"scope":"source.lua"},

"ccs.Timeline:getActionTimeline()":{
"prefix":"ccs.Timeline:getActionTimeline()",
"body":["ccs.Timeline:getActionTimeline()"],
"description":"getActionTimeline()",
"scope":"source.lua"},

"ccs.Timeline:insertFrame(Frame_frame,int_index)":{
"prefix":"ccs.Timeline:insertFrame(Frame_frame,int_index)",
"body":["ccs.Timeline:insertFrame(Frame_frame,int_index)"],
"description":"insertFrame(Frame_frame,int_index)",
"scope":"source.lua"},

"ccs.Timeline:setActionTag(int_tag)":{
"prefix":"ccs.Timeline:setActionTag(int_tag)",
"body":["ccs.Timeline:setActionTag(int_tag)"],
"description":"setActionTag(int_tag)",
"scope":"source.lua"},

"ccs.Timeline:addFrame(Frame_frame)":{
"prefix":"ccs.Timeline:addFrame(Frame_frame)",
"body":["ccs.Timeline:addFrame(Frame_frame)"],
"description":"addFrame(Frame_frame)",
"scope":"source.lua"},

"ccs.Timeline:getFrames()":{
"prefix":"ccs.Timeline:getFrames()",
"body":["ccs.Timeline:getFrames()"],
"description":"getFrames()",
"scope":"source.lua"},

"ccs.Timeline:getActionTag()":{
"prefix":"ccs.Timeline:getActionTag()",
"body":["ccs.Timeline:getActionTag()"],
"description":"getActionTag()",
"scope":"source.lua"},

"ccs.Timeline:getNode()":{
"prefix":"ccs.Timeline:getNode()",
"body":["ccs.Timeline:getNode()"],
"description":"getNode()",
"scope":"source.lua"},

"ccs.Timeline:removeFrame(Frame_frame)":{
"prefix":"ccs.Timeline:removeFrame(Frame_frame)",
"body":["ccs.Timeline:removeFrame(Frame_frame)"],
"description":"removeFrame(Frame_frame)",
"scope":"source.lua"},

"ccs.Timeline:setActionTimeline(ActionTimeline_action)":{
"prefix":"ccs.Timeline:setActionTimeline(ActionTimeline_action)",
"body":["ccs.Timeline:setActionTimeline(ActionTimeline_action)"],
"description":"setActionTimeline(ActionTimeline_action)",
"scope":"source.lua"},

"ccs.Timeline:stepToFrame(int_frameIndex)":{
"prefix":"ccs.Timeline:stepToFrame(int_frameIndex)",
"body":["ccs.Timeline:stepToFrame(int_frameIndex)"],
"description":"stepToFrame(int_frameIndex)",
"scope":"source.lua"},

"ccs.Timeline:create()":{
"prefix":"ccs.Timeline:create()",
"body":["ccs.Timeline:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ActionTimelineData":{
"prefix":"ccs.ActionTimelineData",
"body":["ccs.ActionTimelineData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionTimelineData:setActionTag(int_actionTag)":{
"prefix":"ccs.ActionTimelineData:setActionTag(int_actionTag)",
"body":["ccs.ActionTimelineData:setActionTag(int_actionTag)"],
"description":"setActionTag(int_actionTag)",
"scope":"source.lua"},

"ccs.ActionTimelineData:init(int_actionTag)":{
"prefix":"ccs.ActionTimelineData:init(int_actionTag)",
"body":["ccs.ActionTimelineData:init(int_actionTag)"],
"description":"init(int_actionTag)",
"scope":"source.lua"},

"ccs.ActionTimelineData:getActionTag()":{
"prefix":"ccs.ActionTimelineData:getActionTag()",
"body":["ccs.ActionTimelineData:getActionTag()"],
"description":"getActionTag()",
"scope":"source.lua"},

"ccs.ActionTimelineData:create(int_actionTag)":{
"prefix":"ccs.ActionTimelineData:create(int_actionTag)",
"body":["ccs.ActionTimelineData:create(int_actionTag)"],
"description":"create(int_actionTag)",
"scope":"source.lua"},

"ccs.ActionTimeline":{
"prefix":"ccs.ActionTimeline",
"body":["ccs.ActionTimeline"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionTimeline:clearFrameEndCallFuncs()":{
"prefix":"ccs.ActionTimeline:clearFrameEndCallFuncs()",
"body":["ccs.ActionTimeline:clearFrameEndCallFuncs()"],
"description":"clearFrameEndCallFuncs()",
"scope":"source.lua"},

"ccs.ActionTimeline:setAnimationEndCallFunc(const_std_string_animationName)":{
"prefix":"ccs.ActionTimeline:setAnimationEndCallFunc(const_std_string_animationName)",
"body":["ccs.ActionTimeline:setAnimationEndCallFunc(const_std_string_animationName)"],
"description":"setAnimationEndCallFunc(const_std_string_animationName)",
"scope":"source.lua"},

"ccs.ActionTimeline:addTimeline(Timeline_timeline)":{
"prefix":"ccs.ActionTimeline:addTimeline(Timeline_timeline)",
"body":["ccs.ActionTimeline:addTimeline(Timeline_timeline)"],
"description":"addTimeline(Timeline_timeline)",
"scope":"source.lua"},

"ccs.ActionTimeline:getCurrentFrame()":{
"prefix":"ccs.ActionTimeline:getCurrentFrame()",
"body":["ccs.ActionTimeline:getCurrentFrame()"],
"description":"getCurrentFrame()",
"scope":"source.lua"},

"ccs.ActionTimeline:getStartFrame()":{
"prefix":"ccs.ActionTimeline:getStartFrame()",
"body":["ccs.ActionTimeline:getStartFrame()"],
"description":"getStartFrame()",
"scope":"source.lua"},

"ccs.ActionTimeline:pause()":{
"prefix":"ccs.ActionTimeline:pause()",
"body":["ccs.ActionTimeline:pause()"],
"description":"pause()",
"scope":"source.lua"},

"ccs.ActionTimeline:start()":{
"prefix":"ccs.ActionTimeline:start()",
"body":["ccs.ActionTimeline:start()"],
"description":"start()",
"scope":"source.lua"},

"ccs.ActionTimeline:init()":{
"prefix":"ccs.ActionTimeline:init()",
"body":["ccs.ActionTimeline:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.ActionTimeline:removeTimeline(Timeline_timeline)":{
"prefix":"ccs.ActionTimeline:removeTimeline(Timeline_timeline)",
"body":["ccs.ActionTimeline:removeTimeline(Timeline_timeline)"],
"description":"removeTimeline(Timeline_timeline)",
"scope":"source.lua"},

"ccs.ActionTimeline:clearFrameEventCallFunc()":{
"prefix":"ccs.ActionTimeline:clearFrameEventCallFunc()",
"body":["ccs.ActionTimeline:clearFrameEventCallFunc()"],
"description":"clearFrameEventCallFunc()",
"scope":"source.lua"},

"ccs.ActionTimeline:setLastFrameCallFunc()":{
"prefix":"ccs.ActionTimeline:setLastFrameCallFunc()",
"body":["ccs.ActionTimeline:setLastFrameCallFunc()"],
"description":"setLastFrameCallFunc()",
"scope":"source.lua"},

"ccs.ActionTimeline:getTimelines()":{
"prefix":"ccs.ActionTimeline:getTimelines()",
"body":["ccs.ActionTimeline:getTimelines()"],
"description":"getTimelines()",
"scope":"source.lua"},

"ccs.ActionTimeline:play(std_string_animationName,bool_loop)":{
"prefix":"ccs.ActionTimeline:play(std_string_animationName,bool_loop)",
"body":["ccs.ActionTimeline:play(std_string_animationName,bool_loop)"],
"description":"play(std_string_animationName,bool_loop)",
"scope":"source.lua"},

"ccs.ActionTimeline:getAnimationInfo(const_std_string_animationName)":{
"prefix":"ccs.ActionTimeline:getAnimationInfo(const_std_string_animationName)",
"body":["ccs.ActionTimeline:getAnimationInfo(const_std_string_animationName)"],
"description":"getAnimationInfo(const_std_string_animationName)",
"scope":"source.lua"},

"ccs.ActionTimeline:resume()":{
"prefix":"ccs.ActionTimeline:resume()",
"body":["ccs.ActionTimeline:resume()"],
"description":"resume()",
"scope":"source.lua"},

"ccs.ActionTimeline:addFrameEndCallFunc(int_frameIndex,const_std_string_funcKey)":{
"prefix":"ccs.ActionTimeline:addFrameEndCallFunc(int_frameIndex,const_std_string_funcKey)",
"body":["ccs.ActionTimeline:addFrameEndCallFunc(int_frameIndex,const_std_string_funcKey)"],
"description":"addFrameEndCallFunc(int_frameIndex,const_std_string_funcKey)",
"scope":"source.lua"},

"ccs.ActionTimeline:removeAnimationInfo(std_string_animationName)":{
"prefix":"ccs.ActionTimeline:removeAnimationInfo(std_string_animationName)",
"body":["ccs.ActionTimeline:removeAnimationInfo(std_string_animationName)"],
"description":"removeAnimationInfo(std_string_animationName)",
"scope":"source.lua"},

"ccs.ActionTimeline:getTimeSpeed()":{
"prefix":"ccs.ActionTimeline:getTimeSpeed()",
"body":["ccs.ActionTimeline:getTimeSpeed()"],
"description":"getTimeSpeed()",
"scope":"source.lua"},

"ccs.ActionTimeline:addAnimationInfo(const_AnimationInfo_animationInfo)":{
"prefix":"ccs.ActionTimeline:addAnimationInfo(const_AnimationInfo_animationInfo)",
"body":["ccs.ActionTimeline:addAnimationInfo(const_AnimationInfo_animationInfo)"],
"description":"addAnimationInfo(const_AnimationInfo_animationInfo)",
"scope":"source.lua"},

"ccs.ActionTimeline:getDuration()":{
"prefix":"ccs.ActionTimeline:getDuration()",
"body":["ccs.ActionTimeline:getDuration()"],
"description":"getDuration()",
"scope":"source.lua"},

"ccs.ActionTimeline:gotoFrameAndPause(int_startIndex)":{
"prefix":"ccs.ActionTimeline:gotoFrameAndPause(int_startIndex)",
"body":["ccs.ActionTimeline:gotoFrameAndPause(int_startIndex)"],
"description":"gotoFrameAndPause(int_startIndex)",
"scope":"source.lua"},

"ccs.ActionTimeline:isPlaying()":{
"prefix":"ccs.ActionTimeline:isPlaying()",
"body":["ccs.ActionTimeline:isPlaying()"],
"description":"isPlaying()",
"scope":"source.lua"},

"ccs.ActionTimeline:removeFrameEndCallFuncs(int_frameIndex)":{
"prefix":"ccs.ActionTimeline:removeFrameEndCallFuncs(int_frameIndex)",
"body":["ccs.ActionTimeline:removeFrameEndCallFuncs(int_frameIndex)"],
"description":"removeFrameEndCallFuncs(int_frameIndex)",
"scope":"source.lua"},

"ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex)":{
"prefix":"ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex)",
"body":["ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex)"],
"description":"gotoFrameAndPlay(int_startIndex)",
"scope":"source.lua"},

"ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex,bool_loop)":{
"prefix":"ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex,bool_loop)",
"body":["ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex,bool_loop)"],
"description":"gotoFrameAndPlay(int_startIndex,bool_loop)",
"scope":"source.lua"},

"ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex,int_endIndex,bool_loop)":{
"prefix":"ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex,int_endIndex,bool_loop)",
"body":["ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex,int_endIndex,bool_loop)"],
"description":"gotoFrameAndPlay(int_startIndex,int_endIndex,bool_loop)",
"scope":"source.lua"},

"ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex,int_endIndex,int_currentFrameIndex,bool_loop)":{
"prefix":"ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex,int_endIndex,int_currentFrameIndex,bool_loop)",
"body":["ccs.ActionTimeline:gotoFrameAndPlay(int_startIndex,int_endIndex,int_currentFrameIndex,bool_loop)"],
"description":"gotoFrameAndPlay(int_startIndex,int_endIndex,int_currentFrameIndex,bool_loop)",
"scope":"source.lua"},

"ccs.ActionTimeline:IsAnimationInfoExists(const_std_string_animationName)":{
"prefix":"ccs.ActionTimeline:IsAnimationInfoExists(const_std_string_animationName)",
"body":["ccs.ActionTimeline:IsAnimationInfoExists(const_std_string_animationName)"],
"description":"IsAnimationInfoExists(const_std_string_animationName)",
"scope":"source.lua"},

"ccs.ActionTimeline:getEndFrame()":{
"prefix":"ccs.ActionTimeline:getEndFrame()",
"body":["ccs.ActionTimeline:getEndFrame()"],
"description":"getEndFrame()",
"scope":"source.lua"},

"ccs.ActionTimeline:setTimeSpeed(float_speed)":{
"prefix":"ccs.ActionTimeline:setTimeSpeed(float_speed)",
"body":["ccs.ActionTimeline:setTimeSpeed(float_speed)"],
"description":"setTimeSpeed(float_speed)",
"scope":"source.lua"},

"ccs.ActionTimeline:clearLastFrameCallFunc()":{
"prefix":"ccs.ActionTimeline:clearLastFrameCallFunc()",
"body":["ccs.ActionTimeline:clearLastFrameCallFunc()"],
"description":"clearLastFrameCallFunc()",
"scope":"source.lua"},

"ccs.ActionTimeline:setDuration(int_duration)":{
"prefix":"ccs.ActionTimeline:setDuration(int_duration)",
"body":["ccs.ActionTimeline:setDuration(int_duration)"],
"description":"setDuration(int_duration)",
"scope":"source.lua"},

"ccs.ActionTimeline:setCurrentFrame(int_frameIndex)":{
"prefix":"ccs.ActionTimeline:setCurrentFrame(int_frameIndex)",
"body":["ccs.ActionTimeline:setCurrentFrame(int_frameIndex)"],
"description":"setCurrentFrame(int_frameIndex)",
"scope":"source.lua"},

"ccs.ActionTimeline:removeFrameEndCallFunc(int_frameIndex,const_std_string_funcKey)":{
"prefix":"ccs.ActionTimeline:removeFrameEndCallFunc(int_frameIndex,const_std_string_funcKey)",
"body":["ccs.ActionTimeline:removeFrameEndCallFunc(int_frameIndex,const_std_string_funcKey)"],
"description":"removeFrameEndCallFunc(int_frameIndex,const_std_string_funcKey)",
"scope":"source.lua"},

"ccs.ActionTimeline:create()":{
"prefix":"ccs.ActionTimeline:create()",
"body":["ccs.ActionTimeline:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ActionTimelineNode":{
"prefix":"ccs.ActionTimelineNode",
"body":["ccs.ActionTimelineNode"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ActionTimelineNode:getRoot()":{
"prefix":"ccs.ActionTimelineNode:getRoot()",
"body":["ccs.ActionTimelineNode:getRoot()"],
"description":"getRoot()",
"scope":"source.lua"},

"ccs.ActionTimelineNode:getActionTimeline()":{
"prefix":"ccs.ActionTimelineNode:getActionTimeline()",
"body":["ccs.ActionTimelineNode:getActionTimeline()"],
"description":"getActionTimeline()",
"scope":"source.lua"},

"ccs.ActionTimelineNode:setActionTimeline(ActionTimeline_action)":{
"prefix":"ccs.ActionTimelineNode:setActionTimeline(ActionTimeline_action)",
"body":["ccs.ActionTimelineNode:setActionTimeline(ActionTimeline_action)"],
"description":"setActionTimeline(ActionTimeline_action)",
"scope":"source.lua"},

"ccs.ActionTimelineNode:init()":{
"prefix":"ccs.ActionTimelineNode:init()",
"body":["ccs.ActionTimelineNode:init()"],
"description":"init()",
"scope":"source.lua"},

"ccs.ActionTimelineNode:setRoot(cocos2d_Node_root)":{
"prefix":"ccs.ActionTimelineNode:setRoot(cocos2d_Node_root)",
"body":["ccs.ActionTimelineNode:setRoot(cocos2d_Node_root)"],
"description":"setRoot(cocos2d_Node_root)",
"scope":"source.lua"},

"ccs.ActionTimelineNode:create(cocos2d_Node_root,ActionTimeline_action)":{
"prefix":"ccs.ActionTimelineNode:create(cocos2d_Node_root,ActionTimeline_action)",
"body":["ccs.ActionTimelineNode:create(cocos2d_Node_root,ActionTimeline_action)"],
"description":"create(cocos2d_Node_root,ActionTimeline_action)",
"scope":"source.lua"},

"ccs.BoneNode":{
"prefix":"ccs.BoneNode",
"body":["ccs.BoneNode"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.BoneNode:getDebugDrawWidth()":{
"prefix":"ccs.BoneNode:getDebugDrawWidth()",
"body":["ccs.BoneNode:getDebugDrawWidth()"],
"description":"getDebugDrawWidth()",
"scope":"source.lua"},

"ccs.BoneNode:getChildBones()":{
"prefix":"ccs.BoneNode:getChildBones()",
"body":["ccs.BoneNode:getChildBones()"],
"description":"getChildBones()",
"scope":"source.lua"},

"ccs.BoneNode:getBlendFunc()":{
"prefix":"ccs.BoneNode:getBlendFunc()",
"body":["ccs.BoneNode:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"ccs.BoneNode:getAllSubBones()":{
"prefix":"ccs.BoneNode:getAllSubBones()",
"body":["ccs.BoneNode:getAllSubBones()"],
"description":"getAllSubBones()",
"scope":"source.lua"},

"ccs.BoneNode:setBlendFunc(const_cocos2d_BlendFunc_blendFunc)":{
"prefix":"ccs.BoneNode:setBlendFunc(const_cocos2d_BlendFunc_blendFunc)",
"body":["ccs.BoneNode:setBlendFunc(const_cocos2d_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_cocos2d_BlendFunc_blendFunc)",
"scope":"source.lua"},

"ccs.BoneNode:setDebugDrawEnabled(bool_isDebugDraw)":{
"prefix":"ccs.BoneNode:setDebugDrawEnabled(bool_isDebugDraw)",
"body":["ccs.BoneNode:setDebugDrawEnabled(bool_isDebugDraw)"],
"description":"setDebugDrawEnabled(bool_isDebugDraw)",
"scope":"source.lua"},

"ccs.BoneNode:getVisibleSkinsRect()":{
"prefix":"ccs.BoneNode:getVisibleSkinsRect()",
"body":["ccs.BoneNode:getVisibleSkinsRect()"],
"description":"getVisibleSkinsRect()",
"scope":"source.lua"},

"ccs.BoneNode:getAllSubSkins()":{
"prefix":"ccs.BoneNode:getAllSubSkins()",
"body":["ccs.BoneNode:getAllSubSkins()"],
"description":"getAllSubSkins()",
"scope":"source.lua"},

"ccs.BoneNode:displaySkin(SkinNode_skin,bool_hideOthers)":{
"prefix":"ccs.BoneNode:displaySkin(SkinNode_skin,bool_hideOthers)",
"body":["ccs.BoneNode:displaySkin(SkinNode_skin,bool_hideOthers)"],
"description":"displaySkin(SkinNode_skin,bool_hideOthers)",
"scope":"source.lua"},

"ccs.BoneNode:displaySkin(const_std_string_skinName,bool_hideOthers)":{
"prefix":"ccs.BoneNode:displaySkin(const_std_string_skinName,bool_hideOthers)",
"body":["ccs.BoneNode:displaySkin(const_std_string_skinName,bool_hideOthers)"],
"description":"displaySkin(const_std_string_skinName,bool_hideOthers)",
"scope":"source.lua"},

"ccs.BoneNode:isDebugDrawEnabled()":{
"prefix":"ccs.BoneNode:isDebugDrawEnabled()",
"body":["ccs.BoneNode:isDebugDrawEnabled()"],
"description":"isDebugDrawEnabled()",
"scope":"source.lua"},

"ccs.BoneNode:addSkin(SkinNode_skin,bool_display)":{
"prefix":"ccs.BoneNode:addSkin(SkinNode_skin,bool_display)",
"body":["ccs.BoneNode:addSkin(SkinNode_skin,bool_display)"],
"description":"addSkin(SkinNode_skin,bool_display)",
"scope":"source.lua"},

"ccs.BoneNode:addSkin(SkinNode_skin,bool_display,bool_hideOthers)":{
"prefix":"ccs.BoneNode:addSkin(SkinNode_skin,bool_display,bool_hideOthers)",
"body":["ccs.BoneNode:addSkin(SkinNode_skin,bool_display,bool_hideOthers)"],
"description":"addSkin(SkinNode_skin,bool_display,bool_hideOthers)",
"scope":"source.lua"},

"ccs.BoneNode:getRootSkeletonNode()":{
"prefix":"ccs.BoneNode:getRootSkeletonNode()",
"body":["ccs.BoneNode:getRootSkeletonNode()"],
"description":"getRootSkeletonNode()",
"scope":"source.lua"},

"ccs.BoneNode:setDebugDrawLength(float_length)":{
"prefix":"ccs.BoneNode:setDebugDrawLength(float_length)",
"body":["ccs.BoneNode:setDebugDrawLength(float_length)"],
"description":"setDebugDrawLength(float_length)",
"scope":"source.lua"},

"ccs.BoneNode:getSkins()":{
"prefix":"ccs.BoneNode:getSkins()",
"body":["ccs.BoneNode:getSkins()"],
"description":"getSkins()",
"scope":"source.lua"},

"ccs.BoneNode:getVisibleSkins()":{
"prefix":"ccs.BoneNode:getVisibleSkins()",
"body":["ccs.BoneNode:getVisibleSkins()"],
"description":"getVisibleSkins()",
"scope":"source.lua"},

"ccs.BoneNode:setDebugDrawWidth(float_width)":{
"prefix":"ccs.BoneNode:setDebugDrawWidth(float_width)",
"body":["ccs.BoneNode:setDebugDrawWidth(float_width)"],
"description":"setDebugDrawWidth(float_width)",
"scope":"source.lua"},

"ccs.BoneNode:getDebugDrawLength()":{
"prefix":"ccs.BoneNode:getDebugDrawLength()",
"body":["ccs.BoneNode:getDebugDrawLength()"],
"description":"getDebugDrawLength()",
"scope":"source.lua"},

"ccs.BoneNode:setDebugDrawColor(const_cocos2d_Color4F_color)":{
"prefix":"ccs.BoneNode:setDebugDrawColor(const_cocos2d_Color4F_color)",
"body":["ccs.BoneNode:setDebugDrawColor(const_cocos2d_Color4F_color)"],
"description":"setDebugDrawColor(const_cocos2d_Color4F_color)",
"scope":"source.lua"},

"ccs.BoneNode:getDebugDrawColor()":{
"prefix":"ccs.BoneNode:getDebugDrawColor()",
"body":["ccs.BoneNode:getDebugDrawColor()"],
"description":"getDebugDrawColor()",
"scope":"source.lua"},

"ccs.BoneNode:create()":{
"prefix":"ccs.BoneNode:create()",
"body":["ccs.BoneNode:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.SkeletonNode":{
"prefix":"ccs.SkeletonNode",
"body":["ccs.SkeletonNode"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.SkeletonNode:getBoneNode(const_std_string_boneName)":{
"prefix":"ccs.SkeletonNode:getBoneNode(const_std_string_boneName)",
"body":["ccs.SkeletonNode:getBoneNode(const_std_string_boneName)"],
"description":"getBoneNode(const_std_string_boneName)",
"scope":"source.lua"},

"ccs.SkeletonNode:changeSkins(_boneSkinNameMap)":{
"prefix":"ccs.SkeletonNode:changeSkins(_boneSkinNameMap)",
"body":["ccs.SkeletonNode:changeSkins(_boneSkinNameMap)"],
"description":"changeSkins(_boneSkinNameMap)",
"scope":"source.lua"},

"ccs.SkeletonNode:changeSkins(const_std_string_skinGroupName)":{
"prefix":"ccs.SkeletonNode:changeSkins(const_std_string_skinGroupName)",
"body":["ccs.SkeletonNode:changeSkins(const_std_string_skinGroupName)"],
"description":"changeSkins(const_std_string_skinGroupName)",
"scope":"source.lua"},

"ccs.SkeletonNode:addSkinGroup(std_string_groupName,boneSkinNameMap)":{
"prefix":"ccs.SkeletonNode:addSkinGroup(std_string_groupName,boneSkinNameMap)",
"body":["ccs.SkeletonNode:addSkinGroup(std_string_groupName,boneSkinNameMap)"],
"description":"addSkinGroup(std_string_groupName,boneSkinNameMap)",
"scope":"source.lua"},

"ccs.SkeletonNode:getAllSubBonesMap()":{
"prefix":"ccs.SkeletonNode:getAllSubBonesMap()",
"body":["ccs.SkeletonNode:getAllSubBonesMap()"],
"description":"getAllSubBonesMap()",
"scope":"source.lua"},

"ccs.SkeletonNode:create()":{
"prefix":"ccs.SkeletonNode:create()",
"body":["ccs.SkeletonNode:create()"],
"description":"create()",
"scope":"source.lua"},

"ccs.ComExtensionData":{
"prefix":"ccs.ComExtensionData",
"body":["ccs.ComExtensionData"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.ComExtensionData:setActionTag(int_actionTag)":{
"prefix":"ccs.ComExtensionData:setActionTag(int_actionTag)",
"body":["ccs.ComExtensionData:setActionTag(int_actionTag)"],
"description":"setActionTag(int_actionTag)",
"scope":"source.lua"},

"ccs.ComExtensionData:getCustomProperty()":{
"prefix":"ccs.ComExtensionData:getCustomProperty()",
"body":["ccs.ComExtensionData:getCustomProperty()"],
"description":"getCustomProperty()",
"scope":"source.lua"},

"ccs.ComExtensionData:getActionTag()":{
"prefix":"ccs.ComExtensionData:getActionTag()",
"body":["ccs.ComExtensionData:getActionTag()"],
"description":"getActionTag()",
"scope":"source.lua"},

"ccs.ComExtensionData:setCustomProperty(const_std_string_customProperty)":{
"prefix":"ccs.ComExtensionData:setCustomProperty(const_std_string_customProperty)",
"body":["ccs.ComExtensionData:setCustomProperty(const_std_string_customProperty)"],
"description":"setCustomProperty(const_std_string_customProperty)",
"scope":"source.lua"},

"ccs.ComExtensionData:create()":{
"prefix":"ccs.ComExtensionData:create()",
"body":["ccs.ComExtensionData:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.LayoutParameter":{
"prefix":"ccui.LayoutParameter",
"body":["ccui.LayoutParameter"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.LayoutParameter:clone()":{
"prefix":"ccui.LayoutParameter:clone()",
"body":["ccui.LayoutParameter:clone()"],
"description":"clone()",
"scope":"source.lua"},

"ccui.LayoutParameter:getLayoutType()":{
"prefix":"ccui.LayoutParameter:getLayoutType()",
"body":["ccui.LayoutParameter:getLayoutType()"],
"description":"getLayoutType()",
"scope":"source.lua"},

"ccui.LayoutParameter:createCloneInstance()":{
"prefix":"ccui.LayoutParameter:createCloneInstance()",
"body":["ccui.LayoutParameter:createCloneInstance()"],
"description":"createCloneInstance()",
"scope":"source.lua"},

"ccui.LayoutParameter:copyProperties(LayoutParameter_model)":{
"prefix":"ccui.LayoutParameter:copyProperties(LayoutParameter_model)",
"body":["ccui.LayoutParameter:copyProperties(LayoutParameter_model)"],
"description":"copyProperties(LayoutParameter_model)",
"scope":"source.lua"},

"ccui.LayoutParameter:create()":{
"prefix":"ccui.LayoutParameter:create()",
"body":["ccui.LayoutParameter:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.LinearLayoutParameter":{
"prefix":"ccui.LinearLayoutParameter",
"body":["ccui.LinearLayoutParameter"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.LinearLayoutParameter:setGravity(LinearGravity_gravity)":{
"prefix":"ccui.LinearLayoutParameter:setGravity(LinearGravity_gravity)",
"body":["ccui.LinearLayoutParameter:setGravity(LinearGravity_gravity)"],
"description":"setGravity(LinearGravity_gravity)",
"scope":"source.lua"},

"ccui.LinearLayoutParameter:getGravity()":{
"prefix":"ccui.LinearLayoutParameter:getGravity()",
"body":["ccui.LinearLayoutParameter:getGravity()"],
"description":"getGravity()",
"scope":"source.lua"},

"ccui.LinearLayoutParameter:create()":{
"prefix":"ccui.LinearLayoutParameter:create()",
"body":["ccui.LinearLayoutParameter:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.RelativeLayoutParameter":{
"prefix":"ccui.RelativeLayoutParameter",
"body":["ccui.RelativeLayoutParameter"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.RelativeLayoutParameter:setAlign(RelativeAlign_align)":{
"prefix":"ccui.RelativeLayoutParameter:setAlign(RelativeAlign_align)",
"body":["ccui.RelativeLayoutParameter:setAlign(RelativeAlign_align)"],
"description":"setAlign(RelativeAlign_align)",
"scope":"source.lua"},

"ccui.RelativeLayoutParameter:setRelativeToWidgetName(const_std_string_name)":{
"prefix":"ccui.RelativeLayoutParameter:setRelativeToWidgetName(const_std_string_name)",
"body":["ccui.RelativeLayoutParameter:setRelativeToWidgetName(const_std_string_name)"],
"description":"setRelativeToWidgetName(const_std_string_name)",
"scope":"source.lua"},

"ccui.RelativeLayoutParameter:getRelativeName()":{
"prefix":"ccui.RelativeLayoutParameter:getRelativeName()",
"body":["ccui.RelativeLayoutParameter:getRelativeName()"],
"description":"getRelativeName()",
"scope":"source.lua"},

"ccui.RelativeLayoutParameter:getRelativeToWidgetName()":{
"prefix":"ccui.RelativeLayoutParameter:getRelativeToWidgetName()",
"body":["ccui.RelativeLayoutParameter:getRelativeToWidgetName()"],
"description":"getRelativeToWidgetName()",
"scope":"source.lua"},

"ccui.RelativeLayoutParameter:setRelativeName(const_std_string_name)":{
"prefix":"ccui.RelativeLayoutParameter:setRelativeName(const_std_string_name)",
"body":["ccui.RelativeLayoutParameter:setRelativeName(const_std_string_name)"],
"description":"setRelativeName(const_std_string_name)",
"scope":"source.lua"},

"ccui.RelativeLayoutParameter:getAlign()":{
"prefix":"ccui.RelativeLayoutParameter:getAlign()",
"body":["ccui.RelativeLayoutParameter:getAlign()"],
"description":"getAlign()",
"scope":"source.lua"},

"ccui.RelativeLayoutParameter:create()":{
"prefix":"ccui.RelativeLayoutParameter:create()",
"body":["ccui.RelativeLayoutParameter:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.Widget":{
"prefix":"ccui.Widget",
"body":["ccui.Widget"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.Widget:setLayoutComponentEnabled(bool_enable)":{
"prefix":"ccui.Widget:setLayoutComponentEnabled(bool_enable)",
"body":["ccui.Widget:setLayoutComponentEnabled(bool_enable)"],
"description":"setLayoutComponentEnabled(bool_enable)",
"scope":"source.lua"},

"ccui.Widget:setSizePercent(const_Vec2_percent)":{
"prefix":"ccui.Widget:setSizePercent(const_Vec2_percent)",
"body":["ccui.Widget:setSizePercent(const_Vec2_percent)"],
"description":"setSizePercent(const_Vec2_percent)",
"scope":"source.lua"},

"ccui.Widget:getCustomSize()":{
"prefix":"ccui.Widget:getCustomSize()",
"body":["ccui.Widget:getCustomSize()"],
"description":"getCustomSize()",
"scope":"source.lua"},

"ccui.Widget:getLeftBoundary()":{
"prefix":"ccui.Widget:getLeftBoundary()",
"body":["ccui.Widget:getLeftBoundary()"],
"description":"getLeftBoundary()",
"scope":"source.lua"},

"ccui.Widget:setFlippedX(bool_flippedX)":{
"prefix":"ccui.Widget:setFlippedX(bool_flippedX)",
"body":["ccui.Widget:setFlippedX(bool_flippedX)"],
"description":"setFlippedX(bool_flippedX)",
"scope":"source.lua"},

"ccui.Widget:setCallbackName(const_std_string_callbackName)":{
"prefix":"ccui.Widget:setCallbackName(const_std_string_callbackName)",
"body":["ccui.Widget:setCallbackName(const_std_string_callbackName)"],
"description":"setCallbackName(const_std_string_callbackName)",
"scope":"source.lua"},

"ccui.Widget:getVirtualRenderer()":{
"prefix":"ccui.Widget:getVirtualRenderer()",
"body":["ccui.Widget:getVirtualRenderer()"],
"description":"getVirtualRenderer()",
"scope":"source.lua"},

"ccui.Widget:setPropagateTouchEvents(bool_isPropagate)":{
"prefix":"ccui.Widget:setPropagateTouchEvents(bool_isPropagate)",
"body":["ccui.Widget:setPropagateTouchEvents(bool_isPropagate)"],
"description":"setPropagateTouchEvents(bool_isPropagate)",
"scope":"source.lua"},

"ccui.Widget:isUnifySizeEnabled()":{
"prefix":"ccui.Widget:isUnifySizeEnabled()",
"body":["ccui.Widget:isUnifySizeEnabled()"],
"description":"isUnifySizeEnabled()",
"scope":"source.lua"},

"ccui.Widget:getSizePercent()":{
"prefix":"ccui.Widget:getSizePercent()",
"body":["ccui.Widget:getSizePercent()"],
"description":"getSizePercent()",
"scope":"source.lua"},

"ccui.Widget:setPositionPercent(const_Vec2_percent)":{
"prefix":"ccui.Widget:setPositionPercent(const_Vec2_percent)",
"body":["ccui.Widget:setPositionPercent(const_Vec2_percent)"],
"description":"setPositionPercent(const_Vec2_percent)",
"scope":"source.lua"},

"ccui.Widget:setSwallowTouches(bool_swallow)":{
"prefix":"ccui.Widget:setSwallowTouches(bool_swallow)",
"body":["ccui.Widget:setSwallowTouches(bool_swallow)"],
"description":"setSwallowTouches(bool_swallow)",
"scope":"source.lua"},

"ccui.Widget:getLayoutSize()":{
"prefix":"ccui.Widget:getLayoutSize()",
"body":["ccui.Widget:getLayoutSize()"],
"description":"getLayoutSize()",
"scope":"source.lua"},

"ccui.Widget:setHighlighted(bool_highlight)":{
"prefix":"ccui.Widget:setHighlighted(bool_highlight)",
"body":["ccui.Widget:setHighlighted(bool_highlight)"],
"description":"setHighlighted(bool_highlight)",
"scope":"source.lua"},

"ccui.Widget:setPositionType(PositionType_type)":{
"prefix":"ccui.Widget:setPositionType(PositionType_type)",
"body":["ccui.Widget:setPositionType(PositionType_type)"],
"description":"setPositionType(PositionType_type)",
"scope":"source.lua"},

"ccui.Widget:isIgnoreContentAdaptWithSize()":{
"prefix":"ccui.Widget:isIgnoreContentAdaptWithSize()",
"body":["ccui.Widget:isIgnoreContentAdaptWithSize()"],
"description":"isIgnoreContentAdaptWithSize()",
"scope":"source.lua"},

"ccui.Widget:getVirtualRendererSize()":{
"prefix":"ccui.Widget:getVirtualRendererSize()",
"body":["ccui.Widget:getVirtualRendererSize()"],
"description":"getVirtualRendererSize()",
"scope":"source.lua"},

"ccui.Widget:isHighlighted()":{
"prefix":"ccui.Widget:isHighlighted()",
"body":["ccui.Widget:isHighlighted()"],
"description":"isHighlighted()",
"scope":"source.lua"},

"ccui.Widget:getLayoutParameter()":{
"prefix":"ccui.Widget:getLayoutParameter()",
"body":["ccui.Widget:getLayoutParameter()"],
"description":"getLayoutParameter()",
"scope":"source.lua"},

"ccui.Widget:getLayoutParameter(LayoutParameter_Type_type)":{
"prefix":"ccui.Widget:getLayoutParameter(LayoutParameter_Type_type)",
"body":["ccui.Widget:getLayoutParameter(LayoutParameter_Type_type)"],
"description":"getLayoutParameter(LayoutParameter_Type_type)",
"scope":"source.lua"},

"ccui.Widget:getPositionType()":{
"prefix":"ccui.Widget:getPositionType()",
"body":["ccui.Widget:getPositionType()"],
"description":"getPositionType()",
"scope":"source.lua"},

"ccui.Widget:getTopBoundary()":{
"prefix":"ccui.Widget:getTopBoundary()",
"body":["ccui.Widget:getTopBoundary()"],
"description":"getTopBoundary()",
"scope":"source.lua"},

"ccui.Widget:ignoreContentAdaptWithSize(bool_ignore)":{
"prefix":"ccui.Widget:ignoreContentAdaptWithSize(bool_ignore)",
"body":["ccui.Widget:ignoreContentAdaptWithSize(bool_ignore)"],
"description":"ignoreContentAdaptWithSize(bool_ignore)",
"scope":"source.lua"},

"ccui.Widget:findNextFocusedWidget(FocusDirection_direction,Widget_current)":{
"prefix":"ccui.Widget:findNextFocusedWidget(FocusDirection_direction,Widget_current)",
"body":["ccui.Widget:findNextFocusedWidget(FocusDirection_direction,Widget_current)"],
"description":"findNextFocusedWidget(FocusDirection_direction,Widget_current)",
"scope":"source.lua"},

"ccui.Widget:isEnabled()":{
"prefix":"ccui.Widget:isEnabled()",
"body":["ccui.Widget:isEnabled()"],
"description":"isEnabled()",
"scope":"source.lua"},

"ccui.Widget:isFocused()":{
"prefix":"ccui.Widget:isFocused()",
"body":["ccui.Widget:isFocused()"],
"description":"isFocused()",
"scope":"source.lua"},

"ccui.Widget:getTouchBeganPosition()":{
"prefix":"ccui.Widget:getTouchBeganPosition()",
"body":["ccui.Widget:getTouchBeganPosition()"],
"description":"getTouchBeganPosition()",
"scope":"source.lua"},

"ccui.Widget:isTouchEnabled()":{
"prefix":"ccui.Widget:isTouchEnabled()",
"body":["ccui.Widget:isTouchEnabled()"],
"description":"isTouchEnabled()",
"scope":"source.lua"},

"ccui.Widget:getCallbackName()":{
"prefix":"ccui.Widget:getCallbackName()",
"body":["ccui.Widget:getCallbackName()"],
"description":"getCallbackName()",
"scope":"source.lua"},

"ccui.Widget:getActionTag()":{
"prefix":"ccui.Widget:getActionTag()",
"body":["ccui.Widget:getActionTag()"],
"description":"getActionTag()",
"scope":"source.lua"},

"ccui.Widget:getWorldPosition()":{
"prefix":"ccui.Widget:getWorldPosition()",
"body":["ccui.Widget:getWorldPosition()"],
"description":"getWorldPosition()",
"scope":"source.lua"},

"ccui.Widget:isFocusEnabled()":{
"prefix":"ccui.Widget:isFocusEnabled()",
"body":["ccui.Widget:isFocusEnabled()"],
"description":"isFocusEnabled()",
"scope":"source.lua"},

"ccui.Widget:setFocused(bool_focus)":{
"prefix":"ccui.Widget:setFocused(bool_focus)",
"body":["ccui.Widget:setFocused(bool_focus)"],
"description":"setFocused(bool_focus)",
"scope":"source.lua"},

"ccui.Widget:setActionTag(int_tag)":{
"prefix":"ccui.Widget:setActionTag(int_tag)",
"body":["ccui.Widget:setActionTag(int_tag)"],
"description":"setActionTag(int_tag)",
"scope":"source.lua"},

"ccui.Widget:setTouchEnabled(bool_enabled)":{
"prefix":"ccui.Widget:setTouchEnabled(bool_enabled)",
"body":["ccui.Widget:setTouchEnabled(bool_enabled)"],
"description":"setTouchEnabled(bool_enabled)",
"scope":"source.lua"},

"ccui.Widget:setFlippedY(bool_flippedY)":{
"prefix":"ccui.Widget:setFlippedY(bool_flippedY)",
"body":["ccui.Widget:setFlippedY(bool_flippedY)"],
"description":"setFlippedY(bool_flippedY)",
"scope":"source.lua"},

"ccui.Widget:setEnabled(bool_enabled)":{
"prefix":"ccui.Widget:setEnabled(bool_enabled)",
"body":["ccui.Widget:setEnabled(bool_enabled)"],
"description":"setEnabled(bool_enabled)",
"scope":"source.lua"},

"ccui.Widget:getRightBoundary()":{
"prefix":"ccui.Widget:getRightBoundary()",
"body":["ccui.Widget:getRightBoundary()"],
"description":"getRightBoundary()",
"scope":"source.lua"},

"ccui.Widget:setBrightStyle(BrightStyle_style)":{
"prefix":"ccui.Widget:setBrightStyle(BrightStyle_style)",
"body":["ccui.Widget:setBrightStyle(BrightStyle_style)"],
"description":"setBrightStyle(BrightStyle_style)",
"scope":"source.lua"},

"ccui.Widget:setLayoutParameter(LayoutParameter_parameter)":{
"prefix":"ccui.Widget:setLayoutParameter(LayoutParameter_parameter)",
"body":["ccui.Widget:setLayoutParameter(LayoutParameter_parameter)"],
"description":"setLayoutParameter(LayoutParameter_parameter)",
"scope":"source.lua"},

"ccui.Widget:clone()":{
"prefix":"ccui.Widget:clone()",
"body":["ccui.Widget:clone()"],
"description":"clone()",
"scope":"source.lua"},

"ccui.Widget:setFocusEnabled(bool_enable)":{
"prefix":"ccui.Widget:setFocusEnabled(bool_enable)",
"body":["ccui.Widget:setFocusEnabled(bool_enable)"],
"description":"setFocusEnabled(bool_enable)",
"scope":"source.lua"},

"ccui.Widget:getBottomBoundary()":{
"prefix":"ccui.Widget:getBottomBoundary()",
"body":["ccui.Widget:getBottomBoundary()"],
"description":"getBottomBoundary()",
"scope":"source.lua"},

"ccui.Widget:isBright()":{
"prefix":"ccui.Widget:isBright()",
"body":["ccui.Widget:isBright()"],
"description":"isBright()",
"scope":"source.lua"},

"ccui.Widget:dispatchFocusEvent(Widget_widgetLoseFocus,Widget_widgetGetFocus)":{
"prefix":"ccui.Widget:dispatchFocusEvent(Widget_widgetLoseFocus,Widget_widgetGetFocus)",
"body":["ccui.Widget:dispatchFocusEvent(Widget_widgetLoseFocus,Widget_widgetGetFocus)"],
"description":"dispatchFocusEvent(Widget_widgetLoseFocus,Widget_widgetGetFocus)",
"scope":"source.lua"},

"ccui.Widget:setUnifySizeEnabled(bool_enable)":{
"prefix":"ccui.Widget:setUnifySizeEnabled(bool_enable)",
"body":["ccui.Widget:setUnifySizeEnabled(bool_enable)"],
"description":"setUnifySizeEnabled(bool_enable)",
"scope":"source.lua"},

"ccui.Widget:isPropagateTouchEvents()":{
"prefix":"ccui.Widget:isPropagateTouchEvents()",
"body":["ccui.Widget:isPropagateTouchEvents()"],
"description":"isPropagateTouchEvents()",
"scope":"source.lua"},

"ccui.Widget:hitTest(const_Vec2_pt,const_Camera_camera,Vec3_p)":{
"prefix":"ccui.Widget:hitTest(const_Vec2_pt,const_Camera_camera,Vec3_p)",
"body":["ccui.Widget:hitTest(const_Vec2_pt,const_Camera_camera,Vec3_p)"],
"description":"hitTest(const_Vec2_pt,const_Camera_camera,Vec3_p)",
"scope":"source.lua"},

"ccui.Widget:isLayoutComponentEnabled()":{
"prefix":"ccui.Widget:isLayoutComponentEnabled()",
"body":["ccui.Widget:isLayoutComponentEnabled()"],
"description":"isLayoutComponentEnabled()",
"scope":"source.lua"},

"ccui.Widget:requestFocus()":{
"prefix":"ccui.Widget:requestFocus()",
"body":["ccui.Widget:requestFocus()"],
"description":"requestFocus()",
"scope":"source.lua"},

"ccui.Widget:updateSizeAndPosition()":{
"prefix":"ccui.Widget:updateSizeAndPosition()",
"body":["ccui.Widget:updateSizeAndPosition()"],
"description":"updateSizeAndPosition()",
"scope":"source.lua"},

"ccui.Widget:updateSizeAndPosition(const_Size_parentSize)":{
"prefix":"ccui.Widget:updateSizeAndPosition(const_Size_parentSize)",
"body":["ccui.Widget:updateSizeAndPosition(const_Size_parentSize)"],
"description":"updateSizeAndPosition(const_Size_parentSize)",
"scope":"source.lua"},

"ccui.Widget:onFocusChange(Widget_widgetLostFocus,Widget_widgetGetFocus)":{
"prefix":"ccui.Widget:onFocusChange(Widget_widgetLostFocus,Widget_widgetGetFocus)",
"body":["ccui.Widget:onFocusChange(Widget_widgetLostFocus,Widget_widgetGetFocus)"],
"description":"onFocusChange(Widget_widgetLostFocus,Widget_widgetGetFocus)",
"scope":"source.lua"},

"ccui.Widget:getTouchMovePosition()":{
"prefix":"ccui.Widget:getTouchMovePosition()",
"body":["ccui.Widget:getTouchMovePosition()"],
"description":"getTouchMovePosition()",
"scope":"source.lua"},

"ccui.Widget:getSizeType()":{
"prefix":"ccui.Widget:getSizeType()",
"body":["ccui.Widget:getSizeType()"],
"description":"getSizeType()",
"scope":"source.lua"},

"ccui.Widget:getCallbackType()":{
"prefix":"ccui.Widget:getCallbackType()",
"body":["ccui.Widget:getCallbackType()"],
"description":"getCallbackType()",
"scope":"source.lua"},

"ccui.Widget:getTouchEndPosition()":{
"prefix":"ccui.Widget:getTouchEndPosition()",
"body":["ccui.Widget:getTouchEndPosition()"],
"description":"getTouchEndPosition()",
"scope":"source.lua"},

"ccui.Widget:getPositionPercent()":{
"prefix":"ccui.Widget:getPositionPercent()",
"body":["ccui.Widget:getPositionPercent()"],
"description":"getPositionPercent()",
"scope":"source.lua"},

"ccui.Widget:propagateTouchEvent(TouchEventType_event,Widget_sender,Touch_touch)":{
"prefix":"ccui.Widget:propagateTouchEvent(TouchEventType_event,Widget_sender,Touch_touch)",
"body":["ccui.Widget:propagateTouchEvent(TouchEventType_event,Widget_sender,Touch_touch)"],
"description":"propagateTouchEvent(TouchEventType_event,Widget_sender,Touch_touch)",
"scope":"source.lua"},

"ccui.Widget:isFlippedX()":{
"prefix":"ccui.Widget:isFlippedX()",
"body":["ccui.Widget:isFlippedX()"],
"description":"isFlippedX()",
"scope":"source.lua"},

"ccui.Widget:isFlippedY()":{
"prefix":"ccui.Widget:isFlippedY()",
"body":["ccui.Widget:isFlippedY()"],
"description":"isFlippedY()",
"scope":"source.lua"},

"ccui.Widget:isClippingParentContainsPoint(const_Vec2_pt)":{
"prefix":"ccui.Widget:isClippingParentContainsPoint(const_Vec2_pt)",
"body":["ccui.Widget:isClippingParentContainsPoint(const_Vec2_pt)"],
"description":"isClippingParentContainsPoint(const_Vec2_pt)",
"scope":"source.lua"},

"ccui.Widget:setSizeType(SizeType_type)":{
"prefix":"ccui.Widget:setSizeType(SizeType_type)",
"body":["ccui.Widget:setSizeType(SizeType_type)"],
"description":"setSizeType(SizeType_type)",
"scope":"source.lua"},

"ccui.Widget:interceptTouchEvent(TouchEventType_event,Widget_sender,Touch_touch)":{
"prefix":"ccui.Widget:interceptTouchEvent(TouchEventType_event,Widget_sender,Touch_touch)",
"body":["ccui.Widget:interceptTouchEvent(TouchEventType_event,Widget_sender,Touch_touch)"],
"description":"interceptTouchEvent(TouchEventType_event,Widget_sender,Touch_touch)",
"scope":"source.lua"},

"ccui.Widget:setBright(bool_bright)":{
"prefix":"ccui.Widget:setBright(bool_bright)",
"body":["ccui.Widget:setBright(bool_bright)"],
"description":"setBright(bool_bright)",
"scope":"source.lua"},

"ccui.Widget:setCallbackType(const_std_string_callbackType)":{
"prefix":"ccui.Widget:setCallbackType(const_std_string_callbackType)",
"body":["ccui.Widget:setCallbackType(const_std_string_callbackType)"],
"description":"setCallbackType(const_std_string_callbackType)",
"scope":"source.lua"},

"ccui.Widget:isSwallowTouches()":{
"prefix":"ccui.Widget:isSwallowTouches()",
"body":["ccui.Widget:isSwallowTouches()"],
"description":"isSwallowTouches()",
"scope":"source.lua"},

"ccui.Widget:enableDpadNavigation(bool_enable)":{
"prefix":"ccui.Widget:enableDpadNavigation(bool_enable)",
"body":["ccui.Widget:enableDpadNavigation(bool_enable)"],
"description":"enableDpadNavigation(bool_enable)",
"scope":"source.lua"},

"ccui.Widget:getCurrentFocusedWidget(bool_isWidget)":{
"prefix":"ccui.Widget:getCurrentFocusedWidget(bool_isWidget)",
"body":["ccui.Widget:getCurrentFocusedWidget(bool_isWidget)"],
"description":"getCurrentFocusedWidget(bool_isWidget)",
"scope":"source.lua"},

"ccui.Widget:getCurrentFocusedWidget()":{
"prefix":"ccui.Widget:getCurrentFocusedWidget()",
"body":["ccui.Widget:getCurrentFocusedWidget()"],
"description":"getCurrentFocusedWidget()",
"scope":"source.lua"},

"ccui.Widget:create()":{
"prefix":"ccui.Widget:create()",
"body":["ccui.Widget:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.Layout":{
"prefix":"ccui.Layout",
"body":["ccui.Layout"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.Layout:setBackGroundColorVector(const_Vec2_vector)":{
"prefix":"ccui.Layout:setBackGroundColorVector(const_Vec2_vector)",
"body":["ccui.Layout:setBackGroundColorVector(const_Vec2_vector)"],
"description":"setBackGroundColorVector(const_Vec2_vector)",
"scope":"source.lua"},

"ccui.Layout:setClippingType(ClippingType_type)":{
"prefix":"ccui.Layout:setClippingType(ClippingType_type)",
"body":["ccui.Layout:setClippingType(ClippingType_type)"],
"description":"setClippingType(ClippingType_type)",
"scope":"source.lua"},

"ccui.Layout:setBackGroundColorType(BackGroundColorType_type)":{
"prefix":"ccui.Layout:setBackGroundColorType(BackGroundColorType_type)",
"body":["ccui.Layout:setBackGroundColorType(BackGroundColorType_type)"],
"description":"setBackGroundColorType(BackGroundColorType_type)",
"scope":"source.lua"},

"ccui.Layout:setLoopFocus(bool_loop)":{
"prefix":"ccui.Layout:setLoopFocus(bool_loop)",
"body":["ccui.Layout:setLoopFocus(bool_loop)"],
"description":"setLoopFocus(bool_loop)",
"scope":"source.lua"},

"ccui.Layout:setBackGroundImageColor(const_Color3B_color)":{
"prefix":"ccui.Layout:setBackGroundImageColor(const_Color3B_color)",
"body":["ccui.Layout:setBackGroundImageColor(const_Color3B_color)"],
"description":"setBackGroundImageColor(const_Color3B_color)",
"scope":"source.lua"},

"ccui.Layout:getBackGroundColorVector()":{
"prefix":"ccui.Layout:getBackGroundColorVector()",
"body":["ccui.Layout:getBackGroundColorVector()"],
"description":"getBackGroundColorVector()",
"scope":"source.lua"},

"ccui.Layout:getClippingType()":{
"prefix":"ccui.Layout:getClippingType()",
"body":["ccui.Layout:getClippingType()"],
"description":"getClippingType()",
"scope":"source.lua"},

"ccui.Layout:getRenderFile()":{
"prefix":"ccui.Layout:getRenderFile()",
"body":["ccui.Layout:getRenderFile()"],
"description":"getRenderFile()",
"scope":"source.lua"},

"ccui.Layout:isLoopFocus()":{
"prefix":"ccui.Layout:isLoopFocus()",
"body":["ccui.Layout:isLoopFocus()"],
"description":"isLoopFocus()",
"scope":"source.lua"},

"ccui.Layout:removeBackGroundImage()":{
"prefix":"ccui.Layout:removeBackGroundImage()",
"body":["ccui.Layout:removeBackGroundImage()"],
"description":"removeBackGroundImage()",
"scope":"source.lua"},

"ccui.Layout:getBackGroundColorOpacity()":{
"prefix":"ccui.Layout:getBackGroundColorOpacity()",
"body":["ccui.Layout:getBackGroundColorOpacity()"],
"description":"getBackGroundColorOpacity()",
"scope":"source.lua"},

"ccui.Layout:isClippingEnabled()":{
"prefix":"ccui.Layout:isClippingEnabled()",
"body":["ccui.Layout:isClippingEnabled()"],
"description":"isClippingEnabled()",
"scope":"source.lua"},

"ccui.Layout:setBackGroundImageOpacity(GLubyte_opacity)":{
"prefix":"ccui.Layout:setBackGroundImageOpacity(GLubyte_opacity)",
"body":["ccui.Layout:setBackGroundImageOpacity(GLubyte_opacity)"],
"description":"setBackGroundImageOpacity(GLubyte_opacity)",
"scope":"source.lua"},

"ccui.Layout:setBackGroundImage(const_std_string_fileName,TextureResType_texType)":{
"prefix":"ccui.Layout:setBackGroundImage(const_std_string_fileName,TextureResType_texType)",
"body":["ccui.Layout:setBackGroundImage(const_std_string_fileName,TextureResType_texType)"],
"description":"setBackGroundImage(const_std_string_fileName,TextureResType_texType)",
"scope":"source.lua"},

"ccui.Layout:setBackGroundColor(const_Color3B_color)":{
"prefix":"ccui.Layout:setBackGroundColor(const_Color3B_color)",
"body":["ccui.Layout:setBackGroundColor(const_Color3B_color)"],
"description":"setBackGroundColor(const_Color3B_color)",
"scope":"source.lua"},

"ccui.Layout:setBackGroundColor(const_Color3B_startColor,const_Color3B_endColor)":{
"prefix":"ccui.Layout:setBackGroundColor(const_Color3B_startColor,const_Color3B_endColor)",
"body":["ccui.Layout:setBackGroundColor(const_Color3B_startColor,const_Color3B_endColor)"],
"description":"setBackGroundColor(const_Color3B_startColor,const_Color3B_endColor)",
"scope":"source.lua"},

"ccui.Layout:requestDoLayout()":{
"prefix":"ccui.Layout:requestDoLayout()",
"body":["ccui.Layout:requestDoLayout()"],
"description":"requestDoLayout()",
"scope":"source.lua"},

"ccui.Layout:getBackGroundImageCapInsets()":{
"prefix":"ccui.Layout:getBackGroundImageCapInsets()",
"body":["ccui.Layout:getBackGroundImageCapInsets()"],
"description":"getBackGroundImageCapInsets()",
"scope":"source.lua"},

"ccui.Layout:getBackGroundColor()":{
"prefix":"ccui.Layout:getBackGroundColor()",
"body":["ccui.Layout:getBackGroundColor()"],
"description":"getBackGroundColor()",
"scope":"source.lua"},

"ccui.Layout:setClippingEnabled(bool_enabled)":{
"prefix":"ccui.Layout:setClippingEnabled(bool_enabled)",
"body":["ccui.Layout:setClippingEnabled(bool_enabled)"],
"description":"setClippingEnabled(bool_enabled)",
"scope":"source.lua"},

"ccui.Layout:getBackGroundImageColor()":{
"prefix":"ccui.Layout:getBackGroundImageColor()",
"body":["ccui.Layout:getBackGroundImageColor()"],
"description":"getBackGroundImageColor()",
"scope":"source.lua"},

"ccui.Layout:isBackGroundImageScale9Enabled()":{
"prefix":"ccui.Layout:isBackGroundImageScale9Enabled()",
"body":["ccui.Layout:isBackGroundImageScale9Enabled()"],
"description":"isBackGroundImageScale9Enabled()",
"scope":"source.lua"},

"ccui.Layout:getBackGroundColorType()":{
"prefix":"ccui.Layout:getBackGroundColorType()",
"body":["ccui.Layout:getBackGroundColorType()"],
"description":"getBackGroundColorType()",
"scope":"source.lua"},

"ccui.Layout:getBackGroundEndColor()":{
"prefix":"ccui.Layout:getBackGroundEndColor()",
"body":["ccui.Layout:getBackGroundEndColor()"],
"description":"getBackGroundEndColor()",
"scope":"source.lua"},

"ccui.Layout:setBackGroundColorOpacity(GLubyte_opacity)":{
"prefix":"ccui.Layout:setBackGroundColorOpacity(GLubyte_opacity)",
"body":["ccui.Layout:setBackGroundColorOpacity(GLubyte_opacity)"],
"description":"setBackGroundColorOpacity(GLubyte_opacity)",
"scope":"source.lua"},

"ccui.Layout:getBackGroundImageOpacity()":{
"prefix":"ccui.Layout:getBackGroundImageOpacity()",
"body":["ccui.Layout:getBackGroundImageOpacity()"],
"description":"getBackGroundImageOpacity()",
"scope":"source.lua"},

"ccui.Layout:isPassFocusToChild()":{
"prefix":"ccui.Layout:isPassFocusToChild()",
"body":["ccui.Layout:isPassFocusToChild()"],
"description":"isPassFocusToChild()",
"scope":"source.lua"},

"ccui.Layout:setBackGroundImageCapInsets(const_Rect_capInsets)":{
"prefix":"ccui.Layout:setBackGroundImageCapInsets(const_Rect_capInsets)",
"body":["ccui.Layout:setBackGroundImageCapInsets(const_Rect_capInsets)"],
"description":"setBackGroundImageCapInsets(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Layout:getBackGroundImageTextureSize()":{
"prefix":"ccui.Layout:getBackGroundImageTextureSize()",
"body":["ccui.Layout:getBackGroundImageTextureSize()"],
"description":"getBackGroundImageTextureSize()",
"scope":"source.lua"},

"ccui.Layout:forceDoLayout()":{
"prefix":"ccui.Layout:forceDoLayout()",
"body":["ccui.Layout:forceDoLayout()"],
"description":"forceDoLayout()",
"scope":"source.lua"},

"ccui.Layout:getLayoutType()":{
"prefix":"ccui.Layout:getLayoutType()",
"body":["ccui.Layout:getLayoutType()"],
"description":"getLayoutType()",
"scope":"source.lua"},

"ccui.Layout:setPassFocusToChild(bool_pass)":{
"prefix":"ccui.Layout:setPassFocusToChild(bool_pass)",
"body":["ccui.Layout:setPassFocusToChild(bool_pass)"],
"description":"setPassFocusToChild(bool_pass)",
"scope":"source.lua"},

"ccui.Layout:getBackGroundStartColor()":{
"prefix":"ccui.Layout:getBackGroundStartColor()",
"body":["ccui.Layout:getBackGroundStartColor()"],
"description":"getBackGroundStartColor()",
"scope":"source.lua"},

"ccui.Layout:setBackGroundImageScale9Enabled(bool_enabled)":{
"prefix":"ccui.Layout:setBackGroundImageScale9Enabled(bool_enabled)",
"body":["ccui.Layout:setBackGroundImageScale9Enabled(bool_enabled)"],
"description":"setBackGroundImageScale9Enabled(bool_enabled)",
"scope":"source.lua"},

"ccui.Layout:setLayoutType(Type_type)":{
"prefix":"ccui.Layout:setLayoutType(Type_type)",
"body":["ccui.Layout:setLayoutType(Type_type)"],
"description":"setLayoutType(Type_type)",
"scope":"source.lua"},

"ccui.Layout:create()":{
"prefix":"ccui.Layout:create()",
"body":["ccui.Layout:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.Button":{
"prefix":"ccui.Button",
"body":["ccui.Button"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.Button:getNormalTextureSize()":{
"prefix":"ccui.Button:getNormalTextureSize()",
"body":["ccui.Button:getNormalTextureSize()"],
"description":"getNormalTextureSize()",
"scope":"source.lua"},

"ccui.Button:getTitleText()":{
"prefix":"ccui.Button:getTitleText()",
"body":["ccui.Button:getTitleText()"],
"description":"getTitleText()",
"scope":"source.lua"},

"ccui.Button:setTitleLabel(Label_label)":{
"prefix":"ccui.Button:setTitleLabel(Label_label)",
"body":["ccui.Button:setTitleLabel(Label_label)"],
"description":"setTitleLabel(Label_label)",
"scope":"source.lua"},

"ccui.Button:setTitleFontSize(float_size)":{
"prefix":"ccui.Button:setTitleFontSize(float_size)",
"body":["ccui.Button:setTitleFontSize(float_size)"],
"description":"setTitleFontSize(float_size)",
"scope":"source.lua"},

"ccui.Button:resetPressedRender()":{
"prefix":"ccui.Button:resetPressedRender()",
"body":["ccui.Button:resetPressedRender()"],
"description":"resetPressedRender()",
"scope":"source.lua"},

"ccui.Button:setScale9Enabled(bool_enable)":{
"prefix":"ccui.Button:setScale9Enabled(bool_enable)",
"body":["ccui.Button:setScale9Enabled(bool_enable)"],
"description":"setScale9Enabled(bool_enable)",
"scope":"source.lua"},

"ccui.Button:resetDisabledRender()":{
"prefix":"ccui.Button:resetDisabledRender()",
"body":["ccui.Button:resetDisabledRender()"],
"description":"resetDisabledRender()",
"scope":"source.lua"},

"ccui.Button:getTitleRenderer()":{
"prefix":"ccui.Button:getTitleRenderer()",
"body":["ccui.Button:getTitleRenderer()"],
"description":"getTitleRenderer()",
"scope":"source.lua"},

"ccui.Button:getRendererClicked()":{
"prefix":"ccui.Button:getRendererClicked()",
"body":["ccui.Button:getRendererClicked()"],
"description":"getRendererClicked()",
"scope":"source.lua"},

"ccui.Button:getDisabledFile()":{
"prefix":"ccui.Button:getDisabledFile()",
"body":["ccui.Button:getDisabledFile()"],
"description":"getDisabledFile()",
"scope":"source.lua"},

"ccui.Button:getZoomScale()":{
"prefix":"ccui.Button:getZoomScale()",
"body":["ccui.Button:getZoomScale()"],
"description":"getZoomScale()",
"scope":"source.lua"},

"ccui.Button:getCapInsetsDisabledRenderer()":{
"prefix":"ccui.Button:getCapInsetsDisabledRenderer()",
"body":["ccui.Button:getCapInsetsDisabledRenderer()"],
"description":"getCapInsetsDisabledRenderer()",
"scope":"source.lua"},

"ccui.Button:setTitleColor(const_Color3B_color)":{
"prefix":"ccui.Button:setTitleColor(const_Color3B_color)",
"body":["ccui.Button:setTitleColor(const_Color3B_color)"],
"description":"setTitleColor(const_Color3B_color)",
"scope":"source.lua"},

"ccui.Button:getNormalFile()":{
"prefix":"ccui.Button:getNormalFile()",
"body":["ccui.Button:getNormalFile()"],
"description":"getNormalFile()",
"scope":"source.lua"},

"ccui.Button:resetNormalRender()":{
"prefix":"ccui.Button:resetNormalRender()",
"body":["ccui.Button:resetNormalRender()"],
"description":"resetNormalRender()",
"scope":"source.lua"},

"ccui.Button:getRendererDisabled()":{
"prefix":"ccui.Button:getRendererDisabled()",
"body":["ccui.Button:getRendererDisabled()"],
"description":"getRendererDisabled()",
"scope":"source.lua"},

"ccui.Button:setCapInsetsDisabledRenderer(const_Rect_capInsets)":{
"prefix":"ccui.Button:setCapInsetsDisabledRenderer(const_Rect_capInsets)",
"body":["ccui.Button:setCapInsetsDisabledRenderer(const_Rect_capInsets)"],
"description":"setCapInsetsDisabledRenderer(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Button:setCapInsets(const_Rect_capInsets)":{
"prefix":"ccui.Button:setCapInsets(const_Rect_capInsets)",
"body":["ccui.Button:setCapInsets(const_Rect_capInsets)"],
"description":"setCapInsets(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Button:loadTextureDisabled(const_std_string_disabled,TextureResType_texType)":{
"prefix":"ccui.Button:loadTextureDisabled(const_std_string_disabled,TextureResType_texType)",
"body":["ccui.Button:loadTextureDisabled(const_std_string_disabled,TextureResType_texType)"],
"description":"loadTextureDisabled(const_std_string_disabled,TextureResType_texType)",
"scope":"source.lua"},

"ccui.Button:loadTextureDisabled(SpriteFrame_disabledSpriteFrame)":{
"prefix":"ccui.Button:loadTextureDisabled(SpriteFrame_disabledSpriteFrame)",
"body":["ccui.Button:loadTextureDisabled(SpriteFrame_disabledSpriteFrame)"],
"description":"loadTextureDisabled(SpriteFrame_disabledSpriteFrame)",
"scope":"source.lua"},

"ccui.Button:init()":{
"prefix":"ccui.Button:init()",
"body":["ccui.Button:init()"],
"description":"init()",
"scope":"source.lua"},

"ccui.Button:setTitleText(const_std_string_text)":{
"prefix":"ccui.Button:setTitleText(const_std_string_text)",
"body":["ccui.Button:setTitleText(const_std_string_text)"],
"description":"setTitleText(const_std_string_text)",
"scope":"source.lua"},

"ccui.Button:setCapInsetsNormalRenderer(const_Rect_capInsets)":{
"prefix":"ccui.Button:setCapInsetsNormalRenderer(const_Rect_capInsets)",
"body":["ccui.Button:setCapInsetsNormalRenderer(const_Rect_capInsets)"],
"description":"setCapInsetsNormalRenderer(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Button:loadTexturePressed(const_std_string_selected,TextureResType_texType)":{
"prefix":"ccui.Button:loadTexturePressed(const_std_string_selected,TextureResType_texType)",
"body":["ccui.Button:loadTexturePressed(const_std_string_selected,TextureResType_texType)"],
"description":"loadTexturePressed(const_std_string_selected,TextureResType_texType)",
"scope":"source.lua"},

"ccui.Button:loadTexturePressed(SpriteFrame_pressedSpriteFrame)":{
"prefix":"ccui.Button:loadTexturePressed(SpriteFrame_pressedSpriteFrame)",
"body":["ccui.Button:loadTexturePressed(SpriteFrame_pressedSpriteFrame)"],
"description":"loadTexturePressed(SpriteFrame_pressedSpriteFrame)",
"scope":"source.lua"},

"ccui.Button:setTitleFontName(const_std_string_fontName)":{
"prefix":"ccui.Button:setTitleFontName(const_std_string_fontName)",
"body":["ccui.Button:setTitleFontName(const_std_string_fontName)"],
"description":"setTitleFontName(const_std_string_fontName)",
"scope":"source.lua"},

"ccui.Button:getCapInsetsNormalRenderer()":{
"prefix":"ccui.Button:getCapInsetsNormalRenderer()",
"body":["ccui.Button:getCapInsetsNormalRenderer()"],
"description":"getCapInsetsNormalRenderer()",
"scope":"source.lua"},

"ccui.Button:setTitleAlignment(TextHAlignment_hAlignment)":{
"prefix":"ccui.Button:setTitleAlignment(TextHAlignment_hAlignment)",
"body":["ccui.Button:setTitleAlignment(TextHAlignment_hAlignment)"],
"description":"setTitleAlignment(TextHAlignment_hAlignment)",
"scope":"source.lua"},

"ccui.Button:setTitleAlignment(TextHAlignment_hAlignment,TextVAlignment_vAlignment)":{
"prefix":"ccui.Button:setTitleAlignment(TextHAlignment_hAlignment,TextVAlignment_vAlignment)",
"body":["ccui.Button:setTitleAlignment(TextHAlignment_hAlignment,TextVAlignment_vAlignment)"],
"description":"setTitleAlignment(TextHAlignment_hAlignment,TextVAlignment_vAlignment)",
"scope":"source.lua"},

"ccui.Button:getCapInsetsPressedRenderer()":{
"prefix":"ccui.Button:getCapInsetsPressedRenderer()",
"body":["ccui.Button:getCapInsetsPressedRenderer()"],
"description":"getCapInsetsPressedRenderer()",
"scope":"source.lua"},

"ccui.Button:isScale9Enabled()":{
"prefix":"ccui.Button:isScale9Enabled()",
"body":["ccui.Button:isScale9Enabled()"],
"description":"isScale9Enabled()",
"scope":"source.lua"},

"ccui.Button:loadTextureNormal(const_std_string_normal,TextureResType_texType)":{
"prefix":"ccui.Button:loadTextureNormal(const_std_string_normal,TextureResType_texType)",
"body":["ccui.Button:loadTextureNormal(const_std_string_normal,TextureResType_texType)"],
"description":"loadTextureNormal(const_std_string_normal,TextureResType_texType)",
"scope":"source.lua"},

"ccui.Button:loadTextureNormal(SpriteFrame_normalSpriteFrame)":{
"prefix":"ccui.Button:loadTextureNormal(SpriteFrame_normalSpriteFrame)",
"body":["ccui.Button:loadTextureNormal(SpriteFrame_normalSpriteFrame)"],
"description":"loadTextureNormal(SpriteFrame_normalSpriteFrame)",
"scope":"source.lua"},

"ccui.Button:setCapInsetsPressedRenderer(const_Rect_capInsets)":{
"prefix":"ccui.Button:setCapInsetsPressedRenderer(const_Rect_capInsets)",
"body":["ccui.Button:setCapInsetsPressedRenderer(const_Rect_capInsets)"],
"description":"setCapInsetsPressedRenderer(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Button:getPressedFile()":{
"prefix":"ccui.Button:getPressedFile()",
"body":["ccui.Button:getPressedFile()"],
"description":"getPressedFile()",
"scope":"source.lua"},

"ccui.Button:getTitleLabel()":{
"prefix":"ccui.Button:getTitleLabel()",
"body":["ccui.Button:getTitleLabel()"],
"description":"getTitleLabel()",
"scope":"source.lua"},

"ccui.Button:getTitleFontSize()":{
"prefix":"ccui.Button:getTitleFontSize()",
"body":["ccui.Button:getTitleFontSize()"],
"description":"getTitleFontSize()",
"scope":"source.lua"},

"ccui.Button:getRendererNormal()":{
"prefix":"ccui.Button:getRendererNormal()",
"body":["ccui.Button:getRendererNormal()"],
"description":"getRendererNormal()",
"scope":"source.lua"},

"ccui.Button:getTitleFontName()":{
"prefix":"ccui.Button:getTitleFontName()",
"body":["ccui.Button:getTitleFontName()"],
"description":"getTitleFontName()",
"scope":"source.lua"},

"ccui.Button:getTitleColor()":{
"prefix":"ccui.Button:getTitleColor()",
"body":["ccui.Button:getTitleColor()"],
"description":"getTitleColor()",
"scope":"source.lua"},

"ccui.Button:setPressedActionEnabled(bool_enabled)":{
"prefix":"ccui.Button:setPressedActionEnabled(bool_enabled)",
"body":["ccui.Button:setPressedActionEnabled(bool_enabled)"],
"description":"setPressedActionEnabled(bool_enabled)",
"scope":"source.lua"},

"ccui.Button:setZoomScale(float_scale)":{
"prefix":"ccui.Button:setZoomScale(float_scale)",
"body":["ccui.Button:setZoomScale(float_scale)"],
"description":"setZoomScale(float_scale)",
"scope":"source.lua"},

"ccui.Button:create()":{
"prefix":"ccui.Button:create()",
"body":["ccui.Button:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.AbstractCheckButton":{
"prefix":"ccui.AbstractCheckButton",
"body":["ccui.AbstractCheckButton"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getCrossDisabledFile()":{
"prefix":"ccui.AbstractCheckButton:getCrossDisabledFile()",
"body":["ccui.AbstractCheckButton:getCrossDisabledFile()"],
"description":"getCrossDisabledFile()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getBackDisabledFile()":{
"prefix":"ccui.AbstractCheckButton:getBackDisabledFile()",
"body":["ccui.AbstractCheckButton:getBackDisabledFile()"],
"description":"getBackDisabledFile()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:loadTextureBackGroundSelected(const_std_string_backGroundSelected,TextureResType_texType)":{
"prefix":"ccui.AbstractCheckButton:loadTextureBackGroundSelected(const_std_string_backGroundSelected,TextureResType_texType)",
"body":["ccui.AbstractCheckButton:loadTextureBackGroundSelected(const_std_string_backGroundSelected,TextureResType_texType)"],
"description":"loadTextureBackGroundSelected(const_std_string_backGroundSelected,TextureResType_texType)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:loadTextureBackGroundSelected(SpriteFrame_spriteFrame)":{
"prefix":"ccui.AbstractCheckButton:loadTextureBackGroundSelected(SpriteFrame_spriteFrame)",
"body":["ccui.AbstractCheckButton:loadTextureBackGroundSelected(SpriteFrame_spriteFrame)"],
"description":"loadTextureBackGroundSelected(SpriteFrame_spriteFrame)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:loadTextureBackGroundDisabled(const_std_string_backGroundDisabled,TextureResType_texType)":{
"prefix":"ccui.AbstractCheckButton:loadTextureBackGroundDisabled(const_std_string_backGroundDisabled,TextureResType_texType)",
"body":["ccui.AbstractCheckButton:loadTextureBackGroundDisabled(const_std_string_backGroundDisabled,TextureResType_texType)"],
"description":"loadTextureBackGroundDisabled(const_std_string_backGroundDisabled,TextureResType_texType)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:loadTextureBackGroundDisabled(SpriteFrame_spriteframe)":{
"prefix":"ccui.AbstractCheckButton:loadTextureBackGroundDisabled(SpriteFrame_spriteframe)",
"body":["ccui.AbstractCheckButton:loadTextureBackGroundDisabled(SpriteFrame_spriteframe)"],
"description":"loadTextureBackGroundDisabled(SpriteFrame_spriteframe)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getCrossNormalFile()":{
"prefix":"ccui.AbstractCheckButton:getCrossNormalFile()",
"body":["ccui.AbstractCheckButton:getCrossNormalFile()"],
"description":"getCrossNormalFile()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:setSelected(bool_selected)":{
"prefix":"ccui.AbstractCheckButton:setSelected(bool_selected)",
"body":["ccui.AbstractCheckButton:setSelected(bool_selected)"],
"description":"setSelected(bool_selected)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getBackPressedFile()":{
"prefix":"ccui.AbstractCheckButton:getBackPressedFile()",
"body":["ccui.AbstractCheckButton:getBackPressedFile()"],
"description":"getBackPressedFile()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getRendererFrontCrossDisabled()":{
"prefix":"ccui.AbstractCheckButton:getRendererFrontCrossDisabled()",
"body":["ccui.AbstractCheckButton:getRendererFrontCrossDisabled()"],
"description":"getRendererFrontCrossDisabled()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getRendererBackground()":{
"prefix":"ccui.AbstractCheckButton:getRendererBackground()",
"body":["ccui.AbstractCheckButton:getRendererBackground()"],
"description":"getRendererBackground()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:loadTextureFrontCross(const_std_string_crossTextureName,TextureResType_texType)":{
"prefix":"ccui.AbstractCheckButton:loadTextureFrontCross(const_std_string_crossTextureName,TextureResType_texType)",
"body":["ccui.AbstractCheckButton:loadTextureFrontCross(const_std_string_crossTextureName,TextureResType_texType)"],
"description":"loadTextureFrontCross(const_std_string_crossTextureName,TextureResType_texType)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:loadTextureFrontCross(SpriteFrame_spriteframe)":{
"prefix":"ccui.AbstractCheckButton:loadTextureFrontCross(SpriteFrame_spriteframe)",
"body":["ccui.AbstractCheckButton:loadTextureFrontCross(SpriteFrame_spriteframe)"],
"description":"loadTextureFrontCross(SpriteFrame_spriteframe)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getRendererBackgroundDisabled()":{
"prefix":"ccui.AbstractCheckButton:getRendererBackgroundDisabled()",
"body":["ccui.AbstractCheckButton:getRendererBackgroundDisabled()"],
"description":"getRendererBackgroundDisabled()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:isSelected()":{
"prefix":"ccui.AbstractCheckButton:isSelected()",
"body":["ccui.AbstractCheckButton:isSelected()"],
"description":"isSelected()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:init()":{
"prefix":"ccui.AbstractCheckButton:init()",
"body":["ccui.AbstractCheckButton:init()"],
"description":"init()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getBackNormalFile()":{
"prefix":"ccui.AbstractCheckButton:getBackNormalFile()",
"body":["ccui.AbstractCheckButton:getBackNormalFile()"],
"description":"getBackNormalFile()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getZoomScale()":{
"prefix":"ccui.AbstractCheckButton:getZoomScale()",
"body":["ccui.AbstractCheckButton:getZoomScale()"],
"description":"getZoomScale()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getRendererFrontCross()":{
"prefix":"ccui.AbstractCheckButton:getRendererFrontCross()",
"body":["ccui.AbstractCheckButton:getRendererFrontCross()"],
"description":"getRendererFrontCross()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:getRendererBackgroundSelected()":{
"prefix":"ccui.AbstractCheckButton:getRendererBackgroundSelected()",
"body":["ccui.AbstractCheckButton:getRendererBackgroundSelected()"],
"description":"getRendererBackgroundSelected()",
"scope":"source.lua"},

"ccui.AbstractCheckButton:loadTextureBackGround(const_std_string_backGround,TextureResType_type)":{
"prefix":"ccui.AbstractCheckButton:loadTextureBackGround(const_std_string_backGround,TextureResType_type)",
"body":["ccui.AbstractCheckButton:loadTextureBackGround(const_std_string_backGround,TextureResType_type)"],
"description":"loadTextureBackGround(const_std_string_backGround,TextureResType_type)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:loadTextureBackGround(SpriteFrame_spriteFrame)":{
"prefix":"ccui.AbstractCheckButton:loadTextureBackGround(SpriteFrame_spriteFrame)",
"body":["ccui.AbstractCheckButton:loadTextureBackGround(SpriteFrame_spriteFrame)"],
"description":"loadTextureBackGround(SpriteFrame_spriteFrame)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:setZoomScale(float_scale)":{
"prefix":"ccui.AbstractCheckButton:setZoomScale(float_scale)",
"body":["ccui.AbstractCheckButton:setZoomScale(float_scale)"],
"description":"setZoomScale(float_scale)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:loadTextureFrontCrossDisabled(const_std_string_frontCrossDisabled,TextureResType_texType)":{
"prefix":"ccui.AbstractCheckButton:loadTextureFrontCrossDisabled(const_std_string_frontCrossDisabled,TextureResType_texType)",
"body":["ccui.AbstractCheckButton:loadTextureFrontCrossDisabled(const_std_string_frontCrossDisabled,TextureResType_texType)"],
"description":"loadTextureFrontCrossDisabled(const_std_string_frontCrossDisabled,TextureResType_texType)",
"scope":"source.lua"},

"ccui.AbstractCheckButton:loadTextureFrontCrossDisabled(SpriteFrame_spriteframe)":{
"prefix":"ccui.AbstractCheckButton:loadTextureFrontCrossDisabled(SpriteFrame_spriteframe)",
"body":["ccui.AbstractCheckButton:loadTextureFrontCrossDisabled(SpriteFrame_spriteframe)"],
"description":"loadTextureFrontCrossDisabled(SpriteFrame_spriteframe)",
"scope":"source.lua"},

"ccui.CheckBox":{
"prefix":"ccui.CheckBox",
"body":["ccui.CheckBox"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.CheckBox:addEventListener(const_ccCheckBoxCallback_callback)":{
"prefix":"ccui.CheckBox:addEventListener(const_ccCheckBoxCallback_callback)",
"body":["ccui.CheckBox:addEventListener(const_ccCheckBoxCallback_callback)"],
"description":"addEventListener(const_ccCheckBoxCallback_callback)",
"scope":"source.lua"},

"ccui.CheckBox:create()":{
"prefix":"ccui.CheckBox:create()",
"body":["ccui.CheckBox:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.RadioButton":{
"prefix":"ccui.RadioButton",
"body":["ccui.RadioButton"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.RadioButton:addEventListener(const_ccRadioButtonCallback_callback)":{
"prefix":"ccui.RadioButton:addEventListener(const_ccRadioButtonCallback_callback)",
"body":["ccui.RadioButton:addEventListener(const_ccRadioButtonCallback_callback)"],
"description":"addEventListener(const_ccRadioButtonCallback_callback)",
"scope":"source.lua"},

"ccui.RadioButton:create()":{
"prefix":"ccui.RadioButton:create()",
"body":["ccui.RadioButton:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.RadioButtonGroup":{
"prefix":"ccui.RadioButtonGroup",
"body":["ccui.RadioButtonGroup"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.RadioButtonGroup:removeRadioButton(RadioButton_radioButton)":{
"prefix":"ccui.RadioButtonGroup:removeRadioButton(RadioButton_radioButton)",
"body":["ccui.RadioButtonGroup:removeRadioButton(RadioButton_radioButton)"],
"description":"removeRadioButton(RadioButton_radioButton)",
"scope":"source.lua"},

"ccui.RadioButtonGroup:isAllowedNoSelection()":{
"prefix":"ccui.RadioButtonGroup:isAllowedNoSelection()",
"body":["ccui.RadioButtonGroup:isAllowedNoSelection()"],
"description":"isAllowedNoSelection()",
"scope":"source.lua"},

"ccui.RadioButtonGroup:getSelectedButtonIndex()":{
"prefix":"ccui.RadioButtonGroup:getSelectedButtonIndex()",
"body":["ccui.RadioButtonGroup:getSelectedButtonIndex()"],
"description":"getSelectedButtonIndex()",
"scope":"source.lua"},

"ccui.RadioButtonGroup:setAllowedNoSelection(bool_allowedNoSelection)":{
"prefix":"ccui.RadioButtonGroup:setAllowedNoSelection(bool_allowedNoSelection)",
"body":["ccui.RadioButtonGroup:setAllowedNoSelection(bool_allowedNoSelection)"],
"description":"setAllowedNoSelection(bool_allowedNoSelection)",
"scope":"source.lua"},

"ccui.RadioButtonGroup:setSelectedButtonWithoutEvent(int_index)":{
"prefix":"ccui.RadioButtonGroup:setSelectedButtonWithoutEvent(int_index)",
"body":["ccui.RadioButtonGroup:setSelectedButtonWithoutEvent(int_index)"],
"description":"setSelectedButtonWithoutEvent(int_index)",
"scope":"source.lua"},

"ccui.RadioButtonGroup:setSelectedButtonWithoutEvent(RadioButton_radioButton)":{
"prefix":"ccui.RadioButtonGroup:setSelectedButtonWithoutEvent(RadioButton_radioButton)",
"body":["ccui.RadioButtonGroup:setSelectedButtonWithoutEvent(RadioButton_radioButton)"],
"description":"setSelectedButtonWithoutEvent(RadioButton_radioButton)",
"scope":"source.lua"},

"ccui.RadioButtonGroup:addEventListener(const_ccRadioButtonGroupCallback_callback)":{
"prefix":"ccui.RadioButtonGroup:addEventListener(const_ccRadioButtonGroupCallback_callback)",
"body":["ccui.RadioButtonGroup:addEventListener(const_ccRadioButtonGroupCallback_callback)"],
"description":"addEventListener(const_ccRadioButtonGroupCallback_callback)",
"scope":"source.lua"},

"ccui.RadioButtonGroup:removeAllRadioButtons()":{
"prefix":"ccui.RadioButtonGroup:removeAllRadioButtons()",
"body":["ccui.RadioButtonGroup:removeAllRadioButtons()"],
"description":"removeAllRadioButtons()",
"scope":"source.lua"},

"ccui.RadioButtonGroup:getRadioButtonByIndex(int_index)":{
"prefix":"ccui.RadioButtonGroup:getRadioButtonByIndex(int_index)",
"body":["ccui.RadioButtonGroup:getRadioButtonByIndex(int_index)"],
"description":"getRadioButtonByIndex(int_index)",
"scope":"source.lua"},

"ccui.RadioButtonGroup:getNumberOfRadioButtons()":{
"prefix":"ccui.RadioButtonGroup:getNumberOfRadioButtons()",
"body":["ccui.RadioButtonGroup:getNumberOfRadioButtons()"],
"description":"getNumberOfRadioButtons()",
"scope":"source.lua"},

"ccui.RadioButtonGroup:addRadioButton(RadioButton_radioButton)":{
"prefix":"ccui.RadioButtonGroup:addRadioButton(RadioButton_radioButton)",
"body":["ccui.RadioButtonGroup:addRadioButton(RadioButton_radioButton)"],
"description":"addRadioButton(RadioButton_radioButton)",
"scope":"source.lua"},

"ccui.RadioButtonGroup:setSelectedButton(int_index)":{
"prefix":"ccui.RadioButtonGroup:setSelectedButton(int_index)",
"body":["ccui.RadioButtonGroup:setSelectedButton(int_index)"],
"description":"setSelectedButton(int_index)",
"scope":"source.lua"},

"ccui.RadioButtonGroup:setSelectedButton(RadioButton_radioButton)":{
"prefix":"ccui.RadioButtonGroup:setSelectedButton(RadioButton_radioButton)",
"body":["ccui.RadioButtonGroup:setSelectedButton(RadioButton_radioButton)"],
"description":"setSelectedButton(RadioButton_radioButton)",
"scope":"source.lua"},

"ccui.RadioButtonGroup:create()":{
"prefix":"ccui.RadioButtonGroup:create()",
"body":["ccui.RadioButtonGroup:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.ImageView":{
"prefix":"ccui.ImageView",
"body":["ccui.ImageView"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.ImageView:loadTexture(const_std_string_fileName,TextureResType_texType)":{
"prefix":"ccui.ImageView:loadTexture(const_std_string_fileName,TextureResType_texType)",
"body":["ccui.ImageView:loadTexture(const_std_string_fileName,TextureResType_texType)"],
"description":"loadTexture(const_std_string_fileName,TextureResType_texType)",
"scope":"source.lua"},

"ccui.ImageView:loadTexture(SpriteFrame_spriteframe)":{
"prefix":"ccui.ImageView:loadTexture(SpriteFrame_spriteframe)",
"body":["ccui.ImageView:loadTexture(SpriteFrame_spriteframe)"],
"description":"loadTexture(SpriteFrame_spriteframe)",
"scope":"source.lua"},

"ccui.ImageView:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"ccui.ImageView:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["ccui.ImageView:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"ccui.ImageView:init()":{
"prefix":"ccui.ImageView:init()",
"body":["ccui.ImageView:init()"],
"description":"init()",
"scope":"source.lua"},

"ccui.ImageView:setScale9Enabled(bool_enabled)":{
"prefix":"ccui.ImageView:setScale9Enabled(bool_enabled)",
"body":["ccui.ImageView:setScale9Enabled(bool_enabled)"],
"description":"setScale9Enabled(bool_enabled)",
"scope":"source.lua"},

"ccui.ImageView:setTextureRect(const_Rect_rect)":{
"prefix":"ccui.ImageView:setTextureRect(const_Rect_rect)",
"body":["ccui.ImageView:setTextureRect(const_Rect_rect)"],
"description":"setTextureRect(const_Rect_rect)",
"scope":"source.lua"},

"ccui.ImageView:setCapInsets(const_Rect_capInsets)":{
"prefix":"ccui.ImageView:setCapInsets(const_Rect_capInsets)",
"body":["ccui.ImageView:setCapInsets(const_Rect_capInsets)"],
"description":"setCapInsets(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.ImageView:getRenderFile()":{
"prefix":"ccui.ImageView:getRenderFile()",
"body":["ccui.ImageView:getRenderFile()"],
"description":"getRenderFile()",
"scope":"source.lua"},

"ccui.ImageView:getCapInsets()":{
"prefix":"ccui.ImageView:getCapInsets()",
"body":["ccui.ImageView:getCapInsets()"],
"description":"getCapInsets()",
"scope":"source.lua"},

"ccui.ImageView:isScale9Enabled()":{
"prefix":"ccui.ImageView:isScale9Enabled()",
"body":["ccui.ImageView:isScale9Enabled()"],
"description":"isScale9Enabled()",
"scope":"source.lua"},

"ccui.ImageView:create()":{
"prefix":"ccui.ImageView:create()",
"body":["ccui.ImageView:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.ImageView:create(const_std_string_imageFileName,TextureResType_texType)":{
"prefix":"ccui.ImageView:create(const_std_string_imageFileName,TextureResType_texType)",
"body":["ccui.ImageView:create(const_std_string_imageFileName,TextureResType_texType)"],
"description":"create(const_std_string_imageFileName,TextureResType_texType)",
"scope":"source.lua"},

"ccui.Text":{
"prefix":"ccui.Text",
"body":["ccui.Text"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.Text:getFontSize()":{
"prefix":"ccui.Text:getFontSize()",
"body":["ccui.Text:getFontSize()"],
"description":"getFontSize()",
"scope":"source.lua"},

"ccui.Text:getString()":{
"prefix":"ccui.Text:getString()",
"body":["ccui.Text:getString()"],
"description":"getString()",
"scope":"source.lua"},

"ccui.Text:disableEffect()":{
"prefix":"ccui.Text:disableEffect()",
"body":["ccui.Text:disableEffect()"],
"description":"disableEffect()",
"scope":"source.lua"},

"ccui.Text:disableEffect(LabelEffect_effect)":{
"prefix":"ccui.Text:disableEffect(LabelEffect_effect)",
"body":["ccui.Text:disableEffect(LabelEffect_effect)"],
"description":"disableEffect(LabelEffect_effect)",
"scope":"source.lua"},

"ccui.Text:getLabelEffectType()":{
"prefix":"ccui.Text:getLabelEffectType()",
"body":["ccui.Text:getLabelEffectType()"],
"description":"getLabelEffectType()",
"scope":"source.lua"},

"ccui.Text:getTextColor()":{
"prefix":"ccui.Text:getTextColor()",
"body":["ccui.Text:getTextColor()"],
"description":"getTextColor()",
"scope":"source.lua"},

"ccui.Text:setTextVerticalAlignment(TextVAlignment_alignment)":{
"prefix":"ccui.Text:setTextVerticalAlignment(TextVAlignment_alignment)",
"body":["ccui.Text:setTextVerticalAlignment(TextVAlignment_alignment)"],
"description":"setTextVerticalAlignment(TextVAlignment_alignment)",
"scope":"source.lua"},

"ccui.Text:setFontName(const_std_string_name)":{
"prefix":"ccui.Text:setFontName(const_std_string_name)",
"body":["ccui.Text:setFontName(const_std_string_name)"],
"description":"setFontName(const_std_string_name)",
"scope":"source.lua"},

"ccui.Text:setTouchScaleChangeEnabled(bool_enabled)":{
"prefix":"ccui.Text:setTouchScaleChangeEnabled(bool_enabled)",
"body":["ccui.Text:setTouchScaleChangeEnabled(bool_enabled)"],
"description":"setTouchScaleChangeEnabled(bool_enabled)",
"scope":"source.lua"},

"ccui.Text:getShadowOffset()":{
"prefix":"ccui.Text:getShadowOffset()",
"body":["ccui.Text:getShadowOffset()"],
"description":"getShadowOffset()",
"scope":"source.lua"},

"ccui.Text:setString(const_std_string_text)":{
"prefix":"ccui.Text:setString(const_std_string_text)",
"body":["ccui.Text:setString(const_std_string_text)"],
"description":"setString(const_std_string_text)",
"scope":"source.lua"},

"ccui.Text:getOutlineSize()":{
"prefix":"ccui.Text:getOutlineSize()",
"body":["ccui.Text:getOutlineSize()"],
"description":"getOutlineSize()",
"scope":"source.lua"},

"ccui.Text:init()":{
"prefix":"ccui.Text:init()",
"body":["ccui.Text:init()"],
"description":"init()",
"scope":"source.lua"},

"ccui.Text:getShadowBlurRadius()":{
"prefix":"ccui.Text:getShadowBlurRadius()",
"body":["ccui.Text:getShadowBlurRadius()"],
"description":"getShadowBlurRadius()",
"scope":"source.lua"},

"ccui.Text:isTouchScaleChangeEnabled()":{
"prefix":"ccui.Text:isTouchScaleChangeEnabled()",
"body":["ccui.Text:isTouchScaleChangeEnabled()"],
"description":"isTouchScaleChangeEnabled()",
"scope":"source.lua"},

"ccui.Text:getFontName()":{
"prefix":"ccui.Text:getFontName()",
"body":["ccui.Text:getFontName()"],
"description":"getFontName()",
"scope":"source.lua"},

"ccui.Text:setTextAreaSize(const_Size_size)":{
"prefix":"ccui.Text:setTextAreaSize(const_Size_size)",
"body":["ccui.Text:setTextAreaSize(const_Size_size)"],
"description":"setTextAreaSize(const_Size_size)",
"scope":"source.lua"},

"ccui.Text:getStringLength()":{
"prefix":"ccui.Text:getStringLength()",
"body":["ccui.Text:getStringLength()"],
"description":"getStringLength()",
"scope":"source.lua"},

"ccui.Text:getAutoRenderSize()":{
"prefix":"ccui.Text:getAutoRenderSize()",
"body":["ccui.Text:getAutoRenderSize()"],
"description":"getAutoRenderSize()",
"scope":"source.lua"},

"ccui.Text:enableOutline(const_Color4B_outlineColor,int_outlineSize)":{
"prefix":"ccui.Text:enableOutline(const_Color4B_outlineColor,int_outlineSize)",
"body":["ccui.Text:enableOutline(const_Color4B_outlineColor,int_outlineSize)"],
"description":"enableOutline(const_Color4B_outlineColor,int_outlineSize)",
"scope":"source.lua"},

"ccui.Text:getEffectColor()":{
"prefix":"ccui.Text:getEffectColor()",
"body":["ccui.Text:getEffectColor()"],
"description":"getEffectColor()",
"scope":"source.lua"},

"ccui.Text:getType()":{
"prefix":"ccui.Text:getType()",
"body":["ccui.Text:getType()"],
"description":"getType()",
"scope":"source.lua"},

"ccui.Text:getTextHorizontalAlignment()":{
"prefix":"ccui.Text:getTextHorizontalAlignment()",
"body":["ccui.Text:getTextHorizontalAlignment()"],
"description":"getTextHorizontalAlignment()",
"scope":"source.lua"},

"ccui.Text:isShadowEnabled()":{
"prefix":"ccui.Text:isShadowEnabled()",
"body":["ccui.Text:isShadowEnabled()"],
"description":"isShadowEnabled()",
"scope":"source.lua"},

"ccui.Text:setFontSize(float_size)":{
"prefix":"ccui.Text:setFontSize(float_size)",
"body":["ccui.Text:setFontSize(float_size)"],
"description":"setFontSize(float_size)",
"scope":"source.lua"},

"ccui.Text:getShadowColor()":{
"prefix":"ccui.Text:getShadowColor()",
"body":["ccui.Text:getShadowColor()"],
"description":"getShadowColor()",
"scope":"source.lua"},

"ccui.Text:setTextColor(const_Color4B_color)":{
"prefix":"ccui.Text:setTextColor(const_Color4B_color)",
"body":["ccui.Text:setTextColor(const_Color4B_color)"],
"description":"setTextColor(const_Color4B_color)",
"scope":"source.lua"},

"ccui.Text:enableGlow(const_Color4B_glowColor)":{
"prefix":"ccui.Text:enableGlow(const_Color4B_glowColor)",
"body":["ccui.Text:enableGlow(const_Color4B_glowColor)"],
"description":"enableGlow(const_Color4B_glowColor)",
"scope":"source.lua"},

"ccui.Text:getLetter(int_lettetIndex)":{
"prefix":"ccui.Text:getLetter(int_lettetIndex)",
"body":["ccui.Text:getLetter(int_lettetIndex)"],
"description":"getLetter(int_lettetIndex)",
"scope":"source.lua"},

"ccui.Text:getTextVerticalAlignment()":{
"prefix":"ccui.Text:getTextVerticalAlignment()",
"body":["ccui.Text:getTextVerticalAlignment()"],
"description":"getTextVerticalAlignment()",
"scope":"source.lua"},

"ccui.Text:getTextAreaSize()":{
"prefix":"ccui.Text:getTextAreaSize()",
"body":["ccui.Text:getTextAreaSize()"],
"description":"getTextAreaSize()",
"scope":"source.lua"},

"ccui.Text:setTextHorizontalAlignment(TextHAlignment_alignment)":{
"prefix":"ccui.Text:setTextHorizontalAlignment(TextHAlignment_alignment)",
"body":["ccui.Text:setTextHorizontalAlignment(TextHAlignment_alignment)"],
"description":"setTextHorizontalAlignment(TextHAlignment_alignment)",
"scope":"source.lua"},

"ccui.Text:create()":{
"prefix":"ccui.Text:create()",
"body":["ccui.Text:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.TextAtlas":{
"prefix":"ccui.TextAtlas",
"body":["ccui.TextAtlas"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.TextAtlas:getStringLength()":{
"prefix":"ccui.TextAtlas:getStringLength()",
"body":["ccui.TextAtlas:getStringLength()"],
"description":"getStringLength()",
"scope":"source.lua"},

"ccui.TextAtlas:getString()":{
"prefix":"ccui.TextAtlas:getString()",
"body":["ccui.TextAtlas:getString()"],
"description":"getString()",
"scope":"source.lua"},

"ccui.TextAtlas:setString(const_std_string_value)":{
"prefix":"ccui.TextAtlas:setString(const_std_string_value)",
"body":["ccui.TextAtlas:setString(const_std_string_value)"],
"description":"setString(const_std_string_value)",
"scope":"source.lua"},

"ccui.TextAtlas:getRenderFile()":{
"prefix":"ccui.TextAtlas:getRenderFile()",
"body":["ccui.TextAtlas:getRenderFile()"],
"description":"getRenderFile()",
"scope":"source.lua"},

"ccui.TextAtlas:adaptRenderers()":{
"prefix":"ccui.TextAtlas:adaptRenderers()",
"body":["ccui.TextAtlas:adaptRenderers()"],
"description":"adaptRenderers()",
"scope":"source.lua"},

"ccui.TextAtlas:create()":{
"prefix":"ccui.TextAtlas:create()",
"body":["ccui.TextAtlas:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.LoadingBar":{
"prefix":"ccui.LoadingBar",
"body":["ccui.LoadingBar"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.LoadingBar:setPercent(float_percent)":{
"prefix":"ccui.LoadingBar:setPercent(float_percent)",
"body":["ccui.LoadingBar:setPercent(float_percent)"],
"description":"setPercent(float_percent)",
"scope":"source.lua"},

"ccui.LoadingBar:loadTexture(const_std_string_texture,TextureResType_texType)":{
"prefix":"ccui.LoadingBar:loadTexture(const_std_string_texture,TextureResType_texType)",
"body":["ccui.LoadingBar:loadTexture(const_std_string_texture,TextureResType_texType)"],
"description":"loadTexture(const_std_string_texture,TextureResType_texType)",
"scope":"source.lua"},

"ccui.LoadingBar:loadTexture(SpriteFrame_spriteframe)":{
"prefix":"ccui.LoadingBar:loadTexture(SpriteFrame_spriteframe)",
"body":["ccui.LoadingBar:loadTexture(SpriteFrame_spriteframe)"],
"description":"loadTexture(SpriteFrame_spriteframe)",
"scope":"source.lua"},

"ccui.LoadingBar:setDirection(Direction_direction)":{
"prefix":"ccui.LoadingBar:setDirection(Direction_direction)",
"body":["ccui.LoadingBar:setDirection(Direction_direction)"],
"description":"setDirection(Direction_direction)",
"scope":"source.lua"},

"ccui.LoadingBar:getRenderFile()":{
"prefix":"ccui.LoadingBar:getRenderFile()",
"body":["ccui.LoadingBar:getRenderFile()"],
"description":"getRenderFile()",
"scope":"source.lua"},

"ccui.LoadingBar:setScale9Enabled(bool_enabled)":{
"prefix":"ccui.LoadingBar:setScale9Enabled(bool_enabled)",
"body":["ccui.LoadingBar:setScale9Enabled(bool_enabled)"],
"description":"setScale9Enabled(bool_enabled)",
"scope":"source.lua"},

"ccui.LoadingBar:setCapInsets(const_Rect_capInsets)":{
"prefix":"ccui.LoadingBar:setCapInsets(const_Rect_capInsets)",
"body":["ccui.LoadingBar:setCapInsets(const_Rect_capInsets)"],
"description":"setCapInsets(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.LoadingBar:getDirection()":{
"prefix":"ccui.LoadingBar:getDirection()",
"body":["ccui.LoadingBar:getDirection()"],
"description":"getDirection()",
"scope":"source.lua"},

"ccui.LoadingBar:getCapInsets()":{
"prefix":"ccui.LoadingBar:getCapInsets()",
"body":["ccui.LoadingBar:getCapInsets()"],
"description":"getCapInsets()",
"scope":"source.lua"},

"ccui.LoadingBar:isScale9Enabled()":{
"prefix":"ccui.LoadingBar:isScale9Enabled()",
"body":["ccui.LoadingBar:isScale9Enabled()"],
"description":"isScale9Enabled()",
"scope":"source.lua"},

"ccui.LoadingBar:getPercent()":{
"prefix":"ccui.LoadingBar:getPercent()",
"body":["ccui.LoadingBar:getPercent()"],
"description":"getPercent()",
"scope":"source.lua"},

"ccui.LoadingBar:create()":{
"prefix":"ccui.LoadingBar:create()",
"body":["ccui.LoadingBar:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.LoadingBar:create(const_std_string_textureName,float_percentage)":{
"prefix":"ccui.LoadingBar:create(const_std_string_textureName,float_percentage)",
"body":["ccui.LoadingBar:create(const_std_string_textureName,float_percentage)"],
"description":"create(const_std_string_textureName,float_percentage)",
"scope":"source.lua"},

"ccui.ListView":{
"prefix":"ccui.ListView",
"body":["ccui.ListView"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.ListView:setGravity(Gravity_gravity)":{
"prefix":"ccui.ListView:setGravity(Gravity_gravity)",
"body":["ccui.ListView:setGravity(Gravity_gravity)"],
"description":"setGravity(Gravity_gravity)",
"scope":"source.lua"},

"ccui.ListView:removeLastItem()":{
"prefix":"ccui.ListView:removeLastItem()",
"body":["ccui.ListView:removeLastItem()"],
"description":"removeLastItem()",
"scope":"source.lua"},

"ccui.ListView:getLeftPadding()":{
"prefix":"ccui.ListView:getLeftPadding()",
"body":["ccui.ListView:getLeftPadding()"],
"description":"getLeftPadding()",
"scope":"source.lua"},

"ccui.ListView:getCenterItemInCurrentView()":{
"prefix":"ccui.ListView:getCenterItemInCurrentView()",
"body":["ccui.ListView:getCenterItemInCurrentView()"],
"description":"getCenterItemInCurrentView()",
"scope":"source.lua"},

"ccui.ListView:getCurSelectedIndex()":{
"prefix":"ccui.ListView:getCurSelectedIndex()",
"body":["ccui.ListView:getCurSelectedIndex()"],
"description":"getCurSelectedIndex()",
"scope":"source.lua"},

"ccui.ListView:getScrollDuration()":{
"prefix":"ccui.ListView:getScrollDuration()",
"body":["ccui.ListView:getScrollDuration()"],
"description":"getScrollDuration()",
"scope":"source.lua"},

"ccui.ListView:getMagneticAllowedOutOfBoundary()":{
"prefix":"ccui.ListView:getMagneticAllowedOutOfBoundary()",
"body":["ccui.ListView:getMagneticAllowedOutOfBoundary()"],
"description":"getMagneticAllowedOutOfBoundary()",
"scope":"source.lua"},

"ccui.ListView:getItemsMargin()":{
"prefix":"ccui.ListView:getItemsMargin()",
"body":["ccui.ListView:getItemsMargin()"],
"description":"getItemsMargin()",
"scope":"source.lua"},

"ccui.ListView:scrollToItem(ssize_t_itemIndex,const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)":{
"prefix":"ccui.ListView:scrollToItem(ssize_t_itemIndex,const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)",
"body":["ccui.ListView:scrollToItem(ssize_t_itemIndex,const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)"],
"description":"scrollToItem(ssize_t_itemIndex,const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)",
"scope":"source.lua"},

"ccui.ListView:jumpToItem(ssize_t_itemIndex,const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)":{
"prefix":"ccui.ListView:jumpToItem(ssize_t_itemIndex,const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)",
"body":["ccui.ListView:jumpToItem(ssize_t_itemIndex,const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)"],
"description":"jumpToItem(ssize_t_itemIndex,const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)",
"scope":"source.lua"},

"ccui.ListView:setTopPadding(float_t)":{
"prefix":"ccui.ListView:setTopPadding(float_t)",
"body":["ccui.ListView:setTopPadding(float_t)"],
"description":"setTopPadding(float_t)",
"scope":"source.lua"},

"ccui.ListView:getIndex(Widget_item)":{
"prefix":"ccui.ListView:getIndex(Widget_item)",
"body":["ccui.ListView:getIndex(Widget_item)"],
"description":"getIndex(Widget_item)",
"scope":"source.lua"},

"ccui.ListView:pushBackCustomItem(Widget_item)":{
"prefix":"ccui.ListView:pushBackCustomItem(Widget_item)",
"body":["ccui.ListView:pushBackCustomItem(Widget_item)"],
"description":"pushBackCustomItem(Widget_item)",
"scope":"source.lua"},

"ccui.ListView:setCurSelectedIndex(int_itemIndex)":{
"prefix":"ccui.ListView:setCurSelectedIndex(int_itemIndex)",
"body":["ccui.ListView:setCurSelectedIndex(int_itemIndex)"],
"description":"setCurSelectedIndex(int_itemIndex)",
"scope":"source.lua"},

"ccui.ListView:insertDefaultItem(ssize_t_index)":{
"prefix":"ccui.ListView:insertDefaultItem(ssize_t_index)",
"body":["ccui.ListView:insertDefaultItem(ssize_t_index)"],
"description":"insertDefaultItem(ssize_t_index)",
"scope":"source.lua"},

"ccui.ListView:setMagneticType(MagneticType_magneticType)":{
"prefix":"ccui.ListView:setMagneticType(MagneticType_magneticType)",
"body":["ccui.ListView:setMagneticType(MagneticType_magneticType)"],
"description":"setMagneticType(MagneticType_magneticType)",
"scope":"source.lua"},

"ccui.ListView:setMagneticAllowedOutOfBoundary(bool_magneticAllowedOutOfBoundary)":{
"prefix":"ccui.ListView:setMagneticAllowedOutOfBoundary(bool_magneticAllowedOutOfBoundary)",
"body":["ccui.ListView:setMagneticAllowedOutOfBoundary(bool_magneticAllowedOutOfBoundary)"],
"description":"setMagneticAllowedOutOfBoundary(bool_magneticAllowedOutOfBoundary)",
"scope":"source.lua"},

"ccui.ListView:addEventListener(const_ccListViewCallback_callback)":{
"prefix":"ccui.ListView:addEventListener(const_ccListViewCallback_callback)",
"body":["ccui.ListView:addEventListener(const_ccListViewCallback_callback)"],
"description":"addEventListener(const_ccListViewCallback_callback)",
"scope":"source.lua"},

"ccui.ListView:doLayout()":{
"prefix":"ccui.ListView:doLayout()",
"body":["ccui.ListView:doLayout()"],
"description":"doLayout()",
"scope":"source.lua"},

"ccui.ListView:getTopmostItemInCurrentView()":{
"prefix":"ccui.ListView:getTopmostItemInCurrentView()",
"body":["ccui.ListView:getTopmostItemInCurrentView()"],
"description":"getTopmostItemInCurrentView()",
"scope":"source.lua"},

"ccui.ListView:setPadding(float_l,float_t,float_r,float_b)":{
"prefix":"ccui.ListView:setPadding(float_l,float_t,float_r,float_b)",
"body":["ccui.ListView:setPadding(float_l,float_t,float_r,float_b)"],
"description":"setPadding(float_l,float_t,float_r,float_b)",
"scope":"source.lua"},

"ccui.ListView:removeAllItems()":{
"prefix":"ccui.ListView:removeAllItems()",
"body":["ccui.ListView:removeAllItems()"],
"description":"removeAllItems()",
"scope":"source.lua"},

"ccui.ListView:getRightPadding()":{
"prefix":"ccui.ListView:getRightPadding()",
"body":["ccui.ListView:getRightPadding()"],
"description":"getRightPadding()",
"scope":"source.lua"},

"ccui.ListView:getBottommostItemInCurrentView()":{
"prefix":"ccui.ListView:getBottommostItemInCurrentView()",
"body":["ccui.ListView:getBottommostItemInCurrentView()"],
"description":"getBottommostItemInCurrentView()",
"scope":"source.lua"},

"ccui.ListView:getItems()":{
"prefix":"ccui.ListView:getItems()",
"body":["ccui.ListView:getItems()"],
"description":"getItems()",
"scope":"source.lua"},

"ccui.ListView:getLeftmostItemInCurrentView()":{
"prefix":"ccui.ListView:getLeftmostItemInCurrentView()",
"body":["ccui.ListView:getLeftmostItemInCurrentView()"],
"description":"getLeftmostItemInCurrentView()",
"scope":"source.lua"},

"ccui.ListView:setItemsMargin(float_margin)":{
"prefix":"ccui.ListView:setItemsMargin(float_margin)",
"body":["ccui.ListView:setItemsMargin(float_margin)"],
"description":"setItemsMargin(float_margin)",
"scope":"source.lua"},

"ccui.ListView:getMagneticType()":{
"prefix":"ccui.ListView:getMagneticType()",
"body":["ccui.ListView:getMagneticType()"],
"description":"getMagneticType()",
"scope":"source.lua"},

"ccui.ListView:getItem(ssize_t_index)":{
"prefix":"ccui.ListView:getItem(ssize_t_index)",
"body":["ccui.ListView:getItem(ssize_t_index)"],
"description":"getItem(ssize_t_index)",
"scope":"source.lua"},

"ccui.ListView:removeItem(ssize_t_index)":{
"prefix":"ccui.ListView:removeItem(ssize_t_index)",
"body":["ccui.ListView:removeItem(ssize_t_index)"],
"description":"removeItem(ssize_t_index)",
"scope":"source.lua"},

"ccui.ListView:getTopPadding()":{
"prefix":"ccui.ListView:getTopPadding()",
"body":["ccui.ListView:getTopPadding()"],
"description":"getTopPadding()",
"scope":"source.lua"},

"ccui.ListView:pushBackDefaultItem()":{
"prefix":"ccui.ListView:pushBackDefaultItem()",
"body":["ccui.ListView:pushBackDefaultItem()"],
"description":"pushBackDefaultItem()",
"scope":"source.lua"},

"ccui.ListView:setLeftPadding(float_l)":{
"prefix":"ccui.ListView:setLeftPadding(float_l)",
"body":["ccui.ListView:setLeftPadding(float_l)"],
"description":"setLeftPadding(float_l)",
"scope":"source.lua"},

"ccui.ListView:getClosestItemToPosition(const_Vec2_targetPosition,const_Vec2_itemAnchorPoint)":{
"prefix":"ccui.ListView:getClosestItemToPosition(const_Vec2_targetPosition,const_Vec2_itemAnchorPoint)",
"body":["ccui.ListView:getClosestItemToPosition(const_Vec2_targetPosition,const_Vec2_itemAnchorPoint)"],
"description":"getClosestItemToPosition(const_Vec2_targetPosition,const_Vec2_itemAnchorPoint)",
"scope":"source.lua"},

"ccui.ListView:setBottomPadding(float_b)":{
"prefix":"ccui.ListView:setBottomPadding(float_b)",
"body":["ccui.ListView:setBottomPadding(float_b)"],
"description":"setBottomPadding(float_b)",
"scope":"source.lua"},

"ccui.ListView:setScrollDuration(float_time)":{
"prefix":"ccui.ListView:setScrollDuration(float_time)",
"body":["ccui.ListView:setScrollDuration(float_time)"],
"description":"setScrollDuration(float_time)",
"scope":"source.lua"},

"ccui.ListView:getClosestItemToPositionInCurrentView(const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)":{
"prefix":"ccui.ListView:getClosestItemToPositionInCurrentView(const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)",
"body":["ccui.ListView:getClosestItemToPositionInCurrentView(const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)"],
"description":"getClosestItemToPositionInCurrentView(const_Vec2_positionRatioInView,const_Vec2_itemAnchorPoint)",
"scope":"source.lua"},

"ccui.ListView:getRightmostItemInCurrentView()":{
"prefix":"ccui.ListView:getRightmostItemInCurrentView()",
"body":["ccui.ListView:getRightmostItemInCurrentView()"],
"description":"getRightmostItemInCurrentView()",
"scope":"source.lua"},

"ccui.ListView:setRightPadding(float_r)":{
"prefix":"ccui.ListView:setRightPadding(float_r)",
"body":["ccui.ListView:setRightPadding(float_r)"],
"description":"setRightPadding(float_r)",
"scope":"source.lua"},

"ccui.ListView:setItemModel(Widget_model)":{
"prefix":"ccui.ListView:setItemModel(Widget_model)",
"body":["ccui.ListView:setItemModel(Widget_model)"],
"description":"setItemModel(Widget_model)",
"scope":"source.lua"},

"ccui.ListView:getBottomPadding()":{
"prefix":"ccui.ListView:getBottomPadding()",
"body":["ccui.ListView:getBottomPadding()"],
"description":"getBottomPadding()",
"scope":"source.lua"},

"ccui.ListView:insertCustomItem(Widget_item,ssize_t_index)":{
"prefix":"ccui.ListView:insertCustomItem(Widget_item,ssize_t_index)",
"body":["ccui.ListView:insertCustomItem(Widget_item,ssize_t_index)"],
"description":"insertCustomItem(Widget_item,ssize_t_index)",
"scope":"source.lua"},

"ccui.ListView:create()":{
"prefix":"ccui.ListView:create()",
"body":["ccui.ListView:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.Slider":{
"prefix":"ccui.Slider",
"body":["ccui.Slider"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.Slider:setPercent(int_percent)":{
"prefix":"ccui.Slider:setPercent(int_percent)",
"body":["ccui.Slider:setPercent(int_percent)"],
"description":"setPercent(int_percent)",
"scope":"source.lua"},

"ccui.Slider:getMaxPercent()":{
"prefix":"ccui.Slider:getMaxPercent()",
"body":["ccui.Slider:getMaxPercent()"],
"description":"getMaxPercent()",
"scope":"source.lua"},

"ccui.Slider:loadSlidBallTextureNormal(const_std_string_normal,TextureResType_resType)":{
"prefix":"ccui.Slider:loadSlidBallTextureNormal(const_std_string_normal,TextureResType_resType)",
"body":["ccui.Slider:loadSlidBallTextureNormal(const_std_string_normal,TextureResType_resType)"],
"description":"loadSlidBallTextureNormal(const_std_string_normal,TextureResType_resType)",
"scope":"source.lua"},

"ccui.Slider:loadSlidBallTextureNormal(SpriteFrame_spriteframe)":{
"prefix":"ccui.Slider:loadSlidBallTextureNormal(SpriteFrame_spriteframe)",
"body":["ccui.Slider:loadSlidBallTextureNormal(SpriteFrame_spriteframe)"],
"description":"loadSlidBallTextureNormal(SpriteFrame_spriteframe)",
"scope":"source.lua"},

"ccui.Slider:loadProgressBarTexture(const_std_string_fileName,TextureResType_resType)":{
"prefix":"ccui.Slider:loadProgressBarTexture(const_std_string_fileName,TextureResType_resType)",
"body":["ccui.Slider:loadProgressBarTexture(const_std_string_fileName,TextureResType_resType)"],
"description":"loadProgressBarTexture(const_std_string_fileName,TextureResType_resType)",
"scope":"source.lua"},

"ccui.Slider:loadProgressBarTexture(SpriteFrame_spriteframe)":{
"prefix":"ccui.Slider:loadProgressBarTexture(SpriteFrame_spriteframe)",
"body":["ccui.Slider:loadProgressBarTexture(SpriteFrame_spriteframe)"],
"description":"loadProgressBarTexture(SpriteFrame_spriteframe)",
"scope":"source.lua"},

"ccui.Slider:getBallNormalFile()":{
"prefix":"ccui.Slider:getBallNormalFile()",
"body":["ccui.Slider:getBallNormalFile()"],
"description":"getBallNormalFile()",
"scope":"source.lua"},

"ccui.Slider:getSlidBallDisabledRenderer()":{
"prefix":"ccui.Slider:getSlidBallDisabledRenderer()",
"body":["ccui.Slider:getSlidBallDisabledRenderer()"],
"description":"getSlidBallDisabledRenderer()",
"scope":"source.lua"},

"ccui.Slider:setScale9Enabled(bool_able)":{
"prefix":"ccui.Slider:setScale9Enabled(bool_able)",
"body":["ccui.Slider:setScale9Enabled(bool_able)"],
"description":"setScale9Enabled(bool_able)",
"scope":"source.lua"},

"ccui.Slider:getBallPressedFile()":{
"prefix":"ccui.Slider:getBallPressedFile()",
"body":["ccui.Slider:getBallPressedFile()"],
"description":"getBallPressedFile()",
"scope":"source.lua"},

"ccui.Slider:getZoomScale()":{
"prefix":"ccui.Slider:getZoomScale()",
"body":["ccui.Slider:getZoomScale()"],
"description":"getZoomScale()",
"scope":"source.lua"},

"ccui.Slider:setCapInsetProgressBarRenderer(const_Rect_capInsets)":{
"prefix":"ccui.Slider:setCapInsetProgressBarRenderer(const_Rect_capInsets)",
"body":["ccui.Slider:setCapInsetProgressBarRenderer(const_Rect_capInsets)"],
"description":"setCapInsetProgressBarRenderer(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Slider:getSlidBallRenderer()":{
"prefix":"ccui.Slider:getSlidBallRenderer()",
"body":["ccui.Slider:getSlidBallRenderer()"],
"description":"getSlidBallRenderer()",
"scope":"source.lua"},

"ccui.Slider:addEventListener(const_ccSliderCallback_callback)":{
"prefix":"ccui.Slider:addEventListener(const_ccSliderCallback_callback)",
"body":["ccui.Slider:addEventListener(const_ccSliderCallback_callback)"],
"description":"addEventListener(const_ccSliderCallback_callback)",
"scope":"source.lua"},

"ccui.Slider:setMaxPercent(int_percent)":{
"prefix":"ccui.Slider:setMaxPercent(int_percent)",
"body":["ccui.Slider:setMaxPercent(int_percent)"],
"description":"setMaxPercent(int_percent)",
"scope":"source.lua"},

"ccui.Slider:loadBarTexture(const_std_string_fileName,TextureResType_resType)":{
"prefix":"ccui.Slider:loadBarTexture(const_std_string_fileName,TextureResType_resType)",
"body":["ccui.Slider:loadBarTexture(const_std_string_fileName,TextureResType_resType)"],
"description":"loadBarTexture(const_std_string_fileName,TextureResType_resType)",
"scope":"source.lua"},

"ccui.Slider:loadBarTexture(SpriteFrame_spriteframe)":{
"prefix":"ccui.Slider:loadBarTexture(SpriteFrame_spriteframe)",
"body":["ccui.Slider:loadBarTexture(SpriteFrame_spriteframe)"],
"description":"loadBarTexture(SpriteFrame_spriteframe)",
"scope":"source.lua"},

"ccui.Slider:getProgressBarFile()":{
"prefix":"ccui.Slider:getProgressBarFile()",
"body":["ccui.Slider:getProgressBarFile()"],
"description":"getProgressBarFile()",
"scope":"source.lua"},

"ccui.Slider:getCapInsetsBarRenderer()":{
"prefix":"ccui.Slider:getCapInsetsBarRenderer()",
"body":["ccui.Slider:getCapInsetsBarRenderer()"],
"description":"getCapInsetsBarRenderer()",
"scope":"source.lua"},

"ccui.Slider:getCapInsetsProgressBarRenderer()":{
"prefix":"ccui.Slider:getCapInsetsProgressBarRenderer()",
"body":["ccui.Slider:getCapInsetsProgressBarRenderer()"],
"description":"getCapInsetsProgressBarRenderer()",
"scope":"source.lua"},

"ccui.Slider:getSlidBallPressedRenderer()":{
"prefix":"ccui.Slider:getSlidBallPressedRenderer()",
"body":["ccui.Slider:getSlidBallPressedRenderer()"],
"description":"getSlidBallPressedRenderer()",
"scope":"source.lua"},

"ccui.Slider:loadSlidBallTexturePressed(const_std_string_pressed,TextureResType_resType)":{
"prefix":"ccui.Slider:loadSlidBallTexturePressed(const_std_string_pressed,TextureResType_resType)",
"body":["ccui.Slider:loadSlidBallTexturePressed(const_std_string_pressed,TextureResType_resType)"],
"description":"loadSlidBallTexturePressed(const_std_string_pressed,TextureResType_resType)",
"scope":"source.lua"},

"ccui.Slider:loadSlidBallTexturePressed(SpriteFrame_spriteframe)":{
"prefix":"ccui.Slider:loadSlidBallTexturePressed(SpriteFrame_spriteframe)",
"body":["ccui.Slider:loadSlidBallTexturePressed(SpriteFrame_spriteframe)"],
"description":"loadSlidBallTexturePressed(SpriteFrame_spriteframe)",
"scope":"source.lua"},

"ccui.Slider:getBackFile()":{
"prefix":"ccui.Slider:getBackFile()",
"body":["ccui.Slider:getBackFile()"],
"description":"getBackFile()",
"scope":"source.lua"},

"ccui.Slider:isScale9Enabled()":{
"prefix":"ccui.Slider:isScale9Enabled()",
"body":["ccui.Slider:isScale9Enabled()"],
"description":"isScale9Enabled()",
"scope":"source.lua"},

"ccui.Slider:getBallDisabledFile()":{
"prefix":"ccui.Slider:getBallDisabledFile()",
"body":["ccui.Slider:getBallDisabledFile()"],
"description":"getBallDisabledFile()",
"scope":"source.lua"},

"ccui.Slider:setCapInsetsBarRenderer(const_Rect_capInsets)":{
"prefix":"ccui.Slider:setCapInsetsBarRenderer(const_Rect_capInsets)",
"body":["ccui.Slider:setCapInsetsBarRenderer(const_Rect_capInsets)"],
"description":"setCapInsetsBarRenderer(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Slider:getPercent()":{
"prefix":"ccui.Slider:getPercent()",
"body":["ccui.Slider:getPercent()"],
"description":"getPercent()",
"scope":"source.lua"},

"ccui.Slider:setCapInsets(const_Rect_capInsets)":{
"prefix":"ccui.Slider:setCapInsets(const_Rect_capInsets)",
"body":["ccui.Slider:setCapInsets(const_Rect_capInsets)"],
"description":"setCapInsets(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Slider:loadSlidBallTextureDisabled(const_std_string_disabled,TextureResType_resType)":{
"prefix":"ccui.Slider:loadSlidBallTextureDisabled(const_std_string_disabled,TextureResType_resType)",
"body":["ccui.Slider:loadSlidBallTextureDisabled(const_std_string_disabled,TextureResType_resType)"],
"description":"loadSlidBallTextureDisabled(const_std_string_disabled,TextureResType_resType)",
"scope":"source.lua"},

"ccui.Slider:loadSlidBallTextureDisabled(SpriteFrame_spriteframe)":{
"prefix":"ccui.Slider:loadSlidBallTextureDisabled(SpriteFrame_spriteframe)",
"body":["ccui.Slider:loadSlidBallTextureDisabled(SpriteFrame_spriteframe)"],
"description":"loadSlidBallTextureDisabled(SpriteFrame_spriteframe)",
"scope":"source.lua"},

"ccui.Slider:getSlidBallNormalRenderer()":{
"prefix":"ccui.Slider:getSlidBallNormalRenderer()",
"body":["ccui.Slider:getSlidBallNormalRenderer()"],
"description":"getSlidBallNormalRenderer()",
"scope":"source.lua"},

"ccui.Slider:setZoomScale(float_scale)":{
"prefix":"ccui.Slider:setZoomScale(float_scale)",
"body":["ccui.Slider:setZoomScale(float_scale)"],
"description":"setZoomScale(float_scale)",
"scope":"source.lua"},

"ccui.Slider:create()":{
"prefix":"ccui.Slider:create()",
"body":["ccui.Slider:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.TextField":{
"prefix":"ccui.TextField",
"body":["ccui.TextField"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.TextField:setAttachWithIME(bool_attach)":{
"prefix":"ccui.TextField:setAttachWithIME(bool_attach)",
"body":["ccui.TextField:setAttachWithIME(bool_attach)"],
"description":"setAttachWithIME(bool_attach)",
"scope":"source.lua"},

"ccui.TextField:getFontSize()":{
"prefix":"ccui.TextField:getFontSize()",
"body":["ccui.TextField:getFontSize()"],
"description":"getFontSize()",
"scope":"source.lua"},

"ccui.TextField:getString()":{
"prefix":"ccui.TextField:getString()",
"body":["ccui.TextField:getString()"],
"description":"getString()",
"scope":"source.lua"},

"ccui.TextField:setPasswordStyleText(const_char_styleText)":{
"prefix":"ccui.TextField:setPasswordStyleText(const_char_styleText)",
"body":["ccui.TextField:setPasswordStyleText(const_char_styleText)"],
"description":"setPasswordStyleText(const_char_styleText)",
"scope":"source.lua"},

"ccui.TextField:getDeleteBackward()":{
"prefix":"ccui.TextField:getDeleteBackward()",
"body":["ccui.TextField:getDeleteBackward()"],
"description":"getDeleteBackward()",
"scope":"source.lua"},

"ccui.TextField:getTextColor()":{
"prefix":"ccui.TextField:getTextColor()",
"body":["ccui.TextField:getTextColor()"],
"description":"getTextColor()",
"scope":"source.lua"},

"ccui.TextField:getPlaceHolder()":{
"prefix":"ccui.TextField:getPlaceHolder()",
"body":["ccui.TextField:getPlaceHolder()"],
"description":"getPlaceHolder()",
"scope":"source.lua"},

"ccui.TextField:getAttachWithIME()":{
"prefix":"ccui.TextField:getAttachWithIME()",
"body":["ccui.TextField:getAttachWithIME()"],
"description":"getAttachWithIME()",
"scope":"source.lua"},

"ccui.TextField:setFontName(const_std_string_name)":{
"prefix":"ccui.TextField:setFontName(const_std_string_name)",
"body":["ccui.TextField:setFontName(const_std_string_name)"],
"description":"setFontName(const_std_string_name)",
"scope":"source.lua"},

"ccui.TextField:getInsertText()":{
"prefix":"ccui.TextField:getInsertText()",
"body":["ccui.TextField:getInsertText()"],
"description":"getInsertText()",
"scope":"source.lua"},

"ccui.TextField:setInsertText(bool_insertText)":{
"prefix":"ccui.TextField:setInsertText(bool_insertText)",
"body":["ccui.TextField:setInsertText(bool_insertText)"],
"description":"setInsertText(bool_insertText)",
"scope":"source.lua"},

"ccui.TextField:setString(const_std_string_text)":{
"prefix":"ccui.TextField:setString(const_std_string_text)",
"body":["ccui.TextField:setString(const_std_string_text)"],
"description":"setString(const_std_string_text)",
"scope":"source.lua"},

"ccui.TextField:getDetachWithIME()":{
"prefix":"ccui.TextField:getDetachWithIME()",
"body":["ccui.TextField:getDetachWithIME()"],
"description":"getDetachWithIME()",
"scope":"source.lua"},

"ccui.TextField:setTextVerticalAlignment(TextVAlignment_alignment)":{
"prefix":"ccui.TextField:setTextVerticalAlignment(TextVAlignment_alignment)",
"body":["ccui.TextField:setTextVerticalAlignment(TextVAlignment_alignment)"],
"description":"setTextVerticalAlignment(TextVAlignment_alignment)",
"scope":"source.lua"},

"ccui.TextField:addEventListener(const_ccTextFieldCallback_callback)":{
"prefix":"ccui.TextField:addEventListener(const_ccTextFieldCallback_callback)",
"body":["ccui.TextField:addEventListener(const_ccTextFieldCallback_callback)"],
"description":"addEventListener(const_ccTextFieldCallback_callback)",
"scope":"source.lua"},

"ccui.TextField:didNotSelectSelf()":{
"prefix":"ccui.TextField:didNotSelectSelf()",
"body":["ccui.TextField:didNotSelectSelf()"],
"description":"didNotSelectSelf()",
"scope":"source.lua"},

"ccui.TextField:getFontName()":{
"prefix":"ccui.TextField:getFontName()",
"body":["ccui.TextField:getFontName()"],
"description":"getFontName()",
"scope":"source.lua"},

"ccui.TextField:setTextAreaSize(const_Size_size)":{
"prefix":"ccui.TextField:setTextAreaSize(const_Size_size)",
"body":["ccui.TextField:setTextAreaSize(const_Size_size)"],
"description":"setTextAreaSize(const_Size_size)",
"scope":"source.lua"},

"ccui.TextField:attachWithIME()":{
"prefix":"ccui.TextField:attachWithIME()",
"body":["ccui.TextField:attachWithIME()"],
"description":"attachWithIME()",
"scope":"source.lua"},

"ccui.TextField:getStringLength()":{
"prefix":"ccui.TextField:getStringLength()",
"body":["ccui.TextField:getStringLength()"],
"description":"getStringLength()",
"scope":"source.lua"},

"ccui.TextField:getAutoRenderSize()":{
"prefix":"ccui.TextField:getAutoRenderSize()",
"body":["ccui.TextField:getAutoRenderSize()"],
"description":"getAutoRenderSize()",
"scope":"source.lua"},

"ccui.TextField:setPasswordEnabled(bool_enable)":{
"prefix":"ccui.TextField:setPasswordEnabled(bool_enable)",
"body":["ccui.TextField:setPasswordEnabled(bool_enable)"],
"description":"setPasswordEnabled(bool_enable)",
"scope":"source.lua"},

"ccui.TextField:getPlaceHolderColor()":{
"prefix":"ccui.TextField:getPlaceHolderColor()",
"body":["ccui.TextField:getPlaceHolderColor()"],
"description":"getPlaceHolderColor()",
"scope":"source.lua"},

"ccui.TextField:getPasswordStyleText()":{
"prefix":"ccui.TextField:getPasswordStyleText()",
"body":["ccui.TextField:getPasswordStyleText()"],
"description":"getPasswordStyleText()",
"scope":"source.lua"},

"ccui.TextField:setMaxLengthEnabled(bool_enable)":{
"prefix":"ccui.TextField:setMaxLengthEnabled(bool_enable)",
"body":["ccui.TextField:setMaxLengthEnabled(bool_enable)"],
"description":"setMaxLengthEnabled(bool_enable)",
"scope":"source.lua"},

"ccui.TextField:isPasswordEnabled()":{
"prefix":"ccui.TextField:isPasswordEnabled()",
"body":["ccui.TextField:isPasswordEnabled()"],
"description":"isPasswordEnabled()",
"scope":"source.lua"},

"ccui.TextField:setDeleteBackward(bool_deleteBackward)":{
"prefix":"ccui.TextField:setDeleteBackward(bool_deleteBackward)",
"body":["ccui.TextField:setDeleteBackward(bool_deleteBackward)"],
"description":"setDeleteBackward(bool_deleteBackward)",
"scope":"source.lua"},

"ccui.TextField:setCursorPosition(std_size_t_cursorPosition)":{
"prefix":"ccui.TextField:setCursorPosition(std_size_t_cursorPosition)",
"body":["ccui.TextField:setCursorPosition(std_size_t_cursorPosition)"],
"description":"setCursorPosition(std_size_t_cursorPosition)",
"scope":"source.lua"},

"ccui.TextField:getTextHorizontalAlignment()":{
"prefix":"ccui.TextField:getTextHorizontalAlignment()",
"body":["ccui.TextField:getTextHorizontalAlignment()"],
"description":"getTextHorizontalAlignment()",
"scope":"source.lua"},

"ccui.TextField:setFontSize(int_size)":{
"prefix":"ccui.TextField:setFontSize(int_size)",
"body":["ccui.TextField:setFontSize(int_size)"],
"description":"setFontSize(int_size)",
"scope":"source.lua"},

"ccui.TextField:setPlaceHolder(const_std_string_value)":{
"prefix":"ccui.TextField:setPlaceHolder(const_std_string_value)",
"body":["ccui.TextField:setPlaceHolder(const_std_string_value)"],
"description":"setPlaceHolder(const_std_string_value)",
"scope":"source.lua"},

"ccui.TextField:setCursorFromPoint(const_Vec2_point,const_Camera_camera)":{
"prefix":"ccui.TextField:setCursorFromPoint(const_Vec2_point,const_Camera_camera)",
"body":["ccui.TextField:setCursorFromPoint(const_Vec2_point,const_Camera_camera)"],
"description":"setCursorFromPoint(const_Vec2_point,const_Camera_camera)",
"scope":"source.lua"},

"ccui.TextField:setPlaceHolderColor(const_Color3B_color)":{
"prefix":"ccui.TextField:setPlaceHolderColor(const_Color3B_color)",
"body":["ccui.TextField:setPlaceHolderColor(const_Color3B_color)"],
"description":"setPlaceHolderColor(const_Color3B_color)",
"scope":"source.lua"},

"ccui.TextField:setPlaceHolderColor(const_Color4B_color)":{
"prefix":"ccui.TextField:setPlaceHolderColor(const_Color4B_color)",
"body":["ccui.TextField:setPlaceHolderColor(const_Color4B_color)"],
"description":"setPlaceHolderColor(const_Color4B_color)",
"scope":"source.lua"},

"ccui.TextField:setTextHorizontalAlignment(TextHAlignment_alignment)":{
"prefix":"ccui.TextField:setTextHorizontalAlignment(TextHAlignment_alignment)",
"body":["ccui.TextField:setTextHorizontalAlignment(TextHAlignment_alignment)"],
"description":"setTextHorizontalAlignment(TextHAlignment_alignment)",
"scope":"source.lua"},

"ccui.TextField:setTextColor(const_Color4B_textColor)":{
"prefix":"ccui.TextField:setTextColor(const_Color4B_textColor)",
"body":["ccui.TextField:setTextColor(const_Color4B_textColor)"],
"description":"setTextColor(const_Color4B_textColor)",
"scope":"source.lua"},

"ccui.TextField:setCursorChar(char_cursor)":{
"prefix":"ccui.TextField:setCursorChar(char_cursor)",
"body":["ccui.TextField:setCursorChar(char_cursor)"],
"description":"setCursorChar(char_cursor)",
"scope":"source.lua"},

"ccui.TextField:getMaxLength()":{
"prefix":"ccui.TextField:getMaxLength()",
"body":["ccui.TextField:getMaxLength()"],
"description":"getMaxLength()",
"scope":"source.lua"},

"ccui.TextField:isMaxLengthEnabled()":{
"prefix":"ccui.TextField:isMaxLengthEnabled()",
"body":["ccui.TextField:isMaxLengthEnabled()"],
"description":"isMaxLengthEnabled()",
"scope":"source.lua"},

"ccui.TextField:setDetachWithIME(bool_detach)":{
"prefix":"ccui.TextField:setDetachWithIME(bool_detach)",
"body":["ccui.TextField:setDetachWithIME(bool_detach)"],
"description":"setDetachWithIME(bool_detach)",
"scope":"source.lua"},

"ccui.TextField:getTextVerticalAlignment()":{
"prefix":"ccui.TextField:getTextVerticalAlignment()",
"body":["ccui.TextField:getTextVerticalAlignment()"],
"description":"getTextVerticalAlignment()",
"scope":"source.lua"},

"ccui.TextField:setTouchAreaEnabled(bool_enable)":{
"prefix":"ccui.TextField:setTouchAreaEnabled(bool_enable)",
"body":["ccui.TextField:setTouchAreaEnabled(bool_enable)"],
"description":"setTouchAreaEnabled(bool_enable)",
"scope":"source.lua"},

"ccui.TextField:setMaxLength(int_length)":{
"prefix":"ccui.TextField:setMaxLength(int_length)",
"body":["ccui.TextField:setMaxLength(int_length)"],
"description":"setMaxLength(int_length)",
"scope":"source.lua"},

"ccui.TextField:setCursorEnabled(bool_enabled)":{
"prefix":"ccui.TextField:setCursorEnabled(bool_enabled)",
"body":["ccui.TextField:setCursorEnabled(bool_enabled)"],
"description":"setCursorEnabled(bool_enabled)",
"scope":"source.lua"},

"ccui.TextField:setTouchSize(const_Size_size)":{
"prefix":"ccui.TextField:setTouchSize(const_Size_size)",
"body":["ccui.TextField:setTouchSize(const_Size_size)"],
"description":"setTouchSize(const_Size_size)",
"scope":"source.lua"},

"ccui.TextField:getTouchSize()":{
"prefix":"ccui.TextField:getTouchSize()",
"body":["ccui.TextField:getTouchSize()"],
"description":"getTouchSize()",
"scope":"source.lua"},

"ccui.TextField:create()":{
"prefix":"ccui.TextField:create()",
"body":["ccui.TextField:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.TextBMFont":{
"prefix":"ccui.TextBMFont",
"body":["ccui.TextBMFont"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.TextBMFont:getStringLength()":{
"prefix":"ccui.TextBMFont:getStringLength()",
"body":["ccui.TextBMFont:getStringLength()"],
"description":"getStringLength()",
"scope":"source.lua"},

"ccui.TextBMFont:getString()":{
"prefix":"ccui.TextBMFont:getString()",
"body":["ccui.TextBMFont:getString()"],
"description":"getString()",
"scope":"source.lua"},

"ccui.TextBMFont:getRenderFile()":{
"prefix":"ccui.TextBMFont:getRenderFile()",
"body":["ccui.TextBMFont:getRenderFile()"],
"description":"getRenderFile()",
"scope":"source.lua"},

"ccui.TextBMFont:setFntFile(const_std_string_fileName)":{
"prefix":"ccui.TextBMFont:setFntFile(const_std_string_fileName)",
"body":["ccui.TextBMFont:setFntFile(const_std_string_fileName)"],
"description":"setFntFile(const_std_string_fileName)",
"scope":"source.lua"},

"ccui.TextBMFont:resetRender()":{
"prefix":"ccui.TextBMFont:resetRender()",
"body":["ccui.TextBMFont:resetRender()"],
"description":"resetRender()",
"scope":"source.lua"},

"ccui.TextBMFont:create()":{
"prefix":"ccui.TextBMFont:create()",
"body":["ccui.TextBMFont:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.PageView":{
"prefix":"ccui.PageView",
"body":["ccui.PageView"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.PageView:setIndicatorSpaceBetweenIndexNodes(float_spaceBetweenIndexNodes)":{
"prefix":"ccui.PageView:setIndicatorSpaceBetweenIndexNodes(float_spaceBetweenIndexNodes)",
"body":["ccui.PageView:setIndicatorSpaceBetweenIndexNodes(float_spaceBetweenIndexNodes)"],
"description":"setIndicatorSpaceBetweenIndexNodes(float_spaceBetweenIndexNodes)",
"scope":"source.lua"},

"ccui.PageView:insertPage(Widget_page,int_idx)":{
"prefix":"ccui.PageView:insertPage(Widget_page,int_idx)",
"body":["ccui.PageView:insertPage(Widget_page,int_idx)"],
"description":"insertPage(Widget_page,int_idx)",
"scope":"source.lua"},

"ccui.PageView:setIndicatorIndexNodesOpacity(GLubyte_opacity)":{
"prefix":"ccui.PageView:setIndicatorIndexNodesOpacity(GLubyte_opacity)",
"body":["ccui.PageView:setIndicatorIndexNodesOpacity(GLubyte_opacity)"],
"description":"setIndicatorIndexNodesOpacity(GLubyte_opacity)",
"scope":"source.lua"},

"ccui.PageView:setIndicatorSelectedIndexOpacity(GLubyte_opacity)":{
"prefix":"ccui.PageView:setIndicatorSelectedIndexOpacity(GLubyte_opacity)",
"body":["ccui.PageView:setIndicatorSelectedIndexOpacity(GLubyte_opacity)"],
"description":"setIndicatorSelectedIndexOpacity(GLubyte_opacity)",
"scope":"source.lua"},

"ccui.PageView:removeAllPages()":{
"prefix":"ccui.PageView:removeAllPages()",
"body":["ccui.PageView:removeAllPages()"],
"description":"removeAllPages()",
"scope":"source.lua"},

"ccui.PageView:setAutoScrollStopEpsilon(float_epsilon)":{
"prefix":"ccui.PageView:setAutoScrollStopEpsilon(float_epsilon)",
"body":["ccui.PageView:setAutoScrollStopEpsilon(float_epsilon)"],
"description":"setAutoScrollStopEpsilon(float_epsilon)",
"scope":"source.lua"},

"ccui.PageView:setIndicatorIndexNodesScale(float_indexNodesScale)":{
"prefix":"ccui.PageView:setIndicatorIndexNodesScale(float_indexNodesScale)",
"body":["ccui.PageView:setIndicatorIndexNodesScale(float_indexNodesScale)"],
"description":"setIndicatorIndexNodesScale(float_indexNodesScale)",
"scope":"source.lua"},

"ccui.PageView:setIndicatorEnabled(bool_enabled)":{
"prefix":"ccui.PageView:setIndicatorEnabled(bool_enabled)",
"body":["ccui.PageView:setIndicatorEnabled(bool_enabled)"],
"description":"setIndicatorEnabled(bool_enabled)",
"scope":"source.lua"},

"ccui.PageView:setIndicatorSelectedIndexColor(const_Color3B_color)":{
"prefix":"ccui.PageView:setIndicatorSelectedIndexColor(const_Color3B_color)",
"body":["ccui.PageView:setIndicatorSelectedIndexColor(const_Color3B_color)"],
"description":"setIndicatorSelectedIndexColor(const_Color3B_color)",
"scope":"source.lua"},

"ccui.PageView:addEventListener(const_ccPageViewCallback_callback)":{
"prefix":"ccui.PageView:addEventListener(const_ccPageViewCallback_callback)",
"body":["ccui.PageView:addEventListener(const_ccPageViewCallback_callback)"],
"description":"addEventListener(const_ccPageViewCallback_callback)",
"scope":"source.lua"},

"ccui.PageView:getIndicatorPosition()":{
"prefix":"ccui.PageView:getIndicatorPosition()",
"body":["ccui.PageView:getIndicatorPosition()"],
"description":"getIndicatorPosition()",
"scope":"source.lua"},

"ccui.PageView:setCurrentPageIndex(ssize_t_index)":{
"prefix":"ccui.PageView:setCurrentPageIndex(ssize_t_index)",
"body":["ccui.PageView:setCurrentPageIndex(ssize_t_index)"],
"description":"setCurrentPageIndex(ssize_t_index)",
"scope":"source.lua"},

"ccui.PageView:getIndicatorIndexNodesColor()":{
"prefix":"ccui.PageView:getIndicatorIndexNodesColor()",
"body":["ccui.PageView:getIndicatorIndexNodesColor()"],
"description":"getIndicatorIndexNodesColor()",
"scope":"source.lua"},

"ccui.PageView:getIndicatorSelectedIndexColor()":{
"prefix":"ccui.PageView:getIndicatorSelectedIndexColor()",
"body":["ccui.PageView:getIndicatorSelectedIndexColor()"],
"description":"getIndicatorSelectedIndexColor()",
"scope":"source.lua"},

"ccui.PageView:getIndicatorIndexNodesScale()":{
"prefix":"ccui.PageView:getIndicatorIndexNodesScale()",
"body":["ccui.PageView:getIndicatorIndexNodesScale()"],
"description":"getIndicatorIndexNodesScale()",
"scope":"source.lua"},

"ccui.PageView:setIndicatorPosition(const_Vec2_position)":{
"prefix":"ccui.PageView:setIndicatorPosition(const_Vec2_position)",
"body":["ccui.PageView:setIndicatorPosition(const_Vec2_position)"],
"description":"setIndicatorPosition(const_Vec2_position)",
"scope":"source.lua"},

"ccui.PageView:getIndicatorSelectedIndexOpacity()":{
"prefix":"ccui.PageView:getIndicatorSelectedIndexOpacity()",
"body":["ccui.PageView:getIndicatorSelectedIndexOpacity()"],
"description":"getIndicatorSelectedIndexOpacity()",
"scope":"source.lua"},

"ccui.PageView:scrollToPage(ssize_t_idx)":{
"prefix":"ccui.PageView:scrollToPage(ssize_t_idx)",
"body":["ccui.PageView:scrollToPage(ssize_t_idx)"],
"description":"scrollToPage(ssize_t_idx)",
"scope":"source.lua"},

"ccui.PageView:scrollToPage(ssize_t_idx,float_time)":{
"prefix":"ccui.PageView:scrollToPage(ssize_t_idx,float_time)",
"body":["ccui.PageView:scrollToPage(ssize_t_idx,float_time)"],
"description":"scrollToPage(ssize_t_idx,float_time)",
"scope":"source.lua"},

"ccui.PageView:setIndicatorPositionAsAnchorPoint(const_Vec2_positionAsAnchorPoint)":{
"prefix":"ccui.PageView:setIndicatorPositionAsAnchorPoint(const_Vec2_positionAsAnchorPoint)",
"body":["ccui.PageView:setIndicatorPositionAsAnchorPoint(const_Vec2_positionAsAnchorPoint)"],
"description":"setIndicatorPositionAsAnchorPoint(const_Vec2_positionAsAnchorPoint)",
"scope":"source.lua"},

"ccui.PageView:scrollToItem(ssize_t_itemIndex)":{
"prefix":"ccui.PageView:scrollToItem(ssize_t_itemIndex)",
"body":["ccui.PageView:scrollToItem(ssize_t_itemIndex)"],
"description":"scrollToItem(ssize_t_itemIndex)",
"scope":"source.lua"},

"ccui.PageView:scrollToItem(ssize_t_idx,float_time)":{
"prefix":"ccui.PageView:scrollToItem(ssize_t_idx,float_time)",
"body":["ccui.PageView:scrollToItem(ssize_t_idx,float_time)"],
"description":"scrollToItem(ssize_t_idx,float_time)",
"scope":"source.lua"},

"ccui.PageView:setIndicatorIndexNodesColor(const_Color3B_color)":{
"prefix":"ccui.PageView:setIndicatorIndexNodesColor(const_Color3B_color)",
"body":["ccui.PageView:setIndicatorIndexNodesColor(const_Color3B_color)"],
"description":"setIndicatorIndexNodesColor(const_Color3B_color)",
"scope":"source.lua"},

"ccui.PageView:getIndicatorIndexNodesOpacity()":{
"prefix":"ccui.PageView:getIndicatorIndexNodesOpacity()",
"body":["ccui.PageView:getIndicatorIndexNodesOpacity()"],
"description":"getIndicatorIndexNodesOpacity()",
"scope":"source.lua"},

"ccui.PageView:getIndicatorPositionAsAnchorPoint()":{
"prefix":"ccui.PageView:getIndicatorPositionAsAnchorPoint()",
"body":["ccui.PageView:getIndicatorPositionAsAnchorPoint()"],
"description":"getIndicatorPositionAsAnchorPoint()",
"scope":"source.lua"},

"ccui.PageView:getCurrentPageIndex()":{
"prefix":"ccui.PageView:getCurrentPageIndex()",
"body":["ccui.PageView:getCurrentPageIndex()"],
"description":"getCurrentPageIndex()",
"scope":"source.lua"},

"ccui.PageView:removePage(Widget_page)":{
"prefix":"ccui.PageView:removePage(Widget_page)",
"body":["ccui.PageView:removePage(Widget_page)"],
"description":"removePage(Widget_page)",
"scope":"source.lua"},

"ccui.PageView:setIndicatorIndexNodesTexture(const_std_string_texName,Widget_TextureResType_texType)":{
"prefix":"ccui.PageView:setIndicatorIndexNodesTexture(const_std_string_texName,Widget_TextureResType_texType)",
"body":["ccui.PageView:setIndicatorIndexNodesTexture(const_std_string_texName,Widget_TextureResType_texType)"],
"description":"setIndicatorIndexNodesTexture(const_std_string_texName,Widget_TextureResType_texType)",
"scope":"source.lua"},

"ccui.PageView:getIndicatorEnabled()":{
"prefix":"ccui.PageView:getIndicatorEnabled()",
"body":["ccui.PageView:getIndicatorEnabled()"],
"description":"getIndicatorEnabled()",
"scope":"source.lua"},

"ccui.PageView:removePageAtIndex(ssize_t_index)":{
"prefix":"ccui.PageView:removePageAtIndex(ssize_t_index)",
"body":["ccui.PageView:removePageAtIndex(ssize_t_index)"],
"description":"removePageAtIndex(ssize_t_index)",
"scope":"source.lua"},

"ccui.PageView:getIndicatorSpaceBetweenIndexNodes()":{
"prefix":"ccui.PageView:getIndicatorSpaceBetweenIndexNodes()",
"body":["ccui.PageView:getIndicatorSpaceBetweenIndexNodes()"],
"description":"getIndicatorSpaceBetweenIndexNodes()",
"scope":"source.lua"},

"ccui.PageView:addPage(Widget_page)":{
"prefix":"ccui.PageView:addPage(Widget_page)",
"body":["ccui.PageView:addPage(Widget_page)"],
"description":"addPage(Widget_page)",
"scope":"source.lua"},

"ccui.PageView:create()":{
"prefix":"ccui.PageView:create()",
"body":["ccui.PageView:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.Helper":{
"prefix":"ccui.Helper",
"body":["ccui.Helper"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.Helper:convertBoundingBoxToScreen(Node_node)":{
"prefix":"ccui.Helper:convertBoundingBoxToScreen(Node_node)",
"body":["ccui.Helper:convertBoundingBoxToScreen(Node_node)"],
"description":"convertBoundingBoxToScreen(Node_node)",
"scope":"source.lua"},

"ccui.Helper:changeLayoutSystemActiveState(bool_active)":{
"prefix":"ccui.Helper:changeLayoutSystemActiveState(bool_active)",
"body":["ccui.Helper:changeLayoutSystemActiveState(bool_active)"],
"description":"changeLayoutSystemActiveState(bool_active)",
"scope":"source.lua"},

"ccui.Helper:seekActionWidgetByActionTag(Widget_root,int_tag)":{
"prefix":"ccui.Helper:seekActionWidgetByActionTag(Widget_root,int_tag)",
"body":["ccui.Helper:seekActionWidgetByActionTag(Widget_root,int_tag)"],
"description":"seekActionWidgetByActionTag(Widget_root,int_tag)",
"scope":"source.lua"},

"ccui.Helper:seekWidgetByName(Widget_root,const_std_string_name)":{
"prefix":"ccui.Helper:seekWidgetByName(Widget_root,const_std_string_name)",
"body":["ccui.Helper:seekWidgetByName(Widget_root,const_std_string_name)"],
"description":"seekWidgetByName(Widget_root,const_std_string_name)",
"scope":"source.lua"},

"ccui.Helper:seekWidgetByTag(Widget_root,int_tag)":{
"prefix":"ccui.Helper:seekWidgetByTag(Widget_root,int_tag)",
"body":["ccui.Helper:seekWidgetByTag(Widget_root,int_tag)"],
"description":"seekWidgetByTag(Widget_root,int_tag)",
"scope":"source.lua"},

"ccui.Helper:restrictCapInsetRect(const_Rect_capInsets,const_Size_textureSize)":{
"prefix":"ccui.Helper:restrictCapInsetRect(const_Rect_capInsets,const_Size_textureSize)",
"body":["ccui.Helper:restrictCapInsetRect(const_Rect_capInsets,const_Size_textureSize)"],
"description":"restrictCapInsetRect(const_Rect_capInsets,const_Size_textureSize)",
"scope":"source.lua"},

"ccui.Helper:doLayout(Node_rootNode)":{
"prefix":"ccui.Helper:doLayout(Node_rootNode)",
"body":["ccui.Helper:doLayout(Node_rootNode)"],
"description":"doLayout(Node_rootNode)",
"scope":"source.lua"},

"ccui.RichElement":{
"prefix":"ccui.RichElement",
"body":["ccui.RichElement"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.RichElement:equalType(Type_type)":{
"prefix":"ccui.RichElement:equalType(Type_type)",
"body":["ccui.RichElement:equalType(Type_type)"],
"description":"equalType(Type_type)",
"scope":"source.lua"},

"ccui.RichElement:init(int_tag,const_Color3B_color,GLubyte_opacity)":{
"prefix":"ccui.RichElement:init(int_tag,const_Color3B_color,GLubyte_opacity)",
"body":["ccui.RichElement:init(int_tag,const_Color3B_color,GLubyte_opacity)"],
"description":"init(int_tag,const_Color3B_color,GLubyte_opacity)",
"scope":"source.lua"},

"ccui.RichElement:setColor(const_Color3B_color)":{
"prefix":"ccui.RichElement:setColor(const_Color3B_color)",
"body":["ccui.RichElement:setColor(const_Color3B_color)"],
"description":"setColor(const_Color3B_color)",
"scope":"source.lua"},

"ccui.RichElementText":{
"prefix":"ccui.RichElementText",
"body":["ccui.RichElementText"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.RichElementText:new()":{
"prefix":"ccui.RichElementText:new()",
"body":["ccui.RichElementText:new()"],
"description":"new()",
"scope":"source.lua"},

"ccui.RichElementText:init()":{
"prefix":"ccui.RichElementText:init()",
"body":["ccui.RichElementText:init()"],
"description":"init()",
"scope":"source.lua"},

"ccui.RichElementText:create()":{
"prefix":"ccui.RichElementText:create()",
"body":["ccui.RichElementText:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.RichElementImage":{
"prefix":"ccui.RichElementImage",
"body":["ccui.RichElementImage"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.RichElementImage:setHeight(int_height)":{
"prefix":"ccui.RichElementImage:setHeight(int_height)",
"body":["ccui.RichElementImage:setHeight(int_height)"],
"description":"setHeight(int_height)",
"scope":"source.lua"},

"ccui.RichElementImage:init(int_tag,const_Color3B_color,GLubyte_opacity,const_std_string_filePath,const_std_string_url,Widget_TextureResType_texType)":{
"prefix":"ccui.RichElementImage:init(int_tag,const_Color3B_color,GLubyte_opacity,const_std_string_filePath,const_std_string_url,Widget_TextureResType_texType)",
"body":["ccui.RichElementImage:init(int_tag,const_Color3B_color,GLubyte_opacity,const_std_string_filePath,const_std_string_url,Widget_TextureResType_texType)"],
"description":"init(int_tag,const_Color3B_color,GLubyte_opacity,const_std_string_filePath,const_std_string_url,Widget_TextureResType_texType)",
"scope":"source.lua"},

"ccui.RichElementImage:setWidth(int_width)":{
"prefix":"ccui.RichElementImage:setWidth(int_width)",
"body":["ccui.RichElementImage:setWidth(int_width)"],
"description":"setWidth(int_width)",
"scope":"source.lua"},

"ccui.RichElementImage:setUrl(const_std_string_url)":{
"prefix":"ccui.RichElementImage:setUrl(const_std_string_url)",
"body":["ccui.RichElementImage:setUrl(const_std_string_url)"],
"description":"setUrl(const_std_string_url)",
"scope":"source.lua"},

"ccui.RichElementImage:create(int_tag,const_Color3B_color,GLubyte_opacity,const_std_string_filePath,const_std_string_url,Widget_TextureResType_texType)":{
"prefix":"ccui.RichElementImage:create(int_tag,const_Color3B_color,GLubyte_opacity,const_std_string_filePath,const_std_string_url,Widget_TextureResType_texType)",
"body":["ccui.RichElementImage:create(int_tag,const_Color3B_color,GLubyte_opacity,const_std_string_filePath,const_std_string_url,Widget_TextureResType_texType)"],
"description":"create(int_tag,const_Color3B_color,GLubyte_opacity,const_std_string_filePath,const_std_string_url,Widget_TextureResType_texType)",
"scope":"source.lua"},

"ccui.RichElementCustomNode":{
"prefix":"ccui.RichElementCustomNode",
"body":["ccui.RichElementCustomNode"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.RichElementCustomNode:init(int_tag,const_Color3B_color,GLubyte_opacity,Node_customNode)":{
"prefix":"ccui.RichElementCustomNode:init(int_tag,const_Color3B_color,GLubyte_opacity,Node_customNode)",
"body":["ccui.RichElementCustomNode:init(int_tag,const_Color3B_color,GLubyte_opacity,Node_customNode)"],
"description":"init(int_tag,const_Color3B_color,GLubyte_opacity,Node_customNode)",
"scope":"source.lua"},

"ccui.RichElementCustomNode:create(int_tag,const_Color3B_color,GLubyte_opacity,Node_customNode)":{
"prefix":"ccui.RichElementCustomNode:create(int_tag,const_Color3B_color,GLubyte_opacity,Node_customNode)",
"body":["ccui.RichElementCustomNode:create(int_tag,const_Color3B_color,GLubyte_opacity,Node_customNode)"],
"description":"create(int_tag,const_Color3B_color,GLubyte_opacity,Node_customNode)",
"scope":"source.lua"},

"ccui.RichElementNewLine":{
"prefix":"ccui.RichElementNewLine",
"body":["ccui.RichElementNewLine"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.RichElementNewLine:create(int_tag,const_Color3B_color,GLubyte_opacity)":{
"prefix":"ccui.RichElementNewLine:create(int_tag,const_Color3B_color,GLubyte_opacity)",
"body":["ccui.RichElementNewLine:create(int_tag,const_Color3B_color,GLubyte_opacity)"],
"description":"create(int_tag,const_Color3B_color,GLubyte_opacity)",
"scope":"source.lua"},

"ccui.RichText":{
"prefix":"ccui.RichText",
"body":["ccui.RichText"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.RichText:insertElement(RichElement_element,int_index)":{
"prefix":"ccui.RichText:insertElement(RichElement_element,int_index)",
"body":["ccui.RichText:insertElement(RichElement_element,int_index)"],
"description":"insertElement(RichElement_element,int_index)",
"scope":"source.lua"},

"ccui.RichText:setAnchorTextOutline(bool_enable,const_Color3B_outlineColor,int_outlineSize)":{
"prefix":"ccui.RichText:setAnchorTextOutline(bool_enable,const_Color3B_outlineColor,int_outlineSize)",
"body":["ccui.RichText:setAnchorTextOutline(bool_enable,const_Color3B_outlineColor,int_outlineSize)"],
"description":"setAnchorTextOutline(bool_enable,const_Color3B_outlineColor,int_outlineSize)",
"scope":"source.lua"},

"ccui.RichText:getFontSize()":{
"prefix":"ccui.RichText:getFontSize()",
"body":["ccui.RichText:getFontSize()"],
"description":"getFontSize()",
"scope":"source.lua"},

"ccui.RichText:pushBackElement(RichElement_element)":{
"prefix":"ccui.RichText:pushBackElement(RichElement_element)",
"body":["ccui.RichText:pushBackElement(RichElement_element)"],
"description":"pushBackElement(RichElement_element)",
"scope":"source.lua"},

"ccui.RichText:setAnchorTextBold(bool_enable)":{
"prefix":"ccui.RichText:setAnchorTextBold(bool_enable)",
"body":["ccui.RichText:setAnchorTextBold(bool_enable)"],
"description":"setAnchorTextBold(bool_enable)",
"scope":"source.lua"},

"ccui.RichText:getAnchorFontColor()":{
"prefix":"ccui.RichText:getAnchorFontColor()",
"body":["ccui.RichText:getAnchorFontColor()"],
"description":"getAnchorFontColor()",
"scope":"source.lua"},

"ccui.RichText:getAnchorTextShadowBlurRadius()":{
"prefix":"ccui.RichText:getAnchorTextShadowBlurRadius()",
"body":["ccui.RichText:getAnchorTextShadowBlurRadius()"],
"description":"getAnchorTextShadowBlurRadius()",
"scope":"source.lua"},

"ccui.RichText:setAnchorTextShadow(bool_enable,const_Color3B_shadowColor,const_Size_offset,int_blurRadius)":{
"prefix":"ccui.RichText:setAnchorTextShadow(bool_enable,const_Color3B_shadowColor,const_Size_offset,int_blurRadius)",
"body":["ccui.RichText:setAnchorTextShadow(bool_enable,const_Color3B_shadowColor,const_Size_offset,int_blurRadius)"],
"description":"setAnchorTextShadow(bool_enable,const_Color3B_shadowColor,const_Size_offset,int_blurRadius)",
"scope":"source.lua"},

"ccui.RichText:isAnchorTextItalicEnabled()":{
"prefix":"ccui.RichText:isAnchorTextItalicEnabled()",
"body":["ccui.RichText:isAnchorTextItalicEnabled()"],
"description":"isAnchorTextItalicEnabled()",
"scope":"source.lua"},

"ccui.RichText:setAnchorFontColor(const_std_string_color)":{
"prefix":"ccui.RichText:setAnchorFontColor(const_std_string_color)",
"body":["ccui.RichText:setAnchorFontColor(const_std_string_color)"],
"description":"setAnchorFontColor(const_std_string_color)",
"scope":"source.lua"},

"ccui.RichText:setFontFace(const_std_string_face)":{
"prefix":"ccui.RichText:setFontFace(const_std_string_face)",
"body":["ccui.RichText:setFontFace(const_std_string_face)"],
"description":"setFontFace(const_std_string_face)",
"scope":"source.lua"},

"ccui.RichText:setAnchorTextGlow(bool_enable,const_Color3B_glowColor)":{
"prefix":"ccui.RichText:setAnchorTextGlow(bool_enable,const_Color3B_glowColor)",
"body":["ccui.RichText:setAnchorTextGlow(bool_enable,const_Color3B_glowColor)"],
"description":"setAnchorTextGlow(bool_enable,const_Color3B_glowColor)",
"scope":"source.lua"},

"ccui.RichText:getHorizontalAlignment()":{
"prefix":"ccui.RichText:getHorizontalAlignment()",
"body":["ccui.RichText:getHorizontalAlignment()"],
"description":"getHorizontalAlignment()",
"scope":"source.lua"},

"ccui.RichText:setHorizontalAlignment(HorizontalAlignment_a)":{
"prefix":"ccui.RichText:setHorizontalAlignment(HorizontalAlignment_a)",
"body":["ccui.RichText:setHorizontalAlignment(HorizontalAlignment_a)"],
"description":"setHorizontalAlignment(HorizontalAlignment_a)",
"scope":"source.lua"},

"ccui.RichText:setAnchorTextDel(bool_enable)":{
"prefix":"ccui.RichText:setAnchorTextDel(bool_enable)",
"body":["ccui.RichText:setAnchorTextDel(bool_enable)"],
"description":"setAnchorTextDel(bool_enable)",
"scope":"source.lua"},

"ccui.RichText:getAnchorTextOutlineColor3B()":{
"prefix":"ccui.RichText:getAnchorTextOutlineColor3B()",
"body":["ccui.RichText:getAnchorTextOutlineColor3B()"],
"description":"getAnchorTextOutlineColor3B()",
"scope":"source.lua"},

"ccui.RichText:stringWithColor4B(const_cocos2d_Color4B_color4b)":{
"prefix":"ccui.RichText:stringWithColor4B(const_cocos2d_Color4B_color4b)",
"body":["ccui.RichText:stringWithColor4B(const_cocos2d_Color4B_color4b)"],
"description":"stringWithColor4B(const_cocos2d_Color4B_color4b)",
"scope":"source.lua"},

"ccui.RichText:initWithXML(const_std_string_xml,const_ValueMap_defaults,const_OpenUrlHandler_handleOpenUrl)":{
"prefix":"ccui.RichText:initWithXML(const_std_string_xml,const_ValueMap_defaults,const_OpenUrlHandler_handleOpenUrl)",
"body":["ccui.RichText:initWithXML(const_std_string_xml,const_ValueMap_defaults,const_OpenUrlHandler_handleOpenUrl)"],
"description":"initWithXML(const_std_string_xml,const_ValueMap_defaults,const_OpenUrlHandler_handleOpenUrl)",
"scope":"source.lua"},

"ccui.RichText:getAnchorFontColor3B()":{
"prefix":"ccui.RichText:getAnchorFontColor3B()",
"body":["ccui.RichText:getAnchorFontColor3B()"],
"description":"getAnchorFontColor3B()",
"scope":"source.lua"},

"ccui.RichText:formatText()":{
"prefix":"ccui.RichText:formatText()",
"body":["ccui.RichText:formatText()"],
"description":"formatText()",
"scope":"source.lua"},

"ccui.RichText:getAnchorTextGlowColor3B()":{
"prefix":"ccui.RichText:getAnchorTextGlowColor3B()",
"body":["ccui.RichText:getAnchorTextGlowColor3B()"],
"description":"getAnchorTextGlowColor3B()",
"scope":"source.lua"},

"ccui.RichText:openUrl(const_std_string_url)":{
"prefix":"ccui.RichText:openUrl(const_std_string_url)",
"body":["ccui.RichText:openUrl(const_std_string_url)"],
"description":"openUrl(const_std_string_url)",
"scope":"source.lua"},

"ccui.RichText:getFontFace()":{
"prefix":"ccui.RichText:getFontFace()",
"body":["ccui.RichText:getFontFace()"],
"description":"getFontFace()",
"scope":"source.lua"},

"ccui.RichText:setFontColor(const_std_string_color)":{
"prefix":"ccui.RichText:setFontColor(const_std_string_color)",
"body":["ccui.RichText:setFontColor(const_std_string_color)"],
"description":"setFontColor(const_std_string_color)",
"scope":"source.lua"},

"ccui.RichText:isAnchorTextGlowEnabled()":{
"prefix":"ccui.RichText:isAnchorTextGlowEnabled()",
"body":["ccui.RichText:isAnchorTextGlowEnabled()"],
"description":"isAnchorTextGlowEnabled()",
"scope":"source.lua"},

"ccui.RichText:getDefaults()":{
"prefix":"ccui.RichText:getDefaults()",
"body":["ccui.RichText:getDefaults()"],
"description":"getDefaults()",
"scope":"source.lua"},

"ccui.RichText:isAnchorTextUnderlineEnabled()":{
"prefix":"ccui.RichText:isAnchorTextUnderlineEnabled()",
"body":["ccui.RichText:isAnchorTextUnderlineEnabled()"],
"description":"isAnchorTextUnderlineEnabled()",
"scope":"source.lua"},

"ccui.RichText:getFontColor()":{
"prefix":"ccui.RichText:getFontColor()",
"body":["ccui.RichText:getFontColor()"],
"description":"getFontColor()",
"scope":"source.lua"},

"ccui.RichText:isAnchorTextShadowEnabled()":{
"prefix":"ccui.RichText:isAnchorTextShadowEnabled()",
"body":["ccui.RichText:isAnchorTextShadowEnabled()"],
"description":"isAnchorTextShadowEnabled()",
"scope":"source.lua"},

"ccui.RichText:getAnchorTextOutlineSize()":{
"prefix":"ccui.RichText:getAnchorTextOutlineSize()",
"body":["ccui.RichText:getAnchorTextOutlineSize()"],
"description":"getAnchorTextOutlineSize()",
"scope":"source.lua"},

"ccui.RichText:setVerticalSpace(float_space)":{
"prefix":"ccui.RichText:setVerticalSpace(float_space)",
"body":["ccui.RichText:setVerticalSpace(float_space)"],
"description":"setVerticalSpace(float_space)",
"scope":"source.lua"},

"ccui.RichText:isAnchorTextDelEnabled()":{
"prefix":"ccui.RichText:isAnchorTextDelEnabled()",
"body":["ccui.RichText:isAnchorTextDelEnabled()"],
"description":"isAnchorTextDelEnabled()",
"scope":"source.lua"},

"ccui.RichText:setDefaults(const_ValueMap_defaults)":{
"prefix":"ccui.RichText:setDefaults(const_ValueMap_defaults)",
"body":["ccui.RichText:setDefaults(const_ValueMap_defaults)"],
"description":"setDefaults(const_ValueMap_defaults)",
"scope":"source.lua"},

"ccui.RichText:setWrapMode(WrapMode_wrapMode)":{
"prefix":"ccui.RichText:setWrapMode(WrapMode_wrapMode)",
"body":["ccui.RichText:setWrapMode(WrapMode_wrapMode)"],
"description":"setWrapMode(WrapMode_wrapMode)",
"scope":"source.lua"},

"ccui.RichText:setFontSize(float_size)":{
"prefix":"ccui.RichText:setFontSize(float_size)",
"body":["ccui.RichText:setFontSize(float_size)"],
"description":"setFontSize(float_size)",
"scope":"source.lua"},

"ccui.RichText:removeElement(int_index)":{
"prefix":"ccui.RichText:removeElement(int_index)",
"body":["ccui.RichText:removeElement(int_index)"],
"description":"removeElement(int_index)",
"scope":"source.lua"},

"ccui.RichText:removeElement(RichElement_element)":{
"prefix":"ccui.RichText:removeElement(RichElement_element)",
"body":["ccui.RichText:removeElement(RichElement_element)"],
"description":"removeElement(RichElement_element)",
"scope":"source.lua"},

"ccui.RichText:setAnchorTextItalic(bool_enable)":{
"prefix":"ccui.RichText:setAnchorTextItalic(bool_enable)",
"body":["ccui.RichText:setAnchorTextItalic(bool_enable)"],
"description":"setAnchorTextItalic(bool_enable)",
"scope":"source.lua"},

"ccui.RichText:getAnchorTextShadowOffset()":{
"prefix":"ccui.RichText:getAnchorTextShadowOffset()",
"body":["ccui.RichText:getAnchorTextShadowOffset()"],
"description":"getAnchorTextShadowOffset()",
"scope":"source.lua"},

"ccui.RichText:isAnchorTextBoldEnabled()":{
"prefix":"ccui.RichText:isAnchorTextBoldEnabled()",
"body":["ccui.RichText:isAnchorTextBoldEnabled()"],
"description":"isAnchorTextBoldEnabled()",
"scope":"source.lua"},

"ccui.RichText:getAnchorTextShadowColor3B()":{
"prefix":"ccui.RichText:getAnchorTextShadowColor3B()",
"body":["ccui.RichText:getAnchorTextShadowColor3B()"],
"description":"getAnchorTextShadowColor3B()",
"scope":"source.lua"},

"ccui.RichText:stringWithColor3B(const_cocos2d_Color3B_color3b)":{
"prefix":"ccui.RichText:stringWithColor3B(const_cocos2d_Color3B_color3b)",
"body":["ccui.RichText:stringWithColor3B(const_cocos2d_Color3B_color3b)"],
"description":"stringWithColor3B(const_cocos2d_Color3B_color3b)",
"scope":"source.lua"},

"ccui.RichText:isAnchorTextOutlineEnabled()":{
"prefix":"ccui.RichText:isAnchorTextOutlineEnabled()",
"body":["ccui.RichText:isAnchorTextOutlineEnabled()"],
"description":"isAnchorTextOutlineEnabled()",
"scope":"source.lua"},

"ccui.RichText:getFontColor3B()":{
"prefix":"ccui.RichText:getFontColor3B()",
"body":["ccui.RichText:getFontColor3B()"],
"description":"getFontColor3B()",
"scope":"source.lua"},

"ccui.RichText:getWrapMode()":{
"prefix":"ccui.RichText:getWrapMode()",
"body":["ccui.RichText:getWrapMode()"],
"description":"getWrapMode()",
"scope":"source.lua"},

"ccui.RichText:setAnchorTextUnderline(bool_enable)":{
"prefix":"ccui.RichText:setAnchorTextUnderline(bool_enable)",
"body":["ccui.RichText:setAnchorTextUnderline(bool_enable)"],
"description":"setAnchorTextUnderline(bool_enable)",
"scope":"source.lua"},

"ccui.RichText:color3BWithString(const_std_string_color)":{
"prefix":"ccui.RichText:color3BWithString(const_std_string_color)",
"body":["ccui.RichText:color3BWithString(const_std_string_color)"],
"description":"color3BWithString(const_std_string_color)",
"scope":"source.lua"},

"ccui.RichText:create()":{
"prefix":"ccui.RichText:create()",
"body":["ccui.RichText:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.RichText:createWithXML(const_std_string_xml,const_ValueMap_defaults,const_OpenUrlHandler_handleOpenUrl)":{
"prefix":"ccui.RichText:createWithXML(const_std_string_xml,const_ValueMap_defaults,const_OpenUrlHandler_handleOpenUrl)",
"body":["ccui.RichText:createWithXML(const_std_string_xml,const_ValueMap_defaults,const_OpenUrlHandler_handleOpenUrl)"],
"description":"createWithXML(const_std_string_xml,const_ValueMap_defaults,const_OpenUrlHandler_handleOpenUrl)",
"scope":"source.lua"},

"ccui.HBox":{
"prefix":"ccui.HBox",
"body":["ccui.HBox"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.HBox:initWithSize(const_Size_size)":{
"prefix":"ccui.HBox:initWithSize(const_Size_size)",
"body":["ccui.HBox:initWithSize(const_Size_size)"],
"description":"initWithSize(const_Size_size)",
"scope":"source.lua"},

"ccui.HBox:create()":{
"prefix":"ccui.HBox:create()",
"body":["ccui.HBox:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.HBox:create(const_Size_size)":{
"prefix":"ccui.HBox:create(const_Size_size)",
"body":["ccui.HBox:create(const_Size_size)"],
"description":"create(const_Size_size)",
"scope":"source.lua"},

"ccui.VBox":{
"prefix":"ccui.VBox",
"body":["ccui.VBox"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.VBox:initWithSize(const_Size_size)":{
"prefix":"ccui.VBox:initWithSize(const_Size_size)",
"body":["ccui.VBox:initWithSize(const_Size_size)"],
"description":"initWithSize(const_Size_size)",
"scope":"source.lua"},

"ccui.VBox:create()":{
"prefix":"ccui.VBox:create()",
"body":["ccui.VBox:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.VBox:create(const_Size_size)":{
"prefix":"ccui.VBox:create(const_Size_size)",
"body":["ccui.VBox:create(const_Size_size)"],
"description":"create(const_Size_size)",
"scope":"source.lua"},

"ccui.RelativeBox":{
"prefix":"ccui.RelativeBox",
"body":["ccui.RelativeBox"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.RelativeBox:initWithSize(const_Size_size)":{
"prefix":"ccui.RelativeBox:initWithSize(const_Size_size)",
"body":["ccui.RelativeBox:initWithSize(const_Size_size)"],
"description":"initWithSize(const_Size_size)",
"scope":"source.lua"},

"ccui.RelativeBox:create()":{
"prefix":"ccui.RelativeBox:create()",
"body":["ccui.RelativeBox:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.RelativeBox:create(const_Size_size)":{
"prefix":"ccui.RelativeBox:create(const_Size_size)",
"body":["ccui.RelativeBox:create(const_Size_size)"],
"description":"create(const_Size_size)",
"scope":"source.lua"},

"ccui.Scale9Sprite":{
"prefix":"ccui.Scale9Sprite",
"body":["ccui.Scale9Sprite"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.Scale9Sprite:resizableSpriteWithCapInsets(const_Rect_capInsets)":{
"prefix":"ccui.Scale9Sprite:resizableSpriteWithCapInsets(const_Rect_capInsets)",
"body":["ccui.Scale9Sprite:resizableSpriteWithCapInsets(const_Rect_capInsets)"],
"description":"resizableSpriteWithCapInsets(const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Scale9Sprite:setState(State_state)":{
"prefix":"ccui.Scale9Sprite:setState(State_state)",
"body":["ccui.Scale9Sprite:setState(State_state)"],
"description":"setState(State_state)",
"scope":"source.lua"},

"ccui.Scale9Sprite:setInsetBottom(float_bottomInset)":{
"prefix":"ccui.Scale9Sprite:setInsetBottom(float_bottomInset)",
"body":["ccui.Scale9Sprite:setInsetBottom(float_bottomInset)"],
"description":"setInsetBottom(float_bottomInset)",
"scope":"source.lua"},

"ccui.Scale9Sprite:initWithSpriteFrameName(const_std_string_spriteFrameName,const_Rect_capInsets)":{
"prefix":"ccui.Scale9Sprite:initWithSpriteFrameName(const_std_string_spriteFrameName,const_Rect_capInsets)",
"body":["ccui.Scale9Sprite:initWithSpriteFrameName(const_std_string_spriteFrameName,const_Rect_capInsets)"],
"description":"initWithSpriteFrameName(const_std_string_spriteFrameName,const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Scale9Sprite:initWithSpriteFrameName(const_std_string_spriteFrameName)":{
"prefix":"ccui.Scale9Sprite:initWithSpriteFrameName(const_std_string_spriteFrameName)",
"body":["ccui.Scale9Sprite:initWithSpriteFrameName(const_std_string_spriteFrameName)"],
"description":"initWithSpriteFrameName(const_std_string_spriteFrameName)",
"scope":"source.lua"},

"ccui.Scale9Sprite:setInsetTop(float_topInset)":{
"prefix":"ccui.Scale9Sprite:setInsetTop(float_topInset)",
"body":["ccui.Scale9Sprite:setInsetTop(float_topInset)"],
"description":"setInsetTop(float_topInset)",
"scope":"source.lua"},

"ccui.Scale9Sprite:init()":{
"prefix":"ccui.Scale9Sprite:init()",
"body":["ccui.Scale9Sprite:init()"],
"description":"init()",
"scope":"source.lua"},

"ccui.Scale9Sprite:init(Sprite_sprite,const_Rect_rect,bool_rotated,const_Rect_capInsets)":{
"prefix":"ccui.Scale9Sprite:init(Sprite_sprite,const_Rect_rect,bool_rotated,const_Rect_capInsets)",
"body":["ccui.Scale9Sprite:init(Sprite_sprite,const_Rect_rect,bool_rotated,const_Rect_capInsets)"],
"description":"init(Sprite_sprite,const_Rect_rect,bool_rotated,const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Scale9Sprite:init(Sprite_sprite,const_Rect_rect,const_Rect_capInsets)":{
"prefix":"ccui.Scale9Sprite:init(Sprite_sprite,const_Rect_rect,const_Rect_capInsets)",
"body":["ccui.Scale9Sprite:init(Sprite_sprite,const_Rect_rect,const_Rect_capInsets)"],
"description":"init(Sprite_sprite,const_Rect_rect,const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Scale9Sprite:setPreferredSize(const_Size_size)":{
"prefix":"ccui.Scale9Sprite:setPreferredSize(const_Size_size)",
"body":["ccui.Scale9Sprite:setPreferredSize(const_Size_size)"],
"description":"setPreferredSize(const_Size_size)",
"scope":"source.lua"},

"ccui.Scale9Sprite:setSpriteFrame(SpriteFrame__spriteFrame,const_Rect_capInsets)":{
"prefix":"ccui.Scale9Sprite:setSpriteFrame(SpriteFrame__spriteFrame,const_Rect_capInsets)",
"body":["ccui.Scale9Sprite:setSpriteFrame(SpriteFrame__spriteFrame,const_Rect_capInsets)"],
"description":"setSpriteFrame(SpriteFrame__spriteFrame,const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Scale9Sprite:getState()":{
"prefix":"ccui.Scale9Sprite:getState()",
"body":["ccui.Scale9Sprite:getState()"],
"description":"getState()",
"scope":"source.lua"},

"ccui.Scale9Sprite:getInsetBottom()":{
"prefix":"ccui.Scale9Sprite:getInsetBottom()",
"body":["ccui.Scale9Sprite:getInsetBottom()"],
"description":"getInsetBottom()",
"scope":"source.lua"},

"ccui.Scale9Sprite:setScale9Enabled(bool_enabled)":{
"prefix":"ccui.Scale9Sprite:setScale9Enabled(bool_enabled)",
"body":["ccui.Scale9Sprite:setScale9Enabled(bool_enabled)"],
"description":"setScale9Enabled(bool_enabled)",
"scope":"source.lua"},

"ccui.Scale9Sprite:isScale9Enabled()":{
"prefix":"ccui.Scale9Sprite:isScale9Enabled()",
"body":["ccui.Scale9Sprite:isScale9Enabled()"],
"description":"isScale9Enabled()",
"scope":"source.lua"},

"ccui.Scale9Sprite:getInsetRight()":{
"prefix":"ccui.Scale9Sprite:getInsetRight()",
"body":["ccui.Scale9Sprite:getInsetRight()"],
"description":"getInsetRight()",
"scope":"source.lua"},

"ccui.Scale9Sprite:getOriginalSize()":{
"prefix":"ccui.Scale9Sprite:getOriginalSize()",
"body":["ccui.Scale9Sprite:getOriginalSize()"],
"description":"getOriginalSize()",
"scope":"source.lua"},

"ccui.Scale9Sprite:initWithFile(const_std_string_file,const_Rect_rect,const_Rect_capInsets)":{
"prefix":"ccui.Scale9Sprite:initWithFile(const_std_string_file,const_Rect_rect,const_Rect_capInsets)",
"body":["ccui.Scale9Sprite:initWithFile(const_std_string_file,const_Rect_rect,const_Rect_capInsets)"],
"description":"initWithFile(const_std_string_file,const_Rect_rect,const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Scale9Sprite:initWithFile(const_Rect_capInsets,const_std_string_file)":{
"prefix":"ccui.Scale9Sprite:initWithFile(const_Rect_capInsets,const_std_string_file)",
"body":["ccui.Scale9Sprite:initWithFile(const_Rect_capInsets,const_std_string_file)"],
"description":"initWithFile(const_Rect_capInsets,const_std_string_file)",
"scope":"source.lua"},

"ccui.Scale9Sprite:initWithFile(const_std_string_file,const_Rect_rect)":{
"prefix":"ccui.Scale9Sprite:initWithFile(const_std_string_file,const_Rect_rect)",
"body":["ccui.Scale9Sprite:initWithFile(const_std_string_file,const_Rect_rect)"],
"description":"initWithFile(const_std_string_file,const_Rect_rect)",
"scope":"source.lua"},

"ccui.Scale9Sprite:initWithFile(const_std_string_file)":{
"prefix":"ccui.Scale9Sprite:initWithFile(const_std_string_file)",
"body":["ccui.Scale9Sprite:initWithFile(const_std_string_file)"],
"description":"initWithFile(const_std_string_file)",
"scope":"source.lua"},

"ccui.Scale9Sprite:getInsetTop()":{
"prefix":"ccui.Scale9Sprite:getInsetTop()",
"body":["ccui.Scale9Sprite:getInsetTop()"],
"description":"getInsetTop()",
"scope":"source.lua"},

"ccui.Scale9Sprite:setInsetLeft(float_leftInset)":{
"prefix":"ccui.Scale9Sprite:setInsetLeft(float_leftInset)",
"body":["ccui.Scale9Sprite:setInsetLeft(float_leftInset)"],
"description":"setInsetLeft(float_leftInset)",
"scope":"source.lua"},

"ccui.Scale9Sprite:initWithSpriteFrame(SpriteFrame_spriteFrame,const_Rect_capInsets)":{
"prefix":"ccui.Scale9Sprite:initWithSpriteFrame(SpriteFrame_spriteFrame,const_Rect_capInsets)",
"body":["ccui.Scale9Sprite:initWithSpriteFrame(SpriteFrame_spriteFrame,const_Rect_capInsets)"],
"description":"initWithSpriteFrame(SpriteFrame_spriteFrame,const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Scale9Sprite:getPreferredSize()":{
"prefix":"ccui.Scale9Sprite:getPreferredSize()",
"body":["ccui.Scale9Sprite:getPreferredSize()"],
"description":"getPreferredSize()",
"scope":"source.lua"},

"ccui.Scale9Sprite:getInsetLeft()":{
"prefix":"ccui.Scale9Sprite:getInsetLeft()",
"body":["ccui.Scale9Sprite:getInsetLeft()"],
"description":"getInsetLeft()",
"scope":"source.lua"},

"ccui.Scale9Sprite:setInsetRight(float_rightInset)":{
"prefix":"ccui.Scale9Sprite:setInsetRight(float_rightInset)",
"body":["ccui.Scale9Sprite:setInsetRight(float_rightInset)"],
"description":"setInsetRight(float_rightInset)",
"scope":"source.lua"},

"ccui.Scale9Sprite:create()":{
"prefix":"ccui.Scale9Sprite:create()",
"body":["ccui.Scale9Sprite:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.Scale9Sprite:create(const_std_string_file,const_Rect_rect,const_Rect_capInsets)":{
"prefix":"ccui.Scale9Sprite:create(const_std_string_file,const_Rect_rect,const_Rect_capInsets)",
"body":["ccui.Scale9Sprite:create(const_std_string_file,const_Rect_rect,const_Rect_capInsets)"],
"description":"create(const_std_string_file,const_Rect_rect,const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Scale9Sprite:create(const_Rect_capInsets,const_std_string_file)":{
"prefix":"ccui.Scale9Sprite:create(const_Rect_capInsets,const_std_string_file)",
"body":["ccui.Scale9Sprite:create(const_Rect_capInsets,const_std_string_file)"],
"description":"create(const_Rect_capInsets,const_std_string_file)",
"scope":"source.lua"},

"ccui.Scale9Sprite:create(const_std_string_file,const_Rect_rect)":{
"prefix":"ccui.Scale9Sprite:create(const_std_string_file,const_Rect_rect)",
"body":["ccui.Scale9Sprite:create(const_std_string_file,const_Rect_rect)"],
"description":"create(const_std_string_file,const_Rect_rect)",
"scope":"source.lua"},

"ccui.Scale9Sprite:create(const_std_string_file)":{
"prefix":"ccui.Scale9Sprite:create(const_std_string_file)",
"body":["ccui.Scale9Sprite:create(const_std_string_file)"],
"description":"create(const_std_string_file)",
"scope":"source.lua"},

"ccui.Scale9Sprite:createWithSpriteFrameName(const_std_string_spriteFrameName)":{
"prefix":"ccui.Scale9Sprite:createWithSpriteFrameName(const_std_string_spriteFrameName)",
"body":["ccui.Scale9Sprite:createWithSpriteFrameName(const_std_string_spriteFrameName)"],
"description":"createWithSpriteFrameName(const_std_string_spriteFrameName)",
"scope":"source.lua"},

"ccui.Scale9Sprite:createWithSpriteFrameName(const_std_string_spriteFrameName,const_Rect_capInsets)":{
"prefix":"ccui.Scale9Sprite:createWithSpriteFrameName(const_std_string_spriteFrameName,const_Rect_capInsets)",
"body":["ccui.Scale9Sprite:createWithSpriteFrameName(const_std_string_spriteFrameName,const_Rect_capInsets)"],
"description":"createWithSpriteFrameName(const_std_string_spriteFrameName,const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.Scale9Sprite:createWithSpriteFrame(SpriteFrame_spriteFrame)":{
"prefix":"ccui.Scale9Sprite:createWithSpriteFrame(SpriteFrame_spriteFrame)",
"body":["ccui.Scale9Sprite:createWithSpriteFrame(SpriteFrame_spriteFrame)"],
"description":"createWithSpriteFrame(SpriteFrame_spriteFrame)",
"scope":"source.lua"},

"ccui.Scale9Sprite:createWithSpriteFrame(SpriteFrame_spriteFrame,const_Rect_capInsets)":{
"prefix":"ccui.Scale9Sprite:createWithSpriteFrame(SpriteFrame_spriteFrame,const_Rect_capInsets)",
"body":["ccui.Scale9Sprite:createWithSpriteFrame(SpriteFrame_spriteFrame,const_Rect_capInsets)"],
"description":"createWithSpriteFrame(SpriteFrame_spriteFrame,const_Rect_capInsets)",
"scope":"source.lua"},

"ccui.EditBox":{
"prefix":"ccui.EditBox",
"body":["ccui.EditBox"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.EditBox:new()":{
"prefix":"ccui.EditBox:new()",
"body":["ccui.EditBox:new()"],
"description":"new()",
"scope":"source.lua"},

"ccui.EditBox:getFontSize()":{
"prefix":"ccui.EditBox:getFontSize()",
"body":["ccui.EditBox:getFontSize()"],
"description":"getFontSize()",
"scope":"source.lua"},

"ccui.EditBox:keyboardDidShow()":{
"prefix":"ccui.EditBox:keyboardDidShow()",
"body":["ccui.EditBox:keyboardDidShow()"],
"description":"keyboardDidShow()",
"scope":"source.lua"},

"ccui.EditBox:getScriptEditBoxHandler()":{
"prefix":"ccui.EditBox:getScriptEditBoxHandler()",
"body":["ccui.EditBox:getScriptEditBoxHandler()"],
"description":"getScriptEditBoxHandler()",
"scope":"source.lua"},

"ccui.EditBox:getText()":{
"prefix":"ccui.EditBox:getText()",
"body":["ccui.EditBox:getText()"],
"description":"getText()",
"scope":"source.lua"},

"ccui.EditBox:getInputMode()":{
"prefix":"ccui.EditBox:getInputMode()",
"body":["ccui.EditBox:getInputMode()"],
"description":"getInputMode()",
"scope":"source.lua"},

"ccui.EditBox:getPlaceholderFontName()":{
"prefix":"ccui.EditBox:getPlaceholderFontName()",
"body":["ccui.EditBox:getPlaceholderFontName()"],
"description":"getPlaceholderFontName()",
"scope":"source.lua"},

"ccui.EditBox:keyboardDidHide()":{
"prefix":"ccui.EditBox:keyboardDidHide()",
"body":["ccui.EditBox:keyboardDidHide()"],
"description":"keyboardDidHide()",
"scope":"source.lua"},

"ccui.EditBox:setPlaceholderFontName()":{
"prefix":"ccui.EditBox:setPlaceholderFontName()",
"body":["ccui.EditBox:setPlaceholderFontName()"],
"description":"setPlaceholderFontName()",
"scope":"source.lua"},

"ccui.EditBox:getPlaceholderFontSize()":{
"prefix":"ccui.EditBox:getPlaceholderFontSize()",
"body":["ccui.EditBox:getPlaceholderFontSize()"],
"description":"getPlaceholderFontSize()",
"scope":"source.lua"},

"ccui.EditBox:getPlaceHolder()":{
"prefix":"ccui.EditBox:getPlaceHolder()",
"body":["ccui.EditBox:getPlaceHolder()"],
"description":"getPlaceHolder()",
"scope":"source.lua"},

"ccui.EditBox:setFontName()":{
"prefix":"ccui.EditBox:setFontName()",
"body":["ccui.EditBox:setFontName()"],
"description":"setFontName()",
"scope":"source.lua"},

"ccui.EditBox:registerScriptEditBoxHandler()":{
"prefix":"ccui.EditBox:registerScriptEditBoxHandler()",
"body":["ccui.EditBox:registerScriptEditBoxHandler()"],
"description":"registerScriptEditBoxHandler()",
"scope":"source.lua"},

"ccui.EditBox:setPlaceholderFontSize()":{
"prefix":"ccui.EditBox:setPlaceholderFontSize()",
"body":["ccui.EditBox:setPlaceholderFontSize()"],
"description":"setPlaceholderFontSize()",
"scope":"source.lua"},

"ccui.EditBox:setInputMode()":{
"prefix":"ccui.EditBox:setInputMode()",
"body":["ccui.EditBox:setInputMode()"],
"description":"setInputMode()",
"scope":"source.lua"},

"ccui.EditBox:unregisterScriptEditBoxHandler()":{
"prefix":"ccui.EditBox:unregisterScriptEditBoxHandler()",
"body":["ccui.EditBox:unregisterScriptEditBoxHandler()"],
"description":"unregisterScriptEditBoxHandler()",
"scope":"source.lua"},

"ccui.EditBox:keyboardWillShow()":{
"prefix":"ccui.EditBox:keyboardWillShow()",
"body":["ccui.EditBox:keyboardWillShow()"],
"description":"keyboardWillShow()",
"scope":"source.lua"},

"ccui.EditBox:setPlaceholderFontColor()":{
"prefix":"ccui.EditBox:setPlaceholderFontColor()",
"body":["ccui.EditBox:setPlaceholderFontColor()"],
"description":"setPlaceholderFontColor()",
"scope":"source.lua"},

"ccui.EditBox:getReturnType()":{
"prefix":"ccui.EditBox:getReturnType()",
"body":["ccui.EditBox:getReturnType()"],
"description":"getReturnType()",
"scope":"source.lua"},

"ccui.EditBox:setFontColor()":{
"prefix":"ccui.EditBox:setFontColor()",
"body":["ccui.EditBox:setFontColor()"],
"description":"setFontColor()",
"scope":"source.lua"},

"ccui.EditBox:getFontName()":{
"prefix":"ccui.EditBox:getFontName()",
"body":["ccui.EditBox:getFontName()"],
"description":"getFontName()",
"scope":"source.lua"},

"ccui.EditBox:keyboardWillHide()":{
"prefix":"ccui.EditBox:keyboardWillHide()",
"body":["ccui.EditBox:keyboardWillHide()"],
"description":"keyboardWillHide()",
"scope":"source.lua"},

"ccui.EditBox:touchDownAction()":{
"prefix":"ccui.EditBox:touchDownAction()",
"body":["ccui.EditBox:touchDownAction()"],
"description":"touchDownAction()",
"scope":"source.lua"},

"ccui.EditBox:getFontColor()":{
"prefix":"ccui.EditBox:getFontColor()",
"body":["ccui.EditBox:getFontColor()"],
"description":"getFontColor()",
"scope":"source.lua"},

"ccui.EditBox:getInputFlag()":{
"prefix":"ccui.EditBox:getInputFlag()",
"body":["ccui.EditBox:getInputFlag()"],
"description":"getInputFlag()",
"scope":"source.lua"},

"ccui.EditBox:getTextHorizontalAlignment()":{
"prefix":"ccui.EditBox:getTextHorizontalAlignment()",
"body":["ccui.EditBox:getTextHorizontalAlignment()"],
"description":"getTextHorizontalAlignment()",
"scope":"source.lua"},

"ccui.EditBox:setPlaceholderFont()":{
"prefix":"ccui.EditBox:setPlaceholderFont()",
"body":["ccui.EditBox:setPlaceholderFont()"],
"description":"setPlaceholderFont()",
"scope":"source.lua"},

"ccui.EditBox:setFontSize()":{
"prefix":"ccui.EditBox:setFontSize()",
"body":["ccui.EditBox:setFontSize()"],
"description":"setFontSize()",
"scope":"source.lua"},

"ccui.EditBox:initWithSizeAndBackgroundSprite()":{
"prefix":"ccui.EditBox:initWithSizeAndBackgroundSprite()",
"body":["ccui.EditBox:initWithSizeAndBackgroundSprite()"],
"description":"initWithSizeAndBackgroundSprite()",
"scope":"source.lua"},

"ccui.EditBox:setPlaceHolder()":{
"prefix":"ccui.EditBox:setPlaceHolder()",
"body":["ccui.EditBox:setPlaceHolder()"],
"description":"setPlaceHolder()",
"scope":"source.lua"},

"ccui.EditBox:setReturnType()":{
"prefix":"ccui.EditBox:setReturnType()",
"body":["ccui.EditBox:setReturnType()"],
"description":"setReturnType()",
"scope":"source.lua"},

"ccui.EditBox:setInputFlag()":{
"prefix":"ccui.EditBox:setInputFlag()",
"body":["ccui.EditBox:setInputFlag()"],
"description":"setInputFlag()",
"scope":"source.lua"},

"ccui.EditBox:getMaxLength()":{
"prefix":"ccui.EditBox:getMaxLength()",
"body":["ccui.EditBox:getMaxLength()"],
"description":"getMaxLength()",
"scope":"source.lua"},

"ccui.EditBox:setText()":{
"prefix":"ccui.EditBox:setText()",
"body":["ccui.EditBox:setText()"],
"description":"setText()",
"scope":"source.lua"},

"ccui.EditBox:getPlaceholderFontColor()":{
"prefix":"ccui.EditBox:getPlaceholderFontColor()",
"body":["ccui.EditBox:getPlaceholderFontColor()"],
"description":"getPlaceholderFontColor()",
"scope":"source.lua"},

"ccui.EditBox:setMaxLength()":{
"prefix":"ccui.EditBox:setMaxLength()",
"body":["ccui.EditBox:setMaxLength()"],
"description":"setMaxLength()",
"scope":"source.lua"},

"ccui.EditBox:setFont()":{
"prefix":"ccui.EditBox:setFont()",
"body":["ccui.EditBox:setFont()"],
"description":"setFont()",
"scope":"source.lua"},

"ccui.EditBox:setTextHorizontalAlignment()":{
"prefix":"ccui.EditBox:setTextHorizontalAlignment()",
"body":["ccui.EditBox:setTextHorizontalAlignment()"],
"description":"setTextHorizontalAlignment()",
"scope":"source.lua"},

"ccui.EditBox:create()":{
"prefix":"ccui.EditBox:create()",
"body":["ccui.EditBox:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.LayoutComponent":{
"prefix":"ccui.LayoutComponent",
"body":["ccui.LayoutComponent"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.LayoutComponent:setStretchWidthEnabled(bool_isUsed)":{
"prefix":"ccui.LayoutComponent:setStretchWidthEnabled(bool_isUsed)",
"body":["ccui.LayoutComponent:setStretchWidthEnabled(bool_isUsed)"],
"description":"setStretchWidthEnabled(bool_isUsed)",
"scope":"source.lua"},

"ccui.LayoutComponent:setPercentWidth(float_percentWidth)":{
"prefix":"ccui.LayoutComponent:setPercentWidth(float_percentWidth)",
"body":["ccui.LayoutComponent:setPercentWidth(float_percentWidth)"],
"description":"setPercentWidth(float_percentWidth)",
"scope":"source.lua"},

"ccui.LayoutComponent:getAnchorPosition()":{
"prefix":"ccui.LayoutComponent:getAnchorPosition()",
"body":["ccui.LayoutComponent:getAnchorPosition()"],
"description":"getAnchorPosition()",
"scope":"source.lua"},

"ccui.LayoutComponent:setPositionPercentXEnabled(bool_isUsed)":{
"prefix":"ccui.LayoutComponent:setPositionPercentXEnabled(bool_isUsed)",
"body":["ccui.LayoutComponent:setPositionPercentXEnabled(bool_isUsed)"],
"description":"setPositionPercentXEnabled(bool_isUsed)",
"scope":"source.lua"},

"ccui.LayoutComponent:setStretchHeightEnabled(bool_isUsed)":{
"prefix":"ccui.LayoutComponent:setStretchHeightEnabled(bool_isUsed)",
"body":["ccui.LayoutComponent:setStretchHeightEnabled(bool_isUsed)"],
"description":"setStretchHeightEnabled(bool_isUsed)",
"scope":"source.lua"},

"ccui.LayoutComponent:setActiveEnabled(bool_enable)":{
"prefix":"ccui.LayoutComponent:setActiveEnabled(bool_enable)",
"body":["ccui.LayoutComponent:setActiveEnabled(bool_enable)"],
"description":"setActiveEnabled(bool_enable)",
"scope":"source.lua"},

"ccui.LayoutComponent:getRightMargin()":{
"prefix":"ccui.LayoutComponent:getRightMargin()",
"body":["ccui.LayoutComponent:getRightMargin()"],
"description":"getRightMargin()",
"scope":"source.lua"},

"ccui.LayoutComponent:getSize()":{
"prefix":"ccui.LayoutComponent:getSize()",
"body":["ccui.LayoutComponent:getSize()"],
"description":"getSize()",
"scope":"source.lua"},

"ccui.LayoutComponent:setAnchorPosition(const_Point_point)":{
"prefix":"ccui.LayoutComponent:setAnchorPosition(const_Point_point)",
"body":["ccui.LayoutComponent:setAnchorPosition(const_Point_point)"],
"description":"setAnchorPosition(const_Point_point)",
"scope":"source.lua"},

"ccui.LayoutComponent:refreshLayout()":{
"prefix":"ccui.LayoutComponent:refreshLayout()",
"body":["ccui.LayoutComponent:refreshLayout()"],
"description":"refreshLayout()",
"scope":"source.lua"},

"ccui.LayoutComponent:isPercentWidthEnabled()":{
"prefix":"ccui.LayoutComponent:isPercentWidthEnabled()",
"body":["ccui.LayoutComponent:isPercentWidthEnabled()"],
"description":"isPercentWidthEnabled()",
"scope":"source.lua"},

"ccui.LayoutComponent:setVerticalEdge(VerticalEdge_vEage)":{
"prefix":"ccui.LayoutComponent:setVerticalEdge(VerticalEdge_vEage)",
"body":["ccui.LayoutComponent:setVerticalEdge(VerticalEdge_vEage)"],
"description":"setVerticalEdge(VerticalEdge_vEage)",
"scope":"source.lua"},

"ccui.LayoutComponent:getTopMargin()":{
"prefix":"ccui.LayoutComponent:getTopMargin()",
"body":["ccui.LayoutComponent:getTopMargin()"],
"description":"getTopMargin()",
"scope":"source.lua"},

"ccui.LayoutComponent:setSizeWidth(float_width)":{
"prefix":"ccui.LayoutComponent:setSizeWidth(float_width)",
"body":["ccui.LayoutComponent:setSizeWidth(float_width)"],
"description":"setSizeWidth(float_width)",
"scope":"source.lua"},

"ccui.LayoutComponent:getPercentContentSize()":{
"prefix":"ccui.LayoutComponent:getPercentContentSize()",
"body":["ccui.LayoutComponent:getPercentContentSize()"],
"description":"getPercentContentSize()",
"scope":"source.lua"},

"ccui.LayoutComponent:getVerticalEdge()":{
"prefix":"ccui.LayoutComponent:getVerticalEdge()",
"body":["ccui.LayoutComponent:getVerticalEdge()"],
"description":"getVerticalEdge()",
"scope":"source.lua"},

"ccui.LayoutComponent:setPercentWidthEnabled(bool_isUsed)":{
"prefix":"ccui.LayoutComponent:setPercentWidthEnabled(bool_isUsed)",
"body":["ccui.LayoutComponent:setPercentWidthEnabled(bool_isUsed)"],
"description":"setPercentWidthEnabled(bool_isUsed)",
"scope":"source.lua"},

"ccui.LayoutComponent:isStretchWidthEnabled()":{
"prefix":"ccui.LayoutComponent:isStretchWidthEnabled()",
"body":["ccui.LayoutComponent:isStretchWidthEnabled()"],
"description":"isStretchWidthEnabled()",
"scope":"source.lua"},

"ccui.LayoutComponent:setLeftMargin(float_margin)":{
"prefix":"ccui.LayoutComponent:setLeftMargin(float_margin)",
"body":["ccui.LayoutComponent:setLeftMargin(float_margin)"],
"description":"setLeftMargin(float_margin)",
"scope":"source.lua"},

"ccui.LayoutComponent:getSizeWidth()":{
"prefix":"ccui.LayoutComponent:getSizeWidth()",
"body":["ccui.LayoutComponent:getSizeWidth()"],
"description":"getSizeWidth()",
"scope":"source.lua"},

"ccui.LayoutComponent:setPositionPercentYEnabled(bool_isUsed)":{
"prefix":"ccui.LayoutComponent:setPositionPercentYEnabled(bool_isUsed)",
"body":["ccui.LayoutComponent:setPositionPercentYEnabled(bool_isUsed)"],
"description":"setPositionPercentYEnabled(bool_isUsed)",
"scope":"source.lua"},

"ccui.LayoutComponent:getSizeHeight()":{
"prefix":"ccui.LayoutComponent:getSizeHeight()",
"body":["ccui.LayoutComponent:getSizeHeight()"],
"description":"getSizeHeight()",
"scope":"source.lua"},

"ccui.LayoutComponent:getPositionPercentY()":{
"prefix":"ccui.LayoutComponent:getPositionPercentY()",
"body":["ccui.LayoutComponent:getPositionPercentY()"],
"description":"getPositionPercentY()",
"scope":"source.lua"},

"ccui.LayoutComponent:getPositionPercentX()":{
"prefix":"ccui.LayoutComponent:getPositionPercentX()",
"body":["ccui.LayoutComponent:getPositionPercentX()"],
"description":"getPositionPercentX()",
"scope":"source.lua"},

"ccui.LayoutComponent:setTopMargin(float_margin)":{
"prefix":"ccui.LayoutComponent:setTopMargin(float_margin)",
"body":["ccui.LayoutComponent:setTopMargin(float_margin)"],
"description":"setTopMargin(float_margin)",
"scope":"source.lua"},

"ccui.LayoutComponent:getPercentHeight()":{
"prefix":"ccui.LayoutComponent:getPercentHeight()",
"body":["ccui.LayoutComponent:getPercentHeight()"],
"description":"getPercentHeight()",
"scope":"source.lua"},

"ccui.LayoutComponent:getUsingPercentContentSize()":{
"prefix":"ccui.LayoutComponent:getUsingPercentContentSize()",
"body":["ccui.LayoutComponent:getUsingPercentContentSize()"],
"description":"getUsingPercentContentSize()",
"scope":"source.lua"},

"ccui.LayoutComponent:setPositionPercentY(float_percentMargin)":{
"prefix":"ccui.LayoutComponent:setPositionPercentY(float_percentMargin)",
"body":["ccui.LayoutComponent:setPositionPercentY(float_percentMargin)"],
"description":"setPositionPercentY(float_percentMargin)",
"scope":"source.lua"},

"ccui.LayoutComponent:setPositionPercentX(float_percentMargin)":{
"prefix":"ccui.LayoutComponent:setPositionPercentX(float_percentMargin)",
"body":["ccui.LayoutComponent:setPositionPercentX(float_percentMargin)"],
"description":"setPositionPercentX(float_percentMargin)",
"scope":"source.lua"},

"ccui.LayoutComponent:setRightMargin(float_margin)":{
"prefix":"ccui.LayoutComponent:setRightMargin(float_margin)",
"body":["ccui.LayoutComponent:setRightMargin(float_margin)"],
"description":"setRightMargin(float_margin)",
"scope":"source.lua"},

"ccui.LayoutComponent:isPositionPercentYEnabled()":{
"prefix":"ccui.LayoutComponent:isPositionPercentYEnabled()",
"body":["ccui.LayoutComponent:isPositionPercentYEnabled()"],
"description":"isPositionPercentYEnabled()",
"scope":"source.lua"},

"ccui.LayoutComponent:setPercentHeight(float_percentHeight)":{
"prefix":"ccui.LayoutComponent:setPercentHeight(float_percentHeight)",
"body":["ccui.LayoutComponent:setPercentHeight(float_percentHeight)"],
"description":"setPercentHeight(float_percentHeight)",
"scope":"source.lua"},

"ccui.LayoutComponent:setPercentOnlyEnabled(bool_enable)":{
"prefix":"ccui.LayoutComponent:setPercentOnlyEnabled(bool_enable)",
"body":["ccui.LayoutComponent:setPercentOnlyEnabled(bool_enable)"],
"description":"setPercentOnlyEnabled(bool_enable)",
"scope":"source.lua"},

"ccui.LayoutComponent:setHorizontalEdge(HorizontalEdge_hEage)":{
"prefix":"ccui.LayoutComponent:setHorizontalEdge(HorizontalEdge_hEage)",
"body":["ccui.LayoutComponent:setHorizontalEdge(HorizontalEdge_hEage)"],
"description":"setHorizontalEdge(HorizontalEdge_hEage)",
"scope":"source.lua"},

"ccui.LayoutComponent:setPosition(const_Point_position)":{
"prefix":"ccui.LayoutComponent:setPosition(const_Point_position)",
"body":["ccui.LayoutComponent:setPosition(const_Point_position)"],
"description":"setPosition(const_Point_position)",
"scope":"source.lua"},

"ccui.LayoutComponent:setUsingPercentContentSize(bool_isUsed)":{
"prefix":"ccui.LayoutComponent:setUsingPercentContentSize(bool_isUsed)",
"body":["ccui.LayoutComponent:setUsingPercentContentSize(bool_isUsed)"],
"description":"setUsingPercentContentSize(bool_isUsed)",
"scope":"source.lua"},

"ccui.LayoutComponent:getLeftMargin()":{
"prefix":"ccui.LayoutComponent:getLeftMargin()",
"body":["ccui.LayoutComponent:getLeftMargin()"],
"description":"getLeftMargin()",
"scope":"source.lua"},

"ccui.LayoutComponent:getPosition()":{
"prefix":"ccui.LayoutComponent:getPosition()",
"body":["ccui.LayoutComponent:getPosition()"],
"description":"getPosition()",
"scope":"source.lua"},

"ccui.LayoutComponent:setSizeHeight(float_height)":{
"prefix":"ccui.LayoutComponent:setSizeHeight(float_height)",
"body":["ccui.LayoutComponent:setSizeHeight(float_height)"],
"description":"setSizeHeight(float_height)",
"scope":"source.lua"},

"ccui.LayoutComponent:isPositionPercentXEnabled()":{
"prefix":"ccui.LayoutComponent:isPositionPercentXEnabled()",
"body":["ccui.LayoutComponent:isPositionPercentXEnabled()"],
"description":"isPositionPercentXEnabled()",
"scope":"source.lua"},

"ccui.LayoutComponent:getBottomMargin()":{
"prefix":"ccui.LayoutComponent:getBottomMargin()",
"body":["ccui.LayoutComponent:getBottomMargin()"],
"description":"getBottomMargin()",
"scope":"source.lua"},

"ccui.LayoutComponent:setPercentHeightEnabled(bool_isUsed)":{
"prefix":"ccui.LayoutComponent:setPercentHeightEnabled(bool_isUsed)",
"body":["ccui.LayoutComponent:setPercentHeightEnabled(bool_isUsed)"],
"description":"setPercentHeightEnabled(bool_isUsed)",
"scope":"source.lua"},

"ccui.LayoutComponent:setPercentContentSize(const_Vec2_percent)":{
"prefix":"ccui.LayoutComponent:setPercentContentSize(const_Vec2_percent)",
"body":["ccui.LayoutComponent:setPercentContentSize(const_Vec2_percent)"],
"description":"setPercentContentSize(const_Vec2_percent)",
"scope":"source.lua"},

"ccui.LayoutComponent:isPercentHeightEnabled()":{
"prefix":"ccui.LayoutComponent:isPercentHeightEnabled()",
"body":["ccui.LayoutComponent:isPercentHeightEnabled()"],
"description":"isPercentHeightEnabled()",
"scope":"source.lua"},

"ccui.LayoutComponent:getPercentWidth()":{
"prefix":"ccui.LayoutComponent:getPercentWidth()",
"body":["ccui.LayoutComponent:getPercentWidth()"],
"description":"getPercentWidth()",
"scope":"source.lua"},

"ccui.LayoutComponent:getHorizontalEdge()":{
"prefix":"ccui.LayoutComponent:getHorizontalEdge()",
"body":["ccui.LayoutComponent:getHorizontalEdge()"],
"description":"getHorizontalEdge()",
"scope":"source.lua"},

"ccui.LayoutComponent:isStretchHeightEnabled()":{
"prefix":"ccui.LayoutComponent:isStretchHeightEnabled()",
"body":["ccui.LayoutComponent:isStretchHeightEnabled()"],
"description":"isStretchHeightEnabled()",
"scope":"source.lua"},

"ccui.LayoutComponent:setBottomMargin(float_margin)":{
"prefix":"ccui.LayoutComponent:setBottomMargin(float_margin)",
"body":["ccui.LayoutComponent:setBottomMargin(float_margin)"],
"description":"setBottomMargin(float_margin)",
"scope":"source.lua"},

"ccui.LayoutComponent:setSize(const_Size_size)":{
"prefix":"ccui.LayoutComponent:setSize(const_Size_size)",
"body":["ccui.LayoutComponent:setSize(const_Size_size)"],
"description":"setSize(const_Size_size)",
"scope":"source.lua"},

"ccui.LayoutComponent:bindLayoutComponent(Node_node)":{
"prefix":"ccui.LayoutComponent:bindLayoutComponent(Node_node)",
"body":["ccui.LayoutComponent:bindLayoutComponent(Node_node)"],
"description":"bindLayoutComponent(Node_node)",
"scope":"source.lua"},

"ccui.TabHeader":{
"prefix":"ccui.TabHeader",
"body":["ccui.TabHeader"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.TabHeader:getIndexInTabControl()":{
"prefix":"ccui.TabHeader:getIndexInTabControl()",
"body":["ccui.TabHeader:getIndexInTabControl()"],
"description":"getIndexInTabControl()",
"scope":"source.lua"},

"ccui.TabHeader:getTitleText()":{
"prefix":"ccui.TabHeader:getTitleText()",
"body":["ccui.TabHeader:getTitleText()"],
"description":"getTitleText()",
"scope":"source.lua"},

"ccui.TabHeader:setTitleFontSize(float_size)":{
"prefix":"ccui.TabHeader:setTitleFontSize(float_size)",
"body":["ccui.TabHeader:setTitleFontSize(float_size)"],
"description":"setTitleFontSize(float_size)",
"scope":"source.lua"},

"ccui.TabHeader:setTitleFontName(const_std_string_fontName)":{
"prefix":"ccui.TabHeader:setTitleFontName(const_std_string_fontName)",
"body":["ccui.TabHeader:setTitleFontName(const_std_string_fontName)"],
"description":"setTitleFontName(const_std_string_fontName)",
"scope":"source.lua"},

"ccui.TabHeader:getTitleFontSize()":{
"prefix":"ccui.TabHeader:getTitleFontSize()",
"body":["ccui.TabHeader:getTitleFontSize()"],
"description":"getTitleFontSize()",
"scope":"source.lua"},

"ccui.TabHeader:getTitleFontName()":{
"prefix":"ccui.TabHeader:getTitleFontName()",
"body":["ccui.TabHeader:getTitleFontName()"],
"description":"getTitleFontName()",
"scope":"source.lua"},

"ccui.TabHeader:getTitleColor()":{
"prefix":"ccui.TabHeader:getTitleColor()",
"body":["ccui.TabHeader:getTitleColor()"],
"description":"getTitleColor()",
"scope":"source.lua"},

"ccui.TabHeader:getTitleRenderer()":{
"prefix":"ccui.TabHeader:getTitleRenderer()",
"body":["ccui.TabHeader:getTitleRenderer()"],
"description":"getTitleRenderer()",
"scope":"source.lua"},

"ccui.TabHeader:setTitleText(const_std_string_text)":{
"prefix":"ccui.TabHeader:setTitleText(const_std_string_text)",
"body":["ccui.TabHeader:setTitleText(const_std_string_text)"],
"description":"setTitleText(const_std_string_text)",
"scope":"source.lua"},

"ccui.TabHeader:setTitleColor(const_Color4B_color)":{
"prefix":"ccui.TabHeader:setTitleColor(const_Color4B_color)",
"body":["ccui.TabHeader:setTitleColor(const_Color4B_color)"],
"description":"setTitleColor(const_Color4B_color)",
"scope":"source.lua"},

"ccui.TabHeader:create()":{
"prefix":"ccui.TabHeader:create()",
"body":["ccui.TabHeader:create()"],
"description":"create()",
"scope":"source.lua"},

"ccui.TabControl":{
"prefix":"ccui.TabControl",
"body":["ccui.TabControl"],
"description":"cocos class",
"scope":"source.lua"},

"ccui.TabControl:setHeaderWidth(float_headerWidth)":{
"prefix":"ccui.TabControl:setHeaderWidth(float_headerWidth)",
"body":["ccui.TabControl:setHeaderWidth(float_headerWidth)"],
"description":"setHeaderWidth(float_headerWidth)",
"scope":"source.lua"},

"ccui.TabControl:removeTab(int_index)":{
"prefix":"ccui.TabControl:removeTab(int_index)",
"body":["ccui.TabControl:removeTab(int_index)"],
"description":"removeTab(int_index)",
"scope":"source.lua"},

"ccui.TabControl:getTabCount()":{
"prefix":"ccui.TabControl:getTabCount()",
"body":["ccui.TabControl:getTabCount()"],
"description":"getTabCount()",
"scope":"source.lua"},

"ccui.TabControl:getHeaderDockPlace()":{
"prefix":"ccui.TabControl:getHeaderDockPlace()",
"body":["ccui.TabControl:getHeaderDockPlace()"],
"description":"getHeaderDockPlace()",
"scope":"source.lua"},

"ccui.TabControl:getSelectedTabIndex()":{
"prefix":"ccui.TabControl:getSelectedTabIndex()",
"body":["ccui.TabControl:getSelectedTabIndex()"],
"description":"getSelectedTabIndex()",
"scope":"source.lua"},

"ccui.TabControl:insertTab(int_index,TabHeader_header,Layout_container)":{
"prefix":"ccui.TabControl:insertTab(int_index,TabHeader_header,Layout_container)",
"body":["ccui.TabControl:insertTab(int_index,TabHeader_header,Layout_container)"],
"description":"insertTab(int_index,TabHeader_header,Layout_container)",
"scope":"source.lua"},

"ccui.TabControl:ignoreHeadersTextureSize(bool_ignore)":{
"prefix":"ccui.TabControl:ignoreHeadersTextureSize(bool_ignore)",
"body":["ccui.TabControl:ignoreHeadersTextureSize(bool_ignore)"],
"description":"ignoreHeadersTextureSize(bool_ignore)",
"scope":"source.lua"},

"ccui.TabControl:getHeaderWidth()":{
"prefix":"ccui.TabControl:getHeaderWidth()",
"body":["ccui.TabControl:getHeaderWidth()"],
"description":"getHeaderWidth()",
"scope":"source.lua"},

"ccui.TabControl:setHeaderDockPlace(TabControl_Dock_dockPlace)":{
"prefix":"ccui.TabControl:setHeaderDockPlace(TabControl_Dock_dockPlace)",
"body":["ccui.TabControl:setHeaderDockPlace(TabControl_Dock_dockPlace)"],
"description":"setHeaderDockPlace(TabControl_Dock_dockPlace)",
"scope":"source.lua"},

"ccui.TabControl:setSelectTab(int_index)":{
"prefix":"ccui.TabControl:setSelectTab(int_index)",
"body":["ccui.TabControl:setSelectTab(int_index)"],
"description":"setSelectTab(int_index)",
"scope":"source.lua"},

"ccui.TabControl:setSelectTab(TabHeader_tabHeader)":{
"prefix":"ccui.TabControl:setSelectTab(TabHeader_tabHeader)",
"body":["ccui.TabControl:setSelectTab(TabHeader_tabHeader)"],
"description":"setSelectTab(TabHeader_tabHeader)",
"scope":"source.lua"},

"ccui.TabControl:getTabHeader(int_index)":{
"prefix":"ccui.TabControl:getTabHeader(int_index)",
"body":["ccui.TabControl:getTabHeader(int_index)"],
"description":"getTabHeader(int_index)",
"scope":"source.lua"},

"ccui.TabControl:isIgnoreHeadersTextureSize()":{
"prefix":"ccui.TabControl:isIgnoreHeadersTextureSize()",
"body":["ccui.TabControl:isIgnoreHeadersTextureSize()"],
"description":"isIgnoreHeadersTextureSize()",
"scope":"source.lua"},

"ccui.TabControl:setTabChangedEventListener(const_ccTabControlCallback_callback)":{
"prefix":"ccui.TabControl:setTabChangedEventListener(const_ccTabControlCallback_callback)",
"body":["ccui.TabControl:setTabChangedEventListener(const_ccTabControlCallback_callback)"],
"description":"setTabChangedEventListener(const_ccTabControlCallback_callback)",
"scope":"source.lua"},

"ccui.TabControl:setHeaderSelectedZoom(float_zoom)":{
"prefix":"ccui.TabControl:setHeaderSelectedZoom(float_zoom)",
"body":["ccui.TabControl:setHeaderSelectedZoom(float_zoom)"],
"description":"setHeaderSelectedZoom(float_zoom)",
"scope":"source.lua"},

"ccui.TabControl:setHeaderHeight(float_headerHeight)":{
"prefix":"ccui.TabControl:setHeaderHeight(float_headerHeight)",
"body":["ccui.TabControl:setHeaderHeight(float_headerHeight)"],
"description":"setHeaderHeight(float_headerHeight)",
"scope":"source.lua"},

"ccui.TabControl:indexOfTabHeader(const_TabHeader_tabCell)":{
"prefix":"ccui.TabControl:indexOfTabHeader(const_TabHeader_tabCell)",
"body":["ccui.TabControl:indexOfTabHeader(const_TabHeader_tabCell)"],
"description":"indexOfTabHeader(const_TabHeader_tabCell)",
"scope":"source.lua"},

"ccui.TabControl:getTabContainer(int_index)":{
"prefix":"ccui.TabControl:getTabContainer(int_index)",
"body":["ccui.TabControl:getTabContainer(int_index)"],
"description":"getTabContainer(int_index)",
"scope":"source.lua"},

"ccui.TabControl:getHeaderSelectedZoom()":{
"prefix":"ccui.TabControl:getHeaderSelectedZoom()",
"body":["ccui.TabControl:getHeaderSelectedZoom()"],
"description":"getHeaderSelectedZoom()",
"scope":"source.lua"},

"ccui.TabControl:getHeaderHeight()":{
"prefix":"ccui.TabControl:getHeaderHeight()",
"body":["ccui.TabControl:getHeaderHeight()"],
"description":"getHeaderHeight()",
"scope":"source.lua"},

"ccui.TabControl:create()":{
"prefix":"ccui.TabControl:create()",
"body":["ccui.TabControl:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.AABB":{
"prefix":"cc.AABB",
"body":["cc.AABB"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AABB:reset()":{
"prefix":"cc.AABB:reset()",
"body":["cc.AABB:reset()"],
"description":"reset()",
"scope":"source.lua"},

"cc.AABB:set(const_Vec3_min,const_Vec3_max)":{
"prefix":"cc.AABB:set(const_Vec3_min,const_Vec3_max)",
"body":["cc.AABB:set(const_Vec3_min,const_Vec3_max)"],
"description":"set(const_Vec3_min,const_Vec3_max)",
"scope":"source.lua"},

"cc.AABB:transform(const_Mat4_mat)":{
"prefix":"cc.AABB:transform(const_Mat4_mat)",
"body":["cc.AABB:transform(const_Mat4_mat)"],
"description":"transform(const_Mat4_mat)",
"scope":"source.lua"},

"cc.AABB:getCenter()":{
"prefix":"cc.AABB:getCenter()",
"body":["cc.AABB:getCenter()"],
"description":"getCenter()",
"scope":"source.lua"},

"cc.AABB:isEmpty()":{
"prefix":"cc.AABB:isEmpty()",
"body":["cc.AABB:isEmpty()"],
"description":"isEmpty()",
"scope":"source.lua"},

"cc.AABB:getCorners(Vec3_dst)":{
"prefix":"cc.AABB:getCorners(Vec3_dst)",
"body":["cc.AABB:getCorners(Vec3_dst)"],
"description":"getCorners(Vec3_dst)",
"scope":"source.lua"},

"cc.AABB:updateMinMax(const_Vec3_point,ssize_t_num)":{
"prefix":"cc.AABB:updateMinMax(const_Vec3_point,ssize_t_num)",
"body":["cc.AABB:updateMinMax(const_Vec3_point,ssize_t_num)"],
"description":"updateMinMax(const_Vec3_point,ssize_t_num)",
"scope":"source.lua"},

"cc.AABB:containPoint(const_Vec3_point)":{
"prefix":"cc.AABB:containPoint(const_Vec3_point)",
"body":["cc.AABB:containPoint(const_Vec3_point)"],
"description":"containPoint(const_Vec3_point)",
"scope":"source.lua"},

"cc.OBB":{
"prefix":"cc.OBB",
"body":["cc.OBB"],
"description":"cocos class",
"scope":"source.lua"},

"cc.OBB:reset()":{
"prefix":"cc.OBB:reset()",
"body":["cc.OBB:reset()"],
"description":"reset()",
"scope":"source.lua"},

"cc.OBB:set(const_Vec3_center,const_Vec3__xAxis,const_Vec3__yAxis,const_Vec3__zAxis,const_Vec3__extents)":{
"prefix":"cc.OBB:set(const_Vec3_center,const_Vec3__xAxis,const_Vec3__yAxis,const_Vec3__zAxis,const_Vec3__extents)",
"body":["cc.OBB:set(const_Vec3_center,const_Vec3__xAxis,const_Vec3__yAxis,const_Vec3__zAxis,const_Vec3__extents)"],
"description":"set(const_Vec3_center,const_Vec3__xAxis,const_Vec3__yAxis,const_Vec3__zAxis,const_Vec3__extents)",
"scope":"source.lua"},

"cc.OBB:transform(const_Mat4_mat)":{
"prefix":"cc.OBB:transform(const_Mat4_mat)",
"body":["cc.OBB:transform(const_Mat4_mat)"],
"description":"transform(const_Mat4_mat)",
"scope":"source.lua"},

"cc.OBB:containPoint(const_Vec3_point)":{
"prefix":"cc.OBB:containPoint(const_Vec3_point)",
"body":["cc.OBB:containPoint(const_Vec3_point)"],
"description":"containPoint(const_Vec3_point)",
"scope":"source.lua"},

"cc.OBB:intersects(const_OBB_box)":{
"prefix":"cc.OBB:intersects(const_OBB_box)",
"body":["cc.OBB:intersects(const_OBB_box)"],
"description":"intersects(const_OBB_box)",
"scope":"source.lua"},

"cc.OBB:getCorners(Vec3_verts)":{
"prefix":"cc.OBB:getCorners(Vec3_verts)",
"body":["cc.OBB:getCorners(Vec3_verts)"],
"description":"getCorners(Vec3_verts)",
"scope":"source.lua"},

"cc.Ray":{
"prefix":"cc.Ray",
"body":["cc.Ray"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Ray:set(const_Vec3_origin,const_Vec3_direction)":{
"prefix":"cc.Ray:set(const_Vec3_origin,const_Vec3_direction)",
"body":["cc.Ray:set(const_Vec3_origin,const_Vec3_direction)"],
"description":"set(const_Vec3_origin,const_Vec3_direction)",
"scope":"source.lua"},

"cc.Ray:transform(const_Mat4_matrix)":{
"prefix":"cc.Ray:transform(const_Mat4_matrix)",
"body":["cc.Ray:transform(const_Mat4_matrix)"],
"description":"transform(const_Mat4_matrix)",
"scope":"source.lua"},

"cc.Ray:intersects(const_AABB_aabb,float_distance)":{
"prefix":"cc.Ray:intersects(const_AABB_aabb,float_distance)",
"body":["cc.Ray:intersects(const_AABB_aabb,float_distance)"],
"description":"intersects(const_AABB_aabb,float_distance)",
"scope":"source.lua"},

"cc.Ray:intersects(const_OBB_obb,float_distance)":{
"prefix":"cc.Ray:intersects(const_OBB_obb,float_distance)",
"body":["cc.Ray:intersects(const_OBB_obb,float_distance)"],
"description":"intersects(const_OBB_obb,float_distance)",
"scope":"source.lua"},

"cc.Ray:intersects(const_Plane_plane)":{
"prefix":"cc.Ray:intersects(const_Plane_plane)",
"body":["cc.Ray:intersects(const_Plane_plane)"],
"description":"intersects(const_Plane_plane)",
"scope":"source.lua"},

"cc.GLNode":{
"prefix":"cc.GLNode",
"body":["cc.GLNode"],
"description":"cocos class",
"scope":"source.lua"},

"cc.GLNode:create()":{
"prefix":"cc.GLNode:create()",
"body":["cc.GLNode:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.GLNode:setShaderProgram()":{
"prefix":"cc.GLNode:setShaderProgram()",
"body":["cc.GLNode:setShaderProgram()"],
"description":"setShaderProgram()",
"scope":"source.lua"},

"ScriptHandlerMgr:getInstance()":{
"prefix":"ScriptHandlerMgr:getInstance()",
"body":["ScriptHandlerMgr:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"ScriptHandlerMgr:removeObjectAllHandlers(void_object)":{
"prefix":"ScriptHandlerMgr:removeObjectAllHandlers(void_object)",
"body":["ScriptHandlerMgr:removeObjectAllHandlers(void_object)"],
"description":"removeObjectAllHandlers(void_object)",
"scope":"source.lua"},

"CCPoint:new()":{
"prefix":"CCPoint:new()",
"body":["CCPoint:new()"],
"description":"new()",
"scope":"source.lua"},

"CCPoint:new_local()":{
"prefix":"CCPoint:new_local()",
"body":["CCPoint:new_local()"],
"description":"new_local()",
"scope":"source.lua"},

"CCRect:new()":{
"prefix":"CCRect:new()",
"body":["CCRect:new()"],
"description":"new()",
"scope":"source.lua"},

"CCRect:new_local()":{
"prefix":"CCRect:new_local()",
"body":["CCRect:new_local()"],
"description":"new_local()",
"scope":"source.lua"},

"CCSize:new()":{
"prefix":"CCSize:new()",
"body":["CCSize:new()"],
"description":"new()",
"scope":"source.lua"},

"CCSize:new_local()":{
"prefix":"CCSize:new_local()",
"body":["CCSize:new_local()"],
"description":"new_local()",
"scope":"source.lua"},

"CCArray:create()":{
"prefix":"CCArray:create()",
"body":["CCArray:create()"],
"description":"create()",
"scope":"source.lua"},

"CCArray:createWithObject()":{
"prefix":"CCArray:createWithObject()",
"body":["CCArray:createWithObject()"],
"description":"createWithObject()",
"scope":"source.lua"},

"CCArray:createWithArray()":{
"prefix":"CCArray:createWithArray()",
"body":["CCArray:createWithArray()"],
"description":"createWithArray()",
"scope":"source.lua"},

"CCArray:createWithCapacity()":{
"prefix":"CCArray:createWithCapacity()",
"body":["CCArray:createWithCapacity()"],
"description":"createWithCapacity()",
"scope":"source.lua"},

"CCArray:createWithContentsOfFile()":{
"prefix":"CCArray:createWithContentsOfFile()",
"body":["CCArray:createWithContentsOfFile()"],
"description":"createWithContentsOfFile()",
"scope":"source.lua"},

"CCArray:count()":{
"prefix":"CCArray:count()",
"body":["CCArray:count()"],
"description":"count()",
"scope":"source.lua"},

"CCArray:capacity()":{
"prefix":"CCArray:capacity()",
"body":["CCArray:capacity()"],
"description":"capacity()",
"scope":"source.lua"},

"CCArray:indexOfObject()":{
"prefix":"CCArray:indexOfObject()",
"body":["CCArray:indexOfObject()"],
"description":"indexOfObject()",
"scope":"source.lua"},

"CCArray:objectAtIndex()":{
"prefix":"CCArray:objectAtIndex()",
"body":["CCArray:objectAtIndex()"],
"description":"objectAtIndex()",
"scope":"source.lua"},

"CCArray:lastObject()":{
"prefix":"CCArray:lastObject()",
"body":["CCArray:lastObject()"],
"description":"lastObject()",
"scope":"source.lua"},

"CCArray:randomObject()":{
"prefix":"CCArray:randomObject()",
"body":["CCArray:randomObject()"],
"description":"randomObject()",
"scope":"source.lua"},

"CCArray:isEqualToArray()":{
"prefix":"CCArray:isEqualToArray()",
"body":["CCArray:isEqualToArray()"],
"description":"isEqualToArray()",
"scope":"source.lua"},

"CCArray:containsObject()":{
"prefix":"CCArray:containsObject()",
"body":["CCArray:containsObject()"],
"description":"containsObject()",
"scope":"source.lua"},

"CCArray:addObject()":{
"prefix":"CCArray:addObject()",
"body":["CCArray:addObject()"],
"description":"addObject()",
"scope":"source.lua"},

"CCArray:addObjectsFromArray()":{
"prefix":"CCArray:addObjectsFromArray()",
"body":["CCArray:addObjectsFromArray()"],
"description":"addObjectsFromArray()",
"scope":"source.lua"},

"CCArray:insertObject()":{
"prefix":"CCArray:insertObject()",
"body":["CCArray:insertObject()"],
"description":"insertObject()",
"scope":"source.lua"},

"CCArray:removeLastObject()":{
"prefix":"CCArray:removeLastObject()",
"body":["CCArray:removeLastObject()"],
"description":"removeLastObject()",
"scope":"source.lua"},

"CCArray:removeObject()":{
"prefix":"CCArray:removeObject()",
"body":["CCArray:removeObject()"],
"description":"removeObject()",
"scope":"source.lua"},

"CCArray:removeObjectAtIndex()":{
"prefix":"CCArray:removeObjectAtIndex()",
"body":["CCArray:removeObjectAtIndex()"],
"description":"removeObjectAtIndex()",
"scope":"source.lua"},

"CCArray:removeObjectsInArray()":{
"prefix":"CCArray:removeObjectsInArray()",
"body":["CCArray:removeObjectsInArray()"],
"description":"removeObjectsInArray()",
"scope":"source.lua"},

"CCArray:removeAllObjects()":{
"prefix":"CCArray:removeAllObjects()",
"body":["CCArray:removeAllObjects()"],
"description":"removeAllObjects()",
"scope":"source.lua"},

"CCArray:fastRemoveObject()":{
"prefix":"CCArray:fastRemoveObject()",
"body":["CCArray:fastRemoveObject()"],
"description":"fastRemoveObject()",
"scope":"source.lua"},

"CCArray:fastRemoveObjectAtIndex()":{
"prefix":"CCArray:fastRemoveObjectAtIndex()",
"body":["CCArray:fastRemoveObjectAtIndex()"],
"description":"fastRemoveObjectAtIndex()",
"scope":"source.lua"},

"CCArray:exchangeObject()":{
"prefix":"CCArray:exchangeObject()",
"body":["CCArray:exchangeObject()"],
"description":"exchangeObject()",
"scope":"source.lua"},

"CCArray:exchangeObjectAtIndex()":{
"prefix":"CCArray:exchangeObjectAtIndex()",
"body":["CCArray:exchangeObjectAtIndex()"],
"description":"exchangeObjectAtIndex()",
"scope":"source.lua"},

"CCArray:reverseObjects()":{
"prefix":"CCArray:reverseObjects()",
"body":["CCArray:reverseObjects()"],
"description":"reverseObjects()",
"scope":"source.lua"},

"CCArray:reduceMemoryFootprint()":{
"prefix":"CCArray:reduceMemoryFootprint()",
"body":["CCArray:reduceMemoryFootprint()"],
"description":"reduceMemoryFootprint()",
"scope":"source.lua"},

"CCArray:replaceObjectAtIndex()":{
"prefix":"CCArray:replaceObjectAtIndex()",
"body":["CCArray:replaceObjectAtIndex()"],
"description":"replaceObjectAtIndex()",
"scope":"source.lua"},

"CCString:intValue()":{
"prefix":"CCString:intValue()",
"body":["CCString:intValue()"],
"description":"intValue()",
"scope":"source.lua"},

"CCString:uintValue()":{
"prefix":"CCString:uintValue()",
"body":["CCString:uintValue()"],
"description":"uintValue()",
"scope":"source.lua"},

"CCString:floatValue()":{
"prefix":"CCString:floatValue()",
"body":["CCString:floatValue()"],
"description":"floatValue()",
"scope":"source.lua"},

"CCString:doubleValue()":{
"prefix":"CCString:doubleValue()",
"body":["CCString:doubleValue()"],
"description":"doubleValue()",
"scope":"source.lua"},

"CCString:boolValue()":{
"prefix":"CCString:boolValue()",
"body":["CCString:boolValue()"],
"description":"boolValue()",
"scope":"source.lua"},

"CCString:getCString()":{
"prefix":"CCString:getCString()",
"body":["CCString:getCString()"],
"description":"getCString()",
"scope":"source.lua"},

"CCString:length()":{
"prefix":"CCString:length()",
"body":["CCString:length()"],
"description":"length()",
"scope":"source.lua"},

"CCString:compare()":{
"prefix":"CCString:compare()",
"body":["CCString:compare()"],
"description":"compare()",
"scope":"source.lua"},

"CCString:isEqual()":{
"prefix":"CCString:isEqual()",
"body":["CCString:isEqual()"],
"description":"isEqual()",
"scope":"source.lua"},

"CCString:create()":{
"prefix":"CCString:create()",
"body":["CCString:create()"],
"description":"create()",
"scope":"source.lua"},

"CCString:createWithData()":{
"prefix":"CCString:createWithData()",
"body":["CCString:createWithData()"],
"description":"createWithData()",
"scope":"source.lua"},

"CCString:createWithContentsOfFile()":{
"prefix":"CCString:createWithContentsOfFile()",
"body":["CCString:createWithContentsOfFile()"],
"description":"createWithContentsOfFile()",
"scope":"source.lua"},

"cc.LabelBMFont":{
"prefix":"cc.LabelBMFont",
"body":["cc.LabelBMFont"],
"description":"cocos class",
"scope":"source.lua"},

"cc.LabelBMFont:setLineBreakWithoutSpace(bool_breakWithoutSpace)":{
"prefix":"cc.LabelBMFont:setLineBreakWithoutSpace(bool_breakWithoutSpace)",
"body":["cc.LabelBMFont:setLineBreakWithoutSpace(bool_breakWithoutSpace)"],
"description":"setLineBreakWithoutSpace(bool_breakWithoutSpace)",
"scope":"source.lua"},

"cc.LabelBMFont:isOpacityModifyRGB()":{
"prefix":"cc.LabelBMFont:isOpacityModifyRGB()",
"body":["cc.LabelBMFont:isOpacityModifyRGB()"],
"description":"isOpacityModifyRGB()",
"scope":"source.lua"},

"cc.LabelBMFont:getLetter(int_ID)":{
"prefix":"cc.LabelBMFont:getLetter(int_ID)",
"body":["cc.LabelBMFont:getLetter(int_ID)"],
"description":"getLetter(int_ID)",
"scope":"source.lua"},

"cc.LabelBMFont:getString()":{
"prefix":"cc.LabelBMFont:getString()",
"body":["cc.LabelBMFont:getString()"],
"description":"getString()",
"scope":"source.lua"},

"cc.LabelBMFont:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.LabelBMFont:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.LabelBMFont:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.LabelBMFont:setString(const_std_string_newString)":{
"prefix":"cc.LabelBMFont:setString(const_std_string_newString)",
"body":["cc.LabelBMFont:setString(const_std_string_newString)"],
"description":"setString(const_std_string_newString)",
"scope":"source.lua"},

"cc.LabelBMFont:initWithString(const_std_string_str,const_std_string_fntFile,float_width,TextHAlignment_alignment,const_Vec2_imageOffset)":{
"prefix":"cc.LabelBMFont:initWithString(const_std_string_str,const_std_string_fntFile,float_width,TextHAlignment_alignment,const_Vec2_imageOffset)",
"body":["cc.LabelBMFont:initWithString(const_std_string_str,const_std_string_fntFile,float_width,TextHAlignment_alignment,const_Vec2_imageOffset)"],
"description":"initWithString(const_std_string_str,const_std_string_fntFile,float_width,TextHAlignment_alignment,const_Vec2_imageOffset)",
"scope":"source.lua"},

"cc.LabelBMFont:setOpacityModifyRGB(bool_isOpacityModifyRGB)":{
"prefix":"cc.LabelBMFont:setOpacityModifyRGB(bool_isOpacityModifyRGB)",
"body":["cc.LabelBMFont:setOpacityModifyRGB(bool_isOpacityModifyRGB)"],
"description":"setOpacityModifyRGB(bool_isOpacityModifyRGB)",
"scope":"source.lua"},

"cc.LabelBMFont:getFntFile()":{
"prefix":"cc.LabelBMFont:getFntFile()",
"body":["cc.LabelBMFont:getFntFile()"],
"description":"getFntFile()",
"scope":"source.lua"},

"cc.LabelBMFont:setFntFile(const_std_string_fntFile,const_Vec2_imageOffset)":{
"prefix":"cc.LabelBMFont:setFntFile(const_std_string_fntFile,const_Vec2_imageOffset)",
"body":["cc.LabelBMFont:setFntFile(const_std_string_fntFile,const_Vec2_imageOffset)"],
"description":"setFntFile(const_std_string_fntFile,const_Vec2_imageOffset)",
"scope":"source.lua"},

"cc.LabelBMFont:setAlignment(TextHAlignment_alignment)":{
"prefix":"cc.LabelBMFont:setAlignment(TextHAlignment_alignment)",
"body":["cc.LabelBMFont:setAlignment(TextHAlignment_alignment)"],
"description":"setAlignment(TextHAlignment_alignment)",
"scope":"source.lua"},

"cc.LabelBMFont:setWidth(float_width)":{
"prefix":"cc.LabelBMFont:setWidth(float_width)",
"body":["cc.LabelBMFont:setWidth(float_width)"],
"description":"setWidth(float_width)",
"scope":"source.lua"},

"cc.LabelBMFont:create(const_std_string_str,const_std_string_fntFile,float_width,TextHAlignment_alignment,const_Vec2_imageOffset)":{
"prefix":"cc.LabelBMFont:create(const_std_string_str,const_std_string_fntFile,float_width,TextHAlignment_alignment,const_Vec2_imageOffset)",
"body":["cc.LabelBMFont:create(const_std_string_str,const_std_string_fntFile,float_width,TextHAlignment_alignment,const_Vec2_imageOffset)"],
"description":"create(const_std_string_str,const_std_string_fntFile,float_width,TextHAlignment_alignment,const_Vec2_imageOffset)",
"scope":"source.lua"},

"cc.LabelBMFont:create()":{
"prefix":"cc.LabelBMFont:create()",
"body":["cc.LabelBMFont:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.LabelTTF":{
"prefix":"cc.LabelTTF",
"body":["cc.LabelTTF"],
"description":"cocos class",
"scope":"source.lua"},

"cc.LabelTTF:enableShadow(const_Size_shadowOffset,float_shadowOpacity,float_shadowBlur,bool_mustUpdateTexture)":{
"prefix":"cc.LabelTTF:enableShadow(const_Size_shadowOffset,float_shadowOpacity,float_shadowBlur,bool_mustUpdateTexture)",
"body":["cc.LabelTTF:enableShadow(const_Size_shadowOffset,float_shadowOpacity,float_shadowBlur,bool_mustUpdateTexture)"],
"description":"enableShadow(const_Size_shadowOffset,float_shadowOpacity,float_shadowBlur,bool_mustUpdateTexture)",
"scope":"source.lua"},

"cc.LabelTTF:setDimensions(const_Size_dim)":{
"prefix":"cc.LabelTTF:setDimensions(const_Size_dim)",
"body":["cc.LabelTTF:setDimensions(const_Size_dim)"],
"description":"setDimensions(const_Size_dim)",
"scope":"source.lua"},

"cc.LabelTTF:getFontSize()":{
"prefix":"cc.LabelTTF:getFontSize()",
"body":["cc.LabelTTF:getFontSize()"],
"description":"getFontSize()",
"scope":"source.lua"},

"cc.LabelTTF:getString()":{
"prefix":"cc.LabelTTF:getString()",
"body":["cc.LabelTTF:getString()"],
"description":"getString()",
"scope":"source.lua"},

"cc.LabelTTF:setFlippedY(bool_flippedY)":{
"prefix":"cc.LabelTTF:setFlippedY(bool_flippedY)",
"body":["cc.LabelTTF:setFlippedY(bool_flippedY)"],
"description":"setFlippedY(bool_flippedY)",
"scope":"source.lua"},

"cc.LabelTTF:setFlippedX(bool_flippedX)":{
"prefix":"cc.LabelTTF:setFlippedX(bool_flippedX)",
"body":["cc.LabelTTF:setFlippedX(bool_flippedX)"],
"description":"setFlippedX(bool_flippedX)",
"scope":"source.lua"},

"cc.LabelTTF:setTextDefinition(const_FontDefinition_theDefinition)":{
"prefix":"cc.LabelTTF:setTextDefinition(const_FontDefinition_theDefinition)",
"body":["cc.LabelTTF:setTextDefinition(const_FontDefinition_theDefinition)"],
"description":"setTextDefinition(const_FontDefinition_theDefinition)",
"scope":"source.lua"},

"cc.LabelTTF:setFontName(const_std_string_fontName)":{
"prefix":"cc.LabelTTF:setFontName(const_std_string_fontName)",
"body":["cc.LabelTTF:setFontName(const_std_string_fontName)"],
"description":"setFontName(const_std_string_fontName)",
"scope":"source.lua"},

"cc.LabelTTF:getHorizontalAlignment()":{
"prefix":"cc.LabelTTF:getHorizontalAlignment()",
"body":["cc.LabelTTF:getHorizontalAlignment()"],
"description":"getHorizontalAlignment()",
"scope":"source.lua"},

"cc.LabelTTF:initWithStringAndTextDefinition(const_std_string_string,FontDefinition_textDefinition)":{
"prefix":"cc.LabelTTF:initWithStringAndTextDefinition(const_std_string_string,FontDefinition_textDefinition)",
"body":["cc.LabelTTF:initWithStringAndTextDefinition(const_std_string_string,FontDefinition_textDefinition)"],
"description":"initWithStringAndTextDefinition(const_std_string_string,FontDefinition_textDefinition)",
"scope":"source.lua"},

"cc.LabelTTF:setString(const_std_string_label)":{
"prefix":"cc.LabelTTF:setString(const_std_string_label)",
"body":["cc.LabelTTF:setString(const_std_string_label)"],
"description":"setString(const_std_string_label)",
"scope":"source.lua"},

"cc.LabelTTF:setFontFillColor(const_Color3B_tintColor,bool_mustUpdateTexture)":{
"prefix":"cc.LabelTTF:setFontFillColor(const_Color3B_tintColor,bool_mustUpdateTexture)",
"body":["cc.LabelTTF:setFontFillColor(const_Color3B_tintColor,bool_mustUpdateTexture)"],
"description":"setFontFillColor(const_Color3B_tintColor,bool_mustUpdateTexture)",
"scope":"source.lua"},

"cc.LabelTTF:enableStroke(const_Color3B_strokeColor,float_strokeSize,bool_mustUpdateTexture)":{
"prefix":"cc.LabelTTF:enableStroke(const_Color3B_strokeColor,float_strokeSize,bool_mustUpdateTexture)",
"body":["cc.LabelTTF:enableStroke(const_Color3B_strokeColor,float_strokeSize,bool_mustUpdateTexture)"],
"description":"enableStroke(const_Color3B_strokeColor,float_strokeSize,bool_mustUpdateTexture)",
"scope":"source.lua"},

"cc.LabelTTF:getDimensions()":{
"prefix":"cc.LabelTTF:getDimensions()",
"body":["cc.LabelTTF:getDimensions()"],
"description":"getDimensions()",
"scope":"source.lua"},

"cc.LabelTTF:setVerticalAlignment(TextVAlignment_verticalAlignment)":{
"prefix":"cc.LabelTTF:setVerticalAlignment(TextVAlignment_verticalAlignment)",
"body":["cc.LabelTTF:setVerticalAlignment(TextVAlignment_verticalAlignment)"],
"description":"setVerticalAlignment(TextVAlignment_verticalAlignment)",
"scope":"source.lua"},

"cc.LabelTTF:setFontSize(float_fontSize)":{
"prefix":"cc.LabelTTF:setFontSize(float_fontSize)",
"body":["cc.LabelTTF:setFontSize(float_fontSize)"],
"description":"setFontSize(float_fontSize)",
"scope":"source.lua"},

"cc.LabelTTF:getVerticalAlignment()":{
"prefix":"cc.LabelTTF:getVerticalAlignment()",
"body":["cc.LabelTTF:getVerticalAlignment()"],
"description":"getVerticalAlignment()",
"scope":"source.lua"},

"cc.LabelTTF:getTextDefinition()":{
"prefix":"cc.LabelTTF:getTextDefinition()",
"body":["cc.LabelTTF:getTextDefinition()"],
"description":"getTextDefinition()",
"scope":"source.lua"},

"cc.LabelTTF:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.LabelTTF:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.LabelTTF:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.LabelTTF:getFontName()":{
"prefix":"cc.LabelTTF:getFontName()",
"body":["cc.LabelTTF:getFontName()"],
"description":"getFontName()",
"scope":"source.lua"},

"cc.LabelTTF:setHorizontalAlignment(TextHAlignment_alignment)":{
"prefix":"cc.LabelTTF:setHorizontalAlignment(TextHAlignment_alignment)",
"body":["cc.LabelTTF:setHorizontalAlignment(TextHAlignment_alignment)"],
"description":"setHorizontalAlignment(TextHAlignment_alignment)",
"scope":"source.lua"},

"cc.LabelTTF:disableShadow(bool_mustUpdateTexture)":{
"prefix":"cc.LabelTTF:disableShadow(bool_mustUpdateTexture)",
"body":["cc.LabelTTF:disableShadow(bool_mustUpdateTexture)"],
"description":"disableShadow(bool_mustUpdateTexture)",
"scope":"source.lua"},

"cc.LabelTTF:disableStroke(bool_mustUpdateTexture)":{
"prefix":"cc.LabelTTF:disableStroke(bool_mustUpdateTexture)",
"body":["cc.LabelTTF:disableStroke(bool_mustUpdateTexture)"],
"description":"disableStroke(bool_mustUpdateTexture)",
"scope":"source.lua"},

"cc.LabelTTF:create()":{
"prefix":"cc.LabelTTF:create()",
"body":["cc.LabelTTF:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.LabelTTF:createWithFontDefinition(const_std_string_string,FontDefinition_textDefinition)":{
"prefix":"cc.LabelTTF:createWithFontDefinition(const_std_string_string,FontDefinition_textDefinition)",
"body":["cc.LabelTTF:createWithFontDefinition(const_std_string_string,FontDefinition_textDefinition)"],
"description":"createWithFontDefinition(const_std_string_string,FontDefinition_textDefinition)",
"scope":"source.lua"},

"cc.CCBProxy":{
"prefix":"cc.CCBProxy",
"body":["cc.CCBProxy"],
"description":"cocos class",
"scope":"source.lua"},

"cc.CCBProxy:createCCBReader()":{
"prefix":"cc.CCBProxy:createCCBReader()",
"body":["cc.CCBProxy:createCCBReader()"],
"description":"createCCBReader()",
"scope":"source.lua"},

"cc.CCBProxy:readCCBFromFile(const_char_pszFileName,CCBReader_pCCBReader,bool_bSetOwner)":{
"prefix":"cc.CCBProxy:readCCBFromFile(const_char_pszFileName,CCBReader_pCCBReader,bool_bSetOwner)",
"body":["cc.CCBProxy:readCCBFromFile(const_char_pszFileName,CCBReader_pCCBReader,bool_bSetOwner)"],
"description":"readCCBFromFile(const_char_pszFileName,CCBReader_pCCBReader,bool_bSetOwner)",
"scope":"source.lua"},

"cc.CCBProxy:getNodeTypeName(Node_pNode)":{
"prefix":"cc.CCBProxy:getNodeTypeName(Node_pNode)",
"body":["cc.CCBProxy:getNodeTypeName(Node_pNode)"],
"description":"getNodeTypeName(Node_pNode)",
"scope":"source.lua"},

"cc.CCBProxy:setCallback(Node_node,int_handle,int_controlEvents)":{
"prefix":"cc.CCBProxy:setCallback(Node_node,int_handle,int_controlEvents)",
"body":["cc.CCBProxy:setCallback(Node_node,int_handle,int_controlEvents)"],
"description":"setCallback(Node_node,int_handle,int_controlEvents)",
"scope":"source.lua"},

"ccs.CustomGUIReader":{
"prefix":"ccs.CustomGUIReader",
"body":["ccs.CustomGUIReader"],
"description":"cocos class",
"scope":"source.lua"},

"ccs.CustomGUIReader:create(std_string_className,int_createFunc,int_setPropsFunc)":{
"prefix":"ccs.CustomGUIReader:create(std_string_className,int_createFunc,int_setPropsFunc)",
"body":["ccs.CustomGUIReader:create(std_string_className,int_createFunc,int_setPropsFunc)"],
"description":"create(std_string_className,int_createFunc,int_setPropsFunc)",
"scope":"source.lua"},

"cc.WebSocket":{
"prefix":"cc.WebSocket",
"body":["cc.WebSocket"],
"description":"cocos class",
"scope":"source.lua"},

"cc.WebSocket:getReadyState()":{
"prefix":"cc.WebSocket:getReadyState()",
"body":["cc.WebSocket:getReadyState()"],
"description":"getReadyState()",
"scope":"source.lua"},

"cc.WebSocket:close()":{
"prefix":"cc.WebSocket:close()",
"body":["cc.WebSocket:close()"],
"description":"close()",
"scope":"source.lua"},

"cc.XMLHttpRequest":{
"prefix":"cc.XMLHttpRequest",
"body":["cc.XMLHttpRequest"],
"description":"cocos class",
"scope":"source.lua"},

"cc.XMLHttpRequest:new()":{
"prefix":"cc.XMLHttpRequest:new()",
"body":["cc.XMLHttpRequest:new()"],
"description":"new()",
"scope":"source.lua"},

"cc.XMLHttpRequest:open()":{
"prefix":"cc.XMLHttpRequest:open()",
"body":["cc.XMLHttpRequest:open()"],
"description":"open()",
"scope":"source.lua"},

"cc.XMLHttpRequest:send()":{
"prefix":"cc.XMLHttpRequest:send()",
"body":["cc.XMLHttpRequest:send()"],
"description":"send()",
"scope":"source.lua"},

"cc.XMLHttpRequest:abort()":{
"prefix":"cc.XMLHttpRequest:abort()",
"body":["cc.XMLHttpRequest:abort()"],
"description":"abort()",
"scope":"source.lua"},

"cc.XMLHttpRequest:setRequestHeader()":{
"prefix":"cc.XMLHttpRequest:setRequestHeader()",
"body":["cc.XMLHttpRequest:setRequestHeader()"],
"description":"setRequestHeader()",
"scope":"source.lua"},

"cc.XMLHttpRequest:getAllResponseHeaders()":{
"prefix":"cc.XMLHttpRequest:getAllResponseHeaders()",
"body":["cc.XMLHttpRequest:getAllResponseHeaders()"],
"description":"getAllResponseHeaders()",
"scope":"source.lua"},

"cc.XMLHttpRequest:getResponseHeader()":{
"prefix":"cc.XMLHttpRequest:getResponseHeader()",
"body":["cc.XMLHttpRequest:getResponseHeader()"],
"description":"getResponseHeader()",
"scope":"source.lua"},

"cc.XMLHttpRequest:registerScriptHandler()":{
"prefix":"cc.XMLHttpRequest:registerScriptHandler()",
"body":["cc.XMLHttpRequest:registerScriptHandler()"],
"description":"registerScriptHandler()",
"scope":"source.lua"},

"cc.XMLHttpRequest:unregisterScriptHandler()":{
"prefix":"cc.XMLHttpRequest:unregisterScriptHandler()",
"body":["cc.XMLHttpRequest:unregisterScriptHandler()"],
"description":"unregisterScriptHandler()",
"scope":"source.lua"},

"plugin.PluginProtocol":{
"prefix":"plugin.PluginProtocol",
"body":["plugin.PluginProtocol"],
"description":"cocos class",
"scope":"source.lua"},

"plugin.PluginProtocol:getPluginName()":{
"prefix":"plugin.PluginProtocol:getPluginName()",
"body":["plugin.PluginProtocol:getPluginName()"],
"description":"getPluginName()",
"scope":"source.lua"},

"plugin.PluginProtocol:getPluginVersion()":{
"prefix":"plugin.PluginProtocol:getPluginVersion()",
"body":["plugin.PluginProtocol:getPluginVersion()"],
"description":"getPluginVersion()",
"scope":"source.lua"},

"plugin.PluginProtocol:getSDKVersion()":{
"prefix":"plugin.PluginProtocol:getSDKVersion()",
"body":["plugin.PluginProtocol:getSDKVersion()"],
"description":"getSDKVersion()",
"scope":"source.lua"},

"plugin.PluginProtocol:setDebugMode(bool_bDebug)":{
"prefix":"plugin.PluginProtocol:setDebugMode(bool_bDebug)",
"body":["plugin.PluginProtocol:setDebugMode(bool_bDebug)"],
"description":"setDebugMode(bool_bDebug)",
"scope":"source.lua"},

"plugin.PluginManager":{
"prefix":"plugin.PluginManager",
"body":["plugin.PluginManager"],
"description":"cocos class",
"scope":"source.lua"},

"plugin.PluginManager:unloadPlugin(const_char_name)":{
"prefix":"plugin.PluginManager:unloadPlugin(const_char_name)",
"body":["plugin.PluginManager:unloadPlugin(const_char_name)"],
"description":"unloadPlugin(const_char_name)",
"scope":"source.lua"},

"plugin.PluginManager:loadPlugin(const_char_name)":{
"prefix":"plugin.PluginManager:loadPlugin(const_char_name)",
"body":["plugin.PluginManager:loadPlugin(const_char_name)"],
"description":"loadPlugin(const_char_name)",
"scope":"source.lua"},

"plugin.PluginManager:getInstance()":{
"prefix":"plugin.PluginManager:getInstance()",
"body":["plugin.PluginManager:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"plugin.ProtocolAnalytics":{
"prefix":"plugin.ProtocolAnalytics",
"body":["plugin.ProtocolAnalytics"],
"description":"cocos class",
"scope":"source.lua"},

"plugin.ProtocolAnalytics:logTimedEventBegin(const_char_eventId)":{
"prefix":"plugin.ProtocolAnalytics:logTimedEventBegin(const_char_eventId)",
"body":["plugin.ProtocolAnalytics:logTimedEventBegin(const_char_eventId)"],
"description":"logTimedEventBegin(const_char_eventId)",
"scope":"source.lua"},

"plugin.ProtocolAnalytics:logError(const_char_errorId,const_char_message)":{
"prefix":"plugin.ProtocolAnalytics:logError(const_char_errorId,const_char_message)",
"body":["plugin.ProtocolAnalytics:logError(const_char_errorId,const_char_message)"],
"description":"logError(const_char_errorId,const_char_message)",
"scope":"source.lua"},

"plugin.ProtocolAnalytics:setCaptureUncaughtException(bool_enabled)":{
"prefix":"plugin.ProtocolAnalytics:setCaptureUncaughtException(bool_enabled)",
"body":["plugin.ProtocolAnalytics:setCaptureUncaughtException(bool_enabled)"],
"description":"setCaptureUncaughtException(bool_enabled)",
"scope":"source.lua"},

"plugin.ProtocolAnalytics:setSessionContinueMillis(long_millis)":{
"prefix":"plugin.ProtocolAnalytics:setSessionContinueMillis(long_millis)",
"body":["plugin.ProtocolAnalytics:setSessionContinueMillis(long_millis)"],
"description":"setSessionContinueMillis(long_millis)",
"scope":"source.lua"},

"plugin.ProtocolAnalytics:logEvent(const_char_eventId,LogEventParamMap_paramMap)":{
"prefix":"plugin.ProtocolAnalytics:logEvent(const_char_eventId,LogEventParamMap_paramMap)",
"body":["plugin.ProtocolAnalytics:logEvent(const_char_eventId,LogEventParamMap_paramMap)"],
"description":"logEvent(const_char_eventId,LogEventParamMap_paramMap)",
"scope":"source.lua"},

"plugin.ProtocolAnalytics:startSession(const_char_appKey)":{
"prefix":"plugin.ProtocolAnalytics:startSession(const_char_appKey)",
"body":["plugin.ProtocolAnalytics:startSession(const_char_appKey)"],
"description":"startSession(const_char_appKey)",
"scope":"source.lua"},

"plugin.ProtocolAnalytics:stopSession()":{
"prefix":"plugin.ProtocolAnalytics:stopSession()",
"body":["plugin.ProtocolAnalytics:stopSession()"],
"description":"stopSession()",
"scope":"source.lua"},

"plugin.ProtocolAnalytics:logTimedEventEnd(const_char_eventId)":{
"prefix":"plugin.ProtocolAnalytics:logTimedEventEnd(const_char_eventId)",
"body":["plugin.ProtocolAnalytics:logTimedEventEnd(const_char_eventId)"],
"description":"logTimedEventEnd(const_char_eventId)",
"scope":"source.lua"},

"plugin.ProtocolIAP":{
"prefix":"plugin.ProtocolIAP",
"body":["plugin.ProtocolIAP"],
"description":"cocos class",
"scope":"source.lua"},

"plugin.ProtocolIAP:onPayResult(PayResultCode_ret,const_char_msg)":{
"prefix":"plugin.ProtocolIAP:onPayResult(PayResultCode_ret,const_char_msg)",
"body":["plugin.ProtocolIAP:onPayResult(PayResultCode_ret,const_char_msg)"],
"description":"onPayResult(PayResultCode_ret,const_char_msg)",
"scope":"source.lua"},

"plugin.ProtocolIAP:configDeveloperInfo(TIAPDeveloperInfo_devInfo)":{
"prefix":"plugin.ProtocolIAP:configDeveloperInfo(TIAPDeveloperInfo_devInfo)",
"body":["plugin.ProtocolIAP:configDeveloperInfo(TIAPDeveloperInfo_devInfo)"],
"description":"configDeveloperInfo(TIAPDeveloperInfo_devInfo)",
"scope":"source.lua"},

"plugin.ProtocolAds":{
"prefix":"plugin.ProtocolAds",
"body":["plugin.ProtocolAds"],
"description":"cocos class",
"scope":"source.lua"},

"plugin.ProtocolAds:showAds(TAdsInfo_info,AdsPos_pos)":{
"prefix":"plugin.ProtocolAds:showAds(TAdsInfo_info,AdsPos_pos)",
"body":["plugin.ProtocolAds:showAds(TAdsInfo_info,AdsPos_pos)"],
"description":"showAds(TAdsInfo_info,AdsPos_pos)",
"scope":"source.lua"},

"plugin.ProtocolAds:hideAds(TAdsInfo_info)":{
"prefix":"plugin.ProtocolAds:hideAds(TAdsInfo_info)",
"body":["plugin.ProtocolAds:hideAds(TAdsInfo_info)"],
"description":"hideAds(TAdsInfo_info)",
"scope":"source.lua"},

"plugin.ProtocolAds:queryPoints()":{
"prefix":"plugin.ProtocolAds:queryPoints()",
"body":["plugin.ProtocolAds:queryPoints()"],
"description":"queryPoints()",
"scope":"source.lua"},

"plugin.ProtocolAds:spendPoints(int_points)":{
"prefix":"plugin.ProtocolAds:spendPoints(int_points)",
"body":["plugin.ProtocolAds:spendPoints(int_points)"],
"description":"spendPoints(int_points)",
"scope":"source.lua"},

"plugin.ProtocolAds:configDeveloperInfo(TAdsDeveloperInfo_devInfo)":{
"prefix":"plugin.ProtocolAds:configDeveloperInfo(TAdsDeveloperInfo_devInfo)",
"body":["plugin.ProtocolAds:configDeveloperInfo(TAdsDeveloperInfo_devInfo)"],
"description":"configDeveloperInfo(TAdsDeveloperInfo_devInfo)",
"scope":"source.lua"},

"plugin.ProtocolShare":{
"prefix":"plugin.ProtocolShare",
"body":["plugin.ProtocolShare"],
"description":"cocos class",
"scope":"source.lua"},

"plugin.ProtocolShare:onShareResult(ShareResultCode_ret,const_char_msg)":{
"prefix":"plugin.ProtocolShare:onShareResult(ShareResultCode_ret,const_char_msg)",
"body":["plugin.ProtocolShare:onShareResult(ShareResultCode_ret,const_char_msg)"],
"description":"onShareResult(ShareResultCode_ret,const_char_msg)",
"scope":"source.lua"},

"plugin.ProtocolShare:configDeveloperInfo(TShareDeveloperInfo_devInfo)":{
"prefix":"plugin.ProtocolShare:configDeveloperInfo(TShareDeveloperInfo_devInfo)",
"body":["plugin.ProtocolShare:configDeveloperInfo(TShareDeveloperInfo_devInfo)"],
"description":"configDeveloperInfo(TShareDeveloperInfo_devInfo)",
"scope":"source.lua"},

"plugin.ProtocolSocial":{
"prefix":"plugin.ProtocolSocial",
"body":["plugin.ProtocolSocial"],
"description":"cocos class",
"scope":"source.lua"},

"plugin.ProtocolSocial:showLeaderboard(const_char_leaderboardID)":{
"prefix":"plugin.ProtocolSocial:showLeaderboard(const_char_leaderboardID)",
"body":["plugin.ProtocolSocial:showLeaderboard(const_char_leaderboardID)"],
"description":"showLeaderboard(const_char_leaderboardID)",
"scope":"source.lua"},

"plugin.ProtocolSocial:showAchievements()":{
"prefix":"plugin.ProtocolSocial:showAchievements()",
"body":["plugin.ProtocolSocial:showAchievements()"],
"description":"showAchievements()",
"scope":"source.lua"},

"plugin.ProtocolSocial:configDeveloperInfo(TSocialDeveloperInfo_devInfo)":{
"prefix":"plugin.ProtocolSocial:configDeveloperInfo(TSocialDeveloperInfo_devInfo)",
"body":["plugin.ProtocolSocial:configDeveloperInfo(TSocialDeveloperInfo_devInfo)"],
"description":"configDeveloperInfo(TSocialDeveloperInfo_devInfo)",
"scope":"source.lua"},

"plugin.ProtocolUser":{
"prefix":"plugin.ProtocolUser",
"body":["plugin.ProtocolUser"],
"description":"cocos class",
"scope":"source.lua"},

"plugin.ProtocolUser:configDeveloperInfo(TUserDeveloperInfo_devInfo)":{
"prefix":"plugin.ProtocolUser:configDeveloperInfo(TUserDeveloperInfo_devInfo)",
"body":["plugin.ProtocolUser:configDeveloperInfo(TUserDeveloperInfo_devInfo)"],
"description":"configDeveloperInfo(TUserDeveloperInfo_devInfo)",
"scope":"source.lua"},

"plugin.ProtocolUser:getSessionID()":{
"prefix":"plugin.ProtocolUser:getSessionID()",
"body":["plugin.ProtocolUser:getSessionID()"],
"description":"getSessionID()",
"scope":"source.lua"},

"plugin.ProtocolUser:getAccessToken()":{
"prefix":"plugin.ProtocolUser:getAccessToken()",
"body":["plugin.ProtocolUser:getAccessToken()"],
"description":"getAccessToken()",
"scope":"source.lua"},

"plugin.AgentManager":{
"prefix":"plugin.AgentManager",
"body":["plugin.AgentManager"],
"description":"cocos class",
"scope":"source.lua"},

"plugin.AgentManager:getSocialPlugin()":{
"prefix":"plugin.AgentManager:getSocialPlugin()",
"body":["plugin.AgentManager:getSocialPlugin()"],
"description":"getSocialPlugin()",
"scope":"source.lua"},

"plugin.AgentManager:getAdsPlugin()":{
"prefix":"plugin.AgentManager:getAdsPlugin()",
"body":["plugin.AgentManager:getAdsPlugin()"],
"description":"getAdsPlugin()",
"scope":"source.lua"},

"plugin.AgentManager:purge()":{
"prefix":"plugin.AgentManager:purge()",
"body":["plugin.AgentManager:purge()"],
"description":"purge()",
"scope":"source.lua"},

"plugin.AgentManager:getUserPlugin()":{
"prefix":"plugin.AgentManager:getUserPlugin()",
"body":["plugin.AgentManager:getUserPlugin()"],
"description":"getUserPlugin()",
"scope":"source.lua"},

"plugin.AgentManager:getIAPPlugin()":{
"prefix":"plugin.AgentManager:getIAPPlugin()",
"body":["plugin.AgentManager:getIAPPlugin()"],
"description":"getIAPPlugin()",
"scope":"source.lua"},

"plugin.AgentManager:getSharePlugin()":{
"prefix":"plugin.AgentManager:getSharePlugin()",
"body":["plugin.AgentManager:getSharePlugin()"],
"description":"getSharePlugin()",
"scope":"source.lua"},

"plugin.AgentManager:getAnalyticsPlugin()":{
"prefix":"plugin.AgentManager:getAnalyticsPlugin()",
"body":["plugin.AgentManager:getAnalyticsPlugin()"],
"description":"getAnalyticsPlugin()",
"scope":"source.lua"},

"plugin.AgentManager:destroyInstance()":{
"prefix":"plugin.AgentManager:destroyInstance()",
"body":["plugin.AgentManager:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"plugin.AgentManager:getInstance()":{
"prefix":"plugin.AgentManager:getInstance()",
"body":["plugin.AgentManager:getInstance()"],
"description":"getInstance()",
"scope":"source.lua"},

"plugin.FacebookAgent":{
"prefix":"plugin.FacebookAgent",
"body":["plugin.FacebookAgent"],
"description":"cocos class",
"scope":"source.lua"},

"plugin.FacebookAgent:activateApp()":{
"prefix":"plugin.FacebookAgent:activateApp()",
"body":["plugin.FacebookAgent:activateApp()"],
"description":"activateApp()",
"scope":"source.lua"},

"plugin.FacebookAgent:getPermissionList()":{
"prefix":"plugin.FacebookAgent:getPermissionList()",
"body":["plugin.FacebookAgent:getPermissionList()"],
"description":"getPermissionList()",
"scope":"source.lua"},

"plugin.FacebookAgent:getUserID()":{
"prefix":"plugin.FacebookAgent:getUserID()",
"body":["plugin.FacebookAgent:getUserID()"],
"description":"getUserID()",
"scope":"source.lua"},

"plugin.FacebookAgent:logout()":{
"prefix":"plugin.FacebookAgent:logout()",
"body":["plugin.FacebookAgent:logout()"],
"description":"logout()",
"scope":"source.lua"},

"plugin.FacebookAgent:getSDKVersion()":{
"prefix":"plugin.FacebookAgent:getSDKVersion()",
"body":["plugin.FacebookAgent:getSDKVersion()"],
"description":"getSDKVersion()",
"scope":"source.lua"},

"plugin.FacebookAgent:isLoggedIn()":{
"prefix":"plugin.FacebookAgent:isLoggedIn()",
"body":["plugin.FacebookAgent:isLoggedIn()"],
"description":"isLoggedIn()",
"scope":"source.lua"},

"plugin.FacebookAgent:getAccessToken()":{
"prefix":"plugin.FacebookAgent:getAccessToken()",
"body":["plugin.FacebookAgent:getAccessToken()"],
"description":"getAccessToken()",
"scope":"source.lua"},

"plugin.FacebookAgent:destroyInstance()":{
"prefix":"plugin.FacebookAgent:destroyInstance()",
"body":["plugin.FacebookAgent:destroyInstance()"],
"description":"destroyInstance()",
"scope":"source.lua"},

"cc.DrawNode3D":{
"prefix":"cc.DrawNode3D",
"body":["cc.DrawNode3D"],
"description":"cocos class",
"scope":"source.lua"},

"cc.DrawNode3D:getBlendFunc()":{
"prefix":"cc.DrawNode3D:getBlendFunc()",
"body":["cc.DrawNode3D:getBlendFunc()"],
"description":"getBlendFunc()",
"scope":"source.lua"},

"cc.DrawNode3D:setBlendFunc(const_BlendFunc_blendFunc)":{
"prefix":"cc.DrawNode3D:setBlendFunc(const_BlendFunc_blendFunc)",
"body":["cc.DrawNode3D:setBlendFunc(const_BlendFunc_blendFunc)"],
"description":"setBlendFunc(const_BlendFunc_blendFunc)",
"scope":"source.lua"},

"cc.DrawNode3D:drawLine(const_cocos2d_Vec3_from,const_cocos2d_Vec3_to,const_Color4F_color)":{
"prefix":"cc.DrawNode3D:drawLine(const_cocos2d_Vec3_from,const_cocos2d_Vec3_to,const_Color4F_color)",
"body":["cc.DrawNode3D:drawLine(const_cocos2d_Vec3_from,const_cocos2d_Vec3_to,const_Color4F_color)"],
"description":"drawLine(const_cocos2d_Vec3_from,const_cocos2d_Vec3_to,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode3D:clear()":{
"prefix":"cc.DrawNode3D:clear()",
"body":["cc.DrawNode3D:clear()"],
"description":"clear()",
"scope":"source.lua"},

"cc.DrawNode3D:drawCube(cocos2d_Vec3_vertices,const_Color4F_color)":{
"prefix":"cc.DrawNode3D:drawCube(cocos2d_Vec3_vertices,const_Color4F_color)",
"body":["cc.DrawNode3D:drawCube(cocos2d_Vec3_vertices,const_Color4F_color)"],
"description":"drawCube(cocos2d_Vec3_vertices,const_Color4F_color)",
"scope":"source.lua"},

"cc.DrawNode3D:create()":{
"prefix":"cc.DrawNode3D:create()",
"body":["cc.DrawNode3D:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.ValueTypeJudgeInTable":{
"prefix":"cc.ValueTypeJudgeInTable",
"body":["cc.ValueTypeJudgeInTable"],
"description":"cocos class",
"scope":"source.lua"},

"cc.ValueTypeJudgeInTable:create()":{
"prefix":"cc.ValueTypeJudgeInTable:create()",
"body":["cc.ValueTypeJudgeInTable:create()"],
"description":"create()",
"scope":"source.lua"},

"cc.Vec2":{
"prefix":"cc.Vec2",
"body":["cc.Vec2"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Vec3":{
"prefix":"cc.Vec3",
"body":["cc.Vec3"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Vec4":{
"prefix":"cc.Vec4",
"body":["cc.Vec4"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Rect":{
"prefix":"cc.Rect",
"body":["cc.Rect"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Color4b":{
"prefix":"cc.Color4b",
"body":["cc.Color4b"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Color4f":{
"prefix":"cc.Color4f",
"body":["cc.Color4f"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Color3b":{
"prefix":"cc.Color3b",
"body":["cc.Color3b"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Size":{
"prefix":"cc.Size",
"body":["cc.Size"],
"description":"cocos class",
"scope":"source.lua"},

"cc.PhysicsMaterial":{
"prefix":"cc.PhysicsMaterial",
"body":["cc.PhysicsMaterial"],
"description":"cocos class",
"scope":"source.lua"},

"cc.BlendFunc":{
"prefix":"cc.BlendFunc",
"body":["cc.BlendFunc"],
"description":"cocos class",
"scope":"source.lua"},

"cc.AffineTransform":{
"prefix":"cc.AffineTransform",
"body":["cc.AffineTransform"],
"description":"cocos class",
"scope":"source.lua"},

"cc.FontDefinition":{
"prefix":"cc.FontDefinition",
"body":["cc.FontDefinition"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TTFConfig":{
"prefix":"cc.TTFConfig",
"body":["cc.TTFConfig"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Uniform":{
"prefix":"cc.Uniform",
"body":["cc.Uniform"],
"description":"cocos class",
"scope":"source.lua"},

"cc.VertexAttrib":{
"prefix":"cc.VertexAttrib",
"body":["cc.VertexAttrib"],
"description":"cocos class",
"scope":"source.lua"},

"cc.MeshVertexAttrib":{
"prefix":"cc.MeshVertexAttrib",
"body":["cc.MeshVertexAttrib"],
"description":"cocos class",
"scope":"source.lua"},

"cc.Quaternion":{
"prefix":"cc.Quaternion",
"body":["cc.Quaternion"],
"description":"cocos class",
"scope":"source.lua"},

"cc.TexParams":{
"prefix":"cc.TexParams",
"body":["cc.TexParams"],
"description":"cocos class",
"scope":"source.lua"}

}}